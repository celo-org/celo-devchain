{
  "contractName": "MockReserve08",
  "abi": [
    {
      "inputs": [],
      "name": "goldToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "goldTokenAddress",
          "type": "address"
        }
      ],
      "name": "setGoldToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferGold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferExchangeGold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnfrozenReserveGoldBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "burnToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveGoldBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"burnToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveGoldBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnfrozenReserveGoldBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goldToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"goldTokenAddress\",\"type\":\"address\"}],\"name\":\"setGoldToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferExchangeGold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferGold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"A mock Reserve for testing.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/stability/test/MockReserve.sol\":\"MockReserve08\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"project:/contracts-0.8/stability/test/MockReserve.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.7 <0.8.20;\\n\\n// solhint-disable no-unused-vars\\n\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title A mock Reserve for testing.\\n */\\ncontract MockReserve08 {\\n  mapping(address => bool) public tokens;\\n\\n  IERC20 public goldToken;\\n\\n  // solhint-disable-next-line no-empty-blocks\\n  receive() external payable {}\\n\\n  function setGoldToken(address goldTokenAddress) external {\\n    goldToken = IERC20(goldTokenAddress);\\n  }\\n\\n  function transferGold(address to, uint256 value) external returns (bool) {\\n    require(goldToken.transfer(to, value), \\\"gold token transfer failed\\\");\\n    return true;\\n  }\\n\\n  function transferExchangeGold(address to, uint256 value) external returns (bool) {\\n    require(goldToken.transfer(to, value), \\\"gold token transfer failed\\\");\\n    return true;\\n  }\\n\\n  function addToken(address token) external returns (bool) {\\n    tokens[token] = true;\\n    return true;\\n  }\\n\\n  function getUnfrozenReserveGoldBalance() external view returns (uint256) {\\n    return address(this).balance;\\n  }\\n\\n  function burnToken(address) external pure returns (bool) {\\n    return true;\\n  }\\n\\n  function getReserveGoldBalance() public view returns (uint256) {\\n    return address(this).balance;\\n  }\\n}\\n\",\"keccak256\":\"0xbab7292c61fdfb017e0600b6f2913680345505bea8fc81cdd40ad28707aef233\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610382806100206000396000f3fe60806040526004361061008a5760003560e01c806394002b571161005957806394002b57146100e6578063950dad191461011e578063d06816a11461013f578063d48bfca71461017e578063e4860339146101c157600080fd5b806303a0fea3146100965780631c39c7d5146100965780638b7df8d4146100cb5780638d9a5e6f146100cb57600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b13660046102de565b6101f1565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506040514781526020016100c2565b3480156100f257600080fd5b50600154610106906001600160a01b031681565b6040516001600160a01b0390911681526020016100c2565b34801561012a57600080fd5b506100b6610139366004610308565b50600190565b34801561014b57600080fd5b5061017c61015a366004610308565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561018a57600080fd5b506100b6610199366004610308565b6001600160a01b03166000908152602081905260409020805460ff1916600190811790915590565b3480156101cd57600080fd5b506100b66101dc366004610308565b60006020819052908152604090205460ff1681565b60015460405163a9059cbb60e01b81526001600160a01b03848116600483015260248201849052600092169063a9059cbb906044016020604051808303816000875af1158015610245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610269919061032a565b6102b95760405162461bcd60e51b815260206004820152601a60248201527f676f6c6420746f6b656e207472616e73666572206661696c6564000000000000604482015260640160405180910390fd5b50600192915050565b80356001600160a01b03811681146102d957600080fd5b919050565b600080604083850312156102f157600080fd5b6102fa836102c2565b946020939093013593505050565b60006020828403121561031a57600080fd5b610323826102c2565b9392505050565b60006020828403121561033c57600080fd5b8151801515811461032357600080fdfea26469706673582212208f58100edc43a002dd763bcfc118b09ee83b2c7d68a8c810743ecce756e00ec264736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c806394002b571161005957806394002b57146100e6578063950dad191461011e578063d06816a11461013f578063d48bfca71461017e578063e4860339146101c157600080fd5b806303a0fea3146100965780631c39c7d5146100965780638b7df8d4146100cb5780638d9a5e6f146100cb57600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100b66100b13660046102de565b6101f1565b60405190151581526020015b60405180910390f35b3480156100d757600080fd5b506040514781526020016100c2565b3480156100f257600080fd5b50600154610106906001600160a01b031681565b6040516001600160a01b0390911681526020016100c2565b34801561012a57600080fd5b506100b6610139366004610308565b50600190565b34801561014b57600080fd5b5061017c61015a366004610308565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b005b34801561018a57600080fd5b506100b6610199366004610308565b6001600160a01b03166000908152602081905260409020805460ff1916600190811790915590565b3480156101cd57600080fd5b506100b66101dc366004610308565b60006020819052908152604090205460ff1681565b60015460405163a9059cbb60e01b81526001600160a01b03848116600483015260248201849052600092169063a9059cbb906044016020604051808303816000875af1158015610245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610269919061032a565b6102b95760405162461bcd60e51b815260206004820152601a60248201527f676f6c6420746f6b656e207472616e73666572206661696c6564000000000000604482015260640160405180910390fd5b50600192915050565b80356001600160a01b03811681146102d957600080fd5b919050565b600080604083850312156102f157600080fd5b6102fa836102c2565b946020939093013593505050565b60006020828403121561031a57600080fd5b610323826102c2565b9392505050565b60006020828403121561033c57600080fd5b8151801515811461032357600080fdfea26469706673582212208f58100edc43a002dd763bcfc118b09ee83b2c7d68a8c810743ecce756e00ec264736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2151:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:85"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:85",
                "type": ""
              }
            ],
            "src": "14:173:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "279:167:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "325:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "334:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "337:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "327:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "327:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "327:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "300:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "309:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "296:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "296:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "292:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "292:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "289:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "350:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "379:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "360:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "350:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "398:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "425:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "436:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "421:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "421:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "408:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "398:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "237:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "248:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "260:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "268:6:85",
                "type": ""
              }
            ],
            "src": "192:254:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "546:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "556:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "568:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "564:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "556:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "598:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "623:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "616:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "616:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "609:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "591:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "515:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "526:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "537:4:85",
                "type": ""
              }
            ],
            "src": "451:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "744:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "754:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "766:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "777:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "754:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "796:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "807:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "789:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "789:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "789:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "713:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "724:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "735:4:85",
                "type": ""
              }
            ],
            "src": "643:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "940:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "950:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "962:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "973:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "958:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "950:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "992:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1007:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1023:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1028:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1019:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1019:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1032:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1015:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1015:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1003:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1003:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "985:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "985:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "985:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "909:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "920:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "931:4:85",
                "type": ""
              }
            ],
            "src": "825:217:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:116:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1163:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1172:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1175:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1165:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1165:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1165:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1138:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1147:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1134:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1134:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1159:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1130:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1188:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1217:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1198:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1188:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1083:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1094:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1106:6:85",
                "type": ""
              }
            ],
            "src": "1047:186:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1367:145:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1377:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1389:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1400:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1385:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1385:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1377:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1419:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1434:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1450:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1455:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1446:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1446:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1459:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1442:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1442:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1430:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1430:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1412:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1412:51:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1483:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1494:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1479:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1479:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1499:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1472:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1472:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1472:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1328:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1339:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1347:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1358:4:85",
                "type": ""
              }
            ],
            "src": "1238:274:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1595:199:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1641:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1650:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1653:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1643:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1643:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1643:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1616:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1625:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1612:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1612:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1637:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1608:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1605:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1666:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1685:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1679:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1670:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1748:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1757:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1760:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1750:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1750:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1750:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1717:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1738:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1731:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1731:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1724:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1724:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1714:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1714:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1707:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1707:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1704:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1773:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1783:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1773:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1561:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1572:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1584:6:85",
                "type": ""
              }
            ],
            "src": "1517:277:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1973:176:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1990:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2001:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1983:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1983:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1983:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2024:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2035:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2020:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2020:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2040:2:85",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2013:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2013:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2013:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2063:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2074:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2059:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2059:18:85"
                      },
                      {
                        "hexValue": "676f6c6420746f6b656e207472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2079:28:85",
                        "type": "",
                        "value": "gold token transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2052:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2052:56:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2052:56:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2117:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2129:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2140:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2125:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2117:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e91e26aafc3f1f2bc68d380ce0c4421e2a51ed50c2b2a8feee11a5540b2bb0f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1950:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1964:4:85",
                "type": ""
              }
            ],
            "src": "1799:350:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$190__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e91e26aafc3f1f2bc68d380ce0c4421e2a51ed50c2b2a8feee11a5540b2bb0f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"gold token transfer failed\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "213:1052:55:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "213:1052:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:177;;;;;;;;;;-1:-1:-1;672:177:55;;;;;:::i;:::-;;:::i;:::-;;;616:14:85;;609:22;591:41;;579:2;564:18;672:177:55;;;;;;;;962:112;;;;;;;;;;-1:-1:-1;962:112:55;;1048:21;789:25:85;;777:2;762:18;962:112:55;643:177:85;283:23:55;;;;;;;;;;-1:-1:-1;283:23:55;;;;-1:-1:-1;;;;;283:23:55;;;;;;-1:-1:-1;;;;;1003:32:85;;;985:51;;973:2;958:18;283:23:55;825:217:85;1078:79:55;;;;;;;;;;-1:-1:-1;1078:79:55;;;;;:::i;:::-;-1:-1:-1;1148:4:55;;1078:79;391:104;;;;;;;;;;-1:-1:-1;391:104:55;;;;;:::i;:::-;454:9;:36;;-1:-1:-1;;;;;;454:36:55;-1:-1:-1;;;;;454:36:55;;;;;;;;;;391:104;;;853:105;;;;;;;;;;-1:-1:-1;853:105:55;;;;;:::i;:::-;-1:-1:-1;;;;;916:13:55;904:4;916:13;;;;;;;;;;:20;;-1:-1:-1;;916:20:55;932:4;916:20;;;;;;932:4;853:105;240:38;;;;;;;;;;-1:-1:-1;240:38:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;672:177;767:9;;:29;;-1:-1:-1;;;767:29:55;;-1:-1:-1;;;;;1430:32:85;;;767:29:55;;;1412:51:85;1479:18;;;1472:34;;;747:4:55;;767:9;;:18;;1385::85;;767:29:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;759:68;;;;-1:-1:-1;;;759:68:55;;2001:2:85;759:68:55;;;1983:21:85;2040:2;2020:18;;;2013:30;2079:28;2059:18;;;2052:56;2125:18;;759:68:55;;;;;;;;-1:-1:-1;840:4:55;672:177;;;;:::o;14:173:85:-;82:20;;-1:-1:-1;;;;;131:31:85;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:85:o;1047:186::-;1106:6;1159:2;1147:9;1138:7;1134:23;1130:32;1127:52;;;1175:1;1172;1165:12;1127:52;1198:29;1217:9;1198:29;:::i;:::-;1188:39;1047:186;-1:-1:-1;;;1047:186:85:o;1517:277::-;1584:6;1637:2;1625:9;1616:7;1612:23;1608:32;1605:52;;;1653:1;1650;1643:12;1605:52;1685:9;1679:16;1738:5;1731:13;1724:21;1717:5;1714:32;1704:60;;1760:1;1757;1750:12",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.7 <0.8.20;\n\n// solhint-disable no-unused-vars\n\nimport \"@openzeppelin/contracts8/token/ERC20/IERC20.sol\";\n\n/**\n * @title A mock Reserve for testing.\n */\ncontract MockReserve08 {\n  mapping(address => bool) public tokens;\n\n  IERC20 public goldToken;\n\n  // solhint-disable-next-line no-empty-blocks\n  receive() external payable {}\n\n  function setGoldToken(address goldTokenAddress) external {\n    goldToken = IERC20(goldTokenAddress);\n  }\n\n  function transferGold(address to, uint256 value) external returns (bool) {\n    require(goldToken.transfer(to, value), \"gold token transfer failed\");\n    return true;\n  }\n\n  function transferExchangeGold(address to, uint256 value) external returns (bool) {\n    require(goldToken.transfer(to, value), \"gold token transfer failed\");\n    return true;\n  }\n\n  function addToken(address token) external returns (bool) {\n    tokens[token] = true;\n    return true;\n  }\n\n  function getUnfrozenReserveGoldBalance() external view returns (uint256) {\n    return address(this).balance;\n  }\n\n  function burnToken(address) external pure returns (bool) {\n    return true;\n  }\n\n  function getReserveGoldBalance() public view returns (uint256) {\n    return address(this).balance;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/stability/test/MockReserve.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/stability/test/MockReserve.sol",
    "exportedSymbols": {
      "IERC20": [
        190
      ],
      "MockReserve08": [
        15990
      ]
    },
    "id": 15991,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15872,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:32:55"
      },
      {
        "absolutePath": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "id": 15873,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15991,
        "sourceUnit": 191,
        "src": "108:57:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockReserve08",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15874,
          "nodeType": "StructuredDocumentation",
          "src": "167:45:55",
          "text": " @title A mock Reserve for testing."
        },
        "fullyImplemented": true,
        "id": 15990,
        "linearizedBaseContracts": [
          15990
        ],
        "name": "MockReserve08",
        "nameLocation": "222:13:55",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e4860339",
            "id": 15878,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "272:6:55",
            "nodeType": "VariableDeclaration",
            "scope": 15990,
            "src": "240:38:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 15877,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 15875,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "248:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "240:24:55",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 15876,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "259:4:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94002b57",
            "id": 15881,
            "mutability": "mutable",
            "name": "goldToken",
            "nameLocation": "297:9:55",
            "nodeType": "VariableDeclaration",
            "scope": 15990,
            "src": "283:23:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$190",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 15880,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15879,
                "name": "IERC20",
                "nameLocations": [
                  "283:6:55"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 190,
                "src": "283:6:55"
              },
              "referencedDeclaration": 190,
              "src": "283:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$190",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15884,
              "nodeType": "Block",
              "src": "385:2:55",
              "statements": []
            },
            "id": 15885,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:2:55"
            },
            "returnParameters": {
              "id": 15883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:55"
            },
            "scope": 15990,
            "src": "358:29:55",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15896,
              "nodeType": "Block",
              "src": "448:47:55",
              "statements": [
                {
                  "expression": {
                    "id": 15894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15890,
                      "name": "goldToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15881,
                      "src": "454:9:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$190",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15892,
                          "name": "goldTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15887,
                          "src": "473:16:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 15891,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "466:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 15893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "466:24:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$190",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "454:36:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$190",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 15895,
                  "nodeType": "ExpressionStatement",
                  "src": "454:36:55"
                }
              ]
            },
            "functionSelector": "d06816a1",
            "id": 15897,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setGoldToken",
            "nameLocation": "400:12:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15887,
                  "mutability": "mutable",
                  "name": "goldTokenAddress",
                  "nameLocation": "421:16:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 15897,
                  "src": "413:24:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:26:55"
            },
            "returnParameters": {
              "id": 15889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:0:55"
            },
            "scope": 15990,
            "src": "391:104:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15917,
              "nodeType": "Block",
              "src": "572:96:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15909,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15899,
                            "src": "605:2:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 15910,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15901,
                            "src": "609:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 15907,
                            "name": "goldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15881,
                            "src": "586:9:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$190",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 15908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "596:8:55",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 157,
                          "src": "586:18:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 15911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "586:29:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676f6c6420746f6b656e207472616e73666572206661696c6564",
                        "id": 15912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "617:28:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e91e26aafc3f1f2bc68d380ce0c4421e2a51ed50c2b2a8feee11a5540b2bb0f5",
                          "typeString": "literal_string \"gold token transfer failed\""
                        },
                        "value": "gold token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e91e26aafc3f1f2bc68d380ce0c4421e2a51ed50c2b2a8feee11a5540b2bb0f5",
                          "typeString": "literal_string \"gold token transfer failed\""
                        }
                      ],
                      "id": 15906,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "578:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "578:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15914,
                  "nodeType": "ExpressionStatement",
                  "src": "578:68:55"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "659:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15905,
                  "id": 15916,
                  "nodeType": "Return",
                  "src": "652:11:55"
                }
              ]
            },
            "functionSelector": "1c39c7d5",
            "id": 15918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferGold",
            "nameLocation": "508:12:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15899,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "529:2:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 15918,
                  "src": "521:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15898,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15901,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "541:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 15918,
                  "src": "533:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "520:27:55"
            },
            "returnParameters": {
              "id": 15905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15918,
                  "src": "566:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15903,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "565:6:55"
            },
            "scope": 15990,
            "src": "499:169:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15938,
              "nodeType": "Block",
              "src": "753:96:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15930,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15920,
                            "src": "786:2:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 15931,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15922,
                            "src": "790:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 15928,
                            "name": "goldToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15881,
                            "src": "767:9:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$190",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 15929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "777:8:55",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 157,
                          "src": "767:18:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 15932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "767:29:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676f6c6420746f6b656e207472616e73666572206661696c6564",
                        "id": 15933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "798:28:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e91e26aafc3f1f2bc68d380ce0c4421e2a51ed50c2b2a8feee11a5540b2bb0f5",
                          "typeString": "literal_string \"gold token transfer failed\""
                        },
                        "value": "gold token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e91e26aafc3f1f2bc68d380ce0c4421e2a51ed50c2b2a8feee11a5540b2bb0f5",
                          "typeString": "literal_string \"gold token transfer failed\""
                        }
                      ],
                      "id": 15927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "759:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15935,
                  "nodeType": "ExpressionStatement",
                  "src": "759:68:55"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "840:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15926,
                  "id": 15937,
                  "nodeType": "Return",
                  "src": "833:11:55"
                }
              ]
            },
            "functionSelector": "03a0fea3",
            "id": 15939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferExchangeGold",
            "nameLocation": "681:20:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15920,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "710:2:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 15939,
                  "src": "702:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15922,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "722:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 15939,
                  "src": "714:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:27:55"
            },
            "returnParameters": {
              "id": 15926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15925,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15939,
                  "src": "747:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15924,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:6:55"
            },
            "scope": 15990,
            "src": "672:177:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15954,
              "nodeType": "Block",
              "src": "910:48:55",
              "statements": [
                {
                  "expression": {
                    "id": 15950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15946,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15878,
                        "src": "916:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 15948,
                      "indexExpression": {
                        "id": 15947,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15941,
                        "src": "923:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "916:13:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 15949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "932:4:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "916:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15951,
                  "nodeType": "ExpressionStatement",
                  "src": "916:20:55"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "949:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15945,
                  "id": 15953,
                  "nodeType": "Return",
                  "src": "942:11:55"
                }
              ]
            },
            "functionSelector": "d48bfca7",
            "id": 15955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addToken",
            "nameLocation": "862:8:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15941,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "879:5:55",
                  "nodeType": "VariableDeclaration",
                  "scope": 15955,
                  "src": "871:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "870:15:55"
            },
            "returnParameters": {
              "id": 15945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15944,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15955,
                  "src": "904:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15943,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:6:55"
            },
            "scope": 15990,
            "src": "853:105:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15966,
              "nodeType": "Block",
              "src": "1035:39:55",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 15962,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1056:4:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockReserve08_$15990",
                            "typeString": "contract MockReserve08"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockReserve08_$15990",
                            "typeString": "contract MockReserve08"
                          }
                        ],
                        "id": 15961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1048:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 15960,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1048:7:55",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 15963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1048:13:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1062:7:55",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1048:21:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15959,
                  "id": 15965,
                  "nodeType": "Return",
                  "src": "1041:28:55"
                }
              ]
            },
            "functionSelector": "8b7df8d4",
            "id": 15967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnfrozenReserveGoldBalance",
            "nameLocation": "971:29:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1000:2:55"
            },
            "returnParameters": {
              "id": 15959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15967,
                  "src": "1026:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:9:55"
            },
            "scope": 15990,
            "src": "962:112:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15976,
              "nodeType": "Block",
              "src": "1135:22:55",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 15974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1148:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 15973,
                  "id": 15975,
                  "nodeType": "Return",
                  "src": "1141:11:55"
                }
              ]
            },
            "functionSelector": "950dad19",
            "id": 15977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnToken",
            "nameLocation": "1087:9:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15969,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15977,
                  "src": "1097:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:9:55"
            },
            "returnParameters": {
              "id": 15973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15977,
                  "src": "1129:4:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15971,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1128:6:55"
            },
            "scope": 15990,
            "src": "1078:79:55",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15988,
              "nodeType": "Block",
              "src": "1224:39:55",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 15984,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1245:4:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockReserve08_$15990",
                            "typeString": "contract MockReserve08"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_MockReserve08_$15990",
                            "typeString": "contract MockReserve08"
                          }
                        ],
                        "id": 15983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1237:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 15982,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:55",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 15985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1237:13:55",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1251:7:55",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1237:21:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15981,
                  "id": 15987,
                  "nodeType": "Return",
                  "src": "1230:28:55"
                }
              ]
            },
            "functionSelector": "8d9a5e6f",
            "id": 15989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReserveGoldBalance",
            "nameLocation": "1170:21:55",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1191:2:55"
            },
            "returnParameters": {
              "id": 15981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15989,
                  "src": "1215:7:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:9:55"
            },
            "scope": 15990,
            "src": "1161:102:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15991,
        "src": "213:1052:55",
        "usedErrors": []
      }
    ],
    "src": "39:1227:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.225Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "A mock Reserve for testing.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}