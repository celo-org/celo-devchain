{
  "contractName": "Initializable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "testingDeployment",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"testingDeployment\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/common/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract Initializable {\\n  bool public initialized;\\n\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x27277d9f2c894659833be45eeca368a6d5ff060d944f0ad335e31003bf6477ed\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161019038038061019083398181016040528101906100329190610095565b806100525760016000806101000a81548160ff0219169083151502179055505b506100c2565b600080fd5b60008115159050919050565b6100728161005d565b811461007d57600080fd5b50565b60008151905061008f81610069565b92915050565b6000602082840312156100ab576100aa610058565b5b60006100b984828501610080565b91505092915050565b60c0806100d06000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063158ef93e14602d575b600080fd5b60336047565b604051603e91906071565b60405180910390f35b60008054906101000a900460ff1681565b60008115159050919050565b606b816058565b82525050565b6000602082019050608460008301846064565b9291505056fea264697066735822122071cf32c0c6775cb0131fe8f3a84ed270bebe053c1aaa738b3643e1af0132e11a64736f6c63430008130033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063158ef93e14602d575b600080fd5b60336047565b604051603e91906071565b60405180910390f35b60008054906101000a900460ff1681565b60008115159050919050565b606b816058565b82525050565b6000602082019050608460008301846064565b9291505056fea264697066735822122071cf32c0c6775cb0131fe8f3a84ed270bebe053c1aaa738b3643e1af0132e11a64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1043:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:18",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:18",
                "type": ""
              }
            ],
            "src": "7:75:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:18"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:18"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "376:48:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "386:32:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "411:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "404:6:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "404:13:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "397:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:21:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "386:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "358:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "368:7:18",
                "type": ""
              }
            ],
            "src": "334:90:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:76:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "524:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "536:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "526:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "526:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "526:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "493:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "515:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "500:14:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "500:21:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "490:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "490:32:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "483:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:40:18"
                  },
                  "nodeType": "YulIf",
                  "src": "480:60:18"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "463:5:18",
                "type": ""
              }
            ],
            "src": "430:116:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:77:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "622:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "637:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "631:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "631:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "622:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "677:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "653:23:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:30:18"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "590:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "598:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:18",
                "type": ""
              }
            ],
            "src": "552:137:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:271:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "817:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "779:119:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "908:125:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "923:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "927:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "952:71:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "995:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1006:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "991:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "991:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1015:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "962:28:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:61:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "952:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "739:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "750:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "762:6:18",
                "type": ""
              }
            ],
            "src": "695:345:18"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:431:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:18",
                "type": ""
              }
            ],
            "src": "7:90:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:18"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:18",
                "type": ""
              }
            ],
            "src": "103:109:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:18",
                "type": ""
              }
            ],
            "src": "218:210:18"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "76:289:14:-:0;;;131:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;185:17;180:57;;226:4;212:11;;:18;;;;;;;;;;;;;;;;;;180:57;131:110;76:289;;88:117:18;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:137::-;606:5;637:6;631:13;622:22;;653:30;677:5;653:30;:::i;:::-;552:137;;;;:::o;695:345::-;762:6;811:2;799:9;790:7;786:23;782:32;779:119;;;817:79;;:::i;:::-;779:119;937:1;962:61;1015:7;1006:6;995:9;991:22;962:61;:::i;:::-;952:71;;908:125;695:345;;;;:::o;76:289:14:-;;;;;;;",
  "deployedSourceMap": "76:289:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;103:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:90:18:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.5.13 <0.9.0;\n\ncontract Initializable {\n  bool public initialized;\n\n  constructor(bool testingDeployment) public {\n    if (!testingDeployment) {\n      initialized = true;\n    }\n  }\n\n  modifier initializer() {\n    require(!initialized, \"contract already initialized\");\n    initialized = true;\n    _;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/celo/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
  "ast": {
    "absolutePath": "project:/contracts/common/Initializable.sol",
    "exportedSymbols": {
      "Initializable": [
        3042
      ]
    },
    "id": 3043,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3011,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".13",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:14"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Initializable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3042,
        "linearizedBaseContracts": [
          3042
        ],
        "name": "Initializable",
        "nameLocation": "85:13:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "158ef93e",
            "id": 3013,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "115:11:14",
            "nodeType": "VariableDeclaration",
            "scope": 3042,
            "src": "103:23:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3012,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "103:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3026,
              "nodeType": "Block",
              "src": "174:67:14",
              "statements": [
                {
                  "condition": {
                    "id": 3019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "184:18:14",
                    "subExpression": {
                      "id": 3018,
                      "name": "testingDeployment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3015,
                      "src": "185:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3025,
                  "nodeType": "IfStatement",
                  "src": "180:57:14",
                  "trueBody": {
                    "id": 3024,
                    "nodeType": "Block",
                    "src": "204:33:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 3022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3020,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3013,
                            "src": "212:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "226:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "212:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3023,
                        "nodeType": "ExpressionStatement",
                        "src": "212:18:14"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 3027,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "mutability": "mutable",
                  "name": "testingDeployment",
                  "nameLocation": "148:17:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 3027,
                  "src": "143:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "142:24:14"
            },
            "returnParameters": {
              "id": 3017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:14"
            },
            "scope": 3042,
            "src": "131:110:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3040,
              "nodeType": "Block",
              "src": "268:95:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "282:12:14",
                        "subExpression": {
                          "id": 3030,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3013,
                          "src": "283:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "id": 3032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "296:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134",
                          "typeString": "literal_string \"contract already initialized\""
                        },
                        "value": "contract already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134",
                          "typeString": "literal_string \"contract already initialized\""
                        }
                      ],
                      "id": 3029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "274:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "274:53:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3034,
                  "nodeType": "ExpressionStatement",
                  "src": "274:53:14"
                },
                {
                  "expression": {
                    "id": 3037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3035,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3013,
                      "src": "333:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "347:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "333:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3038,
                  "nodeType": "ExpressionStatement",
                  "src": "333:18:14"
                },
                {
                  "id": 3039,
                  "nodeType": "PlaceholderStatement",
                  "src": "357:1:14"
                }
              ]
            },
            "id": 3041,
            "name": "initializer",
            "nameLocation": "254:11:14",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "265:2:14"
            },
            "src": "245:118:14",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3043,
        "src": "76:289:14",
        "usedErrors": []
      }
    ],
    "src": "42:324:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2024-03-05T15:18:07.424Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}