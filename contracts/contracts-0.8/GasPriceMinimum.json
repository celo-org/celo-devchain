{
  "contractName": "GasPriceMinimum",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "adjustmentSpeed",
          "type": "uint256"
        }
      ],
      "name": "AdjustmentSpeedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseFeeOpCodeActivationBlock",
          "type": "uint256"
        }
      ],
      "name": "BaseFeeOpCodeActivationBlockSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasPriceMinimumFloor",
          "type": "uint256"
        }
      ],
      "name": "GasPriceMinimumFloorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasPriceMinimum",
          "type": "uint256"
        }
      ],
      "name": "GasPriceMinimumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetDensity",
          "type": "uint256"
        }
      ],
      "name": "TargetDensitySet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "adjustmentSpeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseFeeOpCodeActivationBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecated_gasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPriceMinimumFloor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetDensity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gasPriceMinimumFloor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetDensity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_adjustmentSpeed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseFeeOpCodeActivationBlock",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_adjustmentSpeed",
          "type": "uint256"
        }
      ],
      "name": "setAdjustmentSpeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetDensity",
          "type": "uint256"
        }
      ],
      "name": "setTargetDensity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasPriceMinimumFloor",
          "type": "uint256"
        }
      ],
      "name": "setGasPriceMinimumFloor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseFeeOpCodeActivationBlock",
          "type": "uint256"
        }
      ],
      "name": "setBaseFeeOpCodeActivationBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getGasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockGasTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockGasLimit",
          "type": "uint256"
        }
      ],
      "name": "updateGasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockGasTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockGasLimit",
          "type": "uint256"
        }
      ],
      "name": "getUpdatedGasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"adjustmentSpeed\",\"type\":\"uint256\"}],\"name\":\"AdjustmentSpeedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFeeOpCodeActivationBlock\",\"type\":\"uint256\"}],\"name\":\"BaseFeeOpCodeActivationBlockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPriceMinimumFloor\",\"type\":\"uint256\"}],\"name\":\"GasPriceMinimumFloorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPriceMinimum\",\"type\":\"uint256\"}],\"name\":\"GasPriceMinimumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetDensity\",\"type\":\"uint256\"}],\"name\":\"TargetDensitySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adjustmentSpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseFeeOpCodeActivationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deprecated_gasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPriceMinimumFloor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getGasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockGasTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockGasLimit\",\"type\":\"uint256\"}],\"name\":\"getUpdatedGasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasPriceMinimumFloor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetDensity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_adjustmentSpeed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseFeeOpCodeActivationBlock\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_adjustmentSpeed\",\"type\":\"uint256\"}],\"name\":\"setAdjustmentSpeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFeeOpCodeActivationBlock\",\"type\":\"uint256\"}],\"name\":\"setBaseFeeOpCodeActivationBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPriceMinimumFloor\",\"type\":\"uint256\"}],\"name\":\"setGasPriceMinimumFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetDensity\",\"type\":\"uint256\"}],\"name\":\"setTargetDensity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetDensity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockGasTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockGasLimit\",\"type\":\"uint256\"}],\"name\":\"updateGasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"getGasPriceMinimum(address)\":{\"params\":{\"tokenAddress\":\"The currency the gas price should be in (defaults to gold).\"},\"returns\":{\"_0\":\"current gas price minimum in the requested currency\"}},\"getUpdatedGasPriceMinimum(uint256,uint256)\":{\"details\":\"Calculate using the following formula: oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.\",\"params\":{\"blockGasLimit\":\"The maxBlockGasLimit of the past block.\",\"blockGasTotal\":\"The amount of gas in the most recent block.\"},\"returns\":{\"_0\":\"result of the calculation (new gas price minimum)\"}},\"getVersionNumber()\":{\"returns\":{\"_0\":\"Storage version of the contract.\",\"_1\":\"Major version of the contract.\",\"_2\":\"Minor version of the contract.\",\"_3\":\"Patch version of the contract.\"}},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"params\":{\"_adjustmentSpeed\":\"How quickly the minimum changes, expressed as a fixidity fraction.\",\"_baseFeeOpCodeActivationBlock\":\"Block number where the baseFee opCode is activated\",\"_gasPriceMinimumFloor\":\"The lowest value the gas price minimum can be.\",\"_registryAddress\":\"The address of the registry core smart contract.\",\"_targetDensity\":\"The target gas fullness of blocks, expressed as a fixidity fraction.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAdjustmentSpeed(uint256)\":{\"details\":\"Value is expected to be < 1.\",\"params\":{\"_adjustmentSpeed\":\"How quickly the minimum changes, expressed as a fixidity fraction.\"}},\"setBaseFeeOpCodeActivationBlock(uint256)\":{\"details\":\"Value is expected to be > 0.\",\"params\":{\"_baseFeeOpCodeActivationBlock\":\"Block number where the baseFee opCode is activated\"}},\"setGasPriceMinimumFloor(uint256)\":{\"details\":\"Value is expected to be > 0.\",\"params\":{\"_gasPriceMinimumFloor\":\"The lowest value the gas price minimum can be.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setTargetDensity(uint256)\":{\"details\":\"Value is expected to be < 1.\",\"params\":{\"_targetDensity\":\"The target gas fullness of blocks, expressed as a fixidity fraction.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateGasPriceMinimum(uint256,uint256)\":{\"params\":{\"blockGasLimit\":\"The maxBlockGasLimit of the past block.\",\"blockGasTotal\":\"The amount of gas in the most recent block.\"},\"returns\":{\"_0\":\"result of the calculation (new gas price minimum)\"}}},\"title\":\"Stores and provides gas price minimum for various currencies.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets initialized == true on implementation contracts\"},\"getGasPriceMinimum(address)\":{\"notice\":\"Retrieve the current gas price minimum for a currency.\"},\"getUpdatedGasPriceMinimum(uint256,uint256)\":{\"notice\":\"Calculates the gas price minimum based on governable parameters and block congestion.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"setAdjustmentSpeed(uint256)\":{\"notice\":\"Set a multiplier that impacts how quickly gas price minimum is adjusted.\"},\"setBaseFeeOpCodeActivationBlock(uint256)\":{\"notice\":\"Set the activation block of the baseFee opCode.\"},\"setGasPriceMinimumFloor(uint256)\":{\"notice\":\"Set the minimum gas price treshold.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setTargetDensity(uint256)\":{\"notice\":\"Set the block density targeted by the gas price minimum algorithm.\"},\"updateGasPriceMinimum(uint256,uint256)\":{\"notice\":\"Adjust the gas price minimum based on governable parameters and block congestion.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/common/GasPriceMinimum.sol\":\"GasPriceMinimum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/GasPriceMinimum.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\n\\nimport \\\"../../contracts/common/CalledByVm.sol\\\";\\nimport \\\"../../contracts/common/Initializable.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../../contracts/common/FixidityLib.sol\\\";\\nimport \\\"./UsingRegistry.sol\\\";\\nimport \\\"../../contracts/stability/interfaces/ISortedOracles.sol\\\";\\n\\n/**\\n * @title Stores and provides gas price minimum for various currencies.\\n */\\ncontract GasPriceMinimum is\\n  ICeloVersionedContract,\\n  Ownable,\\n  Initializable,\\n  UsingRegistry,\\n  CalledByVm\\n{\\n  using FixidityLib for FixidityLib.Fraction;\\n\\n  event TargetDensitySet(uint256 targetDensity);\\n  event GasPriceMinimumFloorSet(uint256 gasPriceMinimumFloor);\\n  event AdjustmentSpeedSet(uint256 adjustmentSpeed);\\n  event GasPriceMinimumUpdated(uint256 gasPriceMinimum);\\n  event BaseFeeOpCodeActivationBlockSet(uint256 baseFeeOpCodeActivationBlock);\\n\\n  uint256 public deprecated_gasPriceMinimum;\\n  uint256 public gasPriceMinimumFloor;\\n\\n  // Block congestion level targeted by the gas price minimum calculation.\\n  FixidityLib.Fraction public targetDensity;\\n\\n  // Speed of gas price minimum adjustment due to congestion.\\n  FixidityLib.Fraction public adjustmentSpeed;\\n\\n  uint256 public baseFeeOpCodeActivationBlock;\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 2, 0, 0);\\n  }\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param _registryAddress The address of the registry core smart contract.\\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\\n   */\\n  function initialize(\\n    address _registryAddress,\\n    uint256 _gasPriceMinimumFloor,\\n    uint256 _targetDensity,\\n    uint256 _adjustmentSpeed,\\n    uint256 _baseFeeOpCodeActivationBlock\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(_registryAddress);\\n    deprecated_gasPriceMinimum = _gasPriceMinimumFloor;\\n    setGasPriceMinimumFloor(_gasPriceMinimumFloor);\\n    setTargetDensity(_targetDensity);\\n    setAdjustmentSpeed(_adjustmentSpeed);\\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, true);\\n  }\\n\\n  /**\\n   * @notice Set a multiplier that impacts how quickly gas price minimum is adjusted.\\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\\n   * @dev Value is expected to be < 1.\\n   */\\n  function setAdjustmentSpeed(uint256 _adjustmentSpeed) public onlyOwner {\\n    adjustmentSpeed = FixidityLib.wrap(_adjustmentSpeed);\\n    require(adjustmentSpeed.lt(FixidityLib.fixed1()), \\\"adjustment speed must be smaller than 1\\\");\\n    emit AdjustmentSpeedSet(_adjustmentSpeed);\\n  }\\n\\n  /**\\n   * @notice Set the block density targeted by the gas price minimum algorithm.\\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\\n   * @dev Value is expected to be < 1.\\n   */\\n  function setTargetDensity(uint256 _targetDensity) public onlyOwner {\\n    targetDensity = FixidityLib.wrap(_targetDensity);\\n    require(targetDensity.lt(FixidityLib.fixed1()), \\\"target density must be smaller than 1\\\");\\n    emit TargetDensitySet(_targetDensity);\\n  }\\n\\n  /**\\n   * @notice Set the minimum gas price treshold.\\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\\n   * @dev Value is expected to be > 0.\\n   */\\n  function setGasPriceMinimumFloor(uint256 _gasPriceMinimumFloor) public onlyOwner {\\n    require(_gasPriceMinimumFloor > 0, \\\"gas price minimum floor must be greater than zero\\\");\\n    gasPriceMinimumFloor = _gasPriceMinimumFloor;\\n    emit GasPriceMinimumFloorSet(_gasPriceMinimumFloor);\\n  }\\n\\n  /**\\n   * @notice Set the activation block of the baseFee opCode.\\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\\n   * @dev Value is expected to be > 0.\\n   */\\n  function setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock)\\n    external\\n    onlyOwner\\n  {\\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, false);\\n  }\\n\\n  /**\\n   * @notice Set the activation block of the baseFee opCode.\\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\\n   * @dev Value is expected to be > 0.\\n   */\\n  function _setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock, bool allowZero)\\n    private\\n    onlyOwner\\n  {\\n    require(\\n      allowZero || _baseFeeOpCodeActivationBlock > 0,\\n      \\\"baseFee opCode activation block must be greater than zero\\\"\\n    );\\n    baseFeeOpCodeActivationBlock = _baseFeeOpCodeActivationBlock;\\n    emit BaseFeeOpCodeActivationBlockSet(_baseFeeOpCodeActivationBlock);\\n  }\\n\\n  function gasPriceMinimum() public view returns (uint256) {\\n    if (baseFeeOpCodeActivationBlock > 0 && block.number >= baseFeeOpCodeActivationBlock) {\\n      return block.basefee;\\n    } else {\\n      return deprecated_gasPriceMinimum;\\n    }\\n  }\\n\\n  /**\\n   * @notice Retrieve the current gas price minimum for a currency.\\n   * @param tokenAddress The currency the gas price should be in (defaults to gold).\\n   * @return current gas price minimum in the requested currency\\n   */\\n  function getGasPriceMinimum(address tokenAddress) external view returns (uint256) {\\n    if (\\n      tokenAddress == address(0) ||\\n      tokenAddress == registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID)\\n    ) {\\n      return gasPriceMinimum();\\n    } else {\\n      ISortedOracles sortedOracles = ISortedOracles(\\n        registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID)\\n      );\\n      uint256 rateNumerator;\\n      uint256 rateDenominator;\\n      (rateNumerator, rateDenominator) = sortedOracles.medianRate(tokenAddress);\\n      return ((gasPriceMinimum() * rateNumerator) / rateDenominator);\\n    }\\n  }\\n\\n  /**\\n   * @notice Adjust the gas price minimum based on governable parameters\\n   * and block congestion.\\n   * @param blockGasTotal The amount of gas in the most recent block.\\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\\n   * @return result of the calculation (new gas price minimum)\\n   */\\n  function updateGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\\n    external\\n    onlyVm\\n    returns (uint256)\\n  {\\n    deprecated_gasPriceMinimum = getUpdatedGasPriceMinimum(blockGasTotal, blockGasLimit);\\n    emit GasPriceMinimumUpdated(deprecated_gasPriceMinimum);\\n    return deprecated_gasPriceMinimum;\\n  }\\n\\n  /**\\n   * @notice Calculates the gas price minimum based on governable parameters\\n   * and block congestion.\\n   * @param blockGasTotal The amount of gas in the most recent block.\\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\\n   * @return result of the calculation (new gas price minimum)\\n   * @dev Calculate using the following formula:\\n   * oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.\\n   */\\n  function getUpdatedGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    FixidityLib.Fraction memory blockDensity = FixidityLib.newFixedFraction(\\n      blockGasTotal,\\n      blockGasLimit\\n    );\\n    bool densityGreaterThanTarget = blockDensity.gt(targetDensity);\\n    FixidityLib.Fraction memory densityDelta = densityGreaterThanTarget\\n      ? blockDensity.subtract(targetDensity)\\n      : targetDensity.subtract(blockDensity);\\n    FixidityLib.Fraction memory adjustment = densityGreaterThanTarget\\n      ? FixidityLib.fixed1().add(adjustmentSpeed.multiply(densityDelta))\\n      : FixidityLib.fixed1().subtract(adjustmentSpeed.multiply(densityDelta));\\n\\n    uint256 newGasPriceMinimum = adjustment\\n      .multiply(FixidityLib.newFixed(gasPriceMinimum()))\\n      .add(FixidityLib.fixed1())\\n      .fromFixed();\\n\\n    return newGasPriceMinimum >= gasPriceMinimumFloor ? newGasPriceMinimum : gasPriceMinimumFloor;\\n  }\\n}\\n\",\"keccak256\":\"0x4ac562f09a596c98882bd8be00ee66255cc910627efb264f1aa5a9b1a935ff0a\",\"license\":\"UNLICENSED\"},\"project:/contracts-0.8/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.8.20;\\n\\n// Note: This is not an exact copy of UsingRegistry or UsingRegistryV2 in the contract's folder\\n// because Mento's interfaces still don't support Solidity 0.8\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../contracts/common/interfaces/IRegistry.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  event RegistrySet(address indexed registryAddress);\\n\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"DoubleSigningSlasher\\\")\\n  );\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"FeeCurrencyWhitelist\\\")\\n  );\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"GovernanceSlasher\\\")\\n  );\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x2c3c90f6c8d52040e90e1920a33f8c6b0ae293fa3a4bcd18e892f4b3721017e6\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/CalledByVm.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract CalledByVm {\\n  modifier onlyVm() {\\n    require(msg.sender == address(0), \\\"Only VM can call\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xb94d2b580a505f5d4ef51bb14b12b6fa19d69e4fa94c96f2f105091673a0a0a4\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/FixidityLib.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n  struct Fraction {\\n    uint256 value;\\n  }\\n\\n  /**\\n   * @notice Number of positions that the comma is shifted to the right.\\n   */\\n  function digits() internal pure returns (uint8) {\\n    return 24;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n  /**\\n   * @notice This is 1 in the fixed point units used in this library.\\n   * @dev Test fixed1() equals 10^digits()\\n   * Hardcoded to 24 digits.\\n   */\\n  function fixed1() internal pure returns (Fraction memory) {\\n    return Fraction(FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n   * struct.\\n   * @param x Number that already represents a 24-decimal fraction.\\n   * @return A Fraction struct with contents x.\\n   */\\n  function wrap(uint256 x) internal pure returns (Fraction memory) {\\n    return Fraction(x);\\n  }\\n\\n  /**\\n   * @notice Unwraps the uint256 inside of a Fraction struct.\\n   */\\n  function unwrap(Fraction memory x) internal pure returns (uint256) {\\n    return x.value;\\n  }\\n\\n  /**\\n   * @notice The amount of decimals lost on each multiplication operand.\\n   * @dev Test mulPrecision() equals sqrt(fixed1)\\n   */\\n  function mulPrecision() internal pure returns (uint256) {\\n    return 1000000000000;\\n  }\\n\\n  /**\\n   * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n   * @dev\\n   * Test maxNewFixed() equals maxUint256() / fixed1()\\n   */\\n  function maxNewFixed() internal pure returns (uint256) {\\n    return 115792089237316195423570985008687907853269984665640564;\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 to fixed point Fraction\\n   * @dev Test newFixed(0) returns 0\\n   * Test newFixed(1) returns fixed1()\\n   * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n   * Test newFixed(maxNewFixed()+1) fails\\n   */\\n  function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n    require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n    return Fraction(x * FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 in the fixed point representation of this\\n   * library to a non decimal. All decimal digits will be truncated.\\n   */\\n  function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n    return x.value / FIXED1_UINT;\\n  }\\n\\n  /**\\n   * @notice Converts two uint256 representing a fraction to fixed point units,\\n   * equivalent to multiplying dividend and divisor by 10^digits().\\n   * @param numerator numerator must be <= maxNewFixed()\\n   * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n   * @dev\\n   * Test newFixedFraction(1,0) fails\\n   * Test newFixedFraction(0,1) returns 0\\n   * Test newFixedFraction(1,1) returns fixed1()\\n   * Test newFixedFraction(1,fixed1()) returns 1\\n   */\\n  function newFixedFraction(uint256 numerator, uint256 denominator)\\n    internal\\n    pure\\n    returns (Fraction memory)\\n  {\\n    Fraction memory convertedNumerator = newFixed(numerator);\\n    Fraction memory convertedDenominator = newFixed(denominator);\\n    return divide(convertedNumerator, convertedDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the integer part of a fixed point number.\\n   * @dev\\n   * Test integer(0) returns 0\\n   * Test integer(fixed1()) returns fixed1()\\n   * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n   */\\n  function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice Returns the fractional part of a fixed point number.\\n   * In the case of a negative number the fractional is also negative.\\n   * @dev\\n   * Test fractional(0) returns 0\\n   * Test fractional(fixed1()) returns 0\\n   * Test fractional(fixed1()-1) returns 10^24-1\\n   */\\n  function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x+y.\\n   * @dev The maximum value that can be safely used as an addition operator is defined as\\n   * maxFixedAdd = maxUint256()-1 / 2, or\\n   * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n   * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n   * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n   */\\n  function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    uint256 z = x.value + y.value;\\n    require(z >= x.value, \\\"add overflow detected\\\");\\n    return Fraction(z);\\n  }\\n\\n  /**\\n   * @notice x-y.\\n   * @dev\\n   * Test subtract(6, 10) fails\\n   */\\n  function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n    return Fraction(x.value - y.value);\\n  }\\n\\n  /**\\n   * @notice x*y. If any of the operators is higher than the max multiplier value it\\n   * might overflow.\\n   * @dev The maximum value that can be safely used as a multiplication operator\\n   * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n   * or 340282366920938463463374607431768211455999999999999\\n   * Test multiply(0,0) returns 0\\n   * Test multiply(maxFixedMul,0) returns 0\\n   * Test multiply(0,maxFixedMul) returns 0\\n   * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n   * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n   * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n   */\\n  function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    if (x.value == 0 || y.value == 0) return Fraction(0);\\n    if (y.value == FIXED1_UINT) return x;\\n    if (x.value == FIXED1_UINT) return y;\\n\\n    // Separate into integer and fractional parts\\n    // x = x1 + x2, y = y1 + y2\\n    uint256 x1 = integer(x).value / FIXED1_UINT;\\n    uint256 x2 = fractional(x).value;\\n    uint256 y1 = integer(y).value / FIXED1_UINT;\\n    uint256 y2 = fractional(y).value;\\n\\n    // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n    uint256 x1y1 = x1 * y1;\\n    if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n    // x1y1 needs to be multiplied back by fixed1\\n    // solium-disable-next-line mixedcase\\n    uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n    if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n    x1y1 = fixed_x1y1;\\n\\n    uint256 x2y1 = x2 * y1;\\n    if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n    uint256 x1y2 = x1 * y2;\\n    if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n    x2 = x2 / mulPrecision();\\n    y2 = y2 / mulPrecision();\\n    uint256 x2y2 = x2 * y2;\\n    if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n    // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n    Fraction memory result = Fraction(x1y1);\\n    result = add(result, Fraction(x2y1)); // Add checks for overflow\\n    result = add(result, Fraction(x1y2)); // Add checks for overflow\\n    result = add(result, Fraction(x2y2)); // Add checks for overflow\\n    return result;\\n  }\\n\\n  /**\\n   * @notice 1/x\\n   * @dev\\n   * Test reciprocal(0) fails\\n   * Test reciprocal(fixed1()) returns fixed1()\\n   * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n   * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n   * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n   */\\n  function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n    require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n    return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x/y. If the dividend is higher than the max dividend value, it\\n   * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n   * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n   * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n   * This yields the value 115792089237316195423570985008687907853269984665640564.\\n   * Test maxNewFixed equals maxUint256()/fixed1()\\n   * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n   * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n   * Test divide(fixed1(),0) fails\\n   * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n   * Test divide(maxNewFixed+1,1) throws\\n   */\\n  function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(y.value != 0, \\\"can't divide by 0\\\");\\n    uint256 X = x.value * FIXED1_UINT;\\n    require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n    return Fraction(X / y.value);\\n  }\\n\\n  /**\\n   * @notice x > y\\n   */\\n  function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value > y.value;\\n  }\\n\\n  /**\\n   * @notice x >= y\\n   */\\n  function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value >= y.value;\\n  }\\n\\n  /**\\n   * @notice x < y\\n   */\\n  function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value < y.value;\\n  }\\n\\n  /**\\n   * @notice x <= y\\n   */\\n  function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value <= y.value;\\n  }\\n\\n  /**\\n   * @notice x == y\\n   */\\n  function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value == y.value;\\n  }\\n\\n  /**\\n   * @notice x <= 1\\n   */\\n  function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n    return lte(x, fixed1());\\n  }\\n}\\n\",\"keccak256\":\"0xf1cebbfcf298ef05f24e940ab4351049e2da6e5ee77b272257d2c86b4cd1cc1c\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract Initializable {\\n  bool public initialized;\\n\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x27277d9f2c894659833be45eeca368a6d5ff060d944f0ad335e31003bf6477ed\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n    * @return Storage version of the contract.\\n    * @return Major version of the contract.\\n    * @return Minor version of the contract.\\n    * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x27f0b14472db998eb8e4b529bbfd6a5879cbd842f8db8aa6c06ed7d2e0b17ac1\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200285c3803806200285c833981810160405281019062000037919062000190565b80620000586200004c6200008260201b60201c565b6200008a60201b60201c565b806200007a576001600060146101000a81548160ff0219169083151502179055505b5050620001c2565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b60008115159050919050565b6200016a8162000153565b81146200017657600080fd5b50565b6000815190506200018a816200015f565b92915050565b600060208284031215620001a957620001a86200014e565b5b6000620001b98482850162000179565b91505092915050565b61268a80620001d26000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806393ca6fc4116100b8578063c12398b41161007c578063c12398b4146102f5578063ceff0bd614610325578063ef712c5b14610343578063f2fde38b14610373578063f8e2b0621461038f578063f92ad219146103ad57610137565b806393ca6fc414610253578063a54b7fc01461026f578063a68f548e1461029f578063a91ee0dc146102bd578063b830f4a4146102d957610137565b806354255be0116100ff57806354255be0146101ce578063715018a6146101ef5780637b103999146101f95780638da5cb5b146102175780638efd92ca1461023557610137565b8063158ef93e1461013c57806330f726b91461015a57806336945c2d146101765780634a3d5fe2146101945780634b930e5a146101b2575b600080fd5b6101446103c9565b60405161015191906117ae565b60405180910390f35b610174600480360381019061016f9190611804565b6103dc565b005b61017e6104a5565b60405161018b9190611840565b60405180910390f35b61019c6104d0565b6040516101a99190611840565b60405180910390f35b6101cc60048036038101906101c79190611804565b6104dc565b005b6101d66104f2565b6040516101e6949392919061185b565b60405180910390f35b6101f761050d565b005b610201610521565b60405161020e919061191f565b60405180910390f35b61021f610547565b60405161022c919061195b565b60405180910390f35b61023d610570565b60405161024a9190611840565b60405180910390f35b61026d60048036038101906102689190611804565b610576565b005b610289600480360381019061028491906119a2565b61063f565b6040516102969190611840565b60405180910390f35b6102a76108ea565b6040516102b49190611840565b60405180910390f35b6102d760048036038101906102d291906119a2565b6108f6565b005b6102f360048036038101906102ee9190611804565b6109f4565b005b61030f600480360381019061030a91906119cf565b610a80565b60405161031c9190611840565b60405180910390f35b61032d610b44565b60405161033a9190611840565b60405180910390f35b61035d600480360381019061035891906119cf565b610b4a565b60405161036a9190611840565b60405180910390f35b61038d600480360381019061038891906119a2565b610ce2565b005b610397610d65565b6040516103a49190611840565b60405180910390f35b6103c760048036038101906103c29190611a0f565b610d6b565b005b600060149054906101000a900460ff1681565b6103e4610e1c565b6103ed81610e9a565b60056000820151816000015590505061042c610407610eb8565b6005604051806020016040529081600082015481525050610ede90919063ffffffff16565b61046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290611b0d565b60405180910390fd5b7fd2e71cd7012df1df07d4908ff75ae4b2bfbb6c49d39144404661f1fd472532838160405161049a9190611840565b60405180910390a150565b6000806006541180156104ba57506006544310155b156104c7574890506104cd565b60025490505b90565b60048060000154905081565b6104e4610e1c565b6104ef816000610ef3565b50565b60008060008060016002600080935093509350935090919293565b610515610e1c565b61051f6000610f88565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b61057e610e1c565b61058781610e9a565b6004600082015181600001559050506105c66105a1610eb8565b6004604051806020016040529081600082015481525050610ede90919063ffffffff16565b610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90611b9f565b60405180910390fd5b7f2a109bad06121312708ed2a3e9b3556ea85ef8eadd4d10d8181f50d114eb4fab816040516106349190611840565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806107655750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed6040516020016106c390611c16565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016106f59190611c44565b602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190611c74565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15610779576107726104a5565b90506108e5565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed6040516020016107c890611ced565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016107fa9190611c44565b602060405180830381865afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190611c74565b90506000808273ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0866040518263ffffffff1660e01b8152600401610879919061195b565b6040805180830381865afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b99190611d17565b809250819350505080826108cb6104a5565b6108d59190611d86565b6108df9190611df7565b93505050505b919050565b60058060000154905081565b6108fe610e1c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096490611e74565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6109fc610e1c565b60008111610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611f06565b60405180910390fd5b806003819055507f5548a13ccc1d9e4e2860461edda5ad49ba8a4fda485f67d954f9d7da8d2aff2781604051610a759190611840565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae790611f72565b60405180910390fd5b610afa8383610b4a565b6002819055507f6e53b2f8b69496c2a175588ad1326dbabe2f66df4d82f817aeca52e3474807fb600254604051610b319190611840565b60405180910390a1600254905092915050565b60035481565b600080610b57848461104c565b90506000610b8460046040518060200160405290816000820154815250508361108290919063ffffffff16565b9050600081610bbb57610bb683600460405180602001604052908160008201548152505061109790919063ffffffff16565b610be5565b610be460046040518060200160405290816000820154815250508461109790919063ffffffff16565b5b9050600082610c3557610c30610c1a83600560405180602001604052908160008201548152505061111490919063ffffffff16565b610c22610eb8565b61109790919063ffffffff16565b610c78565b610c77610c6183600560405180602001604052908160008201548152505061111490919063ffffffff16565b610c69610eb8565b6114ab90919063ffffffff16565b5b90506000610cbf610cba610c8a610eb8565b610cac610c9d610c986104a5565b61152a565b8661111490919063ffffffff16565b6114ab90919063ffffffff16565b6115a7565b9050600354811015610cd357600354610cd5565b805b9550505050505092915050565b610cea610e1c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5090612004565b60405180910390fd5b610d6281610f88565b50565b60025481565b600060149054906101000a900460ff1615610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db290612070565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550610ddf33610f88565b610de8856108f6565b83600281905550610df8846109f4565b610e0183610576565b610e0a826103dc565b610e15816001610ef3565b5050505050565b610e246115ca565b73ffffffffffffffffffffffffffffffffffffffff16610e42610547565b73ffffffffffffffffffffffffffffffffffffffff1614610e98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8f906120dc565b60405180910390fd5b565b610ea2611780565b6040518060200160405280838152509050919050565b610ec0611780565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b610efb610e1c565b8080610f075750600082115b610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d9061216e565b60405180910390fd5b816006819055507fc74fe30765574b78669fcec5cea6b0dcaacd907890a49fc756a40235d01b09fc82604051610f7c9190611840565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611054611780565b600061105f8461152a565b9050600061106c8461152a565b905061107882826115d2565b9250505092915050565b60008160000151836000015111905092915050565b61109f611780565b8160000151836000015110156110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e1906121da565b60405180910390fd5b60405180602001604052808360000151856000015161110991906121fa565b815250905092915050565b61111c611780565b600083600001511480611133575060008260000151145b1561114f576040518060200160405280600081525090506114a5565b69d3c21bcecceda100000082600001510361116c578290506114a5565b69d3c21bcecceda1000000836000015103611189578190506114a5565b600069d3c21bcecceda100000061119f856116c1565b600001516111ad9190611df7565b905060006111ba85611703565b600001519050600069d3c21bcecceda10000006111d6866116c1565b600001516111e49190611df7565b905060006111f186611703565b600001519050600082856112059190611d86565b90506000851461125d5782858261121c9190611df7565b1461125c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112539061227a565b60405180910390fd5b5b600069d3c21bcecceda1000000826112759190611d86565b9050600082146112d75769d3c21bcecceda100000082826112969190611df7565b146112d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cd906122e6565b60405180910390fd5b5b809150600084866112e89190611d86565b905060008614611340578486826112ff9190611df7565b1461133f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133690612352565b60405180910390fd5b5b6000848861134e9190611d86565b9050600088146113a6578488826113659190611df7565b146113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c906123be565b60405180910390fd5b5b6113ae611754565b876113b99190611df7565b96506113c3611754565b856113ce9190611df7565b9450600085886113de9190611d86565b905060008814611436578588826113f59190611df7565b14611435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142c9061242a565b60405180910390fd5b5b60006040518060200160405280878152509050611461816040518060200160405280878152506114ab565b905061147b816040518060200160405280868152506114ab565b9050611495816040518060200160405280858152506114ab565b9050809a50505050505050505050505b92915050565b6114b3611780565b6000826000015184600001516114c9919061244a565b90508360000151811015611512576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611509906124ca565b60405180910390fd5b60405180602001604052808281525091505092915050565b611532611780565b61153a611761565b82111561157c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115739061255c565b60405180910390fd5b604051806020016040528069d3c21bcecceda10000008461159d9190611d86565b8152509050919050565b600069d3c21bcecceda100000082600001516115c39190611df7565b9050919050565b600033905090565b6115da611780565b6000826000015103611621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611618906125c8565b60405180910390fd5b600069d3c21bcecceda1000000846000015161163d9190611d86565b9050836000015169d3c21bcecceda10000008261165a9190611df7565b1461169a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169190612634565b60405180910390fd5b60405180602001604052808460000151836116b59190611df7565b81525091505092915050565b6116c9611780565b604051806020016040528069d3c21bcecceda10000008085600001516116ef9190611df7565b6116f99190611d86565b8152509050919050565b61170b611780565b604051806020016040528069d3c21bcecceda10000008085600001516117319190611df7565b61173b9190611d86565b846000015161174a91906121fa565b8152509050919050565b600064e8d4a51000905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b6040518060200160405280600081525090565b60008115159050919050565b6117a881611793565b82525050565b60006020820190506117c3600083018461179f565b92915050565b600080fd5b6000819050919050565b6117e1816117ce565b81146117ec57600080fd5b50565b6000813590506117fe816117d8565b92915050565b60006020828403121561181a576118196117c9565b5b6000611828848285016117ef565b91505092915050565b61183a816117ce565b82525050565b60006020820190506118556000830184611831565b92915050565b60006080820190506118706000830187611831565b61187d6020830186611831565b61188a6040830185611831565b6118976060830184611831565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118e56118e06118db846118a0565b6118c0565b6118a0565b9050919050565b60006118f7826118ca565b9050919050565b6000611909826118ec565b9050919050565b611919816118fe565b82525050565b60006020820190506119346000830184611910565b92915050565b6000611945826118a0565b9050919050565b6119558161193a565b82525050565b6000602082019050611970600083018461194c565b92915050565b61197f8161193a565b811461198a57600080fd5b50565b60008135905061199c81611976565b92915050565b6000602082840312156119b8576119b76117c9565b5b60006119c68482850161198d565b91505092915050565b600080604083850312156119e6576119e56117c9565b5b60006119f4858286016117ef565b9250506020611a05858286016117ef565b9150509250929050565b600080600080600060a08688031215611a2b57611a2a6117c9565b5b6000611a398882890161198d565b9550506020611a4a888289016117ef565b9450506040611a5b888289016117ef565b9350506060611a6c888289016117ef565b9250506080611a7d888289016117ef565b9150509295509295909350565b600082825260208201905092915050565b7f61646a7573746d656e74207370656564206d75737420626520736d616c6c657260008201527f207468616e203100000000000000000000000000000000000000000000000000602082015250565b6000611af7602783611a8a565b9150611b0282611a9b565b604082019050919050565b60006020820190508181036000830152611b2681611aea565b9050919050565b7f7461726765742064656e73697479206d75737420626520736d616c6c6572207460008201527f68616e2031000000000000000000000000000000000000000000000000000000602082015250565b6000611b89602583611a8a565b9150611b9482611b2d565b604082019050919050565b60006020820190508181036000830152611bb881611b7c565b9050919050565b600081905092915050565b7f476f6c64546f6b656e0000000000000000000000000000000000000000000000600082015250565b6000611c00600983611bbf565b9150611c0b82611bca565b600982019050919050565b6000611c2182611bf3565b9150819050919050565b6000819050919050565b611c3e81611c2b565b82525050565b6000602082019050611c596000830184611c35565b92915050565b600081519050611c6e81611976565b92915050565b600060208284031215611c8a57611c896117c9565b5b6000611c9884828501611c5f565b91505092915050565b7f536f727465644f7261636c657300000000000000000000000000000000000000600082015250565b6000611cd7600d83611bbf565b9150611ce282611ca1565b600d82019050919050565b6000611cf882611cca565b9150819050919050565b600081519050611d11816117d8565b92915050565b60008060408385031215611d2e57611d2d6117c9565b5b6000611d3c85828601611d02565b9250506020611d4d85828601611d02565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d91826117ce565b9150611d9c836117ce565b9250828202611daa816117ce565b91508282048414831517611dc157611dc0611d57565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e02826117ce565b9150611e0d836117ce565b925082611e1d57611e1c611dc8565b5b828204905092915050565b7f43616e6e6f7420726567697374657220746865206e756c6c2061646472657373600082015250565b6000611e5e602083611a8a565b9150611e6982611e28565b602082019050919050565b60006020820190508181036000830152611e8d81611e51565b9050919050565b7f676173207072696365206d696e696d756d20666c6f6f72206d7573742062652060008201527f67726561746572207468616e207a65726f000000000000000000000000000000602082015250565b6000611ef0603183611a8a565b9150611efb82611e94565b604082019050919050565b60006020820190508181036000830152611f1f81611ee3565b9050919050565b7f4f6e6c7920564d2063616e2063616c6c00000000000000000000000000000000600082015250565b6000611f5c601083611a8a565b9150611f6782611f26565b602082019050919050565b60006020820190508181036000830152611f8b81611f4f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611fee602683611a8a565b9150611ff982611f92565b604082019050919050565b6000602082019050818103600083015261201d81611fe1565b9050919050565b7f636f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b600061205a601c83611a8a565b915061206582612024565b602082019050919050565b600060208201905081810360008301526120898161204d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006120c6602083611a8a565b91506120d182612090565b602082019050919050565b600060208201905081810360008301526120f5816120b9565b9050919050565b7f62617365466565206f70436f64652061637469766174696f6e20626c6f636b2060008201527f6d7573742062652067726561746572207468616e207a65726f00000000000000602082015250565b6000612158603983611a8a565b9150612163826120fc565b604082019050919050565b600060208201905081810360008301526121878161214b565b9050919050565b7f737562737472616374696f6e20756e646572666c6f7720646574656374656400600082015250565b60006121c4601f83611a8a565b91506121cf8261218e565b602082019050919050565b600060208201905081810360008301526121f3816121b7565b9050919050565b6000612205826117ce565b9150612210836117ce565b925082820390508181111561222857612227611d57565b5b92915050565b7f6f766572666c6f77207831793120646574656374656400000000000000000000600082015250565b6000612264601683611a8a565b915061226f8261222e565b602082019050919050565b6000602082019050818103600083015261229381612257565b9050919050565b7f6f766572666c6f772078317931202a2066697865643120646574656374656400600082015250565b60006122d0601f83611a8a565b91506122db8261229a565b602082019050919050565b600060208201905081810360008301526122ff816122c3565b9050919050565b7f6f766572666c6f77207832793120646574656374656400000000000000000000600082015250565b600061233c601683611a8a565b915061234782612306565b602082019050919050565b6000602082019050818103600083015261236b8161232f565b9050919050565b7f6f766572666c6f77207831793220646574656374656400000000000000000000600082015250565b60006123a8601683611a8a565b91506123b382612372565b602082019050919050565b600060208201905081810360008301526123d78161239b565b9050919050565b7f6f766572666c6f77207832793220646574656374656400000000000000000000600082015250565b6000612414601683611a8a565b915061241f826123de565b602082019050919050565b6000602082019050818103600083015261244381612407565b9050919050565b6000612455826117ce565b9150612460836117ce565b925082820190508082111561247857612477611d57565b5b92915050565b7f616464206f766572666c6f772064657465637465640000000000000000000000600082015250565b60006124b4601583611a8a565b91506124bf8261247e565b602082019050919050565b600060208201905081810360008301526124e3816124a7565b9050919050565b7f63616e277420637265617465206669786964697479206e756d626572206c617260008201527f676572207468616e206d61784e65774669786564282900000000000000000000602082015250565b6000612546603683611a8a565b9150612551826124ea565b604082019050919050565b6000602082019050818103600083015261257581612539565b9050919050565b7f63616e2774206469766964652062792030000000000000000000000000000000600082015250565b60006125b2601183611a8a565b91506125bd8261257c565b602082019050919050565b600060208201905081810360008301526125e1816125a5565b9050919050565b7f6f766572666c6f77206174206469766964650000000000000000000000000000600082015250565b600061261e601283611a8a565b9150612629826125e8565b602082019050919050565b6000602082019050818103600083015261264d81612611565b905091905056fea264697066735822122044f8a4f1edd0483df811812d09bbb02f140f48c7aa0f03e3b305b7d2515bcab364736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806393ca6fc4116100b8578063c12398b41161007c578063c12398b4146102f5578063ceff0bd614610325578063ef712c5b14610343578063f2fde38b14610373578063f8e2b0621461038f578063f92ad219146103ad57610137565b806393ca6fc414610253578063a54b7fc01461026f578063a68f548e1461029f578063a91ee0dc146102bd578063b830f4a4146102d957610137565b806354255be0116100ff57806354255be0146101ce578063715018a6146101ef5780637b103999146101f95780638da5cb5b146102175780638efd92ca1461023557610137565b8063158ef93e1461013c57806330f726b91461015a57806336945c2d146101765780634a3d5fe2146101945780634b930e5a146101b2575b600080fd5b6101446103c9565b60405161015191906117ae565b60405180910390f35b610174600480360381019061016f9190611804565b6103dc565b005b61017e6104a5565b60405161018b9190611840565b60405180910390f35b61019c6104d0565b6040516101a99190611840565b60405180910390f35b6101cc60048036038101906101c79190611804565b6104dc565b005b6101d66104f2565b6040516101e6949392919061185b565b60405180910390f35b6101f761050d565b005b610201610521565b60405161020e919061191f565b60405180910390f35b61021f610547565b60405161022c919061195b565b60405180910390f35b61023d610570565b60405161024a9190611840565b60405180910390f35b61026d60048036038101906102689190611804565b610576565b005b610289600480360381019061028491906119a2565b61063f565b6040516102969190611840565b60405180910390f35b6102a76108ea565b6040516102b49190611840565b60405180910390f35b6102d760048036038101906102d291906119a2565b6108f6565b005b6102f360048036038101906102ee9190611804565b6109f4565b005b61030f600480360381019061030a91906119cf565b610a80565b60405161031c9190611840565b60405180910390f35b61032d610b44565b60405161033a9190611840565b60405180910390f35b61035d600480360381019061035891906119cf565b610b4a565b60405161036a9190611840565b60405180910390f35b61038d600480360381019061038891906119a2565b610ce2565b005b610397610d65565b6040516103a49190611840565b60405180910390f35b6103c760048036038101906103c29190611a0f565b610d6b565b005b600060149054906101000a900460ff1681565b6103e4610e1c565b6103ed81610e9a565b60056000820151816000015590505061042c610407610eb8565b6005604051806020016040529081600082015481525050610ede90919063ffffffff16565b61046b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290611b0d565b60405180910390fd5b7fd2e71cd7012df1df07d4908ff75ae4b2bfbb6c49d39144404661f1fd472532838160405161049a9190611840565b60405180910390a150565b6000806006541180156104ba57506006544310155b156104c7574890506104cd565b60025490505b90565b60048060000154905081565b6104e4610e1c565b6104ef816000610ef3565b50565b60008060008060016002600080935093509350935090919293565b610515610e1c565b61051f6000610f88565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b61057e610e1c565b61058781610e9a565b6004600082015181600001559050506105c66105a1610eb8565b6004604051806020016040529081600082015481525050610ede90919063ffffffff16565b610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90611b9f565b60405180910390fd5b7f2a109bad06121312708ed2a3e9b3556ea85ef8eadd4d10d8181f50d114eb4fab816040516106349190611840565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806107655750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed6040516020016106c390611c16565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016106f59190611c44565b602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190611c74565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15610779576107726104a5565b90506108e5565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed6040516020016107c890611ced565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016107fa9190611c44565b602060405180830381865afa158015610817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083b9190611c74565b90506000808273ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0866040518263ffffffff1660e01b8152600401610879919061195b565b6040805180830381865afa158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b99190611d17565b809250819350505080826108cb6104a5565b6108d59190611d86565b6108df9190611df7565b93505050505b919050565b60058060000154905081565b6108fe610e1c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096490611e74565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6109fc610e1c565b60008111610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611f06565b60405180910390fd5b806003819055507f5548a13ccc1d9e4e2860461edda5ad49ba8a4fda485f67d954f9d7da8d2aff2781604051610a759190611840565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae790611f72565b60405180910390fd5b610afa8383610b4a565b6002819055507f6e53b2f8b69496c2a175588ad1326dbabe2f66df4d82f817aeca52e3474807fb600254604051610b319190611840565b60405180910390a1600254905092915050565b60035481565b600080610b57848461104c565b90506000610b8460046040518060200160405290816000820154815250508361108290919063ffffffff16565b9050600081610bbb57610bb683600460405180602001604052908160008201548152505061109790919063ffffffff16565b610be5565b610be460046040518060200160405290816000820154815250508461109790919063ffffffff16565b5b9050600082610c3557610c30610c1a83600560405180602001604052908160008201548152505061111490919063ffffffff16565b610c22610eb8565b61109790919063ffffffff16565b610c78565b610c77610c6183600560405180602001604052908160008201548152505061111490919063ffffffff16565b610c69610eb8565b6114ab90919063ffffffff16565b5b90506000610cbf610cba610c8a610eb8565b610cac610c9d610c986104a5565b61152a565b8661111490919063ffffffff16565b6114ab90919063ffffffff16565b6115a7565b9050600354811015610cd357600354610cd5565b805b9550505050505092915050565b610cea610e1c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5090612004565b60405180910390fd5b610d6281610f88565b50565b60025481565b600060149054906101000a900460ff1615610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db290612070565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550610ddf33610f88565b610de8856108f6565b83600281905550610df8846109f4565b610e0183610576565b610e0a826103dc565b610e15816001610ef3565b5050505050565b610e246115ca565b73ffffffffffffffffffffffffffffffffffffffff16610e42610547565b73ffffffffffffffffffffffffffffffffffffffff1614610e98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8f906120dc565b60405180910390fd5b565b610ea2611780565b6040518060200160405280838152509050919050565b610ec0611780565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b610efb610e1c565b8080610f075750600082115b610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d9061216e565b60405180910390fd5b816006819055507fc74fe30765574b78669fcec5cea6b0dcaacd907890a49fc756a40235d01b09fc82604051610f7c9190611840565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611054611780565b600061105f8461152a565b9050600061106c8461152a565b905061107882826115d2565b9250505092915050565b60008160000151836000015111905092915050565b61109f611780565b8160000151836000015110156110ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e1906121da565b60405180910390fd5b60405180602001604052808360000151856000015161110991906121fa565b815250905092915050565b61111c611780565b600083600001511480611133575060008260000151145b1561114f576040518060200160405280600081525090506114a5565b69d3c21bcecceda100000082600001510361116c578290506114a5565b69d3c21bcecceda1000000836000015103611189578190506114a5565b600069d3c21bcecceda100000061119f856116c1565b600001516111ad9190611df7565b905060006111ba85611703565b600001519050600069d3c21bcecceda10000006111d6866116c1565b600001516111e49190611df7565b905060006111f186611703565b600001519050600082856112059190611d86565b90506000851461125d5782858261121c9190611df7565b1461125c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112539061227a565b60405180910390fd5b5b600069d3c21bcecceda1000000826112759190611d86565b9050600082146112d75769d3c21bcecceda100000082826112969190611df7565b146112d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cd906122e6565b60405180910390fd5b5b809150600084866112e89190611d86565b905060008614611340578486826112ff9190611df7565b1461133f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133690612352565b60405180910390fd5b5b6000848861134e9190611d86565b9050600088146113a6578488826113659190611df7565b146113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c906123be565b60405180910390fd5b5b6113ae611754565b876113b99190611df7565b96506113c3611754565b856113ce9190611df7565b9450600085886113de9190611d86565b905060008814611436578588826113f59190611df7565b14611435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142c9061242a565b60405180910390fd5b5b60006040518060200160405280878152509050611461816040518060200160405280878152506114ab565b905061147b816040518060200160405280868152506114ab565b9050611495816040518060200160405280858152506114ab565b9050809a50505050505050505050505b92915050565b6114b3611780565b6000826000015184600001516114c9919061244a565b90508360000151811015611512576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611509906124ca565b60405180910390fd5b60405180602001604052808281525091505092915050565b611532611780565b61153a611761565b82111561157c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115739061255c565b60405180910390fd5b604051806020016040528069d3c21bcecceda10000008461159d9190611d86565b8152509050919050565b600069d3c21bcecceda100000082600001516115c39190611df7565b9050919050565b600033905090565b6115da611780565b6000826000015103611621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611618906125c8565b60405180910390fd5b600069d3c21bcecceda1000000846000015161163d9190611d86565b9050836000015169d3c21bcecceda10000008261165a9190611df7565b1461169a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169190612634565b60405180910390fd5b60405180602001604052808460000151836116b59190611df7565b81525091505092915050565b6116c9611780565b604051806020016040528069d3c21bcecceda10000008085600001516116ef9190611df7565b6116f99190611d86565b8152509050919050565b61170b611780565b604051806020016040528069d3c21bcecceda10000008085600001516117319190611df7565b61173b9190611d86565b846000015161174a91906121fa565b8152509050919050565b600064e8d4a51000905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b6040518060200160405280600081525090565b60008115159050919050565b6117a881611793565b82525050565b60006020820190506117c3600083018461179f565b92915050565b600080fd5b6000819050919050565b6117e1816117ce565b81146117ec57600080fd5b50565b6000813590506117fe816117d8565b92915050565b60006020828403121561181a576118196117c9565b5b6000611828848285016117ef565b91505092915050565b61183a816117ce565b82525050565b60006020820190506118556000830184611831565b92915050565b60006080820190506118706000830187611831565b61187d6020830186611831565b61188a6040830185611831565b6118976060830184611831565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006118e56118e06118db846118a0565b6118c0565b6118a0565b9050919050565b60006118f7826118ca565b9050919050565b6000611909826118ec565b9050919050565b611919816118fe565b82525050565b60006020820190506119346000830184611910565b92915050565b6000611945826118a0565b9050919050565b6119558161193a565b82525050565b6000602082019050611970600083018461194c565b92915050565b61197f8161193a565b811461198a57600080fd5b50565b60008135905061199c81611976565b92915050565b6000602082840312156119b8576119b76117c9565b5b60006119c68482850161198d565b91505092915050565b600080604083850312156119e6576119e56117c9565b5b60006119f4858286016117ef565b9250506020611a05858286016117ef565b9150509250929050565b600080600080600060a08688031215611a2b57611a2a6117c9565b5b6000611a398882890161198d565b9550506020611a4a888289016117ef565b9450506040611a5b888289016117ef565b9350506060611a6c888289016117ef565b9250506080611a7d888289016117ef565b9150509295509295909350565b600082825260208201905092915050565b7f61646a7573746d656e74207370656564206d75737420626520736d616c6c657260008201527f207468616e203100000000000000000000000000000000000000000000000000602082015250565b6000611af7602783611a8a565b9150611b0282611a9b565b604082019050919050565b60006020820190508181036000830152611b2681611aea565b9050919050565b7f7461726765742064656e73697479206d75737420626520736d616c6c6572207460008201527f68616e2031000000000000000000000000000000000000000000000000000000602082015250565b6000611b89602583611a8a565b9150611b9482611b2d565b604082019050919050565b60006020820190508181036000830152611bb881611b7c565b9050919050565b600081905092915050565b7f476f6c64546f6b656e0000000000000000000000000000000000000000000000600082015250565b6000611c00600983611bbf565b9150611c0b82611bca565b600982019050919050565b6000611c2182611bf3565b9150819050919050565b6000819050919050565b611c3e81611c2b565b82525050565b6000602082019050611c596000830184611c35565b92915050565b600081519050611c6e81611976565b92915050565b600060208284031215611c8a57611c896117c9565b5b6000611c9884828501611c5f565b91505092915050565b7f536f727465644f7261636c657300000000000000000000000000000000000000600082015250565b6000611cd7600d83611bbf565b9150611ce282611ca1565b600d82019050919050565b6000611cf882611cca565b9150819050919050565b600081519050611d11816117d8565b92915050565b60008060408385031215611d2e57611d2d6117c9565b5b6000611d3c85828601611d02565b9250506020611d4d85828601611d02565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d91826117ce565b9150611d9c836117ce565b9250828202611daa816117ce565b91508282048414831517611dc157611dc0611d57565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e02826117ce565b9150611e0d836117ce565b925082611e1d57611e1c611dc8565b5b828204905092915050565b7f43616e6e6f7420726567697374657220746865206e756c6c2061646472657373600082015250565b6000611e5e602083611a8a565b9150611e6982611e28565b602082019050919050565b60006020820190508181036000830152611e8d81611e51565b9050919050565b7f676173207072696365206d696e696d756d20666c6f6f72206d7573742062652060008201527f67726561746572207468616e207a65726f000000000000000000000000000000602082015250565b6000611ef0603183611a8a565b9150611efb82611e94565b604082019050919050565b60006020820190508181036000830152611f1f81611ee3565b9050919050565b7f4f6e6c7920564d2063616e2063616c6c00000000000000000000000000000000600082015250565b6000611f5c601083611a8a565b9150611f6782611f26565b602082019050919050565b60006020820190508181036000830152611f8b81611f4f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611fee602683611a8a565b9150611ff982611f92565b604082019050919050565b6000602082019050818103600083015261201d81611fe1565b9050919050565b7f636f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b600061205a601c83611a8a565b915061206582612024565b602082019050919050565b600060208201905081810360008301526120898161204d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006120c6602083611a8a565b91506120d182612090565b602082019050919050565b600060208201905081810360008301526120f5816120b9565b9050919050565b7f62617365466565206f70436f64652061637469766174696f6e20626c6f636b2060008201527f6d7573742062652067726561746572207468616e207a65726f00000000000000602082015250565b6000612158603983611a8a565b9150612163826120fc565b604082019050919050565b600060208201905081810360008301526121878161214b565b9050919050565b7f737562737472616374696f6e20756e646572666c6f7720646574656374656400600082015250565b60006121c4601f83611a8a565b91506121cf8261218e565b602082019050919050565b600060208201905081810360008301526121f3816121b7565b9050919050565b6000612205826117ce565b9150612210836117ce565b925082820390508181111561222857612227611d57565b5b92915050565b7f6f766572666c6f77207831793120646574656374656400000000000000000000600082015250565b6000612264601683611a8a565b915061226f8261222e565b602082019050919050565b6000602082019050818103600083015261229381612257565b9050919050565b7f6f766572666c6f772078317931202a2066697865643120646574656374656400600082015250565b60006122d0601f83611a8a565b91506122db8261229a565b602082019050919050565b600060208201905081810360008301526122ff816122c3565b9050919050565b7f6f766572666c6f77207832793120646574656374656400000000000000000000600082015250565b600061233c601683611a8a565b915061234782612306565b602082019050919050565b6000602082019050818103600083015261236b8161232f565b9050919050565b7f6f766572666c6f77207831793220646574656374656400000000000000000000600082015250565b60006123a8601683611a8a565b91506123b382612372565b602082019050919050565b600060208201905081810360008301526123d78161239b565b9050919050565b7f6f766572666c6f77207832793220646574656374656400000000000000000000600082015250565b6000612414601683611a8a565b915061241f826123de565b602082019050919050565b6000602082019050818103600083015261244381612407565b9050919050565b6000612455826117ce565b9150612460836117ce565b925082820190508082111561247857612477611d57565b5b92915050565b7f616464206f766572666c6f772064657465637465640000000000000000000000600082015250565b60006124b4601583611a8a565b91506124bf8261247e565b602082019050919050565b600060208201905081810360008301526124e3816124a7565b9050919050565b7f63616e277420637265617465206669786964697479206e756d626572206c617260008201527f676572207468616e206d61784e65774669786564282900000000000000000000602082015250565b6000612546603683611a8a565b9150612551826124ea565b604082019050919050565b6000602082019050818103600083015261257581612539565b9050919050565b7f63616e2774206469766964652062792030000000000000000000000000000000600082015250565b60006125b2601183611a8a565b91506125bd8261257c565b602082019050919050565b600060208201905081810360008301526125e1816125a5565b9050919050565b7f6f766572666c6f77206174206469766964650000000000000000000000000000600082015250565b600061261e601283611a8a565b9150612629826125e8565b602082019050919050565b6000602082019050818103600083015261264d81612611565b905091905056fea264697066735822122044f8a4f1edd0483df811812d09bbb02f140f48c7aa0f03e3b305b7d2515bcab364736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1043:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:11",
                "type": ""
              }
            ],
            "src": "7:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "376:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "386:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "411:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "404:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "404:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "397:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "386:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "358:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "368:7:11",
                "type": ""
              }
            ],
            "src": "334:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "524:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "536:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "526:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "526:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "526:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "493:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "515:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "500:14:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "500:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "490:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "490:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "483:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "480:60:11"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "463:5:11",
                "type": ""
              }
            ],
            "src": "430:116:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:77:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "622:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "637:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "631:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "631:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "622:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "677:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "653:23:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:30:11"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "590:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "598:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:11",
                "type": ""
              }
            ],
            "src": "552:137:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:271:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "817:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "779:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "908:125:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "923:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "927:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "952:71:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "995:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1006:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "991:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "991:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1015:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "962:28:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:61:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "952:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "739:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "750:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "762:6:11",
                "type": ""
              }
            ],
            "src": "695:345:11"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:30031:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:11",
                "type": ""
              }
            ],
            "src": "7:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:11"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:11",
                "type": ""
              }
            ],
            "src": "103:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:11",
                "type": ""
              }
            ],
            "src": "218:210:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "484:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "494:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "467:6:11",
                "type": ""
              }
            ],
            "src": "434:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "515:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "638:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "806:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "816:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "827:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "816:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "788:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "798:7:11",
                "type": ""
              }
            ],
            "src": "761:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "887:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "944:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "953:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "956:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "946:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "946:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "946:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "910:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "935:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "917:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "917:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "907:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "907:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "900:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "900:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "897:63:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "880:5:11",
                "type": ""
              }
            ],
            "src": "844:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1024:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1056:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1043:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1034:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1099:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1072:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1072:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1002:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1010:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1018:5:11",
                "type": ""
              }
            ],
            "src": "972:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1229:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1231:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1231:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1231:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1204:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1213:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1200:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1225:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1196:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1196:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1193:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1322:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1337:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1351:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1341:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1366:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1401:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1412:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1397:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1397:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1421:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1376:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1376:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1366:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1153:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1164:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1176:6:11",
                "type": ""
              }
            ],
            "src": "1117:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1517:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1534:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1557:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1539:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1539:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1527:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1505:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1512:3:11",
                "type": ""
              }
            ],
            "src": "1452:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1674:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1684:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1696:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1692:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1684:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1764:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1777:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1720:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1720:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1646:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1658:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1669:4:11",
                "type": ""
              }
            ],
            "src": "1576:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1986:371:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1996:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2008:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2019:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2004:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2004:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1996:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2077:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2090:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2101:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2086:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2086:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2033:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2033:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2158:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2171:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2182:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2167:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2167:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2114:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2114:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2114:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2240:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2253:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2264:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2249:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2249:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2196:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2196:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2322:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2335:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2346:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2331:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2331:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2278:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1934:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1946:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1954:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1962:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1970:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1981:4:11",
                "type": ""
              }
            ],
            "src": "1804:553:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2408:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2418:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2433:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2440:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2429:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2418:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2390:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2400:7:11",
                "type": ""
              }
            ],
            "src": "2363:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2527:28:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2537:12:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2544:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2537:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2513:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2523:3:11",
                "type": ""
              }
            ],
            "src": "2495:60:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2621:82:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2631:66:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2689:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "2671:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2671:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "2662:8:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2662:34:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2644:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2644:53:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2631:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2601:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2611:9:11",
                "type": ""
              }
            ],
            "src": "2561:142:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2769:66:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2779:50:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2823:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2792:30:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2792:37:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2779:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2749:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2759:9:11",
                "type": ""
              }
            ],
            "src": "2709:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2919:66:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2929:50:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2973:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2942:30:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2942:37:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2929:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IRegistry_$1684_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2899:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2909:9:11",
                "type": ""
              }
            ],
            "src": "2841:144:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3074:84:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3091:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3145:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IRegistry_$1684_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3096:48:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3096:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3084:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3084:68:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3084:68:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IRegistry_$1684_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3062:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3069:3:11",
                "type": ""
              }
            ],
            "src": "2991:167:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3280:142:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3290:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3302:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3313:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3298:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3298:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3290:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3388:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3401:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3412:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3397:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3397:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IRegistry_$1684_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3326:61:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:89:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3326:89:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IRegistry_$1684__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3252:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3264:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3275:4:11",
                "type": ""
              }
            ],
            "src": "3164:258:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3473:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3483:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3512:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3494:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3494:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3483:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3455:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3465:7:11",
                "type": ""
              }
            ],
            "src": "3428:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3595:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3612:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3635:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3617:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3617:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3605:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3605:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3605:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3583:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3590:3:11",
                "type": ""
              }
            ],
            "src": "3530:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3752:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3762:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3774:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3785:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3770:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3762:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3842:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3855:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3866:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3851:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3851:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3798:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3798:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3798:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3724:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3736:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3747:4:11",
                "type": ""
              }
            ],
            "src": "3654:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3925:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3982:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3991:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3994:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3984:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3984:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3984:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3948:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3973:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3955:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3955:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3945:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3945:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3938:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3938:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3935:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3918:5:11",
                "type": ""
              }
            ],
            "src": "3882:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4062:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4072:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4094:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4081:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4081:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4072:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4137:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4110:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4110:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4110:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4040:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4048:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4056:5:11",
                "type": ""
              }
            ],
            "src": "4010:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4221:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4267:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4269:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4269:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4269:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4242:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4251:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4238:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4238:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4263:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4234:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4234:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4231:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4360:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4375:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4389:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4379:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4404:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4439:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4450:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4435:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4435:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4459:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4414:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4414:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4404:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4191:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4202:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4214:6:11",
                "type": ""
              }
            ],
            "src": "4155:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4573:391:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4619:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4621:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4621:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4621:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4594:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4603:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4590:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4590:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4615:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4586:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4586:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4583:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4712:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4727:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4741:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4731:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4756:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4791:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4802:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4787:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4787:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4811:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4766:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4766:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4756:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4839:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4854:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4868:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4858:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4884:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4919:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4930:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4915:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4915:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4939:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4894:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4894:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4884:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4535:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4546:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4558:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4566:6:11",
                "type": ""
              }
            ],
            "src": "4490:474:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5104:777:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5151:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5153:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5153:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5153:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5125:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5134:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5121:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5121:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5146:3:11",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5117:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5117:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5114:120:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5244:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5259:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5273:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5263:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5288:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5323:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5334:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5319:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5319:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5343:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5298:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5298:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5288:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5371:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5386:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5400:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5390:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5416:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5451:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5462:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5447:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5447:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5471:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5426:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5426:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5416:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5499:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5514:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5528:2:11",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5518:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5544:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5579:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5590:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5575:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5575:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5599:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5554:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5554:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5544:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5627:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5642:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5656:2:11",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5646:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5672:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5707:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5718:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5703:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5703:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5727:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5682:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5672:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5755:119:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5770:17:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5784:3:11",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5774:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5801:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5836:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5847:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5832:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5832:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5856:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5811:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5811:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "5801:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5042:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5053:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5065:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5073:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5081:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5089:6:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5097:6:11",
                "type": ""
              }
            ],
            "src": "4970:911:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5983:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6000:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6005:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5993:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5993:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6021:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6040:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6045:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6036:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6036:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6021:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5955:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5960:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5971:11:11",
                "type": ""
              }
            ],
            "src": "5887:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6168:120:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6190:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6198:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6186:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6186:14:11"
                      },
                      {
                        "hexValue": "61646a7573746d656e74207370656564206d75737420626520736d616c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6202:34:11",
                        "type": "",
                        "value": "adjustment speed must be smaller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6179:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6179:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6179:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6258:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6266:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6254:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6254:15:11"
                      },
                      {
                        "hexValue": "207468616e2031",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6271:9:11",
                        "type": "",
                        "value": " than 1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6247:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6247:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6247:34:11"
                }
              ]
            },
            "name": "store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6160:6:11",
                "type": ""
              }
            ],
            "src": "6062:226:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6440:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6450:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6516:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6521:2:11",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6457:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6457:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6450:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6622:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
                      "nodeType": "YulIdentifier",
                      "src": "6533:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6533:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6533:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6635:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6646:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6651:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6642:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6642:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6635:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6428:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6436:3:11",
                "type": ""
              }
            ],
            "src": "6294:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6837:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6847:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6859:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6870:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6855:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6855:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6847:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6894:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6905:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6890:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6890:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6913:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6919:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6909:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6909:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6883:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6883:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6883:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6939:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7073:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6947:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6947:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6939:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6817:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6832:4:11",
                "type": ""
              }
            ],
            "src": "6666:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7197:118:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7219:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7227:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:14:11"
                      },
                      {
                        "hexValue": "7461726765742064656e73697479206d75737420626520736d616c6c65722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7231:34:11",
                        "type": "",
                        "value": "target density must be smaller t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7208:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7287:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7295:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7283:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7283:15:11"
                      },
                      {
                        "hexValue": "68616e2031",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7300:7:11",
                        "type": "",
                        "value": "han 1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7276:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7276:32:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7276:32:11"
                }
              ]
            },
            "name": "store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7189:6:11",
                "type": ""
              }
            ],
            "src": "7091:224:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7467:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7477:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7543:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7548:2:11",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7484:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7484:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7477:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7649:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
                      "nodeType": "YulIdentifier",
                      "src": "7560:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7560:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7560:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7662:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7673:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7678:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7669:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7669:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7662:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7455:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7463:3:11",
                "type": ""
              }
            ],
            "src": "7321:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7864:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7874:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7886:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7897:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7882:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7882:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7874:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7921:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7932:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7917:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7917:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7940:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7946:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7936:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7936:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7910:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7910:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7910:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7966:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8100:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7974:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7974:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7966:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7844:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7859:4:11",
                "type": ""
              }
            ],
            "src": "7693:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8232:34:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8242:18:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "8257:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8242:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8204:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8209:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8220:11:11",
                "type": ""
              }
            ],
            "src": "8118:148:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8378:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8400:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8408:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8396:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8396:14:11"
                      },
                      {
                        "hexValue": "476f6c64546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8412:11:11",
                        "type": "",
                        "value": "GoldToken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8389:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8389:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8389:35:11"
                }
              ]
            },
            "name": "store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8370:6:11",
                "type": ""
              }
            ],
            "src": "8272:159:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8601:236:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8611:91:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8695:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8700:1:11",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8618:76:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8618:84:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8611:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8800:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
                      "nodeType": "YulIdentifier",
                      "src": "8711:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8711:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8711:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8813:18:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8824:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8829:1:11",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8820:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8820:11:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8813:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8589:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8597:3:11",
                "type": ""
              }
            ],
            "src": "8437:400:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9032:192:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9043:155:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9194:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9050:142:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9050:148:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9043:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9208:10:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "9215:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9208:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9019:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9028:3:11",
                "type": ""
              }
            ],
            "src": "8843:381:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9275:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9285:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9296:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9285:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9257:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9267:7:11",
                "type": ""
              }
            ],
            "src": "9230:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9378:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9395:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9418:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "9400:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9400:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9388:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9388:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9388:37:11"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9366:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9373:3:11",
                "type": ""
              }
            ],
            "src": "9313:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9535:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9545:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9557:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9568:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9553:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9553:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9545:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9625:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9638:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9649:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9634:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9634:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9581:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9581:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9581:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9507:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9519:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9530:4:11",
                "type": ""
              }
            ],
            "src": "9437:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9728:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9738:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9753:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9747:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9747:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9738:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9796:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "9769:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9769:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9769:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9706:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9714:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9722:5:11",
                "type": ""
              }
            ],
            "src": "9665:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9891:274:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9937:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9939:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9939:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9939:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9912:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9921:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9908:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9908:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9933:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9904:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9904:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "9901:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "10030:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "10045:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10059:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "10049:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10074:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10120:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "10131:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10116:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10116:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10140:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10084:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10084:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "10074:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9861:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9872:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9884:6:11",
                "type": ""
              }
            ],
            "src": "9814:351:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10277:57:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10299:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10307:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10295:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10295:14:11"
                      },
                      {
                        "hexValue": "536f727465644f7261636c6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10311:15:11",
                        "type": "",
                        "value": "SortedOracles"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10288:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10288:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10288:39:11"
                }
              ]
            },
            "name": "store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10269:6:11",
                "type": ""
              }
            ],
            "src": "10171:163:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10504:238:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10514:92:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10598:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10603:2:11",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10521:76:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10521:85:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10514:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10704:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
                      "nodeType": "YulIdentifier",
                      "src": "10615:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10615:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10615:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10717:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10728:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10733:2:11",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10724:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10724:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10717:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10492:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10500:3:11",
                "type": ""
              }
            ],
            "src": "10340:402:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10937:192:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10948:155:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11099:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10955:142:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10955:148:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10948:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11113:10:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "11120:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11113:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10924:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10933:3:11",
                "type": ""
              }
            ],
            "src": "10748:381:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11198:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11208:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11223:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11217:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11217:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11208:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11266:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11239:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11239:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11239:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11176:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11184:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11192:5:11",
                "type": ""
              }
            ],
            "src": "11135:143:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11378:413:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11424:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11426:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11426:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11426:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11399:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11408:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11395:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11395:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11420:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11391:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11391:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11388:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11517:128:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11532:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11546:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11536:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11561:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11607:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11618:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11603:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11603:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11627:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11571:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11571:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11561:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11655:129:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11670:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11684:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11674:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11700:74:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11746:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11757:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11742:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11742:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11766:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11710:31:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11710:64:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "11700:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11340:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11351:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11363:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11371:6:11",
                "type": ""
              }
            ],
            "src": "11284:507:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11825:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11842:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11845:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11835:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11835:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11835:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11939:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11942:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11932:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11932:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11932:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11963:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11966:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11956:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11956:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11956:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11797:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12031:362:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12041:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12064:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12046:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12046:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12041:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12075:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12098:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12080:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12080:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12075:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12109:28:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12132:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12135:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12128:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12128:9:11"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "12113:11:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12146:41:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "12175:11:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12157:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12157:30:11"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12146:7:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12364:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12366:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12366:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12366:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12297:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12290:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12290:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12320:1:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "12327:7:11"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12336:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "12323:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12323:15:11"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "12317:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12317:22:11"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "12270:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12270:83:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12250:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12250:113:11"
                  },
                  "nodeType": "YulIf",
                  "src": "12247:139:11"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12014:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12017:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12023:7:11",
                "type": ""
              }
            ],
            "src": "11983:410:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12427:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12444:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12447:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12437:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12437:88:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12437:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12541:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12544:4:11",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12534:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12534:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12534:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12565:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12568:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12558:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12558:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12558:15:11"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "12399:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12627:143:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12637:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12660:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12642:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12642:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12637:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12671:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12694:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12676:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12676:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12671:1:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12718:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "12720:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12720:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12720:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12715:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12708:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12708:9:11"
                  },
                  "nodeType": "YulIf",
                  "src": "12705:35:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12750:14:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12759:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12762:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12755:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12755:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "12750:1:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12616:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12619:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "12625:1:11",
                "type": ""
              }
            ],
            "src": "12585:185:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12882:76:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12904:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12912:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12900:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12900:14:11"
                      },
                      {
                        "hexValue": "43616e6e6f7420726567697374657220746865206e756c6c2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12916:34:11",
                        "type": "",
                        "value": "Cannot register the null address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12893:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12893:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12893:58:11"
                }
              ]
            },
            "name": "store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12874:6:11",
                "type": ""
              }
            ],
            "src": "12776:182:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13110:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13120:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13186:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13191:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13127:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13127:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13120:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13292:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8",
                      "nodeType": "YulIdentifier",
                      "src": "13203:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13203:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13203:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13305:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13316:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13321:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13312:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13312:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13305:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13098:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13106:3:11",
                "type": ""
              }
            ],
            "src": "12964:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13507:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13517:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13529:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13540:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13525:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13525:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13517:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13564:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13575:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13560:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13560:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13583:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13589:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13579:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13579:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13553:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13553:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13553:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13609:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13743:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13617:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13617:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13609:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13487:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13502:4:11",
                "type": ""
              }
            ],
            "src": "13336:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13867:130:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13889:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13897:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13885:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13885:14:11"
                      },
                      {
                        "hexValue": "676173207072696365206d696e696d756d20666c6f6f72206d75737420626520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13901:34:11",
                        "type": "",
                        "value": "gas price minimum floor must be "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13878:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13878:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13878:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13957:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13965:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13953:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13953:15:11"
                      },
                      {
                        "hexValue": "67726561746572207468616e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13970:19:11",
                        "type": "",
                        "value": "greater than zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13946:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13946:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13946:44:11"
                }
              ]
            },
            "name": "store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13859:6:11",
                "type": ""
              }
            ],
            "src": "13761:236:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14149:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14159:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14225:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14230:2:11",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14166:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14166:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14159:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14331:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
                      "nodeType": "YulIdentifier",
                      "src": "14242:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14242:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14242:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14344:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14355:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14360:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14351:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14351:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14344:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14137:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14145:3:11",
                "type": ""
              }
            ],
            "src": "14003:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14546:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14556:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14568:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14579:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14564:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14564:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14556:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14603:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14614:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14599:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14599:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14622:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14628:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14618:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14618:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14592:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14592:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14592:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14648:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14782:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14656:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14656:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14648:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14526:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14541:4:11",
                "type": ""
              }
            ],
            "src": "14375:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14906:60:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14928:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14936:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14924:14:11"
                      },
                      {
                        "hexValue": "4f6e6c7920564d2063616e2063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14940:18:11",
                        "type": "",
                        "value": "Only VM can call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14917:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14917:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14917:42:11"
                }
              ]
            },
            "name": "store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14898:6:11",
                "type": ""
              }
            ],
            "src": "14800:166:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15118:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15128:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15194:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15199:2:11",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15135:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15135:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15128:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15300:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750",
                      "nodeType": "YulIdentifier",
                      "src": "15211:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15211:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15211:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15313:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15324:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15329:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15320:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15320:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15313:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15106:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15114:3:11",
                "type": ""
              }
            ],
            "src": "14972:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15515:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15525:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15537:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15548:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15533:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15533:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15525:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15572:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15583:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15568:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15568:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "15591:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15597:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15587:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15587:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15561:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15561:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15561:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15617:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15751:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15625:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15625:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15617:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15495:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15510:4:11",
                "type": ""
              }
            ],
            "src": "15344:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15875:119:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15897:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15905:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15893:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15893:14:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15909:34:11",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15886:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15886:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15886:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15965:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15973:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15961:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15961:15:11"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15978:8:11",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15954:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15954:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15954:33:11"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15867:6:11",
                "type": ""
              }
            ],
            "src": "15769:225:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16146:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16156:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16222:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16227:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16163:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16163:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16156:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16328:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "16239:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16239:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16239:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16341:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16352:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16357:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16348:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16348:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16341:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16134:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16142:3:11",
                "type": ""
              }
            ],
            "src": "16000:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16543:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16553:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16565:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16576:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16561:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16561:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16553:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16600:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16611:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16596:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16596:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16619:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16625:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16615:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16615:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16589:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16589:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16589:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16645:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16779:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16653:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16653:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16645:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16523:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16538:4:11",
                "type": ""
              }
            ],
            "src": "16372:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16903:72:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16925:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16933:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16921:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16921:14:11"
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16937:30:11",
                        "type": "",
                        "value": "contract already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16914:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16914:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16914:54:11"
                }
              ]
            },
            "name": "store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16895:6:11",
                "type": ""
              }
            ],
            "src": "16797:178:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17127:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17137:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17203:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17208:2:11",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17144:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17144:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17137:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17309:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134",
                      "nodeType": "YulIdentifier",
                      "src": "17220:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17220:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17220:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17322:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17333:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17338:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17329:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17329:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17322:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17115:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17123:3:11",
                "type": ""
              }
            ],
            "src": "16981:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17524:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17534:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17546:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17557:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17542:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17542:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17534:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17581:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17592:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17577:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17577:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17600:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17606:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17596:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17596:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17570:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17570:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17570:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17626:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17760:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17634:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17634:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17626:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17504:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17519:4:11",
                "type": ""
              }
            ],
            "src": "17353:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17884:76:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17906:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17914:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17902:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17902:14:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17918:34:11",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17895:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17895:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17895:58:11"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17876:6:11",
                "type": ""
              }
            ],
            "src": "17778:182:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18112:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18122:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18188:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18193:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18129:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18129:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18122:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18294:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "18205:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18205:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18205:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18307:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18318:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18323:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18314:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18314:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18307:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18100:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18108:3:11",
                "type": ""
              }
            ],
            "src": "17966:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18509:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18519:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18531:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18542:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18527:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18527:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18519:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18566:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18577:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18562:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18562:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "18585:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18591:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18581:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18581:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18555:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18555:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18555:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18611:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18745:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18619:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18619:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18611:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18489:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18504:4:11",
                "type": ""
              }
            ],
            "src": "18338:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18869:138:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18891:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18899:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18887:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18887:14:11"
                      },
                      {
                        "hexValue": "62617365466565206f70436f64652061637469766174696f6e20626c6f636b20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18903:34:11",
                        "type": "",
                        "value": "baseFee opCode activation block "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18880:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18880:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18880:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18959:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18967:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18955:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18955:15:11"
                      },
                      {
                        "hexValue": "6d7573742062652067726561746572207468616e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18972:27:11",
                        "type": "",
                        "value": "must be greater than zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18948:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18948:52:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18948:52:11"
                }
              ]
            },
            "name": "store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18861:6:11",
                "type": ""
              }
            ],
            "src": "18763:244:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19159:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19169:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19235:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19240:2:11",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19176:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19176:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19169:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19341:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
                      "nodeType": "YulIdentifier",
                      "src": "19252:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19252:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19252:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19354:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19365:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19370:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19361:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19361:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19354:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "19147:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "19155:3:11",
                "type": ""
              }
            ],
            "src": "19013:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19556:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19566:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19578:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19589:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19574:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19574:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19566:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19613:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19624:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19609:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19609:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19632:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19638:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19628:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19628:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19602:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19602:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19602:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19658:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19792:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19666:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19666:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19658:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19536:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19551:4:11",
                "type": ""
              }
            ],
            "src": "19385:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19916:75:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19938:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19946:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19934:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19934:14:11"
                      },
                      {
                        "hexValue": "737562737472616374696f6e20756e646572666c6f77206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19950:33:11",
                        "type": "",
                        "value": "substraction underflow detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19927:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19927:57:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19927:57:11"
                }
              ]
            },
            "name": "store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19908:6:11",
                "type": ""
              }
            ],
            "src": "19810:181:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20143:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20153:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20219:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20224:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20160:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20160:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20153:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20325:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f",
                      "nodeType": "YulIdentifier",
                      "src": "20236:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20236:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20236:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20338:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20349:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20354:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20345:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20345:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20338:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20131:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20139:3:11",
                "type": ""
              }
            ],
            "src": "19997:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20540:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20550:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20562:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20573:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20558:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20558:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20550:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20597:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20608:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20593:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20593:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20616:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20622:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20612:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20612:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20586:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20586:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20586:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20642:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20776:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20650:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20650:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20642:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20520:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20535:4:11",
                "type": ""
              }
            ],
            "src": "20369:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20839:149:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20849:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20872:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "20854:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20854:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "20849:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20883:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20906:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "20888:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20888:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "20883:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20917:17:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20929:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20932:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20925:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20925:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20917:4:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20959:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20961:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20961:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20961:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "20950:4:11"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20956:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20947:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20947:11:11"
                  },
                  "nodeType": "YulIf",
                  "src": "20944:37:11"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20825:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20828:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20834:4:11",
                "type": ""
              }
            ],
            "src": "20794:194:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21100:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21122:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21130:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21118:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21118:14:11"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317931206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21134:24:11",
                        "type": "",
                        "value": "overflow x1y1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21111:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21111:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21111:48:11"
                }
              ]
            },
            "name": "store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21092:6:11",
                "type": ""
              }
            ],
            "src": "20994:172:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21318:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21328:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21394:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21399:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21335:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21335:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21328:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21500:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381",
                      "nodeType": "YulIdentifier",
                      "src": "21411:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21411:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21411:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21513:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21524:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21529:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21520:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21520:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21513:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21306:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21314:3:11",
                "type": ""
              }
            ],
            "src": "21172:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21715:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21725:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21737:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21748:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21733:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21733:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21725:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21772:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21783:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21768:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21768:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21791:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21797:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21787:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21787:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21761:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21761:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21761:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21817:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21951:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21825:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21825:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21817:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21695:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21710:4:11",
                "type": ""
              }
            ],
            "src": "21544:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22075:75:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22097:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22105:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22093:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22093:14:11"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317931202a20666978656431206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22109:33:11",
                        "type": "",
                        "value": "overflow x1y1 * fixed1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22086:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22086:57:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22086:57:11"
                }
              ]
            },
            "name": "store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22067:6:11",
                "type": ""
              }
            ],
            "src": "21969:181:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22302:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22312:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22378:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22383:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22319:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22319:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22312:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22484:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d",
                      "nodeType": "YulIdentifier",
                      "src": "22395:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22395:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22395:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22497:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22508:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22513:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22504:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22504:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22497:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22290:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22298:3:11",
                "type": ""
              }
            ],
            "src": "22156:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22699:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22709:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22721:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22732:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22717:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22717:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22709:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22756:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22767:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22752:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22752:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22775:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22781:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22771:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22771:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22745:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22745:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22745:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22801:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22935:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22809:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22809:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22801:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22679:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22694:4:11",
                "type": ""
              }
            ],
            "src": "22528:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23059:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23081:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23089:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23077:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23077:14:11"
                      },
                      {
                        "hexValue": "6f766572666c6f772078327931206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23093:24:11",
                        "type": "",
                        "value": "overflow x2y1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23070:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23070:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23070:48:11"
                }
              ]
            },
            "name": "store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23051:6:11",
                "type": ""
              }
            ],
            "src": "22953:172:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23277:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23287:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23353:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23358:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23294:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23294:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23287:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23459:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee",
                      "nodeType": "YulIdentifier",
                      "src": "23370:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23370:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23370:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23472:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23483:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23488:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23479:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23479:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23472:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23265:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23273:3:11",
                "type": ""
              }
            ],
            "src": "23131:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23674:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23684:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23696:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23707:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23692:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23692:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23684:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23731:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23742:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23727:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23727:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23750:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23756:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23746:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23746:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23720:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23720:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23720:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23776:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "23910:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23784:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23784:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23776:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23654:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23669:4:11",
                "type": ""
              }
            ],
            "src": "23503:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24034:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24056:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24064:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24052:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24052:14:11"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317932206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24068:24:11",
                        "type": "",
                        "value": "overflow x1y2 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24045:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24045:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24045:48:11"
                }
              ]
            },
            "name": "store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24026:6:11",
                "type": ""
              }
            ],
            "src": "23928:172:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24252:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24262:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24328:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24333:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24269:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24269:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24262:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24434:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7",
                      "nodeType": "YulIdentifier",
                      "src": "24345:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24345:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24345:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24447:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24458:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24463:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24454:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24454:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24447:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24240:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24248:3:11",
                "type": ""
              }
            ],
            "src": "24106:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24649:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24659:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24671:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24682:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24667:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24667:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24659:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24706:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24717:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24702:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24702:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24725:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24731:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24721:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24721:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24695:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24695:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24695:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24751:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24885:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24759:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24759:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24751:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24629:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24644:4:11",
                "type": ""
              }
            ],
            "src": "24478:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25009:66:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25031:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25039:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25027:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25027:14:11"
                      },
                      {
                        "hexValue": "6f766572666c6f772078327932206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25043:24:11",
                        "type": "",
                        "value": "overflow x2y2 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25020:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25020:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25020:48:11"
                }
              ]
            },
            "name": "store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25001:6:11",
                "type": ""
              }
            ],
            "src": "24903:172:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25227:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25237:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25303:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25308:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25244:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25244:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25237:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25409:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97",
                      "nodeType": "YulIdentifier",
                      "src": "25320:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25320:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25320:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25422:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25433:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25438:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25429:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25429:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25422:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25215:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25223:3:11",
                "type": ""
              }
            ],
            "src": "25081:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25624:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25634:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25646:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25657:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25642:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25642:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25634:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25681:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25692:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25677:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25677:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25700:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25706:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25696:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25696:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25670:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25670:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25670:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25726:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25860:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25734:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25734:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25726:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25604:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25619:4:11",
                "type": ""
              }
            ],
            "src": "25453:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25922:147:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25932:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "25955:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "25937:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25937:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "25932:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25966:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "25989:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "25971:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25971:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "25966:1:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26000:16:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "26011:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "26014:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26007:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26007:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "26000:3:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26040:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "26042:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "26042:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "26042:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "26032:1:11"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "26035:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "26029:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26029:10:11"
                  },
                  "nodeType": "YulIf",
                  "src": "26026:36:11"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "25909:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "25912:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "25918:3:11",
                "type": ""
              }
            ],
            "src": "25878:191:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26181:65:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26203:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26211:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26199:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26199:14:11"
                      },
                      {
                        "hexValue": "616464206f766572666c6f77206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26215:23:11",
                        "type": "",
                        "value": "add overflow detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26192:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26192:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26192:47:11"
                }
              ]
            },
            "name": "store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26173:6:11",
                "type": ""
              }
            ],
            "src": "26075:171:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26398:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26408:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26474:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26479:2:11",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26415:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26415:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26408:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26580:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14",
                      "nodeType": "YulIdentifier",
                      "src": "26491:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26491:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26491:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26593:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26604:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26609:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26600:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26600:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26593:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26386:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26394:3:11",
                "type": ""
              }
            ],
            "src": "26252:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26795:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26805:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26817:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26828:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26813:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26813:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26805:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26852:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26863:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26848:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26848:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26871:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26877:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26867:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26867:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26841:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26841:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26841:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26897:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27031:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26905:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26905:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26897:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26775:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26790:4:11",
                "type": ""
              }
            ],
            "src": "26624:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27155:135:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27177:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27185:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27173:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27173:14:11"
                      },
                      {
                        "hexValue": "63616e277420637265617465206669786964697479206e756d626572206c6172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27189:34:11",
                        "type": "",
                        "value": "can't create fixidity number lar"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27166:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27166:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27166:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27245:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27253:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27241:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27241:15:11"
                      },
                      {
                        "hexValue": "676572207468616e206d61784e657746697865642829",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27258:24:11",
                        "type": "",
                        "value": "ger than maxNewFixed()"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27234:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27234:49:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27234:49:11"
                }
              ]
            },
            "name": "store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27147:6:11",
                "type": ""
              }
            ],
            "src": "27049:241:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27442:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27452:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27518:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27523:2:11",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27459:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27459:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27452:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27624:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535",
                      "nodeType": "YulIdentifier",
                      "src": "27535:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27535:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27535:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27637:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27648:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27653:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27644:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27644:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27637:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27430:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27438:3:11",
                "type": ""
              }
            ],
            "src": "27296:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27839:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27849:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27861:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27872:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27857:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27857:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27849:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27896:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27907:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27892:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27892:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27915:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27921:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27911:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27911:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27885:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27885:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27885:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27941:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28075:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27949:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27949:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27941:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27819:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27834:4:11",
                "type": ""
              }
            ],
            "src": "27668:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28199:61:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28221:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28229:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28217:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28217:14:11"
                      },
                      {
                        "hexValue": "63616e2774206469766964652062792030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28233:19:11",
                        "type": "",
                        "value": "can't divide by 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28210:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28210:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28210:43:11"
                }
              ]
            },
            "name": "store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28191:6:11",
                "type": ""
              }
            ],
            "src": "28093:167:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28412:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28422:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28488:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28493:2:11",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28429:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28429:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "28422:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28594:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea",
                      "nodeType": "YulIdentifier",
                      "src": "28505:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28505:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28505:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28607:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28618:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28623:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28614:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28614:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28607:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "28400:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28408:3:11",
                "type": ""
              }
            ],
            "src": "28266:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28809:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28819:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28831:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28842:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28827:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28827:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28819:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28866:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28877:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28862:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28862:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28885:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28891:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28881:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28881:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28855:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28855:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28855:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28911:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29045:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28919:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28919:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28911:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28789:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28804:4:11",
                "type": ""
              }
            ],
            "src": "28638:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29169:62:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29191:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29199:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29187:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29187:14:11"
                      },
                      {
                        "hexValue": "6f766572666c6f7720617420646976696465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29203:20:11",
                        "type": "",
                        "value": "overflow at divide"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29180:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29180:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29180:44:11"
                }
              ]
            },
            "name": "store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "29161:6:11",
                "type": ""
              }
            ],
            "src": "29063:168:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29383:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29393:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29459:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29464:2:11",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29400:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29400:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "29393:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29565:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f",
                      "nodeType": "YulIdentifier",
                      "src": "29476:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29476:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29476:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29578:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29589:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29594:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29585:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29585:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "29578:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "29371:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "29379:3:11",
                "type": ""
              }
            ],
            "src": "29237:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29780:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29790:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29802:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29813:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29798:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29798:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29790:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29837:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29848:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29833:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29833:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29856:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29862:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29852:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29852:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29826:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29826:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29826:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29882:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "30016:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29890:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29890:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29882:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29760:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29775:4:11",
                "type": ""
              }
            ],
            "src": "29609:419:11"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRegistry_$1684_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IRegistry_$1684_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IRegistry_$1684_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IRegistry_$1684__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IRegistry_$1684_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"adjustment speed must be smaller\")\n\n        mstore(add(memPtr, 32), \" than 1\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"target density must be smaller t\")\n\n        mstore(add(memPtr, 32), \"han 1\")\n\n    }\n\n    function abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf(memPtr) {\n\n        mstore(add(memPtr, 0), \"GoldToken\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c(memPtr) {\n\n        mstore(add(memPtr, 0), \"SortedOracles\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 13)\n        store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c(pos)\n        end := add(pos, 13)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot register the null address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"gas price minimum floor must be \")\n\n        mstore(add(memPtr, 32), \"greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only VM can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134(memPtr) {\n\n        mstore(add(memPtr, 0), \"contract already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06(memPtr) {\n\n        mstore(add(memPtr, 0), \"baseFee opCode activation block \")\n\n        mstore(add(memPtr, 32), \"must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"substraction underflow detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x1y1 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x1y1 * fixed1 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x2y1 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x1y2 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x2y2 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14(memPtr) {\n\n        mstore(add(memPtr, 0), \"add overflow detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535(memPtr) {\n\n        mstore(add(memPtr, 0), \"can't create fixidity number lar\")\n\n        mstore(add(memPtr, 32), \"ger than maxNewFixed()\")\n\n    }\n\n    function abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"can't divide by 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow at divide\")\n\n    }\n\n    function abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "524:8162:3:-:0;;;1498:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1542:4;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;185:17:7;180:57;;226:4;212:11;;:18;;;;;;;;;;;;;;;;;;180:57;131:110;1498:52:3;524:8162;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:11:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:137::-;606:5;637:6;631:13;622:22;;653:30;677:5;653:30;:::i;:::-;552:137;;;;:::o;695:345::-;762:6;811:2;799:9;790:7;786:23;782:32;779:119;;;817:79;;:::i;:::-;779:119;937:1;962:61;1015:7;1006:6;995:9;991:22;962:61;:::i;:::-;952:71;;908:125;695:345;;;;:::o;524:8162:3:-;;;;;;;",
  "deployedSourceMap": "524:8162:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;103:23:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3287:279:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5552:242;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1149:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4740:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1827:117;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;2132:25:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1305:43:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3797:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6028:602;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1257:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2681:230:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4245:286:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6945:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1034:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7721:963;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;989:41:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2500:550;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;103:23:7;;;;;;;;;;;;;:::o;3287:279:3:-;1094:13:0;:11;:13::i;:::-;3382:34:3::1;3399:16;3382;:34::i;:::-;3364:15;:52;;;;;;;;;;;3430:40;3449:20;:18;:20::i;:::-;3430:15;:18;;;;;;;;;;;;;;;::::0;::::1;;;:40;;;;:::i;:::-;3422:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3525:36;3544:16;3525:36;;;;;;:::i;:::-;;;;;;;;3287:279:::0;:::o;5552:242::-;5600:7;5650:1;5619:28;;:32;:80;;;;;5671:28;;5655:12;:44;;5619:80;5615:175;;;5716:13;5709:20;;;;5615:175;5757:26;;5750:33;;5552:242;;:::o;1149:41::-;;;;;;;;;:::o;4740:190::-;1094:13:0;:11;:13::i;:::-;4855:70:3::1;4888:29;4919:5;4855:32;:70::i;:::-;4740:190:::0;:::o;1827:117::-;1878:7;1887;1896;1905;1928:1;1931;1934;1937;1920:19;;;;;;;;1827:117;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2132:25:4:-;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1305:43:3:-;;;;:::o;3797:263::-;1094:13:0;:11;:13::i;:::-;3886:32:3::1;3903:14;3886:16;:32::i;:::-;3870:13;:48;;;;;;;;;;;3932:38;3949:20;:18;:20::i;:::-;3932:13;:16;;;;;;;;;;;;;;;::::0;::::1;;;:38;;;;:::i;:::-;3924:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4023:32;4040:14;4023:32;;;;;;:::i;:::-;;;;;;;;3797:263:::0;:::o;6028:602::-;6101:7;6151:1;6127:26;;:12;:26;;;:103;;;;6179:8;;;;;;;;;;;:27;;;1344:29:4;;;;;;;:::i;:::-;;;;;;;;;;;;;1334:40;;;;;;6179:51:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6163:67;;:12;:67;;;6127:103;6116:510;;;6252:17;:15;:17::i;:::-;6245:24;;;;6116:510;6290:28;6345:8;;;;;;;;;;;:27;;;1879:33:4;;;;;;;:::i;:::-;;;;;;;;;;;;;1869:44;;;;;;6345:55:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6290:118;;6416:21;6445:23;6511:13;:24;;;6536:12;6511:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6476:73;;;;;;;;6603:15;6586:13;6566:17;:15;:17::i;:::-;:33;;;;:::i;:::-;6565:53;;;;:::i;:::-;6557:62;;;;;6028:602;;;;:::o;1257:43::-;;;;;;;;;:::o;2681:230:4:-;1094:13:0;:11;:13::i;:::-;2785:1:4::1;2758:29;;:15;:29;;::::0;2750:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2851:15;2830:8;;:37;;;;;;;;;;;;;;;;;;2890:15;2878:28;;;;;;;;;;;;2681:230:::0;:::o;4245:286:3:-;1094:13:0;:11;:13::i;:::-;4364:1:3::1;4340:21;:25;4332:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4448:21;4425:20;:44;;;;4480:46;4504:21;4480:46;;;;;;:::i;:::-;;;;;;;;4245:286:::0;:::o;6945:320::-;7059:7;154:1:5;132:24;;:10;:24;;;124:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7105:55:3::1;7131:13;7146;7105:25;:55::i;:::-;7076:26;:84;;;;7171:50;7194:26;;7171:50;;;;;;:::i;:::-;;;;;;;;7234:26;;7227:33;;6945:320:::0;;;;:::o;1034:35::-;;;;:::o;7721:963::-;7835:7;7852:40;7895:76;7931:13;7952;7895:28;:76::i;:::-;7852:119;;7977:29;8009:30;8025:13;8009:30;;;;;;;;;;;;;;;;;:12;:15;;:30;;;;:::i;:::-;7977:62;;8045:40;8088:24;:114;;8166:36;8189:12;8166:13;:22;;;;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;8088:114;;;8121:36;8143:13;8121:36;;;;;;;;;;;;;;;;;:12;:21;;:36;;;;:::i;:::-;8088:114;8045:157;;8208:38;8249:24;:175;;8355:69;8385:38;8410:12;8385:15;:24;;;;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;8355:20;:18;:20::i;:::-;:29;;:69;;;;:::i;:::-;8249:175;;;8282:64;8307:38;8332:12;8307:15;:24;;;;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;8282:20;:18;:20::i;:::-;:24;;:64;;;;:::i;:::-;8249:175;8208:216;;8431:26;8460:119;:100;8539:20;:18;:20::i;:::-;8460:67;8487:39;8508:17;:15;:17::i;:::-;8487:20;:39::i;:::-;8460:10;:26;;:67;;;;:::i;:::-;:78;;:100;;;;:::i;:::-;:117;:119::i;:::-;8431:148;;8615:20;;8593:18;:42;;:86;;8659:20;;8593:86;;;8638:18;8593:86;8586:93;;;;;;;7721:963;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;989:41:3:-;;;;:::o;2500:550::-;283:11:7;;;;;;;;;;;282:12;274:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;347:4;333:11;;:18;;;;;;;;;;;;;;;;;;2717:30:3::1;2736:10;2717:18;:30::i;:::-;2753:29;2765:16;2753:11;:29::i;:::-;2817:21;2788:26;:50;;;;2844:46;2868:21;2844:23;:46::i;:::-;2896:32;2913:14;2896:16;:32::i;:::-;2934:36;2953:16;2934:18;:36::i;:::-;2976:69;3009:29;3040:4;2976:32;:69::i;:::-;2500:550:::0;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;1552:94:6:-;1600:15;;:::i;:::-;1630:11;;;;;;;;1639:1;1630:11;;;1623:18;;1552:94;;;:::o;1230:97::-;1271:15;;:::i;:::-;1301:21;;;;;;;;1046:25;1301:21;;;1294:28;;1230:97;:::o;9849:114::-;9922:4;9951:1;:7;;;9941:1;:7;;;:17;9934:24;;9849:114;;;;:::o;5139:409:3:-;1094:13:0;:11;:13::i;:::-;5285:9:3::1;:46;;;;5330:1;5298:29;:33;5285:46;5270:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;5441:29;5410:28;:60;;;;5481:62;5513:29;5481:62;;;;;;:::i;:::-;;;;;;;;5139:409:::0;;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;3565:314:6:-;3666:15;;:::i;:::-;3691:34;3728:19;3737:9;3728:8;:19::i;:::-;3691:56;;3753:36;3792:21;3801:11;3792:8;:21::i;:::-;3753:60;;3826:48;3833:18;3853:20;3826:6;:48::i;:::-;3819:55;;;;3565:314;;;;:::o;9548:114::-;9621:4;9650:1;:7;;;9640:1;:7;;;:17;9633:24;;9548:114;;;;:::o;5391:209::-;5470:15;;:::i;:::-;5512:1;:7;;;5501:1;:7;;;:18;;5493:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5568:27;;;;;;;;5587:1;:7;;;5577:1;:7;;;:17;;;;:::i;:::-;5568:27;;;5561:34;;5391:209;;;;:::o;6256:1636::-;6335:15;;:::i;:::-;6373:1;6362;:7;;;:12;:28;;;;6389:1;6378;:7;;;:12;6362:28;6358:52;;;6399:11;;;;;;;;6408:1;6399:11;;;6392:18;;;;6358:52;1046:25;6420:1;:7;;;:22;6416:36;;6451:1;6444:8;;;;6416:36;1046:25;6462:1;:7;;;:22;6458:36;;6493:1;6486:8;;;;6458:36;6583:10;1046:25;6596:10;6604:1;6596:7;:10::i;:::-;:16;;;:30;;;;:::i;:::-;6583:43;;6632:10;6645:13;6656:1;6645:10;:13::i;:::-;:19;;;6632:32;;6670:10;1046:25;6683:10;6691:1;6683:7;:10::i;:::-;:16;;;:30;;;;:::i;:::-;6670:43;;6719:10;6732:13;6743:1;6732:10;:13::i;:::-;:19;;;6719:32;;6835:12;6855:2;6850;:7;;;;:::i;:::-;6835:22;;6873:1;6867:2;:7;6863:63;;6897:2;6891;6884:4;:9;;;;:::i;:::-;:15;6876:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6863:63;7025:18;1046:25;7046:4;:18;;;;:::i;:::-;7025:39;;7082:1;7074:4;:9;7070:91;;1046:25;7106:4;7093:10;:17;;;;:::i;:::-;:32;7085:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7070:91;7174:10;7167:17;;7191:12;7211:2;7206;:7;;;;:::i;:::-;7191:22;;7229:1;7223:2;:7;7219:63;;7253:2;7247;7240:4;:9;;;;:::i;:::-;:15;7232:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7219:63;7289:12;7309:2;7304;:7;;;;:::i;:::-;7289:22;;7327:1;7321:2;:7;7317:63;;7351:2;7345;7338:4;:9;;;;:::i;:::-;:15;7330:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7317:63;7397:14;:12;:14::i;:::-;7392:2;:19;;;;:::i;:::-;7387:24;;7427:14;:12;:14::i;:::-;7422:2;:19;;;;:::i;:::-;7417:24;;7447:12;7467:2;7462;:7;;;;:::i;:::-;7447:22;;7485:1;7479:2;:7;7475:63;;7509:2;7503;7496:4;:9;;;;:::i;:::-;:15;7488:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7475:63;7622:22;7647:14;;;;;;;;7656:4;7647:14;;;7622:39;;7676:27;7680:6;7688:14;;;;;;;;7697:4;7688:14;;;7676:3;:27::i;:::-;7667:36;;7745:27;7749:6;7757:14;;;;;;;;7766:4;7757:14;;;7745:3;:27::i;:::-;7736:36;;7814:27;7818:6;7826:14;;;;;;;;7835:4;7826:14;;;7814:3;:27::i;:::-;7805:36;;7881:6;7874:13;;;;;;;;;;;;6256:1636;;;;;:::o;5108:207::-;5182:15;;:::i;:::-;5205:9;5227:1;:7;;;5217:1;:7;;;:17;;;;:::i;:::-;5205:29;;5253:1;:7;;;5248:1;:12;;5240:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5299:11;;;;;;;;5308:1;5299:11;;;5292:18;;;5108:207;;;;:::o;2597:203::-;2649:15;;:::i;:::-;2685:13;:11;:13::i;:::-;2680:1;:18;;2672:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2770:25;;;;;;;;1046;2779:1;:15;;;;:::i;:::-;2770:25;;;2763:32;;2597:203;;;:::o;2959:109::-;3020:7;1046:25;3042:1;:7;;;:21;;;;:::i;:::-;3035:28;;2959:109;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;9230:283:6:-;9307:15;;:::i;:::-;9349:1;9338;:7;;;:12;9330:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;9378:9;1046:25;9390:1;:7;;;:21;;;;:::i;:::-;9378:33;;9444:1;:7;;;1046:25;9425:1;:15;;;;:::i;:::-;:26;9417:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;9487:21;;;;;;;;9500:1;:7;;;9496:1;:11;;;;:::i;:::-;9487:21;;;9480:28;;;9230:283;;;;:::o;4118:159::-;4177:15;;:::i;:::-;4207:47;;;;;;;;1046:25;;4217:1;:7;;;:21;;;;:::i;:::-;4216:37;;;;:::i;:::-;4207:47;;;4200:54;;4118:159;;;:::o;4564:172::-;4626:15;;:::i;:::-;4656:57;;;;;;;;1046:25;;4676:1;:7;;;:21;;;;:::i;:::-;4675:37;;;;:::i;:::-;4665:1;:7;;;:47;;;;:::i;:::-;4656:57;;;4649:64;;4564:172;;;:::o;1955:87::-;2002:7;2024:13;2017:20;;1955:87;:::o;2213:127::-;2259:7;2281:54;2274:61;;2213:127;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;7:90:11:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:77;798:7;827:5;816:16;;761:77;;;:::o;844:122::-;917:24;935:5;917:24;:::i;:::-;910:5;907:35;897:63;;956:1;953;946:12;897:63;844:122;:::o;972:139::-;1018:5;1056:6;1043:20;1034:29;;1072:33;1099:5;1072:33;:::i;:::-;972:139;;;;:::o;1117:329::-;1176:6;1225:2;1213:9;1204:7;1200:23;1196:32;1193:119;;;1231:79;;:::i;:::-;1193:119;1351:1;1376:53;1421:7;1412:6;1401:9;1397:22;1376:53;:::i;:::-;1366:63;;1322:117;1117:329;;;;:::o;1452:118::-;1539:24;1557:5;1539:24;:::i;:::-;1534:3;1527:37;1452:118;;:::o;1576:222::-;1669:4;1707:2;1696:9;1692:18;1684:26;;1720:71;1788:1;1777:9;1773:17;1764:6;1720:71;:::i;:::-;1576:222;;;;:::o;1804:553::-;1981:4;2019:3;2008:9;2004:19;1996:27;;2033:71;2101:1;2090:9;2086:17;2077:6;2033:71;:::i;:::-;2114:72;2182:2;2171:9;2167:18;2158:6;2114:72;:::i;:::-;2196;2264:2;2253:9;2249:18;2240:6;2196:72;:::i;:::-;2278;2346:2;2335:9;2331:18;2322:6;2278:72;:::i;:::-;1804:553;;;;;;;:::o;2363:126::-;2400:7;2440:42;2433:5;2429:54;2418:65;;2363:126;;;:::o;2495:60::-;2523:3;2544:5;2537:12;;2495:60;;;:::o;2561:142::-;2611:9;2644:53;2662:34;2671:24;2689:5;2671:24;:::i;:::-;2662:34;:::i;:::-;2644:53;:::i;:::-;2631:66;;2561:142;;;:::o;2709:126::-;2759:9;2792:37;2823:5;2792:37;:::i;:::-;2779:50;;2709:126;;;:::o;2841:144::-;2909:9;2942:37;2973:5;2942:37;:::i;:::-;2929:50;;2841:144;;;:::o;2991:167::-;3096:55;3145:5;3096:55;:::i;:::-;3091:3;3084:68;2991:167;;:::o;3164:258::-;3275:4;3313:2;3302:9;3298:18;3290:26;;3326:89;3412:1;3401:9;3397:17;3388:6;3326:89;:::i;:::-;3164:258;;;;:::o;3428:96::-;3465:7;3494:24;3512:5;3494:24;:::i;:::-;3483:35;;3428:96;;;:::o;3530:118::-;3617:24;3635:5;3617:24;:::i;:::-;3612:3;3605:37;3530:118;;:::o;3654:222::-;3747:4;3785:2;3774:9;3770:18;3762:26;;3798:71;3866:1;3855:9;3851:17;3842:6;3798:71;:::i;:::-;3654:222;;;;:::o;3882:122::-;3955:24;3973:5;3955:24;:::i;:::-;3948:5;3945:35;3935:63;;3994:1;3991;3984:12;3935:63;3882:122;:::o;4010:139::-;4056:5;4094:6;4081:20;4072:29;;4110:33;4137:5;4110:33;:::i;:::-;4010:139;;;;:::o;4155:329::-;4214:6;4263:2;4251:9;4242:7;4238:23;4234:32;4231:119;;;4269:79;;:::i;:::-;4231:119;4389:1;4414:53;4459:7;4450:6;4439:9;4435:22;4414:53;:::i;:::-;4404:63;;4360:117;4155:329;;;;:::o;4490:474::-;4558:6;4566;4615:2;4603:9;4594:7;4590:23;4586:32;4583:119;;;4621:79;;:::i;:::-;4583:119;4741:1;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4712:117;4868:2;4894:53;4939:7;4930:6;4919:9;4915:22;4894:53;:::i;:::-;4884:63;;4839:118;4490:474;;;;;:::o;4970:911::-;5065:6;5073;5081;5089;5097;5146:3;5134:9;5125:7;5121:23;5117:33;5114:120;;;5153:79;;:::i;:::-;5114:120;5273:1;5298:53;5343:7;5334:6;5323:9;5319:22;5298:53;:::i;:::-;5288:63;;5244:117;5400:2;5426:53;5471:7;5462:6;5451:9;5447:22;5426:53;:::i;:::-;5416:63;;5371:118;5528:2;5554:53;5599:7;5590:6;5579:9;5575:22;5554:53;:::i;:::-;5544:63;;5499:118;5656:2;5682:53;5727:7;5718:6;5707:9;5703:22;5682:53;:::i;:::-;5672:63;;5627:118;5784:3;5811:53;5856:7;5847:6;5836:9;5832:22;5811:53;:::i;:::-;5801:63;;5755:119;4970:911;;;;;;;;:::o;5887:169::-;5971:11;6005:6;6000:3;5993:19;6045:4;6040:3;6036:14;6021:29;;5887:169;;;;:::o;6062:226::-;6202:34;6198:1;6190:6;6186:14;6179:58;6271:9;6266:2;6258:6;6254:15;6247:34;6062:226;:::o;6294:366::-;6436:3;6457:67;6521:2;6516:3;6457:67;:::i;:::-;6450:74;;6533:93;6622:3;6533:93;:::i;:::-;6651:2;6646:3;6642:12;6635:19;;6294:366;;;:::o;6666:419::-;6832:4;6870:2;6859:9;6855:18;6847:26;;6919:9;6913:4;6909:20;6905:1;6894:9;6890:17;6883:47;6947:131;7073:4;6947:131;:::i;:::-;6939:139;;6666:419;;;:::o;7091:224::-;7231:34;7227:1;7219:6;7215:14;7208:58;7300:7;7295:2;7287:6;7283:15;7276:32;7091:224;:::o;7321:366::-;7463:3;7484:67;7548:2;7543:3;7484:67;:::i;:::-;7477:74;;7560:93;7649:3;7560:93;:::i;:::-;7678:2;7673:3;7669:12;7662:19;;7321:366;;;:::o;7693:419::-;7859:4;7897:2;7886:9;7882:18;7874:26;;7946:9;7940:4;7936:20;7932:1;7921:9;7917:17;7910:47;7974:131;8100:4;7974:131;:::i;:::-;7966:139;;7693:419;;;:::o;8118:148::-;8220:11;8257:3;8242:18;;8118:148;;;;:::o;8272:159::-;8412:11;8408:1;8400:6;8396:14;8389:35;8272:159;:::o;8437:400::-;8597:3;8618:84;8700:1;8695:3;8618:84;:::i;:::-;8611:91;;8711:93;8800:3;8711:93;:::i;:::-;8829:1;8824:3;8820:11;8813:18;;8437:400;;;:::o;8843:381::-;9028:3;9050:148;9194:3;9050:148;:::i;:::-;9043:155;;9215:3;9208:10;;8843:381;;;:::o;9230:77::-;9267:7;9296:5;9285:16;;9230:77;;;:::o;9313:118::-;9400:24;9418:5;9400:24;:::i;:::-;9395:3;9388:37;9313:118;;:::o;9437:222::-;9530:4;9568:2;9557:9;9553:18;9545:26;;9581:71;9649:1;9638:9;9634:17;9625:6;9581:71;:::i;:::-;9437:222;;;;:::o;9665:143::-;9722:5;9753:6;9747:13;9738:22;;9769:33;9796:5;9769:33;:::i;:::-;9665:143;;;;:::o;9814:351::-;9884:6;9933:2;9921:9;9912:7;9908:23;9904:32;9901:119;;;9939:79;;:::i;:::-;9901:119;10059:1;10084:64;10140:7;10131:6;10120:9;10116:22;10084:64;:::i;:::-;10074:74;;10030:128;9814:351;;;;:::o;10171:163::-;10311:15;10307:1;10299:6;10295:14;10288:39;10171:163;:::o;10340:402::-;10500:3;10521:85;10603:2;10598:3;10521:85;:::i;:::-;10514:92;;10615:93;10704:3;10615:93;:::i;:::-;10733:2;10728:3;10724:12;10717:19;;10340:402;;;:::o;10748:381::-;10933:3;10955:148;11099:3;10955:148;:::i;:::-;10948:155;;11120:3;11113:10;;10748:381;;;:::o;11135:143::-;11192:5;11223:6;11217:13;11208:22;;11239:33;11266:5;11239:33;:::i;:::-;11135:143;;;;:::o;11284:507::-;11363:6;11371;11420:2;11408:9;11399:7;11395:23;11391:32;11388:119;;;11426:79;;:::i;:::-;11388:119;11546:1;11571:64;11627:7;11618:6;11607:9;11603:22;11571:64;:::i;:::-;11561:74;;11517:128;11684:2;11710:64;11766:7;11757:6;11746:9;11742:22;11710:64;:::i;:::-;11700:74;;11655:129;11284:507;;;;;:::o;11797:180::-;11845:77;11842:1;11835:88;11942:4;11939:1;11932:15;11966:4;11963:1;11956:15;11983:410;12023:7;12046:20;12064:1;12046:20;:::i;:::-;12041:25;;12080:20;12098:1;12080:20;:::i;:::-;12075:25;;12135:1;12132;12128:9;12157:30;12175:11;12157:30;:::i;:::-;12146:41;;12336:1;12327:7;12323:15;12320:1;12317:22;12297:1;12290:9;12270:83;12247:139;;12366:18;;:::i;:::-;12247:139;12031:362;11983:410;;;;:::o;12399:180::-;12447:77;12444:1;12437:88;12544:4;12541:1;12534:15;12568:4;12565:1;12558:15;12585:185;12625:1;12642:20;12660:1;12642:20;:::i;:::-;12637:25;;12676:20;12694:1;12676:20;:::i;:::-;12671:25;;12715:1;12705:35;;12720:18;;:::i;:::-;12705:35;12762:1;12759;12755:9;12750:14;;12585:185;;;;:::o;12776:182::-;12916:34;12912:1;12904:6;12900:14;12893:58;12776:182;:::o;12964:366::-;13106:3;13127:67;13191:2;13186:3;13127:67;:::i;:::-;13120:74;;13203:93;13292:3;13203:93;:::i;:::-;13321:2;13316:3;13312:12;13305:19;;12964:366;;;:::o;13336:419::-;13502:4;13540:2;13529:9;13525:18;13517:26;;13589:9;13583:4;13579:20;13575:1;13564:9;13560:17;13553:47;13617:131;13743:4;13617:131;:::i;:::-;13609:139;;13336:419;;;:::o;13761:236::-;13901:34;13897:1;13889:6;13885:14;13878:58;13970:19;13965:2;13957:6;13953:15;13946:44;13761:236;:::o;14003:366::-;14145:3;14166:67;14230:2;14225:3;14166:67;:::i;:::-;14159:74;;14242:93;14331:3;14242:93;:::i;:::-;14360:2;14355:3;14351:12;14344:19;;14003:366;;;:::o;14375:419::-;14541:4;14579:2;14568:9;14564:18;14556:26;;14628:9;14622:4;14618:20;14614:1;14603:9;14599:17;14592:47;14656:131;14782:4;14656:131;:::i;:::-;14648:139;;14375:419;;;:::o;14800:166::-;14940:18;14936:1;14928:6;14924:14;14917:42;14800:166;:::o;14972:366::-;15114:3;15135:67;15199:2;15194:3;15135:67;:::i;:::-;15128:74;;15211:93;15300:3;15211:93;:::i;:::-;15329:2;15324:3;15320:12;15313:19;;14972:366;;;:::o;15344:419::-;15510:4;15548:2;15537:9;15533:18;15525:26;;15597:9;15591:4;15587:20;15583:1;15572:9;15568:17;15561:47;15625:131;15751:4;15625:131;:::i;:::-;15617:139;;15344:419;;;:::o;15769:225::-;15909:34;15905:1;15897:6;15893:14;15886:58;15978:8;15973:2;15965:6;15961:15;15954:33;15769:225;:::o;16000:366::-;16142:3;16163:67;16227:2;16222:3;16163:67;:::i;:::-;16156:74;;16239:93;16328:3;16239:93;:::i;:::-;16357:2;16352:3;16348:12;16341:19;;16000:366;;;:::o;16372:419::-;16538:4;16576:2;16565:9;16561:18;16553:26;;16625:9;16619:4;16615:20;16611:1;16600:9;16596:17;16589:47;16653:131;16779:4;16653:131;:::i;:::-;16645:139;;16372:419;;;:::o;16797:178::-;16937:30;16933:1;16925:6;16921:14;16914:54;16797:178;:::o;16981:366::-;17123:3;17144:67;17208:2;17203:3;17144:67;:::i;:::-;17137:74;;17220:93;17309:3;17220:93;:::i;:::-;17338:2;17333:3;17329:12;17322:19;;16981:366;;;:::o;17353:419::-;17519:4;17557:2;17546:9;17542:18;17534:26;;17606:9;17600:4;17596:20;17592:1;17581:9;17577:17;17570:47;17634:131;17760:4;17634:131;:::i;:::-;17626:139;;17353:419;;;:::o;17778:182::-;17918:34;17914:1;17906:6;17902:14;17895:58;17778:182;:::o;17966:366::-;18108:3;18129:67;18193:2;18188:3;18129:67;:::i;:::-;18122:74;;18205:93;18294:3;18205:93;:::i;:::-;18323:2;18318:3;18314:12;18307:19;;17966:366;;;:::o;18338:419::-;18504:4;18542:2;18531:9;18527:18;18519:26;;18591:9;18585:4;18581:20;18577:1;18566:9;18562:17;18555:47;18619:131;18745:4;18619:131;:::i;:::-;18611:139;;18338:419;;;:::o;18763:244::-;18903:34;18899:1;18891:6;18887:14;18880:58;18972:27;18967:2;18959:6;18955:15;18948:52;18763:244;:::o;19013:366::-;19155:3;19176:67;19240:2;19235:3;19176:67;:::i;:::-;19169:74;;19252:93;19341:3;19252:93;:::i;:::-;19370:2;19365:3;19361:12;19354:19;;19013:366;;;:::o;19385:419::-;19551:4;19589:2;19578:9;19574:18;19566:26;;19638:9;19632:4;19628:20;19624:1;19613:9;19609:17;19602:47;19666:131;19792:4;19666:131;:::i;:::-;19658:139;;19385:419;;;:::o;19810:181::-;19950:33;19946:1;19938:6;19934:14;19927:57;19810:181;:::o;19997:366::-;20139:3;20160:67;20224:2;20219:3;20160:67;:::i;:::-;20153:74;;20236:93;20325:3;20236:93;:::i;:::-;20354:2;20349:3;20345:12;20338:19;;19997:366;;;:::o;20369:419::-;20535:4;20573:2;20562:9;20558:18;20550:26;;20622:9;20616:4;20612:20;20608:1;20597:9;20593:17;20586:47;20650:131;20776:4;20650:131;:::i;:::-;20642:139;;20369:419;;;:::o;20794:194::-;20834:4;20854:20;20872:1;20854:20;:::i;:::-;20849:25;;20888:20;20906:1;20888:20;:::i;:::-;20883:25;;20932:1;20929;20925:9;20917:17;;20956:1;20950:4;20947:11;20944:37;;;20961:18;;:::i;:::-;20944:37;20794:194;;;;:::o;20994:172::-;21134:24;21130:1;21122:6;21118:14;21111:48;20994:172;:::o;21172:366::-;21314:3;21335:67;21399:2;21394:3;21335:67;:::i;:::-;21328:74;;21411:93;21500:3;21411:93;:::i;:::-;21529:2;21524:3;21520:12;21513:19;;21172:366;;;:::o;21544:419::-;21710:4;21748:2;21737:9;21733:18;21725:26;;21797:9;21791:4;21787:20;21783:1;21772:9;21768:17;21761:47;21825:131;21951:4;21825:131;:::i;:::-;21817:139;;21544:419;;;:::o;21969:181::-;22109:33;22105:1;22097:6;22093:14;22086:57;21969:181;:::o;22156:366::-;22298:3;22319:67;22383:2;22378:3;22319:67;:::i;:::-;22312:74;;22395:93;22484:3;22395:93;:::i;:::-;22513:2;22508:3;22504:12;22497:19;;22156:366;;;:::o;22528:419::-;22694:4;22732:2;22721:9;22717:18;22709:26;;22781:9;22775:4;22771:20;22767:1;22756:9;22752:17;22745:47;22809:131;22935:4;22809:131;:::i;:::-;22801:139;;22528:419;;;:::o;22953:172::-;23093:24;23089:1;23081:6;23077:14;23070:48;22953:172;:::o;23131:366::-;23273:3;23294:67;23358:2;23353:3;23294:67;:::i;:::-;23287:74;;23370:93;23459:3;23370:93;:::i;:::-;23488:2;23483:3;23479:12;23472:19;;23131:366;;;:::o;23503:419::-;23669:4;23707:2;23696:9;23692:18;23684:26;;23756:9;23750:4;23746:20;23742:1;23731:9;23727:17;23720:47;23784:131;23910:4;23784:131;:::i;:::-;23776:139;;23503:419;;;:::o;23928:172::-;24068:24;24064:1;24056:6;24052:14;24045:48;23928:172;:::o;24106:366::-;24248:3;24269:67;24333:2;24328:3;24269:67;:::i;:::-;24262:74;;24345:93;24434:3;24345:93;:::i;:::-;24463:2;24458:3;24454:12;24447:19;;24106:366;;;:::o;24478:419::-;24644:4;24682:2;24671:9;24667:18;24659:26;;24731:9;24725:4;24721:20;24717:1;24706:9;24702:17;24695:47;24759:131;24885:4;24759:131;:::i;:::-;24751:139;;24478:419;;;:::o;24903:172::-;25043:24;25039:1;25031:6;25027:14;25020:48;24903:172;:::o;25081:366::-;25223:3;25244:67;25308:2;25303:3;25244:67;:::i;:::-;25237:74;;25320:93;25409:3;25320:93;:::i;:::-;25438:2;25433:3;25429:12;25422:19;;25081:366;;;:::o;25453:419::-;25619:4;25657:2;25646:9;25642:18;25634:26;;25706:9;25700:4;25696:20;25692:1;25681:9;25677:17;25670:47;25734:131;25860:4;25734:131;:::i;:::-;25726:139;;25453:419;;;:::o;25878:191::-;25918:3;25937:20;25955:1;25937:20;:::i;:::-;25932:25;;25971:20;25989:1;25971:20;:::i;:::-;25966:25;;26014:1;26011;26007:9;26000:16;;26035:3;26032:1;26029:10;26026:36;;;26042:18;;:::i;:::-;26026:36;25878:191;;;;:::o;26075:171::-;26215:23;26211:1;26203:6;26199:14;26192:47;26075:171;:::o;26252:366::-;26394:3;26415:67;26479:2;26474:3;26415:67;:::i;:::-;26408:74;;26491:93;26580:3;26491:93;:::i;:::-;26609:2;26604:3;26600:12;26593:19;;26252:366;;;:::o;26624:419::-;26790:4;26828:2;26817:9;26813:18;26805:26;;26877:9;26871:4;26867:20;26863:1;26852:9;26848:17;26841:47;26905:131;27031:4;26905:131;:::i;:::-;26897:139;;26624:419;;;:::o;27049:241::-;27189:34;27185:1;27177:6;27173:14;27166:58;27258:24;27253:2;27245:6;27241:15;27234:49;27049:241;:::o;27296:366::-;27438:3;27459:67;27523:2;27518:3;27459:67;:::i;:::-;27452:74;;27535:93;27624:3;27535:93;:::i;:::-;27653:2;27648:3;27644:12;27637:19;;27296:366;;;:::o;27668:419::-;27834:4;27872:2;27861:9;27857:18;27849:26;;27921:9;27915:4;27911:20;27907:1;27896:9;27892:17;27885:47;27949:131;28075:4;27949:131;:::i;:::-;27941:139;;27668:419;;;:::o;28093:167::-;28233:19;28229:1;28221:6;28217:14;28210:43;28093:167;:::o;28266:366::-;28408:3;28429:67;28493:2;28488:3;28429:67;:::i;:::-;28422:74;;28505:93;28594:3;28505:93;:::i;:::-;28623:2;28618:3;28614:12;28607:19;;28266:366;;;:::o;28638:419::-;28804:4;28842:2;28831:9;28827:18;28819:26;;28891:9;28885:4;28881:20;28877:1;28866:9;28862:17;28855:47;28919:131;29045:4;28919:131;:::i;:::-;28911:139;;28638:419;;;:::o;29063:168::-;29203:20;29199:1;29191:6;29187:14;29180:44;29063:168;:::o;29237:366::-;29379:3;29400:67;29464:2;29459:3;29400:67;:::i;:::-;29393:74;;29476:93;29565:3;29476:93;:::i;:::-;29594:2;29589:3;29585:12;29578:19;;29237:366;;;:::o;29609:419::-;29775:4;29813:2;29802:9;29798:18;29790:26;;29862:9;29856:4;29852:20;29848:1;29837:9;29833:17;29826:47;29890:131;30016:4;29890:131;:::i;:::-;29882:139;;29609:419;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.7 <0.8.20;\n\nimport \"@openzeppelin/contracts8/access/Ownable.sol\";\n\nimport \"../../contracts/common/CalledByVm.sol\";\nimport \"../../contracts/common/Initializable.sol\";\nimport \"../../contracts/common/interfaces/ICeloVersionedContract.sol\";\nimport \"../../contracts/common/FixidityLib.sol\";\nimport \"./UsingRegistry.sol\";\nimport \"../../contracts/stability/interfaces/ISortedOracles.sol\";\n\n/**\n * @title Stores and provides gas price minimum for various currencies.\n */\ncontract GasPriceMinimum is\n  ICeloVersionedContract,\n  Ownable,\n  Initializable,\n  UsingRegistry,\n  CalledByVm\n{\n  using FixidityLib for FixidityLib.Fraction;\n\n  event TargetDensitySet(uint256 targetDensity);\n  event GasPriceMinimumFloorSet(uint256 gasPriceMinimumFloor);\n  event AdjustmentSpeedSet(uint256 adjustmentSpeed);\n  event GasPriceMinimumUpdated(uint256 gasPriceMinimum);\n  event BaseFeeOpCodeActivationBlockSet(uint256 baseFeeOpCodeActivationBlock);\n\n  uint256 public deprecated_gasPriceMinimum;\n  uint256 public gasPriceMinimumFloor;\n\n  // Block congestion level targeted by the gas price minimum calculation.\n  FixidityLib.Fraction public targetDensity;\n\n  // Speed of gas price minimum adjustment due to congestion.\n  FixidityLib.Fraction public adjustmentSpeed;\n\n  uint256 public baseFeeOpCodeActivationBlock;\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 2, 0, 0);\n  }\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param _registryAddress The address of the registry core smart contract.\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n   */\n  function initialize(\n    address _registryAddress,\n    uint256 _gasPriceMinimumFloor,\n    uint256 _targetDensity,\n    uint256 _adjustmentSpeed,\n    uint256 _baseFeeOpCodeActivationBlock\n  ) external initializer {\n    _transferOwnership(msg.sender);\n    setRegistry(_registryAddress);\n    deprecated_gasPriceMinimum = _gasPriceMinimumFloor;\n    setGasPriceMinimumFloor(_gasPriceMinimumFloor);\n    setTargetDensity(_targetDensity);\n    setAdjustmentSpeed(_adjustmentSpeed);\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, true);\n  }\n\n  /**\n   * @notice Set a multiplier that impacts how quickly gas price minimum is adjusted.\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n   * @dev Value is expected to be < 1.\n   */\n  function setAdjustmentSpeed(uint256 _adjustmentSpeed) public onlyOwner {\n    adjustmentSpeed = FixidityLib.wrap(_adjustmentSpeed);\n    require(adjustmentSpeed.lt(FixidityLib.fixed1()), \"adjustment speed must be smaller than 1\");\n    emit AdjustmentSpeedSet(_adjustmentSpeed);\n  }\n\n  /**\n   * @notice Set the block density targeted by the gas price minimum algorithm.\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n   * @dev Value is expected to be < 1.\n   */\n  function setTargetDensity(uint256 _targetDensity) public onlyOwner {\n    targetDensity = FixidityLib.wrap(_targetDensity);\n    require(targetDensity.lt(FixidityLib.fixed1()), \"target density must be smaller than 1\");\n    emit TargetDensitySet(_targetDensity);\n  }\n\n  /**\n   * @notice Set the minimum gas price treshold.\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n   * @dev Value is expected to be > 0.\n   */\n  function setGasPriceMinimumFloor(uint256 _gasPriceMinimumFloor) public onlyOwner {\n    require(_gasPriceMinimumFloor > 0, \"gas price minimum floor must be greater than zero\");\n    gasPriceMinimumFloor = _gasPriceMinimumFloor;\n    emit GasPriceMinimumFloorSet(_gasPriceMinimumFloor);\n  }\n\n  /**\n   * @notice Set the activation block of the baseFee opCode.\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n   * @dev Value is expected to be > 0.\n   */\n  function setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock)\n    external\n    onlyOwner\n  {\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, false);\n  }\n\n  /**\n   * @notice Set the activation block of the baseFee opCode.\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n   * @dev Value is expected to be > 0.\n   */\n  function _setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock, bool allowZero)\n    private\n    onlyOwner\n  {\n    require(\n      allowZero || _baseFeeOpCodeActivationBlock > 0,\n      \"baseFee opCode activation block must be greater than zero\"\n    );\n    baseFeeOpCodeActivationBlock = _baseFeeOpCodeActivationBlock;\n    emit BaseFeeOpCodeActivationBlockSet(_baseFeeOpCodeActivationBlock);\n  }\n\n  function gasPriceMinimum() public view returns (uint256) {\n    if (baseFeeOpCodeActivationBlock > 0 && block.number >= baseFeeOpCodeActivationBlock) {\n      return block.basefee;\n    } else {\n      return deprecated_gasPriceMinimum;\n    }\n  }\n\n  /**\n   * @notice Retrieve the current gas price minimum for a currency.\n   * @param tokenAddress The currency the gas price should be in (defaults to gold).\n   * @return current gas price minimum in the requested currency\n   */\n  function getGasPriceMinimum(address tokenAddress) external view returns (uint256) {\n    if (\n      tokenAddress == address(0) ||\n      tokenAddress == registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID)\n    ) {\n      return gasPriceMinimum();\n    } else {\n      ISortedOracles sortedOracles = ISortedOracles(\n        registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID)\n      );\n      uint256 rateNumerator;\n      uint256 rateDenominator;\n      (rateNumerator, rateDenominator) = sortedOracles.medianRate(tokenAddress);\n      return ((gasPriceMinimum() * rateNumerator) / rateDenominator);\n    }\n  }\n\n  /**\n   * @notice Adjust the gas price minimum based on governable parameters\n   * and block congestion.\n   * @param blockGasTotal The amount of gas in the most recent block.\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\n   * @return result of the calculation (new gas price minimum)\n   */\n  function updateGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\n    external\n    onlyVm\n    returns (uint256)\n  {\n    deprecated_gasPriceMinimum = getUpdatedGasPriceMinimum(blockGasTotal, blockGasLimit);\n    emit GasPriceMinimumUpdated(deprecated_gasPriceMinimum);\n    return deprecated_gasPriceMinimum;\n  }\n\n  /**\n   * @notice Calculates the gas price minimum based on governable parameters\n   * and block congestion.\n   * @param blockGasTotal The amount of gas in the most recent block.\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\n   * @return result of the calculation (new gas price minimum)\n   * @dev Calculate using the following formula:\n   * oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.\n   */\n  function getUpdatedGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\n    public\n    view\n    returns (uint256)\n  {\n    FixidityLib.Fraction memory blockDensity = FixidityLib.newFixedFraction(\n      blockGasTotal,\n      blockGasLimit\n    );\n    bool densityGreaterThanTarget = blockDensity.gt(targetDensity);\n    FixidityLib.Fraction memory densityDelta = densityGreaterThanTarget\n      ? blockDensity.subtract(targetDensity)\n      : targetDensity.subtract(blockDensity);\n    FixidityLib.Fraction memory adjustment = densityGreaterThanTarget\n      ? FixidityLib.fixed1().add(adjustmentSpeed.multiply(densityDelta))\n      : FixidityLib.fixed1().subtract(adjustmentSpeed.multiply(densityDelta));\n\n    uint256 newGasPriceMinimum = adjustment\n      .multiply(FixidityLib.newFixed(gasPriceMinimum()))\n      .add(FixidityLib.fixed1())\n      .fromFixed();\n\n    return newGasPriceMinimum >= gasPriceMinimumFloor ? newGasPriceMinimum : gasPriceMinimumFloor;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/celo/celo-monorepo/packages/protocol/contracts-0.8/common/GasPriceMinimum.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/common/GasPriceMinimum.sol",
    "exportedSymbols": {
      "CalledByVm": [
        923
      ],
      "Context": [
        212
      ],
      "FixidityLib": [
        1588
      ],
      "GasPriceMinimum": [
        677
      ],
      "ICeloVersionedContract": [
        1636
      ],
      "IERC20": [
        190
      ],
      "IRegistry": [
        1684
      ],
      "ISortedOracles": [
        1760
      ],
      "Initializable": [
        1621
      ],
      "Ownable": [
        112
      ],
      "UsingRegistry": [
        905
      ]
    },
    "id": 678,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 214,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:32:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts8/access/Ownable.sol",
        "file": "@openzeppelin/contracts8/access/Ownable.sol",
        "id": 215,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 113,
        "src": "73:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/CalledByVm.sol",
        "file": "../../contracts/common/CalledByVm.sol",
        "id": 216,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 924,
        "src": "128:47:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../../contracts/common/Initializable.sol",
        "id": 217,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 1622,
        "src": "176:50:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../../contracts/common/interfaces/ICeloVersionedContract.sol",
        "id": 218,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 1637,
        "src": "227:70:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FixidityLib.sol",
        "file": "../../contracts/common/FixidityLib.sol",
        "id": 219,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 1589,
        "src": "298:48:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/UsingRegistry.sol",
        "file": "./UsingRegistry.sol",
        "id": 220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 906,
        "src": "347:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
        "file": "../../contracts/stability/interfaces/ISortedOracles.sol",
        "id": 221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 678,
        "sourceUnit": 1761,
        "src": "377:65:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 223,
              "name": "ICeloVersionedContract",
              "nameLocations": [
                "554:22:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1636,
              "src": "554:22:3"
            },
            "id": 224,
            "nodeType": "InheritanceSpecifier",
            "src": "554:22:3"
          },
          {
            "baseName": {
              "id": 225,
              "name": "Ownable",
              "nameLocations": [
                "580:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "580:7:3"
            },
            "id": 226,
            "nodeType": "InheritanceSpecifier",
            "src": "580:7:3"
          },
          {
            "baseName": {
              "id": 227,
              "name": "Initializable",
              "nameLocations": [
                "591:13:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1621,
              "src": "591:13:3"
            },
            "id": 228,
            "nodeType": "InheritanceSpecifier",
            "src": "591:13:3"
          },
          {
            "baseName": {
              "id": 229,
              "name": "UsingRegistry",
              "nameLocations": [
                "608:13:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 905,
              "src": "608:13:3"
            },
            "id": 230,
            "nodeType": "InheritanceSpecifier",
            "src": "608:13:3"
          },
          {
            "baseName": {
              "id": 231,
              "name": "CalledByVm",
              "nameLocations": [
                "625:10:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 923,
              "src": "625:10:3"
            },
            "id": 232,
            "nodeType": "InheritanceSpecifier",
            "src": "625:10:3"
          }
        ],
        "canonicalName": "GasPriceMinimum",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 222,
          "nodeType": "StructuredDocumentation",
          "src": "444:79:3",
          "text": " @title Stores and provides gas price minimum for various currencies."
        },
        "fullyImplemented": true,
        "id": 677,
        "linearizedBaseContracts": [
          677,
          923,
          905,
          1621,
          112,
          212,
          1636
        ],
        "name": "GasPriceMinimum",
        "nameLocation": "533:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 236,
            "libraryName": {
              "id": 233,
              "name": "FixidityLib",
              "nameLocations": [
                "646:11:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1588,
              "src": "646:11:3"
            },
            "nodeType": "UsingForDirective",
            "src": "640:43:3",
            "typeName": {
              "id": 235,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 234,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "662:11:3",
                  "674:8:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 929,
                "src": "662:20:3"
              },
              "referencedDeclaration": 929,
              "src": "662:20:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$929_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "2a109bad06121312708ed2a3e9b3556ea85ef8eadd4d10d8181f50d114eb4fab",
            "id": 240,
            "name": "TargetDensitySet",
            "nameLocation": "693:16:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetDensity",
                  "nameLocation": "718:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "710:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "709:23:3"
            },
            "src": "687:46:3"
          },
          {
            "anonymous": false,
            "eventSelector": "5548a13ccc1d9e4e2860461edda5ad49ba8a4fda485f67d954f9d7da8d2aff27",
            "id": 244,
            "name": "GasPriceMinimumFloorSet",
            "nameLocation": "742:23:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasPriceMinimumFloor",
                  "nameLocation": "774:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "766:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "765:30:3"
            },
            "src": "736:60:3"
          },
          {
            "anonymous": false,
            "eventSelector": "d2e71cd7012df1df07d4908ff75ae4b2bfbb6c49d39144404661f1fd47253283",
            "id": 248,
            "name": "AdjustmentSpeedSet",
            "nameLocation": "805:18:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adjustmentSpeed",
                  "nameLocation": "832:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "824:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "824:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "823:25:3"
            },
            "src": "799:50:3"
          },
          {
            "anonymous": false,
            "eventSelector": "6e53b2f8b69496c2a175588ad1326dbabe2f66df4d82f817aeca52e3474807fb",
            "id": 252,
            "name": "GasPriceMinimumUpdated",
            "nameLocation": "858:22:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasPriceMinimum",
                  "nameLocation": "889:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "881:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:25:3"
            },
            "src": "852:54:3"
          },
          {
            "anonymous": false,
            "eventSelector": "c74fe30765574b78669fcec5cea6b0dcaacd907890a49fc756a40235d01b09fc",
            "id": 256,
            "name": "BaseFeeOpCodeActivationBlockSet",
            "nameLocation": "915:31:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseFeeOpCodeActivationBlock",
                  "nameLocation": "955:28:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "947:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "946:38:3"
            },
            "src": "909:76:3"
          },
          {
            "constant": false,
            "functionSelector": "f8e2b062",
            "id": 258,
            "mutability": "mutable",
            "name": "deprecated_gasPriceMinimum",
            "nameLocation": "1004:26:3",
            "nodeType": "VariableDeclaration",
            "scope": 677,
            "src": "989:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 257,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "989:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ceff0bd6",
            "id": 260,
            "mutability": "mutable",
            "name": "gasPriceMinimumFloor",
            "nameLocation": "1049:20:3",
            "nodeType": "VariableDeclaration",
            "scope": 677,
            "src": "1034:35:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 259,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1034:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a3d5fe2",
            "id": 263,
            "mutability": "mutable",
            "name": "targetDensity",
            "nameLocation": "1177:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 677,
            "src": "1149:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$929_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "id": 262,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 261,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "1149:11:3",
                  "1161:8:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 929,
                "src": "1149:20:3"
              },
              "referencedDeclaration": 929,
              "src": "1149:20:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$929_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a68f548e",
            "id": 266,
            "mutability": "mutable",
            "name": "adjustmentSpeed",
            "nameLocation": "1285:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 677,
            "src": "1257:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$929_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "id": 265,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 264,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "1257:11:3",
                  "1269:8:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 929,
                "src": "1257:20:3"
              },
              "referencedDeclaration": 929,
              "src": "1257:20:3",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$929_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8efd92ca",
            "id": 268,
            "mutability": "mutable",
            "name": "baseFeeOpCodeActivationBlock",
            "nameLocation": "1320:28:3",
            "nodeType": "VariableDeclaration",
            "scope": 677,
            "src": "1305:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 267,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1305:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "1548:2:3",
              "statements": []
            },
            "documentation": {
              "id": 269,
              "nodeType": "StructuredDocumentation",
              "src": "1353:142:3",
              "text": " @notice Sets initialized == true on implementation contracts\n @param test Set to true to skip implementation initialization"
            },
            "id": 278,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 274,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 271,
                    "src": "1542:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 275,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 273,
                  "name": "Initializable",
                  "nameLocations": [
                    "1528:13:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1621,
                  "src": "1528:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1528:19:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "1515:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1510:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1509:11:3"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:0:3"
            },
            "scope": 677,
            "src": "1498:52:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1635
            ],
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "1914:30:3",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1928:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1931:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "30",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1934:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1937:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 294,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1927:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_2_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 2,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 289,
                  "id": 295,
                  "nodeType": "Return",
                  "src": "1920:19:3"
                }
              ]
            },
            "documentation": {
              "id": 279,
              "nodeType": "StructuredDocumentation",
              "src": "1554:270:3",
              "text": " @notice Returns the storage, major, minor, and patch version of the contract.\n @return Storage version of the contract.\n @return Major version of the contract.\n @return Minor version of the contract.\n @return Patch version of the contract."
            },
            "functionSelector": "54255be0",
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nameLocation": "1836:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1852:2:3"
            },
            "returnParameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "1878:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1878:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "1887:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "1896:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "1905:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1877:36:3"
            },
            "scope": 677,
            "src": "1827:117:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "2711:339:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2736:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2740:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2736:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 313,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2717:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2717:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "2717:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 319,
                        "name": "_registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "2765:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 318,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "2753:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2753:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:29:3"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 322,
                      "name": "deprecated_gasPriceMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "2788:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 323,
                      "name": "_gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2817:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2788:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:50:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 327,
                        "name": "_gasPriceMinimumFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "2868:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 326,
                      "name": "setGasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "2844:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:46:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "_targetDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "2913:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "setTargetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "2896:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2896:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 335,
                        "name": "_adjustmentSpeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "2953:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 334,
                      "name": "setAdjustmentSpeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "2934:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2934:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2934:36:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 339,
                        "name": "_baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "3009:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3040:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 338,
                      "name": "_setBaseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "2976:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2976:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:69:3"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "1948:549:3",
              "text": " @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n @param _registryAddress The address of the registry core smart contract.\n @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated"
            },
            "functionSelector": "f92ad219",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 310,
                  "name": "initializer",
                  "nameLocations": [
                    "2699:11:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1620,
                  "src": "2699:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2699:11:3"
              }
            ],
            "name": "initialize",
            "nameLocation": "2509:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_registryAddress",
                  "nameLocation": "2533:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "2525:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_gasPriceMinimumFloor",
                  "nameLocation": "2563:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "2555:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "_targetDensity",
                  "nameLocation": "2598:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "2590:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "_adjustmentSpeed",
                  "nameLocation": "2626:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "2618:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "_baseFeeOpCodeActivationBlock",
                  "nameLocation": "2656:29:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "2648:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2519:170:3"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2711:0:3"
            },
            "scope": 677,
            "src": "2500:550:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 373,
              "nodeType": "Block",
              "src": "3358:208:3",
              "statements": [
                {
                  "expression": {
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 352,
                      "name": "adjustmentSpeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "3364:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 355,
                          "name": "_adjustmentSpeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "3399:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 353,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1588,
                          "src": "3382:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3394:4:3",
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 967,
                        "src": "3382:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3382:34:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "3364:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$929_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "3364:52:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 362,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "3449:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3461:6:3",
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 953,
                              "src": "3449:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3449:20:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "id": 360,
                            "name": "adjustmentSpeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3430:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$929_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3446:2:3",
                          "memberName": "lt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1533,
                          "src": "3430:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3430:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61646a7573746d656e74207370656564206d75737420626520736d616c6c6572207468616e2031",
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3472:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
                          "typeString": "literal_string \"adjustment speed must be smaller than 1\""
                        },
                        "value": "adjustment speed must be smaller than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
                          "typeString": "literal_string \"adjustment speed must be smaller than 1\""
                        }
                      ],
                      "id": 359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:92:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:92:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 370,
                        "name": "_adjustmentSpeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "3544:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 369,
                      "name": "AdjustmentSpeedSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "3525:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3525:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "EmitStatement",
                  "src": "3520:41:3"
                }
              ]
            },
            "documentation": {
              "id": 345,
              "nodeType": "StructuredDocumentation",
              "src": "3054:230:3",
              "text": " @notice Set a multiplier that impacts how quickly gas price minimum is adjusted.\n @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n @dev Value is expected to be < 1."
            },
            "functionSelector": "30f726b9",
            "id": 374,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 349,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3348:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3348:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3348:9:3"
              }
            ],
            "name": "setAdjustmentSpeed",
            "nameLocation": "3296:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "_adjustmentSpeed",
                  "nameLocation": "3323:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 374,
                  "src": "3315:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:26:3"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3358:0:3"
            },
            "scope": 677,
            "src": "3287:279:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "3864:196:3",
              "statements": [
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 382,
                      "name": "targetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "3870:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 385,
                          "name": "_targetDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "3903:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 383,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1588,
                          "src": "3886:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3898:4:3",
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 967,
                        "src": "3886:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3886:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "3870:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$929_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "3870:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 392,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "3949:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3961:6:3",
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 953,
                              "src": "3949:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3949:20:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "id": 390,
                            "name": "targetDensity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "3932:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$929_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3946:2:3",
                          "memberName": "lt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1533,
                          "src": "3932:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3932:38:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7461726765742064656e73697479206d75737420626520736d616c6c6572207468616e2031",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3972:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
                          "typeString": "literal_string \"target density must be smaller than 1\""
                        },
                        "value": "target density must be smaller than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
                          "typeString": "literal_string \"target density must be smaller than 1\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3924:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3924:88:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:88:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 400,
                        "name": "_targetDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 377,
                        "src": "4040:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 399,
                      "name": "TargetDensitySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "4023:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4023:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "EmitStatement",
                  "src": "4018:37:3"
                }
              ]
            },
            "documentation": {
              "id": 375,
              "nodeType": "StructuredDocumentation",
              "src": "3570:224:3",
              "text": " @notice Set the block density targeted by the gas price minimum algorithm.\n @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n @dev Value is expected to be < 1."
            },
            "functionSelector": "93ca6fc4",
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 380,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 379,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3854:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3854:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3854:9:3"
              }
            ],
            "name": "setTargetDensity",
            "nameLocation": "3806:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "_targetDensity",
                  "nameLocation": "3831:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "3823:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3822:24:3"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3864:0:3"
            },
            "scope": 677,
            "src": "3797:263:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 427,
              "nodeType": "Block",
              "src": "4326:205:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 413,
                          "name": "_gasPriceMinimumFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "4340:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4364:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4340:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676173207072696365206d696e696d756d20666c6f6f72206d7573742062652067726561746572207468616e207a65726f",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4367:51:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
                          "typeString": "literal_string \"gas price minimum floor must be greater than zero\""
                        },
                        "value": "gas price minimum floor must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
                          "typeString": "literal_string \"gas price minimum floor must be greater than zero\""
                        }
                      ],
                      "id": 412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4332:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4332:87:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4332:87:3"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 419,
                      "name": "gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "4425:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 420,
                      "name": "_gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "4448:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4425:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:44:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 424,
                        "name": "_gasPriceMinimumFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "4504:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 423,
                      "name": "GasPriceMinimumFloorSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 244,
                      "src": "4480:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4480:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "EmitStatement",
                  "src": "4475:51:3"
                }
              ]
            },
            "documentation": {
              "id": 405,
              "nodeType": "StructuredDocumentation",
              "src": "4064:178:3",
              "text": " @notice Set the minimum gas price treshold.\n @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n @dev Value is expected to be > 0."
            },
            "functionSelector": "b830f4a4",
            "id": 428,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 409,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4316:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4316:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4316:9:3"
              }
            ],
            "name": "setGasPriceMinimumFloor",
            "nameLocation": "4254:23:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "_gasPriceMinimumFloor",
                  "nameLocation": "4286:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 428,
                  "src": "4278:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4277:31:3"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:0:3"
            },
            "scope": 677,
            "src": "4245:286:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "4849:81:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 437,
                        "name": "_baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "4888:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4919:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 436,
                      "name": "_setBaseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "4855:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4855:70:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "4855:70:3"
                }
              ]
            },
            "documentation": {
              "id": 429,
              "nodeType": "StructuredDocumentation",
              "src": "4535:202:3",
              "text": " @notice Set the activation block of the baseFee opCode.\n @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n @dev Value is expected to be > 0."
            },
            "functionSelector": "4b930e5a",
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 433,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4837:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4837:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4837:9:3"
              }
            ],
            "name": "setBaseFeeOpCodeActivationBlock",
            "nameLocation": "4749:31:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_baseFeeOpCodeActivationBlock",
                  "nameLocation": "4789:29:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "4781:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4781:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4780:39:3"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4849:0:3"
            },
            "scope": 677,
            "src": "4740:190:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 469,
              "nodeType": "Block",
              "src": "5264:284:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 453,
                          "name": "allowZero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "5285:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 454,
                            "name": "_baseFeeOpCodeActivationBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "5298:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5330:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5298:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5285:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62617365466565206f70436f64652061637469766174696f6e20626c6f636b206d7573742062652067726561746572207468616e207a65726f",
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5339:59:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
                          "typeString": "literal_string \"baseFee opCode activation block must be greater than zero\""
                        },
                        "value": "baseFee opCode activation block must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
                          "typeString": "literal_string \"baseFee opCode activation block must be greater than zero\""
                        }
                      ],
                      "id": 452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5270:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:134:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "5270:134:3"
                },
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 461,
                      "name": "baseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "5410:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 462,
                      "name": "_baseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "5441:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5410:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "5410:60:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 466,
                        "name": "_baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "5513:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 465,
                      "name": "BaseFeeOpCodeActivationBlockSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "5481:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5481:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "EmitStatement",
                  "src": "5476:67:3"
                }
              ]
            },
            "documentation": {
              "id": 443,
              "nodeType": "StructuredDocumentation",
              "src": "4934:202:3",
              "text": " @notice Set the activation block of the baseFee opCode.\n @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n @dev Value is expected to be > 0."
            },
            "id": 470,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 450,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 449,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5252:9:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5252:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "5252:9:3"
              }
            ],
            "name": "_setBaseFeeOpCodeActivationBlock",
            "nameLocation": "5148:32:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "_baseFeeOpCodeActivationBlock",
                  "nameLocation": "5189:29:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "5181:37:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5181:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "allowZero",
                  "nameLocation": "5225:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "5220:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5220:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5180:55:3"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5264:0:3"
            },
            "scope": 677,
            "src": "5139:409:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "5609:185:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 475,
                        "name": "baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "5619:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5650:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5619:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 478,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5655:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5661:6:3",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "5655:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 480,
                        "name": "baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "5671:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5655:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5619:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 489,
                    "nodeType": "Block",
                    "src": "5742:48:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 487,
                          "name": "deprecated_gasPriceMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "5757:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 474,
                        "id": 488,
                        "nodeType": "Return",
                        "src": "5750:33:3"
                      }
                    ]
                  },
                  "id": 490,
                  "nodeType": "IfStatement",
                  "src": "5615:175:3",
                  "trueBody": {
                    "id": 486,
                    "nodeType": "Block",
                    "src": "5701:35:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 483,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5716:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5722:7:3",
                          "memberName": "basefee",
                          "nodeType": "MemberAccess",
                          "src": "5716:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 474,
                        "id": 485,
                        "nodeType": "Return",
                        "src": "5709:20:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "36945c2d",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "gasPriceMinimum",
            "nameLocation": "5561:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5576:2:3"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "5600:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5600:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5599:9:3"
            },
            "scope": 677,
            "src": "5552:242:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 553,
              "nodeType": "Block",
              "src": "6110:520:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 500,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "6127:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6151:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6143:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6143:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6143:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6127:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 506,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "6163:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 509,
                            "name": "GOLD_TOKEN_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "6207:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 507,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "6179:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$1684",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6188:18:3",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1652,
                          "src": "6179:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6179:51:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6163:67:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6127:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 551,
                    "nodeType": "Block",
                    "src": "6282:344:3",
                    "statements": [
                      {
                        "assignments": [
                          519
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 519,
                            "mutability": "mutable",
                            "name": "sortedOracles",
                            "nameLocation": "6305:13:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 551,
                            "src": "6290:28:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISortedOracles_$1760",
                              "typeString": "contract ISortedOracles"
                            },
                            "typeName": {
                              "id": 518,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 517,
                                "name": "ISortedOracles",
                                "nameLocations": [
                                  "6290:14:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1760,
                                "src": "6290:14:3"
                              },
                              "referencedDeclaration": 1760,
                              "src": "6290:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISortedOracles_$1760",
                                "typeString": "contract ISortedOracles"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 526,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 523,
                                  "name": "SORTED_ORACLES_REGISTRY_ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 808,
                                  "src": "6373:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 521,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 827,
                                  "src": "6345:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRegistry_$1684",
                                    "typeString": "contract IRegistry"
                                  }
                                },
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6354:18:3",
                                "memberName": "getAddressForOrDie",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1652,
                                "src": "6345:27:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view external returns (address)"
                                }
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6345:55:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 520,
                            "name": "ISortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "6321:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISortedOracles_$1760_$",
                              "typeString": "type(contract ISortedOracles)"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6321:87:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISortedOracles_$1760",
                            "typeString": "contract ISortedOracles"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6290:118:3"
                      },
                      {
                        "assignments": [
                          528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 528,
                            "mutability": "mutable",
                            "name": "rateNumerator",
                            "nameLocation": "6424:13:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 551,
                            "src": "6416:21:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 527,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6416:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 529,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6416:21:3"
                      },
                      {
                        "assignments": [
                          531
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 531,
                            "mutability": "mutable",
                            "name": "rateDenominator",
                            "nameLocation": "6453:15:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 551,
                            "src": "6445:23:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 530,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6445:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 532,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6445:23:3"
                      },
                      {
                        "expression": {
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 533,
                                "name": "rateNumerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 528,
                                "src": "6477:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 534,
                                "name": "rateDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 531,
                                "src": "6492:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 535,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6476:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 538,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 495,
                                "src": "6536:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 536,
                                "name": "sortedOracles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 519,
                                "src": "6511:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISortedOracles_$1760",
                                  "typeString": "contract ISortedOracles"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6525:10:3",
                              "memberName": "medianRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1745,
                              "src": "6511:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256,uint256)"
                              }
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6511:38:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6476:73:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 541,
                        "nodeType": "ExpressionStatement",
                        "src": "6476:73:3"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 542,
                                        "name": "gasPriceMinimum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 492,
                                        "src": "6566:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 543,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6566:17:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 544,
                                      "name": "rateNumerator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 528,
                                      "src": "6586:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6566:33:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 546,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6565:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 547,
                                "name": "rateDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 531,
                                "src": "6603:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6565:53:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 549,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6564:55:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 499,
                        "id": 550,
                        "nodeType": "Return",
                        "src": "6557:62:3"
                      }
                    ]
                  },
                  "id": 552,
                  "nodeType": "IfStatement",
                  "src": "6116:510:3",
                  "trueBody": {
                    "id": 516,
                    "nodeType": "Block",
                    "src": "6237:39:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 513,
                            "name": "gasPriceMinimum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "6252:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6252:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 499,
                        "id": 515,
                        "nodeType": "Return",
                        "src": "6245:24:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 493,
              "nodeType": "StructuredDocumentation",
              "src": "5798:227:3",
              "text": " @notice Retrieve the current gas price minimum for a currency.\n @param tokenAddress The currency the gas price should be in (defaults to gold).\n @return current gas price minimum in the requested currency"
            },
            "functionSelector": "a54b7fc0",
            "id": 554,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGasPriceMinimum",
            "nameLocation": "6037:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 495,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "6064:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "6056:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6055:22:3"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 554,
                  "src": "6101:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6101:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6100:9:3"
            },
            "scope": 677,
            "src": "6028:602:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "7070:195:3",
              "statements": [
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 566,
                      "name": "deprecated_gasPriceMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "7076:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 568,
                          "name": "blockGasTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "7131:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 569,
                          "name": "blockGasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "7146:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 567,
                        "name": "getUpdatedGasPriceMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 676,
                        "src": "7105:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7105:55:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7076:84:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "7076:84:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 574,
                        "name": "deprecated_gasPriceMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "7194:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 573,
                      "name": "GasPriceMinimumUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 252,
                      "src": "7171:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7171:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "EmitStatement",
                  "src": "7166:55:3"
                },
                {
                  "expression": {
                    "id": 577,
                    "name": "deprecated_gasPriceMinimum",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 258,
                    "src": "7234:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 565,
                  "id": 578,
                  "nodeType": "Return",
                  "src": "7227:33:3"
                }
              ]
            },
            "documentation": {
              "id": 555,
              "nodeType": "StructuredDocumentation",
              "src": "6634:308:3",
              "text": " @notice Adjust the gas price minimum based on governable parameters\n and block congestion.\n @param blockGasTotal The amount of gas in the most recent block.\n @param blockGasLimit The maxBlockGasLimit of the past block.\n @return result of the calculation (new gas price minimum)"
            },
            "functionSelector": "c12398b4",
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 562,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 561,
                  "name": "onlyVm",
                  "nameLocations": [
                    "7039:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 922,
                  "src": "7039:6:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "7039:6:3"
              }
            ],
            "name": "updateGasPriceMinimum",
            "nameLocation": "6954:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 557,
                  "mutability": "mutable",
                  "name": "blockGasTotal",
                  "nameLocation": "6984:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6976:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6976:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "blockGasLimit",
                  "nameLocation": "7007:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6999:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6999:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6975:46:3"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "7059:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7059:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7058:9:3"
            },
            "scope": 677,
            "src": "6945:320:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "7846:838:3",
              "statements": [
                {
                  "assignments": [
                    594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 594,
                      "mutability": "mutable",
                      "name": "blockDensity",
                      "nameLocation": "7880:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "7852:40:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "id": 593,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 592,
                          "name": "FixidityLib.Fraction",
                          "nameLocations": [
                            "7852:11:3",
                            "7864:8:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 929,
                          "src": "7852:20:3"
                        },
                        "referencedDeclaration": 929,
                        "src": "7852:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$929_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 600,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 597,
                        "name": "blockGasTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "7931:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 598,
                        "name": "blockGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "7952:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 595,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "7895:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7907:16:3",
                      "memberName": "newFixedFraction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1068,
                      "src": "7895:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                        "typeString": "function (uint256,uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7895:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7852:119:3"
                },
                {
                  "assignments": [
                    602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 602,
                      "mutability": "mutable",
                      "name": "densityGreaterThanTarget",
                      "nameLocation": "7982:24:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "7977:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 601,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7977:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 605,
                        "name": "targetDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "8025:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$929_storage",
                          "typeString": "struct FixidityLib.Fraction storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$929_storage",
                          "typeString": "struct FixidityLib.Fraction storage ref"
                        }
                      ],
                      "expression": {
                        "id": 603,
                        "name": "blockDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "8009:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8022:2:3",
                      "memberName": "gt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1495,
                      "src": "8009:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8009:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7977:62:3"
                },
                {
                  "assignments": [
                    612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 612,
                      "mutability": "mutable",
                      "name": "densityDelta",
                      "nameLocation": "8073:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "8045:40:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "id": 611,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 610,
                          "name": "FixidityLib.Fraction",
                          "nameLocations": [
                            "8045:11:3",
                            "8057:8:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 929,
                          "src": "8045:20:3"
                        },
                        "referencedDeclaration": 929,
                        "src": "8045:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$929_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 623,
                  "initialValue": {
                    "condition": {
                      "id": 613,
                      "name": "densityGreaterThanTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "8088:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 620,
                          "name": "blockDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "8189:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "id": 618,
                          "name": "targetDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "8166:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_storage",
                            "typeString": "struct FixidityLib.Fraction storage ref"
                          }
                        },
                        "id": 619,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8180:8:3",
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1178,
                        "src": "8166:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8166:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8088:114:3",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 616,
                          "name": "targetDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "8143:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_storage",
                            "typeString": "struct FixidityLib.Fraction storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$929_storage",
                            "typeString": "struct FixidityLib.Fraction storage ref"
                          }
                        ],
                        "expression": {
                          "id": 614,
                          "name": "blockDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "8121:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 615,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8134:8:3",
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1178,
                        "src": "8121:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8121:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8045:157:3"
                },
                {
                  "assignments": [
                    628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 628,
                      "mutability": "mutable",
                      "name": "adjustment",
                      "nameLocation": "8236:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "8208:38:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "id": 627,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 626,
                          "name": "FixidityLib.Fraction",
                          "nameLocations": [
                            "8208:11:3",
                            "8220:8:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 929,
                          "src": "8208:20:3"
                        },
                        "referencedDeclaration": 929,
                        "src": "8208:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$929_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 649,
                  "initialValue": {
                    "condition": {
                      "id": 629,
                      "name": "densityGreaterThanTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "8249:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 645,
                              "name": "densityDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 612,
                              "src": "8410:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            ],
                            "expression": {
                              "id": 643,
                              "name": "adjustmentSpeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "8385:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$929_storage",
                                "typeString": "struct FixidityLib.Fraction storage ref"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8401:8:3",
                            "memberName": "multiply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1401,
                            "src": "8385:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                              "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8385:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 639,
                              "name": "FixidityLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "8355:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                                "typeString": "type(library FixidityLib)"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8367:6:3",
                            "memberName": "fixed1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 953,
                            "src": "8355:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                              "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8355:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8376:8:3",
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1178,
                        "src": "8355:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8355:69:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8249:175:3",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 636,
                              "name": "densityDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 612,
                              "src": "8332:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            ],
                            "expression": {
                              "id": 634,
                              "name": "adjustmentSpeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "8307:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$929_storage",
                                "typeString": "struct FixidityLib.Fraction storage ref"
                              }
                            },
                            "id": 635,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8323:8:3",
                            "memberName": "multiply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1401,
                            "src": "8307:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                              "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8307:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 630,
                              "name": "FixidityLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "8282:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                                "typeString": "type(library FixidityLib)"
                              }
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8294:6:3",
                            "memberName": "fixed1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 953,
                            "src": "8282:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                              "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8282:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8303:3:3",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1147,
                        "src": "8282:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8282:64:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8208:216:3"
                },
                {
                  "assignments": [
                    651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 651,
                      "mutability": "mutable",
                      "name": "newGasPriceMinimum",
                      "nameLocation": "8439:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "8431:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8431:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 667,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 661,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "8539:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8551:6:3",
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 953,
                              "src": "8539:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8539:20:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 656,
                                      "name": "gasPriceMinimum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 492,
                                      "src": "8508:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8508:17:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 654,
                                    "name": "FixidityLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1588,
                                    "src": "8487:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_FixidityLib_$1588_$",
                                      "typeString": "type(library FixidityLib)"
                                    }
                                  },
                                  "id": 655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8499:8:3",
                                  "memberName": "newFixed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1022,
                                  "src": "8487:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$929_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8487:39:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              ],
                              "expression": {
                                "id": 652,
                                "name": "adjustment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 628,
                                "src": "8460:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              },
                              "id": 653,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8478:8:3",
                              "memberName": "multiply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1401,
                              "src": "8460:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                                "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8460:67:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8535:3:3",
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1147,
                          "src": "8460:78:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_struct$_Fraction_$929_memory_ptr_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8460:100:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$929_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 665,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8568:9:3",
                      "memberName": "fromFixed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1037,
                      "src": "8460:117:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$929_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Fraction_$929_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8460:119:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8431:148:3"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 668,
                        "name": "newGasPriceMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "8593:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 669,
                        "name": "gasPriceMinimumFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "8615:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8593:42:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 672,
                      "name": "gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "8659:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8593:86:3",
                    "trueExpression": {
                      "id": 671,
                      "name": "newGasPriceMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "8638:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 589,
                  "id": 674,
                  "nodeType": "Return",
                  "src": "8586:93:3"
                }
              ]
            },
            "documentation": {
              "id": 581,
              "nodeType": "StructuredDocumentation",
              "src": "7269:449:3",
              "text": " @notice Calculates the gas price minimum based on governable parameters\n and block congestion.\n @param blockGasTotal The amount of gas in the most recent block.\n @param blockGasLimit The maxBlockGasLimit of the past block.\n @return result of the calculation (new gas price minimum)\n @dev Calculate using the following formula:\n oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1."
            },
            "functionSelector": "ef712c5b",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUpdatedGasPriceMinimum",
            "nameLocation": "7730:25:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "blockGasTotal",
                  "nameLocation": "7764:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "7756:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7756:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "blockGasLimit",
                  "nameLocation": "7787:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "7779:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7779:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7755:46:3"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "7835:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7835:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7834:9:3"
            },
            "scope": 677,
            "src": "7721:963:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 678,
        "src": "524:8162:3",
        "usedErrors": []
      }
    ],
    "src": "39:8648:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-11-21T17:20:55.012Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "getGasPriceMinimum(address)": {
        "params": {
          "tokenAddress": "The currency the gas price should be in (defaults to gold)."
        },
        "returns": {
          "_0": "current gas price minimum in the requested currency"
        }
      },
      "getUpdatedGasPriceMinimum(uint256,uint256)": {
        "details": "Calculate using the following formula: oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.",
        "params": {
          "blockGasLimit": "The maxBlockGasLimit of the past block.",
          "blockGasTotal": "The amount of gas in the most recent block."
        },
        "returns": {
          "_0": "result of the calculation (new gas price minimum)"
        }
      },
      "getVersionNumber()": {
        "returns": {
          "_0": "Storage version of the contract.",
          "_1": "Major version of the contract.",
          "_2": "Minor version of the contract.",
          "_3": "Patch version of the contract."
        }
      },
      "initialize(address,uint256,uint256,uint256,uint256)": {
        "params": {
          "_adjustmentSpeed": "How quickly the minimum changes, expressed as a fixidity fraction.",
          "_baseFeeOpCodeActivationBlock": "Block number where the baseFee opCode is activated",
          "_gasPriceMinimumFloor": "The lowest value the gas price minimum can be.",
          "_registryAddress": "The address of the registry core smart contract.",
          "_targetDensity": "The target gas fullness of blocks, expressed as a fixidity fraction."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setAdjustmentSpeed(uint256)": {
        "details": "Value is expected to be < 1.",
        "params": {
          "_adjustmentSpeed": "How quickly the minimum changes, expressed as a fixidity fraction."
        }
      },
      "setBaseFeeOpCodeActivationBlock(uint256)": {
        "details": "Value is expected to be > 0.",
        "params": {
          "_baseFeeOpCodeActivationBlock": "Block number where the baseFee opCode is activated"
        }
      },
      "setGasPriceMinimumFloor(uint256)": {
        "details": "Value is expected to be > 0.",
        "params": {
          "_gasPriceMinimumFloor": "The lowest value the gas price minimum can be."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setTargetDensity(uint256)": {
        "details": "Value is expected to be < 1.",
        "params": {
          "_targetDensity": "The target gas fullness of blocks, expressed as a fixidity fraction."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateGasPriceMinimum(uint256,uint256)": {
        "params": {
          "blockGasLimit": "The maxBlockGasLimit of the past block.",
          "blockGasTotal": "The amount of gas in the most recent block."
        },
        "returns": {
          "_0": "result of the calculation (new gas price minimum)"
        }
      }
    },
    "title": "Stores and provides gas price minimum for various currencies.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Sets initialized == true on implementation contracts"
      },
      "getGasPriceMinimum(address)": {
        "notice": "Retrieve the current gas price minimum for a currency."
      },
      "getUpdatedGasPriceMinimum(uint256,uint256)": {
        "notice": "Calculates the gas price minimum based on governable parameters and block congestion."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize(address,uint256,uint256,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "setAdjustmentSpeed(uint256)": {
        "notice": "Set a multiplier that impacts how quickly gas price minimum is adjusted."
      },
      "setBaseFeeOpCodeActivationBlock(uint256)": {
        "notice": "Set the activation block of the baseFee opCode."
      },
      "setGasPriceMinimumFloor(uint256)": {
        "notice": "Set the minimum gas price treshold."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setTargetDensity(uint256)": {
        "notice": "Set the block density targeted by the gas price minimum algorithm."
      },
      "updateGasPriceMinimum(uint256,uint256)": {
        "notice": "Adjust the gas price minimum based on governable parameters and block congestion."
      }
    },
    "version": 1
  }
}