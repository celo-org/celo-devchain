{
  "contractName": "GasPriceMinimum",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "adjustmentSpeed",
          "type": "uint256"
        }
      ],
      "name": "AdjustmentSpeedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseFeeOpCodeActivationBlock",
          "type": "uint256"
        }
      ],
      "name": "BaseFeeOpCodeActivationBlockSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasPriceMinimumFloor",
          "type": "uint256"
        }
      ],
      "name": "GasPriceMinimumFloorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasPriceMinimum",
          "type": "uint256"
        }
      ],
      "name": "GasPriceMinimumUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetDensity",
          "type": "uint256"
        }
      ],
      "name": "TargetDensitySet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ABSOLUTE_MINIMAL_GAS_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "adjustmentSpeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseFeeOpCodeActivationBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecated_gasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPriceMinimumFloor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetDensity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gasPriceMinimumFloor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetDensity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_adjustmentSpeed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_baseFeeOpCodeActivationBlock",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_adjustmentSpeed",
          "type": "uint256"
        }
      ],
      "name": "setAdjustmentSpeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_targetDensity",
          "type": "uint256"
        }
      ],
      "name": "setTargetDensity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasPriceMinimumFloor",
          "type": "uint256"
        }
      ],
      "name": "setGasPriceMinimumFloor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseFeeOpCodeActivationBlock",
          "type": "uint256"
        }
      ],
      "name": "setBaseFeeOpCodeActivationBlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getGasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockGasTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockGasLimit",
          "type": "uint256"
        }
      ],
      "name": "updateGasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockGasTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockGasLimit",
          "type": "uint256"
        }
      ],
      "name": "getUpdatedGasPriceMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"adjustmentSpeed\",\"type\":\"uint256\"}],\"name\":\"AdjustmentSpeedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFeeOpCodeActivationBlock\",\"type\":\"uint256\"}],\"name\":\"BaseFeeOpCodeActivationBlockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPriceMinimumFloor\",\"type\":\"uint256\"}],\"name\":\"GasPriceMinimumFloorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasPriceMinimum\",\"type\":\"uint256\"}],\"name\":\"GasPriceMinimumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetDensity\",\"type\":\"uint256\"}],\"name\":\"TargetDensitySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ABSOLUTE_MINIMAL_GAS_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adjustmentSpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseFeeOpCodeActivationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deprecated_gasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasPriceMinimumFloor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getGasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockGasTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockGasLimit\",\"type\":\"uint256\"}],\"name\":\"getUpdatedGasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasPriceMinimumFloor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetDensity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_adjustmentSpeed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseFeeOpCodeActivationBlock\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_adjustmentSpeed\",\"type\":\"uint256\"}],\"name\":\"setAdjustmentSpeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFeeOpCodeActivationBlock\",\"type\":\"uint256\"}],\"name\":\"setBaseFeeOpCodeActivationBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPriceMinimumFloor\",\"type\":\"uint256\"}],\"name\":\"setGasPriceMinimumFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetDensity\",\"type\":\"uint256\"}],\"name\":\"setTargetDensity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetDensity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockGasTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockGasLimit\",\"type\":\"uint256\"}],\"name\":\"updateGasPriceMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"getGasPriceMinimum(address)\":{\"details\":\"This functions assumes one unit of token has 18 digits.\",\"params\":{\"tokenAddress\":\"The currency the gas price should be in (defaults to Celo).\"},\"returns\":{\"_0\":\"current gas price minimum in the requested currency\"}},\"getUpdatedGasPriceMinimum(uint256,uint256)\":{\"details\":\"Calculate using the following formula: oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.\",\"params\":{\"blockGasLimit\":\"The maxBlockGasLimit of the past block.\",\"blockGasTotal\":\"The amount of gas in the most recent block.\"},\"returns\":{\"_0\":\"result of the calculation (new gas price minimum)\"}},\"getVersionNumber()\":{\"returns\":{\"_0\":\"Storage version of the contract.\",\"_1\":\"Major version of the contract.\",\"_2\":\"Minor version of the contract.\",\"_3\":\"Patch version of the contract.\"}},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"params\":{\"_adjustmentSpeed\":\"How quickly the minimum changes, expressed as a fixidity fraction.\",\"_baseFeeOpCodeActivationBlock\":\"Block number where the baseFee opCode is activated\",\"_gasPriceMinimumFloor\":\"The lowest value the gas price minimum can be.\",\"_registryAddress\":\"The address of the registry core smart contract.\",\"_targetDensity\":\"The target gas fullness of blocks, expressed as a fixidity fraction.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAdjustmentSpeed(uint256)\":{\"details\":\"Value is expected to be < 1.\",\"params\":{\"_adjustmentSpeed\":\"How quickly the minimum changes, expressed as a fixidity fraction.\"}},\"setBaseFeeOpCodeActivationBlock(uint256)\":{\"details\":\"Value is expected to be > 0.\",\"params\":{\"_baseFeeOpCodeActivationBlock\":\"Block number where the baseFee opCode is activated\"}},\"setGasPriceMinimumFloor(uint256)\":{\"details\":\"Value is expected to be > 0.\",\"params\":{\"_gasPriceMinimumFloor\":\"The lowest value the gas price minimum can be.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setTargetDensity(uint256)\":{\"details\":\"Value is expected to be < 1.\",\"params\":{\"_targetDensity\":\"The target gas fullness of blocks, expressed as a fixidity fraction.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateGasPriceMinimum(uint256,uint256)\":{\"params\":{\"blockGasLimit\":\"The maxBlockGasLimit of the past block.\",\"blockGasTotal\":\"The amount of gas in the most recent block.\"},\"returns\":{\"_0\":\"result of the calculation (new gas price minimum)\"}}},\"title\":\"Stores and provides gas price minimum for various currencies.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets initialized == true on implementation contracts\"},\"getGasPriceMinimum(address)\":{\"notice\":\"Retrieve the current gas price minimum for a currency. When caled for 0x0 or Celo address, it returns gasPriceMinimum(). For other addresses it returns gasPriceMinimum() mutiplied by  the SortedOracles median of the token. It does not check tokenAddress is a valid fee currency. this function will never returns values less than ABSOLUTE_MINIMAL_GAS_PRICE. If Oracle rate doesn't exist, it returns ABSOLUTE_MINIMAL_GAS_PRICE.\"},\"getUpdatedGasPriceMinimum(uint256,uint256)\":{\"notice\":\"Calculates the gas price minimum based on governable parameters and block congestion.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"setAdjustmentSpeed(uint256)\":{\"notice\":\"Set a multiplier that impacts how quickly gas price minimum is adjusted.\"},\"setBaseFeeOpCodeActivationBlock(uint256)\":{\"notice\":\"Set the activation block of the baseFee opCode.\"},\"setGasPriceMinimumFloor(uint256)\":{\"notice\":\"Set the minimum gas price treshold.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setTargetDensity(uint256)\":{\"notice\":\"Set the block density targeted by the gas price minimum algorithm.\"},\"updateGasPriceMinimum(uint256,uint256)\":{\"notice\":\"Adjust the gas price minimum based on governable parameters and block congestion.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/common/GasPriceMinimum.sol\":\"GasPriceMinimum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/GasPriceMinimum.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\n\\nimport \\\"../../contracts/common/CalledByVm.sol\\\";\\nimport \\\"../../contracts/common/Initializable.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../../contracts/common/FixidityLib.sol\\\";\\nimport \\\"./UsingRegistry.sol\\\";\\nimport \\\"../../contracts/stability/interfaces/ISortedOracles.sol\\\";\\nimport \\\"@openzeppelin/contracts8/utils/math/Math.sol\\\";\\n\\n/**\\n * @title Stores and provides gas price minimum for various currencies.\\n */\\ncontract GasPriceMinimum is\\n  ICeloVersionedContract,\\n  Ownable,\\n  Initializable,\\n  UsingRegistry,\\n  CalledByVm\\n{\\n  using FixidityLib for FixidityLib.Fraction;\\n\\n  event TargetDensitySet(uint256 targetDensity);\\n  event GasPriceMinimumFloorSet(uint256 gasPriceMinimumFloor);\\n  event AdjustmentSpeedSet(uint256 adjustmentSpeed);\\n  event GasPriceMinimumUpdated(uint256 gasPriceMinimum);\\n  event BaseFeeOpCodeActivationBlockSet(uint256 baseFeeOpCodeActivationBlock);\\n\\n  uint256 public deprecated_gasPriceMinimum;\\n  uint256 public gasPriceMinimumFloor;\\n\\n  // Block congestion level targeted by the gas price minimum calculation.\\n  FixidityLib.Fraction public targetDensity;\\n\\n  // Speed of gas price minimum adjustment due to congestion.\\n  FixidityLib.Fraction public adjustmentSpeed;\\n\\n  uint256 public baseFeeOpCodeActivationBlock;\\n  uint256 public constant ABSOLUTE_MINIMAL_GAS_PRICE = 1;\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 2, 0, 1);\\n  }\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param _registryAddress The address of the registry core smart contract.\\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\\n   */\\n  function initialize(\\n    address _registryAddress,\\n    uint256 _gasPriceMinimumFloor,\\n    uint256 _targetDensity,\\n    uint256 _adjustmentSpeed,\\n    uint256 _baseFeeOpCodeActivationBlock\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(_registryAddress);\\n    deprecated_gasPriceMinimum = _gasPriceMinimumFloor;\\n    setGasPriceMinimumFloor(_gasPriceMinimumFloor);\\n    setTargetDensity(_targetDensity);\\n    setAdjustmentSpeed(_adjustmentSpeed);\\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, true);\\n  }\\n\\n  /**\\n   * @notice Set a multiplier that impacts how quickly gas price minimum is adjusted.\\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\\n   * @dev Value is expected to be < 1.\\n   */\\n  function setAdjustmentSpeed(uint256 _adjustmentSpeed) public onlyOwner {\\n    adjustmentSpeed = FixidityLib.wrap(_adjustmentSpeed);\\n    require(adjustmentSpeed.lt(FixidityLib.fixed1()), \\\"adjustment speed must be smaller than 1\\\");\\n    emit AdjustmentSpeedSet(_adjustmentSpeed);\\n  }\\n\\n  /**\\n   * @notice Set the block density targeted by the gas price minimum algorithm.\\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\\n   * @dev Value is expected to be < 1.\\n   */\\n  function setTargetDensity(uint256 _targetDensity) public onlyOwner {\\n    targetDensity = FixidityLib.wrap(_targetDensity);\\n    require(targetDensity.lt(FixidityLib.fixed1()), \\\"target density must be smaller than 1\\\");\\n    emit TargetDensitySet(_targetDensity);\\n  }\\n\\n  /**\\n   * @notice Set the minimum gas price treshold.\\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\\n   * @dev Value is expected to be > 0.\\n   */\\n  function setGasPriceMinimumFloor(uint256 _gasPriceMinimumFloor) public onlyOwner {\\n    require(_gasPriceMinimumFloor > 0, \\\"gas price minimum floor must be greater than zero\\\");\\n    gasPriceMinimumFloor = _gasPriceMinimumFloor;\\n    emit GasPriceMinimumFloorSet(_gasPriceMinimumFloor);\\n  }\\n\\n  /**\\n   * @notice Set the activation block of the baseFee opCode.\\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\\n   * @dev Value is expected to be > 0.\\n   */\\n  function setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock)\\n    external\\n    onlyOwner\\n  {\\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, false);\\n  }\\n\\n  /**\\n   * @notice Set the activation block of the baseFee opCode.\\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\\n   * @dev Value is expected to be > 0.\\n   */\\n  function _setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock, bool allowZero)\\n    private\\n    onlyOwner\\n  {\\n    require(\\n      allowZero || _baseFeeOpCodeActivationBlock > 0,\\n      \\\"baseFee opCode activation block must be greater than zero\\\"\\n    );\\n    baseFeeOpCodeActivationBlock = _baseFeeOpCodeActivationBlock;\\n    emit BaseFeeOpCodeActivationBlockSet(_baseFeeOpCodeActivationBlock);\\n  }\\n\\n  function gasPriceMinimum() public view returns (uint256) {\\n    if (baseFeeOpCodeActivationBlock > 0 && block.number >= baseFeeOpCodeActivationBlock) {\\n      return block.basefee;\\n    } else {\\n      return deprecated_gasPriceMinimum;\\n    }\\n  }\\n\\n  function _getGasPriceMinimum(address tokenAddress) private view returns (uint256) {\\n    if (\\n      tokenAddress == address(0) ||\\n      tokenAddress == registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID)\\n    ) {\\n      return gasPriceMinimum();\\n    } else {\\n      ISortedOracles sortedOracles = ISortedOracles(\\n        registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID)\\n      );\\n      uint256 rateNumerator;\\n      uint256 rateDenominator;\\n      (rateNumerator, rateDenominator) = sortedOracles.medianRate(tokenAddress);\\n      return ((gasPriceMinimum() * rateNumerator) / rateDenominator);\\n    }\\n  }\\n\\n  /**\\n   * @notice Retrieve the current gas price minimum for a currency.\\n   * When caled for 0x0 or Celo address, it returns gasPriceMinimum().\\n   * For other addresses it returns gasPriceMinimum() mutiplied by \\n   * the SortedOracles median of the token. It does not check tokenAddress is a valid fee currency.\\n   * this function will never returns values less than ABSOLUTE_MINIMAL_GAS_PRICE.\\n   * If Oracle rate doesn't exist, it returns ABSOLUTE_MINIMAL_GAS_PRICE.\\n   * @dev This functions assumes one unit of token has 18 digits.\\n   * @param tokenAddress The currency the gas price should be in (defaults to Celo).\\n   * @return current gas price minimum in the requested currency\\n   */\\n  function getGasPriceMinimum(address tokenAddress) external view returns (uint256) {\\n    return Math.max(_getGasPriceMinimum(tokenAddress), ABSOLUTE_MINIMAL_GAS_PRICE);\\n  }\\n\\n  /**\\n   * @notice Adjust the gas price minimum based on governable parameters\\n   * and block congestion.\\n   * @param blockGasTotal The amount of gas in the most recent block.\\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\\n   * @return result of the calculation (new gas price minimum)\\n   */\\n  function updateGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\\n    external\\n    onlyVm\\n    returns (uint256)\\n  {\\n    deprecated_gasPriceMinimum = getUpdatedGasPriceMinimum(blockGasTotal, blockGasLimit);\\n    emit GasPriceMinimumUpdated(deprecated_gasPriceMinimum);\\n    return deprecated_gasPriceMinimum;\\n  }\\n\\n  /**\\n   * @notice Calculates the gas price minimum based on governable parameters\\n   * and block congestion.\\n   * @param blockGasTotal The amount of gas in the most recent block.\\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\\n   * @return result of the calculation (new gas price minimum)\\n   * @dev Calculate using the following formula:\\n   * oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.\\n   */\\n  function getUpdatedGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    FixidityLib.Fraction memory blockDensity = FixidityLib.newFixedFraction(\\n      blockGasTotal,\\n      blockGasLimit\\n    );\\n    bool densityGreaterThanTarget = blockDensity.gt(targetDensity);\\n    FixidityLib.Fraction memory densityDelta = densityGreaterThanTarget\\n      ? blockDensity.subtract(targetDensity)\\n      : targetDensity.subtract(blockDensity);\\n    FixidityLib.Fraction memory adjustment = densityGreaterThanTarget\\n      ? FixidityLib.fixed1().add(adjustmentSpeed.multiply(densityDelta))\\n      : FixidityLib.fixed1().subtract(adjustmentSpeed.multiply(densityDelta));\\n\\n    uint256 newGasPriceMinimum = adjustment\\n      .multiply(FixidityLib.newFixed(gasPriceMinimum()))\\n      .add(FixidityLib.fixed1())\\n      .fromFixed();\\n\\n    return newGasPriceMinimum >= gasPriceMinimumFloor ? newGasPriceMinimum : gasPriceMinimumFloor;\\n  }\\n}\\n\",\"keccak256\":\"0xf70beedb19bd8c3b8e7e71f0fe6c6fb5a529cf103b4e78fc79dcb5d78f1b43f9\",\"license\":\"UNLICENSED\"},\"project:/contracts-0.8/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.8.20;\\n\\n// Note: This is not an exact copy of UsingRegistry or UsingRegistryV2 in the contract's folder\\n// because Mento's interfaces still don't support Solidity 0.8\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../contracts/common/interfaces/IRegistry.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  event RegistrySet(address indexed registryAddress);\\n\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"DoubleSigningSlasher\\\")\\n  );\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"FeeCurrencyWhitelist\\\")\\n  );\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"GovernanceSlasher\\\")\\n  );\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x2c3c90f6c8d52040e90e1920a33f8c6b0ae293fa3a4bcd18e892f4b3721017e6\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/CalledByVm.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract CalledByVm {\\n  modifier onlyVm() {\\n    require(msg.sender == address(0), \\\"Only VM can call\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xb94d2b580a505f5d4ef51bb14b12b6fa19d69e4fa94c96f2f105091673a0a0a4\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/FixidityLib.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n  struct Fraction {\\n    uint256 value;\\n  }\\n\\n  /**\\n   * @notice Number of positions that the comma is shifted to the right.\\n   */\\n  function digits() internal pure returns (uint8) {\\n    return 24;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n  /**\\n   * @notice This is 1 in the fixed point units used in this library.\\n   * @dev Test fixed1() equals 10^digits()\\n   * Hardcoded to 24 digits.\\n   */\\n  function fixed1() internal pure returns (Fraction memory) {\\n    return Fraction(FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n   * struct.\\n   * @param x Number that already represents a 24-decimal fraction.\\n   * @return A Fraction struct with contents x.\\n   */\\n  function wrap(uint256 x) internal pure returns (Fraction memory) {\\n    return Fraction(x);\\n  }\\n\\n  /**\\n   * @notice Unwraps the uint256 inside of a Fraction struct.\\n   */\\n  function unwrap(Fraction memory x) internal pure returns (uint256) {\\n    return x.value;\\n  }\\n\\n  /**\\n   * @notice The amount of decimals lost on each multiplication operand.\\n   * @dev Test mulPrecision() equals sqrt(fixed1)\\n   */\\n  function mulPrecision() internal pure returns (uint256) {\\n    return 1000000000000;\\n  }\\n\\n  /**\\n   * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n   * @dev\\n   * Test maxNewFixed() equals maxUint256() / fixed1()\\n   */\\n  function maxNewFixed() internal pure returns (uint256) {\\n    return 115792089237316195423570985008687907853269984665640564;\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 to fixed point Fraction\\n   * @dev Test newFixed(0) returns 0\\n   * Test newFixed(1) returns fixed1()\\n   * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n   * Test newFixed(maxNewFixed()+1) fails\\n   */\\n  function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n    require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n    return Fraction(x * FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 in the fixed point representation of this\\n   * library to a non decimal. All decimal digits will be truncated.\\n   */\\n  function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n    return x.value / FIXED1_UINT;\\n  }\\n\\n  /**\\n   * @notice Converts two uint256 representing a fraction to fixed point units,\\n   * equivalent to multiplying dividend and divisor by 10^digits().\\n   * @param numerator numerator must be <= maxNewFixed()\\n   * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n   * @dev\\n   * Test newFixedFraction(1,0) fails\\n   * Test newFixedFraction(0,1) returns 0\\n   * Test newFixedFraction(1,1) returns fixed1()\\n   * Test newFixedFraction(1,fixed1()) returns 1\\n   */\\n  function newFixedFraction(uint256 numerator, uint256 denominator)\\n    internal\\n    pure\\n    returns (Fraction memory)\\n  {\\n    Fraction memory convertedNumerator = newFixed(numerator);\\n    Fraction memory convertedDenominator = newFixed(denominator);\\n    return divide(convertedNumerator, convertedDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the integer part of a fixed point number.\\n   * @dev\\n   * Test integer(0) returns 0\\n   * Test integer(fixed1()) returns fixed1()\\n   * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n   */\\n  function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice Returns the fractional part of a fixed point number.\\n   * In the case of a negative number the fractional is also negative.\\n   * @dev\\n   * Test fractional(0) returns 0\\n   * Test fractional(fixed1()) returns 0\\n   * Test fractional(fixed1()-1) returns 10^24-1\\n   */\\n  function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x+y.\\n   * @dev The maximum value that can be safely used as an addition operator is defined as\\n   * maxFixedAdd = maxUint256()-1 / 2, or\\n   * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n   * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n   * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n   */\\n  function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    uint256 z = x.value + y.value;\\n    require(z >= x.value, \\\"add overflow detected\\\");\\n    return Fraction(z);\\n  }\\n\\n  /**\\n   * @notice x-y.\\n   * @dev\\n   * Test subtract(6, 10) fails\\n   */\\n  function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n    return Fraction(x.value - y.value);\\n  }\\n\\n  /**\\n   * @notice x*y. If any of the operators is higher than the max multiplier value it\\n   * might overflow.\\n   * @dev The maximum value that can be safely used as a multiplication operator\\n   * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n   * or 340282366920938463463374607431768211455999999999999\\n   * Test multiply(0,0) returns 0\\n   * Test multiply(maxFixedMul,0) returns 0\\n   * Test multiply(0,maxFixedMul) returns 0\\n   * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n   * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n   * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n   */\\n  function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    if (x.value == 0 || y.value == 0) return Fraction(0);\\n    if (y.value == FIXED1_UINT) return x;\\n    if (x.value == FIXED1_UINT) return y;\\n\\n    // Separate into integer and fractional parts\\n    // x = x1 + x2, y = y1 + y2\\n    uint256 x1 = integer(x).value / FIXED1_UINT;\\n    uint256 x2 = fractional(x).value;\\n    uint256 y1 = integer(y).value / FIXED1_UINT;\\n    uint256 y2 = fractional(y).value;\\n\\n    // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n    uint256 x1y1 = x1 * y1;\\n    if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n    // x1y1 needs to be multiplied back by fixed1\\n    // solium-disable-next-line mixedcase\\n    uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n    if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n    x1y1 = fixed_x1y1;\\n\\n    uint256 x2y1 = x2 * y1;\\n    if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n    uint256 x1y2 = x1 * y2;\\n    if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n    x2 = x2 / mulPrecision();\\n    y2 = y2 / mulPrecision();\\n    uint256 x2y2 = x2 * y2;\\n    if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n    // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n    Fraction memory result = Fraction(x1y1);\\n    result = add(result, Fraction(x2y1)); // Add checks for overflow\\n    result = add(result, Fraction(x1y2)); // Add checks for overflow\\n    result = add(result, Fraction(x2y2)); // Add checks for overflow\\n    return result;\\n  }\\n\\n  /**\\n   * @notice 1/x\\n   * @dev\\n   * Test reciprocal(0) fails\\n   * Test reciprocal(fixed1()) returns fixed1()\\n   * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n   * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n   * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n   */\\n  function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n    require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n    return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x/y. If the dividend is higher than the max dividend value, it\\n   * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n   * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n   * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n   * This yields the value 115792089237316195423570985008687907853269984665640564.\\n   * Test maxNewFixed equals maxUint256()/fixed1()\\n   * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n   * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n   * Test divide(fixed1(),0) fails\\n   * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n   * Test divide(maxNewFixed+1,1) throws\\n   */\\n  function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(y.value != 0, \\\"can't divide by 0\\\");\\n    uint256 X = x.value * FIXED1_UINT;\\n    require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n    return Fraction(X / y.value);\\n  }\\n\\n  /**\\n   * @notice x > y\\n   */\\n  function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value > y.value;\\n  }\\n\\n  /**\\n   * @notice x >= y\\n   */\\n  function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value >= y.value;\\n  }\\n\\n  /**\\n   * @notice x < y\\n   */\\n  function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value < y.value;\\n  }\\n\\n  /**\\n   * @notice x <= y\\n   */\\n  function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value <= y.value;\\n  }\\n\\n  /**\\n   * @notice x == y\\n   */\\n  function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value == y.value;\\n  }\\n\\n  /**\\n   * @notice x <= 1\\n   */\\n  function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n    return lte(x, fixed1());\\n  }\\n}\\n\",\"keccak256\":\"0xf1cebbfcf298ef05f24e940ab4351049e2da6e5ee77b272257d2c86b4cd1cc1c\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract Initializable {\\n  bool public initialized;\\n\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x27277d9f2c894659833be45eeca368a6d5ff060d944f0ad335e31003bf6477ed\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n    * @return Storage version of the contract.\\n    * @return Major version of the contract.\\n    * @return Minor version of the contract.\\n    * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x27f0b14472db998eb8e4b529bbfd6a5879cbd842f8db8aa6c06ed7d2e0b17ac1\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620028c0380380620028c0833981810160405281019062000037919062000190565b80620000586200004c6200008260201b60201c565b6200008a60201b60201c565b806200007a576001600060146101000a81548160ff0219169083151502179055505b5050620001c2565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b60008115159050919050565b6200016a8162000153565b81146200017657600080fd5b50565b6000815190506200018a816200015f565b92915050565b600060208284031215620001a957620001a86200014e565b5b6000620001b98482850162000179565b91505092915050565b6126ee80620001d26000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806393ca6fc4116100b8578063c12398b41161007c578063c12398b41461031e578063ceff0bd61461034e578063ef712c5b1461036c578063f2fde38b1461039c578063f8e2b062146103b8578063f92ad219146103d657610142565b806393ca6fc41461027c578063a54b7fc014610298578063a68f548e146102c8578063a91ee0dc146102e6578063b830f4a41461030257610142565b8063541170fd1161010a578063541170fd146101d957806354255be0146101f7578063715018a6146102185780637b103999146102225780638da5cb5b146102405780638efd92ca1461025e57610142565b8063158ef93e1461014757806330f726b91461016557806336945c2d146101815780634a3d5fe21461019f5780634b930e5a146101bd575b600080fd5b61014f6103f2565b60405161015c9190611812565b60405180910390f35b61017f600480360381019061017a9190611868565b610405565b005b6101896104ce565b60405161019691906118a4565b60405180910390f35b6101a76104f9565b6040516101b491906118a4565b60405180910390f35b6101d760048036038101906101d29190611868565b610505565b005b6101e161051b565b6040516101ee91906118a4565b60405180910390f35b6101ff610520565b60405161020f94939291906118bf565b60405180910390f35b61022061053c565b005b61022a610550565b6040516102379190611983565b60405180910390f35b610248610576565b60405161025591906119bf565b60405180910390f35b61026661059f565b60405161027391906118a4565b60405180910390f35b61029660048036038101906102919190611868565b6105a5565b005b6102b260048036038101906102ad9190611a06565b61066e565b6040516102bf91906118a4565b60405180910390f35b6102d061068a565b6040516102dd91906118a4565b60405180910390f35b61030060048036038101906102fb9190611a06565b610696565b005b61031c60048036038101906103179190611868565b610794565b005b61033860048036038101906103339190611a33565b610820565b60405161034591906118a4565b60405180910390f35b6103566108e4565b60405161036391906118a4565b60405180910390f35b61038660048036038101906103819190611a33565b6108ea565b60405161039391906118a4565b60405180910390f35b6103b660048036038101906103b19190611a06565b610a82565b005b6103c0610b05565b6040516103cd91906118a4565b60405180910390f35b6103f060048036038101906103eb9190611a73565b610b0b565b005b600060149054906101000a900460ff1681565b61040d610bbc565b61041681610c3a565b600560008201518160000155905050610455610430610c58565b6005604051806020016040529081600082015481525050610c7e90919063ffffffff16565b610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90611b71565b60405180910390fd5b7fd2e71cd7012df1df07d4908ff75ae4b2bfbb6c49d39144404661f1fd47253283816040516104c391906118a4565b60405180910390a150565b6000806006541180156104e357506006544310155b156104f0574890506104f6565b60025490505b90565b60048060000154905081565b61050d610bbc565b610518816000610c93565b50565b600181565b6000806000806001600260006001935093509350935090919293565b610544610bbc565b61054e6000610d28565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6105ad610bbc565b6105b681610c3a565b6004600082015181600001559050506105f56105d0610c58565b6004604051806020016040529081600082015481525050610c7e90919063ffffffff16565b610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b90611c03565b60405180910390fd5b7f2a109bad06121312708ed2a3e9b3556ea85ef8eadd4d10d8181f50d114eb4fab8160405161066391906118a4565b60405180910390a150565b600061068361067c83610dec565b6001611097565b9050919050565b60058060000154905081565b61069e610bbc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490611c6f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b61079c610bbc565b600081116107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d690611d01565b60405180910390fd5b806003819055507f5548a13ccc1d9e4e2860461edda5ad49ba8a4fda485f67d954f9d7da8d2aff278160405161081591906118a4565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790611d6d565b60405180910390fd5b61089a83836108ea565b6002819055507f6e53b2f8b69496c2a175588ad1326dbabe2f66df4d82f817aeca52e3474807fb6002546040516108d191906118a4565b60405180910390a1600254905092915050565b60035481565b6000806108f784846110b0565b905060006109246004604051806020016040529081600082015481525050836110e690919063ffffffff16565b905060008161095b576109568360046040518060200160405290816000820154815250506110fb90919063ffffffff16565b610985565b6109846004604051806020016040529081600082015481525050846110fb90919063ffffffff16565b5b90506000826109d5576109d06109ba83600560405180602001604052908160008201548152505061117890919063ffffffff16565b6109c2610c58565b6110fb90919063ffffffff16565b610a18565b610a17610a0183600560405180602001604052908160008201548152505061117890919063ffffffff16565b610a09610c58565b61150f90919063ffffffff16565b5b90506000610a5f610a5a610a2a610c58565b610a4c610a3d610a386104ce565b61158e565b8661117890919063ffffffff16565b61150f90919063ffffffff16565b61160b565b9050600354811015610a7357600354610a75565b805b9550505050505092915050565b610a8a610bbc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af090611dff565b60405180910390fd5b610b0281610d28565b50565b60025481565b600060149054906101000a900460ff1615610b5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5290611e6b565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550610b7f33610d28565b610b8885610696565b83600281905550610b9884610794565b610ba1836105a5565b610baa82610405565b610bb5816001610c93565b5050505050565b610bc461162e565b73ffffffffffffffffffffffffffffffffffffffff16610be2610576565b73ffffffffffffffffffffffffffffffffffffffff1614610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611ed7565b60405180910390fd5b565b610c426117e4565b6040518060200160405280838152509050919050565b610c606117e4565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b610c9b610bbc565b8080610ca75750600082115b610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdd90611f69565b60405180910390fd5b816006819055507fc74fe30765574b78669fcec5cea6b0dcaacd907890a49fc756a40235d01b09fc82604051610d1c91906118a4565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610f125750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed604051602001610e7090611fe0565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610ea2919061200e565b602060405180830381865afa158015610ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee3919061203e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15610f2657610f1f6104ce565b9050611092565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed604051602001610f75906120b7565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610fa7919061200e565b602060405180830381865afa158015610fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe8919061203e565b90506000808273ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0866040518263ffffffff1660e01b815260040161102691906119bf565b6040805180830381865afa158015611042573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106691906120e1565b809250819350505080826110786104ce565b6110829190612150565b61108c91906121c1565b93505050505b919050565b60008183116110a657816110a8565b825b905092915050565b6110b86117e4565b60006110c38461158e565b905060006110d08461158e565b90506110dc8282611636565b9250505092915050565b60008160000151836000015111905092915050565b6111036117e4565b81600001518360000151101561114e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111459061223e565b60405180910390fd5b60405180602001604052808360000151856000015161116d919061225e565b815250905092915050565b6111806117e4565b600083600001511480611197575060008260000151145b156111b357604051806020016040528060008152509050611509565b69d3c21bcecceda10000008260000151036111d057829050611509565b69d3c21bcecceda10000008360000151036111ed57819050611509565b600069d3c21bcecceda100000061120385611725565b6000015161121191906121c1565b9050600061121e85611767565b600001519050600069d3c21bcecceda100000061123a86611725565b6000015161124891906121c1565b9050600061125586611767565b600001519050600082856112699190612150565b9050600085146112c15782858261128091906121c1565b146112c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b7906122de565b60405180910390fd5b5b600069d3c21bcecceda1000000826112d99190612150565b90506000821461133b5769d3c21bcecceda100000082826112fa91906121c1565b1461133a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113319061234a565b60405180910390fd5b5b8091506000848661134c9190612150565b9050600086146113a45784868261136391906121c1565b146113a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139a906123b6565b60405180910390fd5b5b600084886113b29190612150565b90506000881461140a578488826113c991906121c1565b14611409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140090612422565b60405180910390fd5b5b6114126117b8565b8761141d91906121c1565b96506114276117b8565b8561143291906121c1565b9450600085886114429190612150565b90506000881461149a5785888261145991906121c1565b14611499576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114909061248e565b60405180910390fd5b5b600060405180602001604052808781525090506114c58160405180602001604052808781525061150f565b90506114df8160405180602001604052808681525061150f565b90506114f98160405180602001604052808581525061150f565b9050809a50505050505050505050505b92915050565b6115176117e4565b60008260000151846000015161152d91906124ae565b90508360000151811015611576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156d9061252e565b60405180910390fd5b60405180602001604052808281525091505092915050565b6115966117e4565b61159e6117c5565b8211156115e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d7906125c0565b60405180910390fd5b604051806020016040528069d3c21bcecceda1000000846116019190612150565b8152509050919050565b600069d3c21bcecceda1000000826000015161162791906121c1565b9050919050565b600033905090565b61163e6117e4565b6000826000015103611685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167c9061262c565b60405180910390fd5b600069d3c21bcecceda100000084600001516116a19190612150565b9050836000015169d3c21bcecceda1000000826116be91906121c1565b146116fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f590612698565b60405180910390fd5b604051806020016040528084600001518361171991906121c1565b81525091505092915050565b61172d6117e4565b604051806020016040528069d3c21bcecceda100000080856000015161175391906121c1565b61175d9190612150565b8152509050919050565b61176f6117e4565b604051806020016040528069d3c21bcecceda100000080856000015161179591906121c1565b61179f9190612150565b84600001516117ae919061225e565b8152509050919050565b600064e8d4a51000905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b6040518060200160405280600081525090565b60008115159050919050565b61180c816117f7565b82525050565b60006020820190506118276000830184611803565b92915050565b600080fd5b6000819050919050565b61184581611832565b811461185057600080fd5b50565b6000813590506118628161183c565b92915050565b60006020828403121561187e5761187d61182d565b5b600061188c84828501611853565b91505092915050565b61189e81611832565b82525050565b60006020820190506118b96000830184611895565b92915050565b60006080820190506118d46000830187611895565b6118e16020830186611895565b6118ee6040830185611895565b6118fb6060830184611895565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061194961194461193f84611904565b611924565b611904565b9050919050565b600061195b8261192e565b9050919050565b600061196d82611950565b9050919050565b61197d81611962565b82525050565b60006020820190506119986000830184611974565b92915050565b60006119a982611904565b9050919050565b6119b98161199e565b82525050565b60006020820190506119d460008301846119b0565b92915050565b6119e38161199e565b81146119ee57600080fd5b50565b600081359050611a00816119da565b92915050565b600060208284031215611a1c57611a1b61182d565b5b6000611a2a848285016119f1565b91505092915050565b60008060408385031215611a4a57611a4961182d565b5b6000611a5885828601611853565b9250506020611a6985828601611853565b9150509250929050565b600080600080600060a08688031215611a8f57611a8e61182d565b5b6000611a9d888289016119f1565b9550506020611aae88828901611853565b9450506040611abf88828901611853565b9350506060611ad088828901611853565b9250506080611ae188828901611853565b9150509295509295909350565b600082825260208201905092915050565b7f61646a7573746d656e74207370656564206d75737420626520736d616c6c657260008201527f207468616e203100000000000000000000000000000000000000000000000000602082015250565b6000611b5b602783611aee565b9150611b6682611aff565b604082019050919050565b60006020820190508181036000830152611b8a81611b4e565b9050919050565b7f7461726765742064656e73697479206d75737420626520736d616c6c6572207460008201527f68616e2031000000000000000000000000000000000000000000000000000000602082015250565b6000611bed602583611aee565b9150611bf882611b91565b604082019050919050565b60006020820190508181036000830152611c1c81611be0565b9050919050565b7f43616e6e6f7420726567697374657220746865206e756c6c2061646472657373600082015250565b6000611c59602083611aee565b9150611c6482611c23565b602082019050919050565b60006020820190508181036000830152611c8881611c4c565b9050919050565b7f676173207072696365206d696e696d756d20666c6f6f72206d7573742062652060008201527f67726561746572207468616e207a65726f000000000000000000000000000000602082015250565b6000611ceb603183611aee565b9150611cf682611c8f565b604082019050919050565b60006020820190508181036000830152611d1a81611cde565b9050919050565b7f4f6e6c7920564d2063616e2063616c6c00000000000000000000000000000000600082015250565b6000611d57601083611aee565b9150611d6282611d21565b602082019050919050565b60006020820190508181036000830152611d8681611d4a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611de9602683611aee565b9150611df482611d8d565b604082019050919050565b60006020820190508181036000830152611e1881611ddc565b9050919050565b7f636f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000611e55601c83611aee565b9150611e6082611e1f565b602082019050919050565b60006020820190508181036000830152611e8481611e48565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ec1602083611aee565b9150611ecc82611e8b565b602082019050919050565b60006020820190508181036000830152611ef081611eb4565b9050919050565b7f62617365466565206f70436f64652061637469766174696f6e20626c6f636b2060008201527f6d7573742062652067726561746572207468616e207a65726f00000000000000602082015250565b6000611f53603983611aee565b9150611f5e82611ef7565b604082019050919050565b60006020820190508181036000830152611f8281611f46565b9050919050565b600081905092915050565b7f476f6c64546f6b656e0000000000000000000000000000000000000000000000600082015250565b6000611fca600983611f89565b9150611fd582611f94565b600982019050919050565b6000611feb82611fbd565b9150819050919050565b6000819050919050565b61200881611ff5565b82525050565b60006020820190506120236000830184611fff565b92915050565b600081519050612038816119da565b92915050565b6000602082840312156120545761205361182d565b5b600061206284828501612029565b91505092915050565b7f536f727465644f7261636c657300000000000000000000000000000000000000600082015250565b60006120a1600d83611f89565b91506120ac8261206b565b600d82019050919050565b60006120c282612094565b9150819050919050565b6000815190506120db8161183c565b92915050565b600080604083850312156120f8576120f761182d565b5b6000612106858286016120cc565b9250506020612117858286016120cc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061215b82611832565b915061216683611832565b925082820261217481611832565b9150828204841483151761218b5761218a612121565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121cc82611832565b91506121d783611832565b9250826121e7576121e6612192565b5b828204905092915050565b7f737562737472616374696f6e20756e646572666c6f7720646574656374656400600082015250565b6000612228601f83611aee565b9150612233826121f2565b602082019050919050565b600060208201905081810360008301526122578161221b565b9050919050565b600061226982611832565b915061227483611832565b925082820390508181111561228c5761228b612121565b5b92915050565b7f6f766572666c6f77207831793120646574656374656400000000000000000000600082015250565b60006122c8601683611aee565b91506122d382612292565b602082019050919050565b600060208201905081810360008301526122f7816122bb565b9050919050565b7f6f766572666c6f772078317931202a2066697865643120646574656374656400600082015250565b6000612334601f83611aee565b915061233f826122fe565b602082019050919050565b6000602082019050818103600083015261236381612327565b9050919050565b7f6f766572666c6f77207832793120646574656374656400000000000000000000600082015250565b60006123a0601683611aee565b91506123ab8261236a565b602082019050919050565b600060208201905081810360008301526123cf81612393565b9050919050565b7f6f766572666c6f77207831793220646574656374656400000000000000000000600082015250565b600061240c601683611aee565b9150612417826123d6565b602082019050919050565b6000602082019050818103600083015261243b816123ff565b9050919050565b7f6f766572666c6f77207832793220646574656374656400000000000000000000600082015250565b6000612478601683611aee565b915061248382612442565b602082019050919050565b600060208201905081810360008301526124a78161246b565b9050919050565b60006124b982611832565b91506124c483611832565b92508282019050808211156124dc576124db612121565b5b92915050565b7f616464206f766572666c6f772064657465637465640000000000000000000000600082015250565b6000612518601583611aee565b9150612523826124e2565b602082019050919050565b600060208201905081810360008301526125478161250b565b9050919050565b7f63616e277420637265617465206669786964697479206e756d626572206c617260008201527f676572207468616e206d61784e65774669786564282900000000000000000000602082015250565b60006125aa603683611aee565b91506125b58261254e565b604082019050919050565b600060208201905081810360008301526125d98161259d565b9050919050565b7f63616e2774206469766964652062792030000000000000000000000000000000600082015250565b6000612616601183611aee565b9150612621826125e0565b602082019050919050565b6000602082019050818103600083015261264581612609565b9050919050565b7f6f766572666c6f77206174206469766964650000000000000000000000000000600082015250565b6000612682601283611aee565b915061268d8261264c565b602082019050919050565b600060208201905081810360008301526126b181612675565b905091905056fea26469706673582212208d6fe0b511ff627ac60524f5430d18bd51daf6bd26c2098de19f30dd0db38f6164736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806393ca6fc4116100b8578063c12398b41161007c578063c12398b41461031e578063ceff0bd61461034e578063ef712c5b1461036c578063f2fde38b1461039c578063f8e2b062146103b8578063f92ad219146103d657610142565b806393ca6fc41461027c578063a54b7fc014610298578063a68f548e146102c8578063a91ee0dc146102e6578063b830f4a41461030257610142565b8063541170fd1161010a578063541170fd146101d957806354255be0146101f7578063715018a6146102185780637b103999146102225780638da5cb5b146102405780638efd92ca1461025e57610142565b8063158ef93e1461014757806330f726b91461016557806336945c2d146101815780634a3d5fe21461019f5780634b930e5a146101bd575b600080fd5b61014f6103f2565b60405161015c9190611812565b60405180910390f35b61017f600480360381019061017a9190611868565b610405565b005b6101896104ce565b60405161019691906118a4565b60405180910390f35b6101a76104f9565b6040516101b491906118a4565b60405180910390f35b6101d760048036038101906101d29190611868565b610505565b005b6101e161051b565b6040516101ee91906118a4565b60405180910390f35b6101ff610520565b60405161020f94939291906118bf565b60405180910390f35b61022061053c565b005b61022a610550565b6040516102379190611983565b60405180910390f35b610248610576565b60405161025591906119bf565b60405180910390f35b61026661059f565b60405161027391906118a4565b60405180910390f35b61029660048036038101906102919190611868565b6105a5565b005b6102b260048036038101906102ad9190611a06565b61066e565b6040516102bf91906118a4565b60405180910390f35b6102d061068a565b6040516102dd91906118a4565b60405180910390f35b61030060048036038101906102fb9190611a06565b610696565b005b61031c60048036038101906103179190611868565b610794565b005b61033860048036038101906103339190611a33565b610820565b60405161034591906118a4565b60405180910390f35b6103566108e4565b60405161036391906118a4565b60405180910390f35b61038660048036038101906103819190611a33565b6108ea565b60405161039391906118a4565b60405180910390f35b6103b660048036038101906103b19190611a06565b610a82565b005b6103c0610b05565b6040516103cd91906118a4565b60405180910390f35b6103f060048036038101906103eb9190611a73565b610b0b565b005b600060149054906101000a900460ff1681565b61040d610bbc565b61041681610c3a565b600560008201518160000155905050610455610430610c58565b6005604051806020016040529081600082015481525050610c7e90919063ffffffff16565b610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90611b71565b60405180910390fd5b7fd2e71cd7012df1df07d4908ff75ae4b2bfbb6c49d39144404661f1fd47253283816040516104c391906118a4565b60405180910390a150565b6000806006541180156104e357506006544310155b156104f0574890506104f6565b60025490505b90565b60048060000154905081565b61050d610bbc565b610518816000610c93565b50565b600181565b6000806000806001600260006001935093509350935090919293565b610544610bbc565b61054e6000610d28565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6105ad610bbc565b6105b681610c3a565b6004600082015181600001559050506105f56105d0610c58565b6004604051806020016040529081600082015481525050610c7e90919063ffffffff16565b610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b90611c03565b60405180910390fd5b7f2a109bad06121312708ed2a3e9b3556ea85ef8eadd4d10d8181f50d114eb4fab8160405161066391906118a4565b60405180910390a150565b600061068361067c83610dec565b6001611097565b9050919050565b60058060000154905081565b61069e610bbc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490611c6f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b61079c610bbc565b600081116107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d690611d01565b60405180910390fd5b806003819055507f5548a13ccc1d9e4e2860461edda5ad49ba8a4fda485f67d954f9d7da8d2aff278160405161081591906118a4565b60405180910390a150565b60008073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790611d6d565b60405180910390fd5b61089a83836108ea565b6002819055507f6e53b2f8b69496c2a175588ad1326dbabe2f66df4d82f817aeca52e3474807fb6002546040516108d191906118a4565b60405180910390a1600254905092915050565b60035481565b6000806108f784846110b0565b905060006109246004604051806020016040529081600082015481525050836110e690919063ffffffff16565b905060008161095b576109568360046040518060200160405290816000820154815250506110fb90919063ffffffff16565b610985565b6109846004604051806020016040529081600082015481525050846110fb90919063ffffffff16565b5b90506000826109d5576109d06109ba83600560405180602001604052908160008201548152505061117890919063ffffffff16565b6109c2610c58565b6110fb90919063ffffffff16565b610a18565b610a17610a0183600560405180602001604052908160008201548152505061117890919063ffffffff16565b610a09610c58565b61150f90919063ffffffff16565b5b90506000610a5f610a5a610a2a610c58565b610a4c610a3d610a386104ce565b61158e565b8661117890919063ffffffff16565b61150f90919063ffffffff16565b61160b565b9050600354811015610a7357600354610a75565b805b9550505050505092915050565b610a8a610bbc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af090611dff565b60405180910390fd5b610b0281610d28565b50565b60025481565b600060149054906101000a900460ff1615610b5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5290611e6b565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550610b7f33610d28565b610b8885610696565b83600281905550610b9884610794565b610ba1836105a5565b610baa82610405565b610bb5816001610c93565b5050505050565b610bc461162e565b73ffffffffffffffffffffffffffffffffffffffff16610be2610576565b73ffffffffffffffffffffffffffffffffffffffff1614610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611ed7565b60405180910390fd5b565b610c426117e4565b6040518060200160405280838152509050919050565b610c606117e4565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b610c9b610bbc565b8080610ca75750600082115b610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdd90611f69565b60405180910390fd5b816006819055507fc74fe30765574b78669fcec5cea6b0dcaacd907890a49fc756a40235d01b09fc82604051610d1c91906118a4565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610f125750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed604051602001610e7090611fe0565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610ea2919061200e565b602060405180830381865afa158015610ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee3919061203e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15610f2657610f1f6104ce565b9050611092565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed604051602001610f75906120b7565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610fa7919061200e565b602060405180830381865afa158015610fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe8919061203e565b90506000808273ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0866040518263ffffffff1660e01b815260040161102691906119bf565b6040805180830381865afa158015611042573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106691906120e1565b809250819350505080826110786104ce565b6110829190612150565b61108c91906121c1565b93505050505b919050565b60008183116110a657816110a8565b825b905092915050565b6110b86117e4565b60006110c38461158e565b905060006110d08461158e565b90506110dc8282611636565b9250505092915050565b60008160000151836000015111905092915050565b6111036117e4565b81600001518360000151101561114e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111459061223e565b60405180910390fd5b60405180602001604052808360000151856000015161116d919061225e565b815250905092915050565b6111806117e4565b600083600001511480611197575060008260000151145b156111b357604051806020016040528060008152509050611509565b69d3c21bcecceda10000008260000151036111d057829050611509565b69d3c21bcecceda10000008360000151036111ed57819050611509565b600069d3c21bcecceda100000061120385611725565b6000015161121191906121c1565b9050600061121e85611767565b600001519050600069d3c21bcecceda100000061123a86611725565b6000015161124891906121c1565b9050600061125586611767565b600001519050600082856112699190612150565b9050600085146112c15782858261128091906121c1565b146112c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b7906122de565b60405180910390fd5b5b600069d3c21bcecceda1000000826112d99190612150565b90506000821461133b5769d3c21bcecceda100000082826112fa91906121c1565b1461133a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113319061234a565b60405180910390fd5b5b8091506000848661134c9190612150565b9050600086146113a45784868261136391906121c1565b146113a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139a906123b6565b60405180910390fd5b5b600084886113b29190612150565b90506000881461140a578488826113c991906121c1565b14611409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140090612422565b60405180910390fd5b5b6114126117b8565b8761141d91906121c1565b96506114276117b8565b8561143291906121c1565b9450600085886114429190612150565b90506000881461149a5785888261145991906121c1565b14611499576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114909061248e565b60405180910390fd5b5b600060405180602001604052808781525090506114c58160405180602001604052808781525061150f565b90506114df8160405180602001604052808681525061150f565b90506114f98160405180602001604052808581525061150f565b9050809a50505050505050505050505b92915050565b6115176117e4565b60008260000151846000015161152d91906124ae565b90508360000151811015611576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156d9061252e565b60405180910390fd5b60405180602001604052808281525091505092915050565b6115966117e4565b61159e6117c5565b8211156115e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d7906125c0565b60405180910390fd5b604051806020016040528069d3c21bcecceda1000000846116019190612150565b8152509050919050565b600069d3c21bcecceda1000000826000015161162791906121c1565b9050919050565b600033905090565b61163e6117e4565b6000826000015103611685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167c9061262c565b60405180910390fd5b600069d3c21bcecceda100000084600001516116a19190612150565b9050836000015169d3c21bcecceda1000000826116be91906121c1565b146116fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f590612698565b60405180910390fd5b604051806020016040528084600001518361171991906121c1565b81525091505092915050565b61172d6117e4565b604051806020016040528069d3c21bcecceda100000080856000015161175391906121c1565b61175d9190612150565b8152509050919050565b61176f6117e4565b604051806020016040528069d3c21bcecceda100000080856000015161179591906121c1565b61179f9190612150565b84600001516117ae919061225e565b8152509050919050565b600064e8d4a51000905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b6040518060200160405280600081525090565b60008115159050919050565b61180c816117f7565b82525050565b60006020820190506118276000830184611803565b92915050565b600080fd5b6000819050919050565b61184581611832565b811461185057600080fd5b50565b6000813590506118628161183c565b92915050565b60006020828403121561187e5761187d61182d565b5b600061188c84828501611853565b91505092915050565b61189e81611832565b82525050565b60006020820190506118b96000830184611895565b92915050565b60006080820190506118d46000830187611895565b6118e16020830186611895565b6118ee6040830185611895565b6118fb6060830184611895565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061194961194461193f84611904565b611924565b611904565b9050919050565b600061195b8261192e565b9050919050565b600061196d82611950565b9050919050565b61197d81611962565b82525050565b60006020820190506119986000830184611974565b92915050565b60006119a982611904565b9050919050565b6119b98161199e565b82525050565b60006020820190506119d460008301846119b0565b92915050565b6119e38161199e565b81146119ee57600080fd5b50565b600081359050611a00816119da565b92915050565b600060208284031215611a1c57611a1b61182d565b5b6000611a2a848285016119f1565b91505092915050565b60008060408385031215611a4a57611a4961182d565b5b6000611a5885828601611853565b9250506020611a6985828601611853565b9150509250929050565b600080600080600060a08688031215611a8f57611a8e61182d565b5b6000611a9d888289016119f1565b9550506020611aae88828901611853565b9450506040611abf88828901611853565b9350506060611ad088828901611853565b9250506080611ae188828901611853565b9150509295509295909350565b600082825260208201905092915050565b7f61646a7573746d656e74207370656564206d75737420626520736d616c6c657260008201527f207468616e203100000000000000000000000000000000000000000000000000602082015250565b6000611b5b602783611aee565b9150611b6682611aff565b604082019050919050565b60006020820190508181036000830152611b8a81611b4e565b9050919050565b7f7461726765742064656e73697479206d75737420626520736d616c6c6572207460008201527f68616e2031000000000000000000000000000000000000000000000000000000602082015250565b6000611bed602583611aee565b9150611bf882611b91565b604082019050919050565b60006020820190508181036000830152611c1c81611be0565b9050919050565b7f43616e6e6f7420726567697374657220746865206e756c6c2061646472657373600082015250565b6000611c59602083611aee565b9150611c6482611c23565b602082019050919050565b60006020820190508181036000830152611c8881611c4c565b9050919050565b7f676173207072696365206d696e696d756d20666c6f6f72206d7573742062652060008201527f67726561746572207468616e207a65726f000000000000000000000000000000602082015250565b6000611ceb603183611aee565b9150611cf682611c8f565b604082019050919050565b60006020820190508181036000830152611d1a81611cde565b9050919050565b7f4f6e6c7920564d2063616e2063616c6c00000000000000000000000000000000600082015250565b6000611d57601083611aee565b9150611d6282611d21565b602082019050919050565b60006020820190508181036000830152611d8681611d4a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611de9602683611aee565b9150611df482611d8d565b604082019050919050565b60006020820190508181036000830152611e1881611ddc565b9050919050565b7f636f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000611e55601c83611aee565b9150611e6082611e1f565b602082019050919050565b60006020820190508181036000830152611e8481611e48565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611ec1602083611aee565b9150611ecc82611e8b565b602082019050919050565b60006020820190508181036000830152611ef081611eb4565b9050919050565b7f62617365466565206f70436f64652061637469766174696f6e20626c6f636b2060008201527f6d7573742062652067726561746572207468616e207a65726f00000000000000602082015250565b6000611f53603983611aee565b9150611f5e82611ef7565b604082019050919050565b60006020820190508181036000830152611f8281611f46565b9050919050565b600081905092915050565b7f476f6c64546f6b656e0000000000000000000000000000000000000000000000600082015250565b6000611fca600983611f89565b9150611fd582611f94565b600982019050919050565b6000611feb82611fbd565b9150819050919050565b6000819050919050565b61200881611ff5565b82525050565b60006020820190506120236000830184611fff565b92915050565b600081519050612038816119da565b92915050565b6000602082840312156120545761205361182d565b5b600061206284828501612029565b91505092915050565b7f536f727465644f7261636c657300000000000000000000000000000000000000600082015250565b60006120a1600d83611f89565b91506120ac8261206b565b600d82019050919050565b60006120c282612094565b9150819050919050565b6000815190506120db8161183c565b92915050565b600080604083850312156120f8576120f761182d565b5b6000612106858286016120cc565b9250506020612117858286016120cc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061215b82611832565b915061216683611832565b925082820261217481611832565b9150828204841483151761218b5761218a612121565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121cc82611832565b91506121d783611832565b9250826121e7576121e6612192565b5b828204905092915050565b7f737562737472616374696f6e20756e646572666c6f7720646574656374656400600082015250565b6000612228601f83611aee565b9150612233826121f2565b602082019050919050565b600060208201905081810360008301526122578161221b565b9050919050565b600061226982611832565b915061227483611832565b925082820390508181111561228c5761228b612121565b5b92915050565b7f6f766572666c6f77207831793120646574656374656400000000000000000000600082015250565b60006122c8601683611aee565b91506122d382612292565b602082019050919050565b600060208201905081810360008301526122f7816122bb565b9050919050565b7f6f766572666c6f772078317931202a2066697865643120646574656374656400600082015250565b6000612334601f83611aee565b915061233f826122fe565b602082019050919050565b6000602082019050818103600083015261236381612327565b9050919050565b7f6f766572666c6f77207832793120646574656374656400000000000000000000600082015250565b60006123a0601683611aee565b91506123ab8261236a565b602082019050919050565b600060208201905081810360008301526123cf81612393565b9050919050565b7f6f766572666c6f77207831793220646574656374656400000000000000000000600082015250565b600061240c601683611aee565b9150612417826123d6565b602082019050919050565b6000602082019050818103600083015261243b816123ff565b9050919050565b7f6f766572666c6f77207832793220646574656374656400000000000000000000600082015250565b6000612478601683611aee565b915061248382612442565b602082019050919050565b600060208201905081810360008301526124a78161246b565b9050919050565b60006124b982611832565b91506124c483611832565b92508282019050808211156124dc576124db612121565b5b92915050565b7f616464206f766572666c6f772064657465637465640000000000000000000000600082015250565b6000612518601583611aee565b9150612523826124e2565b602082019050919050565b600060208201905081810360008301526125478161250b565b9050919050565b7f63616e277420637265617465206669786964697479206e756d626572206c617260008201527f676572207468616e206d61784e65774669786564282900000000000000000000602082015250565b60006125aa603683611aee565b91506125b58261254e565b604082019050919050565b600060208201905081810360008301526125d98161259d565b9050919050565b7f63616e2774206469766964652062792030000000000000000000000000000000600082015250565b6000612616601183611aee565b9150612621826125e0565b602082019050919050565b6000602082019050818103600083015261264581612609565b9050919050565b7f6f766572666c6f77206174206469766964650000000000000000000000000000600082015250565b6000612682601283611aee565b915061268d8261264c565b602082019050919050565b600060208201905081810360008301526126b181612675565b905091905056fea26469706673582212208d6fe0b511ff627ac60524f5430d18bd51daf6bd26c2098de19f30dd0db38f6164736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1043:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:18",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:18",
                "type": ""
              }
            ],
            "src": "7:75:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:18"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:18"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "376:48:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "386:32:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "411:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "404:6:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "404:13:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "397:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:21:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "386:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "358:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "368:7:18",
                "type": ""
              }
            ],
            "src": "334:90:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:76:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "524:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "536:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "526:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "526:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "526:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "493:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "515:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "500:14:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "500:21:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "490:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "490:32:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "483:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:40:18"
                  },
                  "nodeType": "YulIf",
                  "src": "480:60:18"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "463:5:18",
                "type": ""
              }
            ],
            "src": "430:116:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "612:77:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "622:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "637:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "631:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "631:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "622:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "677:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "653:23:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "653:30:18"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "590:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "598:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "606:5:18",
                "type": ""
              }
            ],
            "src": "552:137:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "769:271:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "817:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "790:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "799:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "779:119:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "908:125:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "923:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "927:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "952:71:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "995:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1006:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "991:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "991:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1015:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "962:28:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:61:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "952:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "739:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "750:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "762:6:18",
                "type": ""
              }
            ],
            "src": "695:345:18"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:30031:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:18",
                "type": ""
              }
            ],
            "src": "7:90:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:18"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:18",
                "type": ""
              }
            ],
            "src": "103:109:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:18",
                "type": ""
              }
            ],
            "src": "218:210:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:35:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "484:19:18",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "494:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "467:6:18",
                "type": ""
              }
            ],
            "src": "434:75:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:28:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:12:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:12:18"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "515:117:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:28:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:12:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:12:18"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "638:117:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "806:32:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "816:16:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "827:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "816:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "788:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "798:7:18",
                "type": ""
              }
            ],
            "src": "761:77:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "887:79:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "944:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "953:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "956:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "946:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "946:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "946:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "910:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "935:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "917:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "917:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "907:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "907:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "900:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "900:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "897:63:18"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "880:5:18",
                "type": ""
              }
            ],
            "src": "844:122:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1024:87:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1056:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1043:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1034:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1099:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1072:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1072:33:18"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1002:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1010:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1018:5:18",
                "type": ""
              }
            ],
            "src": "972:139:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:263:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1229:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1231:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1231:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1231:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1204:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1213:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1200:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1225:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1196:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1196:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1193:119:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1322:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1337:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1351:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1341:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1366:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1401:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1412:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1397:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1397:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1421:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1376:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1376:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1366:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1153:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1164:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1176:6:18",
                "type": ""
              }
            ],
            "src": "1117:329:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1517:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1534:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1557:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1539:17:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1539:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1527:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:37:18"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1505:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1512:3:18",
                "type": ""
              }
            ],
            "src": "1452:118:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1674:124:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1684:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1696:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1692:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1684:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1764:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1777:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1720:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1720:71:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1646:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1658:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1669:4:18",
                "type": ""
              }
            ],
            "src": "1576:222:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1986:371:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1996:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2008:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2019:3:18",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2004:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2004:19:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1996:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2077:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2090:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2101:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2086:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2086:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2033:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2033:71:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2158:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2171:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2182:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2167:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2167:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2114:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2114:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2114:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2240:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2253:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2264:2:18",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2249:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2249:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2196:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2196:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2196:72:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2322:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2335:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2346:2:18",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2331:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2331:18:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2278:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:72:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:72:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1934:9:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1946:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1954:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1962:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1970:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1981:4:18",
                "type": ""
              }
            ],
            "src": "1804:553:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2408:81:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2418:65:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2433:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2440:42:18",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2429:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:54:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2418:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2390:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2400:7:18",
                "type": ""
              }
            ],
            "src": "2363:126:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2527:28:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2537:12:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2544:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2537:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2513:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2523:3:18",
                "type": ""
              }
            ],
            "src": "2495:60:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2621:82:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2631:66:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2689:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "2671:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2671:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "2662:8:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2662:34:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2644:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2644:53:18"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2631:9:18"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2601:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2611:9:18",
                "type": ""
              }
            ],
            "src": "2561:142:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2769:66:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2779:50:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2823:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2792:30:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2792:37:18"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2779:9:18"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2749:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2759:9:18",
                "type": ""
              }
            ],
            "src": "2709:126:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2919:66:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2929:50:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2973:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2942:30:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2942:37:18"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2929:9:18"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_IRegistry_$3105_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2899:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2909:9:18",
                "type": ""
              }
            ],
            "src": "2841:144:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3074:84:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3091:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3145:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_IRegistry_$3105_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3096:48:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3096:55:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3084:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3084:68:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3084:68:18"
                }
              ]
            },
            "name": "abi_encode_t_contract$_IRegistry_$3105_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3062:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3069:3:18",
                "type": ""
              }
            ],
            "src": "2991:167:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3280:142:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3290:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3302:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3313:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3298:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3298:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3290:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3388:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3401:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3412:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3397:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3397:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_IRegistry_$3105_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3326:61:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:89:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3326:89:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IRegistry_$3105__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3252:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3264:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3275:4:18",
                "type": ""
              }
            ],
            "src": "3164:258:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3473:51:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3483:35:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3512:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3494:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3494:24:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3483:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3455:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3465:7:18",
                "type": ""
              }
            ],
            "src": "3428:96:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3595:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3612:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3635:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3617:17:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3617:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3605:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3605:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3605:37:18"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3583:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3590:3:18",
                "type": ""
              }
            ],
            "src": "3530:118:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3752:124:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3762:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3774:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3785:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3770:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3762:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3842:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3855:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3866:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3851:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3851:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3798:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3798:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3798:71:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3724:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3736:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3747:4:18",
                "type": ""
              }
            ],
            "src": "3654:222:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3925:79:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3982:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3991:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3994:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3984:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3984:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3984:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3948:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3973:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3955:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3955:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3945:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3945:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3938:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3938:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "3935:63:18"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3918:5:18",
                "type": ""
              }
            ],
            "src": "3882:122:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4062:87:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4072:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4094:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4081:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4081:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4072:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4137:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4110:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4110:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4110:33:18"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4040:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4048:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4056:5:18",
                "type": ""
              }
            ],
            "src": "4010:139:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4221:263:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4267:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4269:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4269:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4269:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4242:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4251:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4238:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4238:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4263:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4234:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4234:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "4231:119:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4360:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4375:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4389:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4379:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4404:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4439:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4450:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4435:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4435:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4459:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4414:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4414:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4404:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4191:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4202:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4214:6:18",
                "type": ""
              }
            ],
            "src": "4155:329:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4573:391:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4619:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4621:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4621:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4621:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4594:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4603:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4590:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4590:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4615:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4586:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4586:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "4583:119:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4712:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4727:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4741:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4731:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4756:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4791:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4802:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4787:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4787:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4811:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4766:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4766:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4756:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4839:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4854:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4868:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4858:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4884:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4919:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4930:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4915:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4915:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4939:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4894:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4894:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4884:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4535:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4546:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4558:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4566:6:18",
                "type": ""
              }
            ],
            "src": "4490:474:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5104:777:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5151:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5153:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5153:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5153:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5125:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5134:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5121:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5121:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5146:3:18",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5117:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5117:33:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5114:120:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5244:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5259:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5273:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5263:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5288:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5323:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5334:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5319:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5319:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5343:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5298:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5298:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5288:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5371:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5386:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5400:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5390:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5416:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5451:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5462:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5447:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5447:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5471:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5426:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5426:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5416:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5499:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5514:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5528:2:18",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5518:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5544:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5579:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5590:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5575:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5575:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5599:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5554:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5554:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "5544:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5627:118:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5642:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5656:2:18",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5646:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5672:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5707:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5718:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5703:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5703:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5727:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5682:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5682:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "5672:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5755:119:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5770:17:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5784:3:18",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5774:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5801:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5836:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5847:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5832:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5832:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5856:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5811:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5811:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "5801:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5042:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5053:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5065:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5073:6:18",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5081:6:18",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5089:6:18",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5097:6:18",
                "type": ""
              }
            ],
            "src": "4970:911:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5983:73:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6000:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6005:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5993:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:19:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5993:19:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6021:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6040:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6045:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6036:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6036:14:18"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "6021:11:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5955:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5960:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5971:11:18",
                "type": ""
              }
            ],
            "src": "5887:169:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6168:120:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6190:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6198:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6186:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6186:14:18"
                      },
                      {
                        "hexValue": "61646a7573746d656e74207370656564206d75737420626520736d616c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6202:34:18",
                        "type": "",
                        "value": "adjustment speed must be smaller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6179:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6179:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6179:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6258:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6266:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6254:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6254:15:18"
                      },
                      {
                        "hexValue": "207468616e2031",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6271:9:18",
                        "type": "",
                        "value": " than 1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6247:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6247:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6247:34:18"
                }
              ]
            },
            "name": "store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6160:6:18",
                "type": ""
              }
            ],
            "src": "6062:226:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6440:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6450:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6516:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6521:2:18",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6457:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6457:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6450:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6622:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
                      "nodeType": "YulIdentifier",
                      "src": "6533:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6533:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6533:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6635:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6646:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6651:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6642:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6642:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6635:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6428:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6436:3:18",
                "type": ""
              }
            ],
            "src": "6294:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6837:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6847:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6859:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6870:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6855:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6855:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6847:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6894:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6905:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6890:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6890:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6913:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6919:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6909:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6909:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6883:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6883:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6883:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6939:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7073:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6947:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6947:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6939:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6817:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6832:4:18",
                "type": ""
              }
            ],
            "src": "6666:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7197:118:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7219:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7227:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:14:18"
                      },
                      {
                        "hexValue": "7461726765742064656e73697479206d75737420626520736d616c6c65722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7231:34:18",
                        "type": "",
                        "value": "target density must be smaller t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7208:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7287:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7295:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7283:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7283:15:18"
                      },
                      {
                        "hexValue": "68616e2031",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7300:7:18",
                        "type": "",
                        "value": "han 1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7276:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7276:32:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7276:32:18"
                }
              ]
            },
            "name": "store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7189:6:18",
                "type": ""
              }
            ],
            "src": "7091:224:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7467:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7477:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7543:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7548:2:18",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7484:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7484:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7477:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7649:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
                      "nodeType": "YulIdentifier",
                      "src": "7560:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7560:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7560:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7662:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7673:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7678:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7669:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7669:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7662:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7455:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7463:3:18",
                "type": ""
              }
            ],
            "src": "7321:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7864:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7874:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7886:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7897:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7882:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7882:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7874:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7921:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7932:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7917:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7917:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7940:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7946:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7936:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7936:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7910:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7910:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7910:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7966:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8100:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7974:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7974:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7966:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7844:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7859:4:18",
                "type": ""
              }
            ],
            "src": "7693:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8224:76:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8246:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8254:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8242:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8242:14:18"
                      },
                      {
                        "hexValue": "43616e6e6f7420726567697374657220746865206e756c6c2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8258:34:18",
                        "type": "",
                        "value": "Cannot register the null address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8235:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8235:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8235:58:18"
                }
              ]
            },
            "name": "store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8216:6:18",
                "type": ""
              }
            ],
            "src": "8118:182:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8452:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8462:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8528:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8533:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8469:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8469:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8462:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8634:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8",
                      "nodeType": "YulIdentifier",
                      "src": "8545:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8545:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8545:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8647:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8658:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8663:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8654:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8654:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8647:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8440:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8448:3:18",
                "type": ""
              }
            ],
            "src": "8306:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8849:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8859:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8871:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8882:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8867:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8867:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8859:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8906:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8917:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8902:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8902:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8925:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8931:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8921:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8921:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8895:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8895:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8895:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8951:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9085:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8959:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8959:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8951:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8829:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8844:4:18",
                "type": ""
              }
            ],
            "src": "8678:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9209:130:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9231:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9239:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9227:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9227:14:18"
                      },
                      {
                        "hexValue": "676173207072696365206d696e696d756d20666c6f6f72206d75737420626520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9243:34:18",
                        "type": "",
                        "value": "gas price minimum floor must be "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9220:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9220:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9220:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9299:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9307:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9295:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9295:15:18"
                      },
                      {
                        "hexValue": "67726561746572207468616e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9312:19:18",
                        "type": "",
                        "value": "greater than zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9288:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9288:44:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9288:44:18"
                }
              ]
            },
            "name": "store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9201:6:18",
                "type": ""
              }
            ],
            "src": "9103:236:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9491:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9501:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9567:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9572:2:18",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9508:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9508:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9501:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9673:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
                      "nodeType": "YulIdentifier",
                      "src": "9584:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9584:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9584:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9686:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9697:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9702:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9693:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9693:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9686:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9479:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9487:3:18",
                "type": ""
              }
            ],
            "src": "9345:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9888:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9898:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9910:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9921:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9906:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9906:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9898:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9945:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9956:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9941:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9941:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9964:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9970:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9960:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9960:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9934:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9934:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9934:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9990:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10124:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9998:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9998:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9990:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9868:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9883:4:18",
                "type": ""
              }
            ],
            "src": "9717:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10248:60:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10270:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10278:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10266:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10266:14:18"
                      },
                      {
                        "hexValue": "4f6e6c7920564d2063616e2063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10282:18:18",
                        "type": "",
                        "value": "Only VM can call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10259:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10259:42:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10259:42:18"
                }
              ]
            },
            "name": "store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10240:6:18",
                "type": ""
              }
            ],
            "src": "10142:166:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10460:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10470:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10536:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10541:2:18",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10477:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10477:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10470:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10642:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750",
                      "nodeType": "YulIdentifier",
                      "src": "10553:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10553:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10553:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10655:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10666:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10671:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10662:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10662:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10655:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10448:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10456:3:18",
                "type": ""
              }
            ],
            "src": "10314:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10857:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10867:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10879:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10890:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10875:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10875:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10867:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10914:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10925:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10910:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10910:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10933:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10939:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10929:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10929:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10903:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10903:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10903:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10959:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11093:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10967:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10967:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10959:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10837:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10852:4:18",
                "type": ""
              }
            ],
            "src": "10686:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11217:119:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11239:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11247:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11235:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11235:14:18"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11251:34:18",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11228:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11228:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11228:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11307:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11315:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11303:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11303:15:18"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11320:8:18",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11296:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11296:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11296:33:18"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11209:6:18",
                "type": ""
              }
            ],
            "src": "11111:225:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11488:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11498:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11564:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11569:2:18",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11505:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11505:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11498:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11670:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "11581:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11581:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11581:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11683:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11694:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11699:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11690:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11690:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11683:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11476:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11484:3:18",
                "type": ""
              }
            ],
            "src": "11342:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11885:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11895:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11907:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11918:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11903:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11903:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11895:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11942:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11953:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11938:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11938:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11961:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11967:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11957:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11957:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11931:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11931:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11931:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11987:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12121:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11995:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11995:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11987:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11865:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11880:4:18",
                "type": ""
              }
            ],
            "src": "11714:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12245:72:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12267:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12275:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12263:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12263:14:18"
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12279:30:18",
                        "type": "",
                        "value": "contract already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12256:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12256:54:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12256:54:18"
                }
              ]
            },
            "name": "store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12237:6:18",
                "type": ""
              }
            ],
            "src": "12139:178:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12469:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12479:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12545:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12550:2:18",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12486:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12486:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12479:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12651:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134",
                      "nodeType": "YulIdentifier",
                      "src": "12562:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12562:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12562:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12664:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12675:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12680:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12671:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12671:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12664:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12457:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12465:3:18",
                "type": ""
              }
            ],
            "src": "12323:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12866:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12876:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12888:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12899:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12884:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12884:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12876:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12923:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12934:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12919:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12919:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12942:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12948:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12938:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12938:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12912:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12912:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12912:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12968:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13102:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12976:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12976:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12968:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12846:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12861:4:18",
                "type": ""
              }
            ],
            "src": "12695:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13226:76:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13248:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13256:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13244:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13244:14:18"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13260:34:18",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13237:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13237:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13237:58:18"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13218:6:18",
                "type": ""
              }
            ],
            "src": "13120:182:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13454:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13464:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13530:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13535:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13471:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13471:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13464:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13636:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "13547:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13547:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13547:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13649:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13660:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13665:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13656:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13656:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13649:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13442:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13450:3:18",
                "type": ""
              }
            ],
            "src": "13308:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13851:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13861:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13873:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13884:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13869:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13869:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13861:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13908:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13919:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13904:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13904:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13927:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13933:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13923:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13923:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13897:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13897:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13897:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13953:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14087:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13961:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13961:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13953:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13831:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13846:4:18",
                "type": ""
              }
            ],
            "src": "13680:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14211:138:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14233:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14241:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14229:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14229:14:18"
                      },
                      {
                        "hexValue": "62617365466565206f70436f64652061637469766174696f6e20626c6f636b20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14245:34:18",
                        "type": "",
                        "value": "baseFee opCode activation block "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14222:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14222:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14222:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14301:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14309:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14297:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14297:15:18"
                      },
                      {
                        "hexValue": "6d7573742062652067726561746572207468616e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14314:27:18",
                        "type": "",
                        "value": "must be greater than zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14290:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14290:52:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14290:52:18"
                }
              ]
            },
            "name": "store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14203:6:18",
                "type": ""
              }
            ],
            "src": "14105:244:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14501:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14511:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14577:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14582:2:18",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14518:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14518:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14511:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14683:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
                      "nodeType": "YulIdentifier",
                      "src": "14594:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14594:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14594:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14696:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14707:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14712:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14703:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14703:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14696:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14489:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14497:3:18",
                "type": ""
              }
            ],
            "src": "14355:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14898:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14908:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14920:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14931:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14916:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14916:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14908:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14955:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14966:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14951:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14951:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14974:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14980:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14970:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14970:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14944:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14944:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14944:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15000:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15134:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15008:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15008:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15000:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14878:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14893:4:18",
                "type": ""
              }
            ],
            "src": "14727:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15266:34:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15276:18:18",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "15291:3:18"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "15276:11:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15238:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15243:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "15254:11:18",
                "type": ""
              }
            ],
            "src": "15152:148:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15412:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15434:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15442:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15430:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15430:14:18"
                      },
                      {
                        "hexValue": "476f6c64546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15446:11:18",
                        "type": "",
                        "value": "GoldToken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15423:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15423:35:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15423:35:18"
                }
              ]
            },
            "name": "store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15404:6:18",
                "type": ""
              }
            ],
            "src": "15306:159:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15635:236:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15645:91:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15729:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15734:1:18",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15652:76:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15652:84:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15645:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15834:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
                      "nodeType": "YulIdentifier",
                      "src": "15745:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15745:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15745:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15847:18:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15858:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15863:1:18",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15854:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15854:11:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15847:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15623:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15631:3:18",
                "type": ""
              }
            ],
            "src": "15471:400:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16066:192:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16077:155:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16228:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16084:142:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16084:148:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "16077:3:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16242:10:18",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "16249:3:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "16242:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16053:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16062:3:18",
                "type": ""
              }
            ],
            "src": "15877:381:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16309:32:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16319:16:18",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16330:5:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16319:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16291:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16301:7:18",
                "type": ""
              }
            ],
            "src": "16264:77:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16412:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16429:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16452:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "16434:17:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16434:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16422:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16422:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16422:37:18"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16400:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16407:3:18",
                "type": ""
              }
            ],
            "src": "16347:118:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16569:124:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16579:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16591:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16602:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16587:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16587:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16579:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16659:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16672:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16683:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16668:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16668:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16615:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16615:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16615:71:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16541:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16553:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16564:4:18",
                "type": ""
              }
            ],
            "src": "16471:222:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16762:80:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16772:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "16787:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16781:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16781:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "16772:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16830:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "16803:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16803:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16803:33:18"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "16740:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16748:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16756:5:18",
                "type": ""
              }
            ],
            "src": "16699:143:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16925:274:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16971:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "16973:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16973:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16973:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "16946:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16955:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16942:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16942:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16967:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "16938:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16938:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "16935:119:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "17064:128:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "17079:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17093:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "17083:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "17108:74:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17154:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "17165:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17150:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17150:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "17174:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "17118:31:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17118:64:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "17108:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16895:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "16906:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16918:6:18",
                "type": ""
              }
            ],
            "src": "16848:351:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17311:57:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17333:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17341:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17329:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17329:14:18"
                      },
                      {
                        "hexValue": "536f727465644f7261636c6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17345:15:18",
                        "type": "",
                        "value": "SortedOracles"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17322:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17322:39:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17322:39:18"
                }
              ]
            },
            "name": "store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17303:6:18",
                "type": ""
              }
            ],
            "src": "17205:163:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17538:238:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17548:92:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17632:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17637:2:18",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17555:76:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17555:85:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17548:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17738:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
                      "nodeType": "YulIdentifier",
                      "src": "17649:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17649:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17649:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17751:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17762:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17767:2:18",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17758:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17758:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17751:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17526:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17534:3:18",
                "type": ""
              }
            ],
            "src": "17374:402:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17971:192:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17982:155:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18133:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17989:142:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17989:148:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17982:3:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18147:10:18",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "18154:3:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18147:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17958:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17967:3:18",
                "type": ""
              }
            ],
            "src": "17782:381:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18232:80:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18242:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "18257:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "18251:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18251:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "18242:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18300:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18273:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18273:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18273:33:18"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "18210:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18218:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18226:5:18",
                "type": ""
              }
            ],
            "src": "18169:143:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18412:413:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18458:83:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "18460:77:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18460:79:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18460:79:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18433:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18442:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "18429:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18429:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18454:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "18425:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18425:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "18422:119:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "18551:128:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "18566:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18580:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "18570:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18595:74:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18641:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "18652:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18637:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18637:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18661:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "18605:31:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18605:64:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "18595:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "18689:129:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "18704:16:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18718:2:18",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "18708:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "18734:74:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18780:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "18791:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18776:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18776:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "18800:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "18744:31:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18744:64:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "18734:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18374:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "18385:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18397:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18405:6:18",
                "type": ""
              }
            ],
            "src": "18318:507:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18859:152:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18876:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18879:77:18",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18869:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18869:88:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18869:88:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18973:1:18",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18976:4:18",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18966:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18966:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18966:15:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18997:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19000:4:18",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18990:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18990:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18990:15:18"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "18831:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19065:362:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19075:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19098:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19080:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19080:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19075:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19109:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19132:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19114:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19114:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19109:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19143:28:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19166:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19169:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "19162:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19162:9:18"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "19147:11:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19180:41:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "19209:11:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19191:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19191:30:18"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "19180:7:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19398:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19400:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19400:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19400:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19331:1:18"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "19324:6:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19324:9:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "19354:1:18"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "19361:7:18"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19370:1:18"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "19357:3:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19357:15:18"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "19351:2:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19351:22:18"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "19304:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19304:83:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19284:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19284:113:18"
                  },
                  "nodeType": "YulIf",
                  "src": "19281:139:18"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19048:1:18",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19051:1:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "19057:7:18",
                "type": ""
              }
            ],
            "src": "19017:410:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19461:152:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19478:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19481:77:18",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19471:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19471:88:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19471:88:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19575:1:18",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19578:4:18",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19568:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19568:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19568:15:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19599:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19602:4:18",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19592:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19592:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19592:15:18"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "19433:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19661:143:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19671:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19694:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19676:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19676:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "19671:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19705:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19728:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "19710:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19710:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "19705:1:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19752:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "19754:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19754:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19754:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19749:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19742:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19742:9:18"
                  },
                  "nodeType": "YulIf",
                  "src": "19739:35:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19784:14:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19793:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19796:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "19789:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19789:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "19784:1:18"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19650:1:18",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19653:1:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "19659:1:18",
                "type": ""
              }
            ],
            "src": "19619:185:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19916:75:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19938:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19946:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19934:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19934:14:18"
                      },
                      {
                        "hexValue": "737562737472616374696f6e20756e646572666c6f77206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19950:33:18",
                        "type": "",
                        "value": "substraction underflow detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19927:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19927:57:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19927:57:18"
                }
              ]
            },
            "name": "store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19908:6:18",
                "type": ""
              }
            ],
            "src": "19810:181:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20143:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20153:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20219:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20224:2:18",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20160:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20160:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20153:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20325:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f",
                      "nodeType": "YulIdentifier",
                      "src": "20236:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20236:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20236:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20338:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20349:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20354:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20345:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20345:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20338:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20131:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20139:3:18",
                "type": ""
              }
            ],
            "src": "19997:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20540:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20550:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20562:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20573:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20558:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20558:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20550:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20597:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20608:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20593:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20593:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20616:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20622:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20612:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20612:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20586:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20586:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20586:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20642:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20776:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20650:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20650:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20642:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20520:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20535:4:18",
                "type": ""
              }
            ],
            "src": "20369:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20839:149:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20849:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20872:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "20854:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20854:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "20849:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20883:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20906:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "20888:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20888:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "20883:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20917:17:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20929:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "20932:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "20925:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20925:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "20917:4:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "20959:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "20961:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20961:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "20961:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "20950:4:18"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "20956:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "20947:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20947:11:18"
                  },
                  "nodeType": "YulIf",
                  "src": "20944:37:18"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "20825:1:18",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "20828:1:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "20834:4:18",
                "type": ""
              }
            ],
            "src": "20794:194:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21100:66:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21122:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21130:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21118:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21118:14:18"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317931206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21134:24:18",
                        "type": "",
                        "value": "overflow x1y1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21111:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21111:48:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21111:48:18"
                }
              ]
            },
            "name": "store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21092:6:18",
                "type": ""
              }
            ],
            "src": "20994:172:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21318:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21328:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21394:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21399:2:18",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21335:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21335:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21328:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21500:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381",
                      "nodeType": "YulIdentifier",
                      "src": "21411:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21411:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21411:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21513:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21524:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21529:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21520:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21520:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21513:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21306:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21314:3:18",
                "type": ""
              }
            ],
            "src": "21172:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21715:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21725:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21737:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21748:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21733:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21733:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21725:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21772:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21783:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21768:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21768:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21791:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21797:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21787:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21787:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21761:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21761:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21761:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21817:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21951:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21825:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21825:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21817:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21695:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21710:4:18",
                "type": ""
              }
            ],
            "src": "21544:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22075:75:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22097:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22105:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22093:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22093:14:18"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317931202a20666978656431206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22109:33:18",
                        "type": "",
                        "value": "overflow x1y1 * fixed1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22086:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22086:57:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22086:57:18"
                }
              ]
            },
            "name": "store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22067:6:18",
                "type": ""
              }
            ],
            "src": "21969:181:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22302:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22312:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22378:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22383:2:18",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22319:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22319:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22312:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22484:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d",
                      "nodeType": "YulIdentifier",
                      "src": "22395:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22395:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22395:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22497:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22508:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22513:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22504:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22504:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22497:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22290:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22298:3:18",
                "type": ""
              }
            ],
            "src": "22156:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22699:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22709:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22721:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22732:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22717:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22717:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22709:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22756:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22767:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22752:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22752:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22775:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22781:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22771:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22771:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22745:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22745:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22745:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22801:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22935:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22809:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22809:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22801:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22679:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22694:4:18",
                "type": ""
              }
            ],
            "src": "22528:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23059:66:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23081:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23089:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23077:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23077:14:18"
                      },
                      {
                        "hexValue": "6f766572666c6f772078327931206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23093:24:18",
                        "type": "",
                        "value": "overflow x2y1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23070:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23070:48:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23070:48:18"
                }
              ]
            },
            "name": "store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23051:6:18",
                "type": ""
              }
            ],
            "src": "22953:172:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23277:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23287:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23353:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23358:2:18",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23294:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23294:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23287:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23459:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee",
                      "nodeType": "YulIdentifier",
                      "src": "23370:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23370:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23370:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23472:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23483:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23488:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23479:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23479:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23472:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23265:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23273:3:18",
                "type": ""
              }
            ],
            "src": "23131:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23674:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23684:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23696:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23707:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23692:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23692:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23684:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23731:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23742:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23727:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23727:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23750:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23756:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23746:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23746:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23720:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23720:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23720:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23776:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "23910:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23784:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23784:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23776:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23654:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23669:4:18",
                "type": ""
              }
            ],
            "src": "23503:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24034:66:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24056:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24064:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24052:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24052:14:18"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317932206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24068:24:18",
                        "type": "",
                        "value": "overflow x1y2 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24045:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24045:48:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24045:48:18"
                }
              ]
            },
            "name": "store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "24026:6:18",
                "type": ""
              }
            ],
            "src": "23928:172:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24252:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24262:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24328:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24333:2:18",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24269:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24269:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24262:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24434:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7",
                      "nodeType": "YulIdentifier",
                      "src": "24345:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24345:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24345:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24447:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24458:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24463:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24454:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24454:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24447:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24240:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24248:3:18",
                "type": ""
              }
            ],
            "src": "24106:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24649:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24659:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24671:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24682:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24667:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24667:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24659:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24706:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24717:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24702:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24702:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24725:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24731:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24721:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24721:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24695:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24695:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24695:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24751:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24885:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24759:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24759:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24751:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24629:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24644:4:18",
                "type": ""
              }
            ],
            "src": "24478:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25009:66:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25031:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25039:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25027:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25027:14:18"
                      },
                      {
                        "hexValue": "6f766572666c6f772078327932206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25043:24:18",
                        "type": "",
                        "value": "overflow x2y2 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25020:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25020:48:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25020:48:18"
                }
              ]
            },
            "name": "store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25001:6:18",
                "type": ""
              }
            ],
            "src": "24903:172:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25227:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25237:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25303:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25308:2:18",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25244:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25244:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25237:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25409:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97",
                      "nodeType": "YulIdentifier",
                      "src": "25320:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25320:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25320:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25422:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25433:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25438:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25429:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25429:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25422:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25215:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25223:3:18",
                "type": ""
              }
            ],
            "src": "25081:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25624:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25634:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25646:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25657:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25642:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25642:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25634:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25681:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25692:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25677:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25677:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25700:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25706:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25696:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25696:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25670:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25670:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25670:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25726:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25860:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25734:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25734:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25726:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25604:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25619:4:18",
                "type": ""
              }
            ],
            "src": "25453:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25922:147:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25932:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "25955:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "25937:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25937:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "25932:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25966:25:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "25989:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "25971:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25971:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "25966:1:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26000:16:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "26011:1:18"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "26014:1:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26007:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26007:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "26000:3:18"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "26040:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "26042:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "26042:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "26042:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "26032:1:18"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "26035:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "26029:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26029:10:18"
                  },
                  "nodeType": "YulIf",
                  "src": "26026:36:18"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "25909:1:18",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "25912:1:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "25918:3:18",
                "type": ""
              }
            ],
            "src": "25878:191:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26181:65:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26203:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26211:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26199:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26199:14:18"
                      },
                      {
                        "hexValue": "616464206f766572666c6f77206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26215:23:18",
                        "type": "",
                        "value": "add overflow detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26192:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26192:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26192:47:18"
                }
              ]
            },
            "name": "store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26173:6:18",
                "type": ""
              }
            ],
            "src": "26075:171:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26398:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26408:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26474:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26479:2:18",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26415:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26415:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26408:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26580:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14",
                      "nodeType": "YulIdentifier",
                      "src": "26491:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26491:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26491:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26593:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26604:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26609:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26600:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26600:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26593:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26386:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26394:3:18",
                "type": ""
              }
            ],
            "src": "26252:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26795:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26805:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26817:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26828:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26813:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26813:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26805:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26852:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26863:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26848:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26848:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26871:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26877:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26867:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26867:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26841:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26841:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26841:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26897:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27031:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26905:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26905:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26897:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26775:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26790:4:18",
                "type": ""
              }
            ],
            "src": "26624:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27155:135:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27177:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27185:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27173:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27173:14:18"
                      },
                      {
                        "hexValue": "63616e277420637265617465206669786964697479206e756d626572206c6172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27189:34:18",
                        "type": "",
                        "value": "can't create fixidity number lar"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27166:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27166:58:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27166:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27245:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27253:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27241:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27241:15:18"
                      },
                      {
                        "hexValue": "676572207468616e206d61784e657746697865642829",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27258:24:18",
                        "type": "",
                        "value": "ger than maxNewFixed()"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27234:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27234:49:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27234:49:18"
                }
              ]
            },
            "name": "store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27147:6:18",
                "type": ""
              }
            ],
            "src": "27049:241:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27442:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27452:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27518:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27523:2:18",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27459:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27459:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27452:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27624:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535",
                      "nodeType": "YulIdentifier",
                      "src": "27535:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27535:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27535:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27637:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27648:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27653:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27644:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27644:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27637:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27430:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27438:3:18",
                "type": ""
              }
            ],
            "src": "27296:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27839:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27849:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27861:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27872:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27857:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27857:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27849:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27896:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27907:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27892:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27892:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27915:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27921:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27911:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27911:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27885:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27885:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27885:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27941:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "28075:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27949:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27949:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27941:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27819:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27834:4:18",
                "type": ""
              }
            ],
            "src": "27668:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28199:61:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "28221:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28229:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28217:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28217:14:18"
                      },
                      {
                        "hexValue": "63616e2774206469766964652062792030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "28233:19:18",
                        "type": "",
                        "value": "can't divide by 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28210:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28210:43:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28210:43:18"
                }
              ]
            },
            "name": "store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "28191:6:18",
                "type": ""
              }
            ],
            "src": "28093:167:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28412:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28422:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28488:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28493:2:18",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28429:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28429:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "28422:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28594:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea",
                      "nodeType": "YulIdentifier",
                      "src": "28505:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28505:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28505:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28607:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "28618:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28623:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28614:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28614:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "28607:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "28400:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "28408:3:18",
                "type": ""
              }
            ],
            "src": "28266:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "28809:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "28819:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "28831:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "28842:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "28827:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28827:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28819:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28866:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "28877:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "28862:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28862:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "28885:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "28891:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "28881:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "28881:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "28855:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28855:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "28855:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "28911:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "29045:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "28919:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "28919:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "28911:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "28789:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "28804:4:18",
                "type": ""
              }
            ],
            "src": "28638:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29169:62:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "29191:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29199:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29187:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29187:14:18"
                      },
                      {
                        "hexValue": "6f766572666c6f7720617420646976696465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "29203:20:18",
                        "type": "",
                        "value": "overflow at divide"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29180:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29180:44:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29180:44:18"
                }
              ]
            },
            "name": "store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "29161:6:18",
                "type": ""
              }
            ],
            "src": "29063:168:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29383:220:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29393:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29459:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29464:2:18",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29400:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29400:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "29393:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29565:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f",
                      "nodeType": "YulIdentifier",
                      "src": "29476:88:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29476:93:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29476:93:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29578:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "29589:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29594:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29585:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29585:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "29578:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "29371:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "29379:3:18",
                "type": ""
              }
            ],
            "src": "29237:366:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "29780:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "29790:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "29802:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "29813:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "29798:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29798:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29790:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29837:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "29848:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "29833:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29833:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "29856:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "29862:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "29852:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "29852:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "29826:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29826:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "29826:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "29882:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "30016:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "29890:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "29890:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "29882:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "29760:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "29775:4:18",
                "type": ""
              }
            ],
            "src": "29609:419:18"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IRegistry_$3105_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IRegistry_$3105_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IRegistry_$3105_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IRegistry_$3105__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IRegistry_$3105_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d(memPtr) {\n\n        mstore(add(memPtr, 0), \"adjustment speed must be smaller\")\n\n        mstore(add(memPtr, 32), \" than 1\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"target density must be smaller t\")\n\n        mstore(add(memPtr, 32), \"han 1\")\n\n    }\n\n    function abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot register the null address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"gas price minimum floor must be \")\n\n        mstore(add(memPtr, 32), \"greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only VM can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134(memPtr) {\n\n        mstore(add(memPtr, 0), \"contract already initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06(memPtr) {\n\n        mstore(add(memPtr, 0), \"baseFee opCode activation block \")\n\n        mstore(add(memPtr, 32), \"must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf(memPtr) {\n\n        mstore(add(memPtr, 0), \"GoldToken\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf(pos)\n        end := add(pos, 9)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c(memPtr) {\n\n        mstore(add(memPtr, 0), \"SortedOracles\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 13)\n        store_literal_in_memory_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c(pos)\n        end := add(pos, 13)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f(memPtr) {\n\n        mstore(add(memPtr, 0), \"substraction underflow detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_103c760282d8757dce4d729c716fb02b3d489bf6f0d52b4ecab5f48cb6a08d2f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x1y1 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x1y1 * fixed1 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x2y1 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x1y2 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow x2y2 detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14(memPtr) {\n\n        mstore(add(memPtr, 0), \"add overflow detected\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535(memPtr) {\n\n        mstore(add(memPtr, 0), \"can't create fixidity number lar\")\n\n        mstore(add(memPtr, 32), \"ger than maxNewFixed()\")\n\n    }\n\n    function abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea(memPtr) {\n\n        mstore(add(memPtr, 0), \"can't divide by 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f(memPtr) {\n\n        mstore(add(memPtr, 0), \"overflow at divide\")\n\n    }\n\n    function abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "579:8857:4:-:0;;;1611:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1655:4;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;185:17:14;180:57;;226:4;212:11;;:18;;;;;;;;;;;;;;;;;;180:57;131:110;1611:52:4;579:8857;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:18:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:137::-;606:5;637:6;631:13;622:22;;653:30;677:5;653:30;:::i;:::-;552:137;;;;:::o;695:345::-;762:6;811:2;799:9;790:7;786:23;782:32;779:119;;;817:79;;:::i;:::-;779:119;937:1;962:61;1015:7;1006:6;995:9;991:22;962:61;:::i;:::-;952:71;;908:125;695:345;;;;:::o;579:8857:4:-;;;;;;;",
  "deployedSourceMap": "579:8857:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;103:23:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3400:279:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5665:242;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1204:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4853:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1407:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1940:117;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;2132:25:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1360:43:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3910:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7209:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1312:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2681:230:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4358:286:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7695:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1089:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8471:963;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1044:41:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2613:550;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;103:23:14;;;;;;;;;;;;;:::o;3400:279:4:-;1094:13:0;:11;:13::i;:::-;3495:34:4::1;3512:16;3495;:34::i;:::-;3477:15;:52;;;;;;;;;;;3543:40;3562:20;:18;:20::i;:::-;3543:15;:18;;;;;;;;;;;;;;;::::0;::::1;;;:40;;;;:::i;:::-;3535:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;3638:36;3657:16;3638:36;;;;;;:::i;:::-;;;;;;;;3400:279:::0;:::o;5665:242::-;5713:7;5763:1;5732:28;;:32;:80;;;;;5784:28;;5768:12;:44;;5732:80;5728:175;;;5829:13;5822:20;;;;5728:175;5870:26;;5863:33;;5665:242;;:::o;1204:41::-;;;;;;;;;:::o;4853:190::-;1094:13:0;:11;:13::i;:::-;4968:70:4::1;5001:29;5032:5;4968:32;:70::i;:::-;4853:190:::0;:::o;1407:54::-;1460:1;1407:54;:::o;1940:117::-;1991:7;2000;2009;2018;2041:1;2044;2047;2050;2033:19;;;;;;;;1940:117;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2132:25:5:-;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1360:43:4:-;;;;:::o;3910:263::-;1094:13:0;:11;:13::i;:::-;3999:32:4::1;4016:14;3999:16;:32::i;:::-;3983:13;:48;;;;;;;;;;;4045:38;4062:20;:18;:20::i;:::-;4045:13;:16;;;;;;;;;;;;;;;::::0;::::1;;;:38;;;;:::i;:::-;4037:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4136:32;4153:14;4136:32;;;;;;:::i;:::-;;;;;;;;3910:263:::0;:::o;7209:171::-;7282:7;7304:71;7313:33;7333:12;7313:19;:33::i;:::-;1460:1;7304:8;:71::i;:::-;7297:78;;7209:171;;;:::o;1312:43::-;;;;;;;;;:::o;2681:230:5:-;1094:13:0;:11;:13::i;:::-;2785:1:5::1;2758:29;;:15;:29;;::::0;2750:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2851:15;2830:8;;:37;;;;;;;;;;;;;;;;;;2890:15;2878:28;;;;;;;;;;;;2681:230:::0;:::o;4358:286:4:-;1094:13:0;:11;:13::i;:::-;4477:1:4::1;4453:21;:25;4445:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4561:21;4538:20;:44;;;;4593:46;4617:21;4593:46;;;;;;:::i;:::-;;;;;;;;4358:286:::0;:::o;7695:320::-;7809:7;154:1:12;132:24;;:10;:24;;;124:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7855:55:4::1;7881:13;7896;7855:25;:55::i;:::-;7826:26;:84;;;;7921:50;7944:26;;7921:50;;;;;;:::i;:::-;;;;;;;;7984:26;;7977:33;;7695:320:::0;;;;:::o;1089:35::-;;;;:::o;8471:963::-;8585:7;8602:40;8645:76;8681:13;8702;8645:28;:76::i;:::-;8602:119;;8727:29;8759:30;8775:13;8759:30;;;;;;;;;;;;;;;;;:12;:15;;:30;;;;:::i;:::-;8727:62;;8795:40;8838:24;:114;;8916:36;8939:12;8916:13;:22;;;;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;8838:114;;;8871:36;8893:13;8871:36;;;;;;;;;;;;;;;;;:12;:21;;:36;;;;:::i;:::-;8838:114;8795:157;;8958:38;8999:24;:175;;9105:69;9135:38;9160:12;9135:15;:24;;;;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;9105:20;:18;:20::i;:::-;:29;;:69;;;;:::i;:::-;8999:175;;;9032:64;9057:38;9082:12;9057:15;:24;;;;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;9032:20;:18;:20::i;:::-;:24;;:64;;;;:::i;:::-;8999:175;8958:216;;9181:26;9210:119;:100;9289:20;:18;:20::i;:::-;9210:67;9237:39;9258:17;:15;:17::i;:::-;9237:20;:39::i;:::-;9210:10;:26;;:67;;;;:::i;:::-;:78;;:100;;;;:::i;:::-;:117;:119::i;:::-;9181:148;;9365:20;;9343:18;:42;;:86;;9409:20;;9343:86;;;9388:18;9343:86;9336:93;;;;;;;8471:963;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1044:41:4:-;;;;:::o;2613:550::-;283:11:14;;;;;;;;;;;282:12;274:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;347:4;333:11;;:18;;;;;;;;;;;;;;;;;;2830:30:4::1;2849:10;2830:18;:30::i;:::-;2866:29;2878:16;2866:11;:29::i;:::-;2930:21;2901:26;:50;;;;2957:46;2981:21;2957:23;:46::i;:::-;3009:32;3026:14;3009:16;:32::i;:::-;3047:36;3066:16;3047:18;:36::i;:::-;3089:69;3122:29;3153:4;3089:32;:69::i;:::-;2613:550:::0;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;1552:94:13:-;1600:15;;:::i;:::-;1630:11;;;;;;;;1639:1;1630:11;;;1623:18;;1552:94;;;:::o;1230:97::-;1271:15;;:::i;:::-;1301:21;;;;;;;;1046:25;1301:21;;;1294:28;;1230:97;:::o;9849:114::-;9922:4;9951:1;:7;;;9941:1;:7;;;:17;9934:24;;9849:114;;;;:::o;5252:409:4:-;1094:13:0;:11;:13::i;:::-;5398:9:4::1;:46;;;;5443:1;5411:29;:33;5398:46;5383:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;5554:29;5523:28;:60;;;;5594:62;5626:29;5594:62;;;;;;:::i;:::-;;;;;;;;5252:409:::0;;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;5911:602:4:-;5984:7;6034:1;6010:26;;:12;:26;;;:103;;;;6062:8;;;;;;;;;;;:27;;;1344:29:5;;;;;;;:::i;:::-;;;;;;;;;;;;;1334:40;;;;;;6062:51:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6046:67;;:12;:67;;;6010:103;5999:510;;;6135:17;:15;:17::i;:::-;6128:24;;;;5999:510;6173:28;6228:8;;;;;;;;;;;:27;;;1879:33:5;;;;;;;:::i;:::-;;;;;;;;;;;;;1869:44;;;;;;6228:55:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6173:118;;6299:21;6328:23;6394:13;:24;;;6419:12;6394:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6359:73;;;;;;;;6486:15;6469:13;6449:17;:15;:17::i;:::-;:33;;;;:::i;:::-;6448:53;;;;:::i;:::-;6440:62;;;;;5911:602;;;;:::o;413:104:3:-;471:7;501:1;497;:5;:13;;509:1;497:13;;;505:1;497:13;490:20;;413:104;;;;:::o;3565:314:13:-;3666:15;;:::i;:::-;3691:34;3728:19;3737:9;3728:8;:19::i;:::-;3691:56;;3753:36;3792:21;3801:11;3792:8;:21::i;:::-;3753:60;;3826:48;3833:18;3853:20;3826:6;:48::i;:::-;3819:55;;;;3565:314;;;;:::o;9548:114::-;9621:4;9650:1;:7;;;9640:1;:7;;;:17;9633:24;;9548:114;;;;:::o;5391:209::-;5470:15;;:::i;:::-;5512:1;:7;;;5501:1;:7;;;:18;;5493:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5568:27;;;;;;;;5587:1;:7;;;5577:1;:7;;;:17;;;;:::i;:::-;5568:27;;;5561:34;;5391:209;;;;:::o;6256:1636::-;6335:15;;:::i;:::-;6373:1;6362;:7;;;:12;:28;;;;6389:1;6378;:7;;;:12;6362:28;6358:52;;;6399:11;;;;;;;;6408:1;6399:11;;;6392:18;;;;6358:52;1046:25;6420:1;:7;;;:22;6416:36;;6451:1;6444:8;;;;6416:36;1046:25;6462:1;:7;;;:22;6458:36;;6493:1;6486:8;;;;6458:36;6583:10;1046:25;6596:10;6604:1;6596:7;:10::i;:::-;:16;;;:30;;;;:::i;:::-;6583:43;;6632:10;6645:13;6656:1;6645:10;:13::i;:::-;:19;;;6632:32;;6670:10;1046:25;6683:10;6691:1;6683:7;:10::i;:::-;:16;;;:30;;;;:::i;:::-;6670:43;;6719:10;6732:13;6743:1;6732:10;:13::i;:::-;:19;;;6719:32;;6835:12;6855:2;6850;:7;;;;:::i;:::-;6835:22;;6873:1;6867:2;:7;6863:63;;6897:2;6891;6884:4;:9;;;;:::i;:::-;:15;6876:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6863:63;7025:18;1046:25;7046:4;:18;;;;:::i;:::-;7025:39;;7082:1;7074:4;:9;7070:91;;1046:25;7106:4;7093:10;:17;;;;:::i;:::-;:32;7085:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;7070:91;7174:10;7167:17;;7191:12;7211:2;7206;:7;;;;:::i;:::-;7191:22;;7229:1;7223:2;:7;7219:63;;7253:2;7247;7240:4;:9;;;;:::i;:::-;:15;7232:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7219:63;7289:12;7309:2;7304;:7;;;;:::i;:::-;7289:22;;7327:1;7321:2;:7;7317:63;;7351:2;7345;7338:4;:9;;;;:::i;:::-;:15;7330:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7317:63;7397:14;:12;:14::i;:::-;7392:2;:19;;;;:::i;:::-;7387:24;;7427:14;:12;:14::i;:::-;7422:2;:19;;;;:::i;:::-;7417:24;;7447:12;7467:2;7462;:7;;;;:::i;:::-;7447:22;;7485:1;7479:2;:7;7475:63;;7509:2;7503;7496:4;:9;;;;:::i;:::-;:15;7488:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7475:63;7622:22;7647:14;;;;;;;;7656:4;7647:14;;;7622:39;;7676:27;7680:6;7688:14;;;;;;;;7697:4;7688:14;;;7676:3;:27::i;:::-;7667:36;;7745:27;7749:6;7757:14;;;;;;;;7766:4;7757:14;;;7745:3;:27::i;:::-;7736:36;;7814:27;7818:6;7826:14;;;;;;;;7835:4;7826:14;;;7814:3;:27::i;:::-;7805:36;;7881:6;7874:13;;;;;;;;;;;;6256:1636;;;;;:::o;5108:207::-;5182:15;;:::i;:::-;5205:9;5227:1;:7;;;5217:1;:7;;;:17;;;;:::i;:::-;5205:29;;5253:1;:7;;;5248:1;:12;;5240:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;5299:11;;;;;;;;5308:1;5299:11;;;5292:18;;;5108:207;;;;:::o;2597:203::-;2649:15;;:::i;:::-;2685:13;:11;:13::i;:::-;2680:1;:18;;2672:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2770:25;;;;;;;;1046;2779:1;:15;;;;:::i;:::-;2770:25;;;2763:32;;2597:203;;;:::o;2959:109::-;3020:7;1046:25;3042:1;:7;;;:21;;;;:::i;:::-;3035:28;;2959:109;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;9230:283:13:-;9307:15;;:::i;:::-;9349:1;9338;:7;;;:12;9330:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;9378:9;1046:25;9390:1;:7;;;:21;;;;:::i;:::-;9378:33;;9444:1;:7;;;1046:25;9425:1;:15;;;;:::i;:::-;:26;9417:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;9487:21;;;;;;;;9500:1;:7;;;9496:1;:11;;;;:::i;:::-;9487:21;;;9480:28;;;9230:283;;;;:::o;4118:159::-;4177:15;;:::i;:::-;4207:47;;;;;;;;1046:25;;4217:1;:7;;;:21;;;;:::i;:::-;4216:37;;;;:::i;:::-;4207:47;;;4200:54;;4118:159;;;:::o;4564:172::-;4626:15;;:::i;:::-;4656:57;;;;;;;;1046:25;;4676:1;:7;;;:21;;;;:::i;:::-;4675:37;;;;:::i;:::-;4665:1;:7;;;:47;;;;:::i;:::-;4656:57;;;4649:64;;4564:172;;;:::o;1955:87::-;2002:7;2024:13;2017:20;;1955:87;:::o;2213:127::-;2259:7;2281:54;2274:61;;2213:127;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;7:90:18:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;515:117::-;624:1;621;614:12;761:77;798:7;827:5;816:16;;761:77;;;:::o;844:122::-;917:24;935:5;917:24;:::i;:::-;910:5;907:35;897:63;;956:1;953;946:12;897:63;844:122;:::o;972:139::-;1018:5;1056:6;1043:20;1034:29;;1072:33;1099:5;1072:33;:::i;:::-;972:139;;;;:::o;1117:329::-;1176:6;1225:2;1213:9;1204:7;1200:23;1196:32;1193:119;;;1231:79;;:::i;:::-;1193:119;1351:1;1376:53;1421:7;1412:6;1401:9;1397:22;1376:53;:::i;:::-;1366:63;;1322:117;1117:329;;;;:::o;1452:118::-;1539:24;1557:5;1539:24;:::i;:::-;1534:3;1527:37;1452:118;;:::o;1576:222::-;1669:4;1707:2;1696:9;1692:18;1684:26;;1720:71;1788:1;1777:9;1773:17;1764:6;1720:71;:::i;:::-;1576:222;;;;:::o;1804:553::-;1981:4;2019:3;2008:9;2004:19;1996:27;;2033:71;2101:1;2090:9;2086:17;2077:6;2033:71;:::i;:::-;2114:72;2182:2;2171:9;2167:18;2158:6;2114:72;:::i;:::-;2196;2264:2;2253:9;2249:18;2240:6;2196:72;:::i;:::-;2278;2346:2;2335:9;2331:18;2322:6;2278:72;:::i;:::-;1804:553;;;;;;;:::o;2363:126::-;2400:7;2440:42;2433:5;2429:54;2418:65;;2363:126;;;:::o;2495:60::-;2523:3;2544:5;2537:12;;2495:60;;;:::o;2561:142::-;2611:9;2644:53;2662:34;2671:24;2689:5;2671:24;:::i;:::-;2662:34;:::i;:::-;2644:53;:::i;:::-;2631:66;;2561:142;;;:::o;2709:126::-;2759:9;2792:37;2823:5;2792:37;:::i;:::-;2779:50;;2709:126;;;:::o;2841:144::-;2909:9;2942:37;2973:5;2942:37;:::i;:::-;2929:50;;2841:144;;;:::o;2991:167::-;3096:55;3145:5;3096:55;:::i;:::-;3091:3;3084:68;2991:167;;:::o;3164:258::-;3275:4;3313:2;3302:9;3298:18;3290:26;;3326:89;3412:1;3401:9;3397:17;3388:6;3326:89;:::i;:::-;3164:258;;;;:::o;3428:96::-;3465:7;3494:24;3512:5;3494:24;:::i;:::-;3483:35;;3428:96;;;:::o;3530:118::-;3617:24;3635:5;3617:24;:::i;:::-;3612:3;3605:37;3530:118;;:::o;3654:222::-;3747:4;3785:2;3774:9;3770:18;3762:26;;3798:71;3866:1;3855:9;3851:17;3842:6;3798:71;:::i;:::-;3654:222;;;;:::o;3882:122::-;3955:24;3973:5;3955:24;:::i;:::-;3948:5;3945:35;3935:63;;3994:1;3991;3984:12;3935:63;3882:122;:::o;4010:139::-;4056:5;4094:6;4081:20;4072:29;;4110:33;4137:5;4110:33;:::i;:::-;4010:139;;;;:::o;4155:329::-;4214:6;4263:2;4251:9;4242:7;4238:23;4234:32;4231:119;;;4269:79;;:::i;:::-;4231:119;4389:1;4414:53;4459:7;4450:6;4439:9;4435:22;4414:53;:::i;:::-;4404:63;;4360:117;4155:329;;;;:::o;4490:474::-;4558:6;4566;4615:2;4603:9;4594:7;4590:23;4586:32;4583:119;;;4621:79;;:::i;:::-;4583:119;4741:1;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4712:117;4868:2;4894:53;4939:7;4930:6;4919:9;4915:22;4894:53;:::i;:::-;4884:63;;4839:118;4490:474;;;;;:::o;4970:911::-;5065:6;5073;5081;5089;5097;5146:3;5134:9;5125:7;5121:23;5117:33;5114:120;;;5153:79;;:::i;:::-;5114:120;5273:1;5298:53;5343:7;5334:6;5323:9;5319:22;5298:53;:::i;:::-;5288:63;;5244:117;5400:2;5426:53;5471:7;5462:6;5451:9;5447:22;5426:53;:::i;:::-;5416:63;;5371:118;5528:2;5554:53;5599:7;5590:6;5579:9;5575:22;5554:53;:::i;:::-;5544:63;;5499:118;5656:2;5682:53;5727:7;5718:6;5707:9;5703:22;5682:53;:::i;:::-;5672:63;;5627:118;5784:3;5811:53;5856:7;5847:6;5836:9;5832:22;5811:53;:::i;:::-;5801:63;;5755:119;4970:911;;;;;;;;:::o;5887:169::-;5971:11;6005:6;6000:3;5993:19;6045:4;6040:3;6036:14;6021:29;;5887:169;;;;:::o;6062:226::-;6202:34;6198:1;6190:6;6186:14;6179:58;6271:9;6266:2;6258:6;6254:15;6247:34;6062:226;:::o;6294:366::-;6436:3;6457:67;6521:2;6516:3;6457:67;:::i;:::-;6450:74;;6533:93;6622:3;6533:93;:::i;:::-;6651:2;6646:3;6642:12;6635:19;;6294:366;;;:::o;6666:419::-;6832:4;6870:2;6859:9;6855:18;6847:26;;6919:9;6913:4;6909:20;6905:1;6894:9;6890:17;6883:47;6947:131;7073:4;6947:131;:::i;:::-;6939:139;;6666:419;;;:::o;7091:224::-;7231:34;7227:1;7219:6;7215:14;7208:58;7300:7;7295:2;7287:6;7283:15;7276:32;7091:224;:::o;7321:366::-;7463:3;7484:67;7548:2;7543:3;7484:67;:::i;:::-;7477:74;;7560:93;7649:3;7560:93;:::i;:::-;7678:2;7673:3;7669:12;7662:19;;7321:366;;;:::o;7693:419::-;7859:4;7897:2;7886:9;7882:18;7874:26;;7946:9;7940:4;7936:20;7932:1;7921:9;7917:17;7910:47;7974:131;8100:4;7974:131;:::i;:::-;7966:139;;7693:419;;;:::o;8118:182::-;8258:34;8254:1;8246:6;8242:14;8235:58;8118:182;:::o;8306:366::-;8448:3;8469:67;8533:2;8528:3;8469:67;:::i;:::-;8462:74;;8545:93;8634:3;8545:93;:::i;:::-;8663:2;8658:3;8654:12;8647:19;;8306:366;;;:::o;8678:419::-;8844:4;8882:2;8871:9;8867:18;8859:26;;8931:9;8925:4;8921:20;8917:1;8906:9;8902:17;8895:47;8959:131;9085:4;8959:131;:::i;:::-;8951:139;;8678:419;;;:::o;9103:236::-;9243:34;9239:1;9231:6;9227:14;9220:58;9312:19;9307:2;9299:6;9295:15;9288:44;9103:236;:::o;9345:366::-;9487:3;9508:67;9572:2;9567:3;9508:67;:::i;:::-;9501:74;;9584:93;9673:3;9584:93;:::i;:::-;9702:2;9697:3;9693:12;9686:19;;9345:366;;;:::o;9717:419::-;9883:4;9921:2;9910:9;9906:18;9898:26;;9970:9;9964:4;9960:20;9956:1;9945:9;9941:17;9934:47;9998:131;10124:4;9998:131;:::i;:::-;9990:139;;9717:419;;;:::o;10142:166::-;10282:18;10278:1;10270:6;10266:14;10259:42;10142:166;:::o;10314:366::-;10456:3;10477:67;10541:2;10536:3;10477:67;:::i;:::-;10470:74;;10553:93;10642:3;10553:93;:::i;:::-;10671:2;10666:3;10662:12;10655:19;;10314:366;;;:::o;10686:419::-;10852:4;10890:2;10879:9;10875:18;10867:26;;10939:9;10933:4;10929:20;10925:1;10914:9;10910:17;10903:47;10967:131;11093:4;10967:131;:::i;:::-;10959:139;;10686:419;;;:::o;11111:225::-;11251:34;11247:1;11239:6;11235:14;11228:58;11320:8;11315:2;11307:6;11303:15;11296:33;11111:225;:::o;11342:366::-;11484:3;11505:67;11569:2;11564:3;11505:67;:::i;:::-;11498:74;;11581:93;11670:3;11581:93;:::i;:::-;11699:2;11694:3;11690:12;11683:19;;11342:366;;;:::o;11714:419::-;11880:4;11918:2;11907:9;11903:18;11895:26;;11967:9;11961:4;11957:20;11953:1;11942:9;11938:17;11931:47;11995:131;12121:4;11995:131;:::i;:::-;11987:139;;11714:419;;;:::o;12139:178::-;12279:30;12275:1;12267:6;12263:14;12256:54;12139:178;:::o;12323:366::-;12465:3;12486:67;12550:2;12545:3;12486:67;:::i;:::-;12479:74;;12562:93;12651:3;12562:93;:::i;:::-;12680:2;12675:3;12671:12;12664:19;;12323:366;;;:::o;12695:419::-;12861:4;12899:2;12888:9;12884:18;12876:26;;12948:9;12942:4;12938:20;12934:1;12923:9;12919:17;12912:47;12976:131;13102:4;12976:131;:::i;:::-;12968:139;;12695:419;;;:::o;13120:182::-;13260:34;13256:1;13248:6;13244:14;13237:58;13120:182;:::o;13308:366::-;13450:3;13471:67;13535:2;13530:3;13471:67;:::i;:::-;13464:74;;13547:93;13636:3;13547:93;:::i;:::-;13665:2;13660:3;13656:12;13649:19;;13308:366;;;:::o;13680:419::-;13846:4;13884:2;13873:9;13869:18;13861:26;;13933:9;13927:4;13923:20;13919:1;13908:9;13904:17;13897:47;13961:131;14087:4;13961:131;:::i;:::-;13953:139;;13680:419;;;:::o;14105:244::-;14245:34;14241:1;14233:6;14229:14;14222:58;14314:27;14309:2;14301:6;14297:15;14290:52;14105:244;:::o;14355:366::-;14497:3;14518:67;14582:2;14577:3;14518:67;:::i;:::-;14511:74;;14594:93;14683:3;14594:93;:::i;:::-;14712:2;14707:3;14703:12;14696:19;;14355:366;;;:::o;14727:419::-;14893:4;14931:2;14920:9;14916:18;14908:26;;14980:9;14974:4;14970:20;14966:1;14955:9;14951:17;14944:47;15008:131;15134:4;15008:131;:::i;:::-;15000:139;;14727:419;;;:::o;15152:148::-;15254:11;15291:3;15276:18;;15152:148;;;;:::o;15306:159::-;15446:11;15442:1;15434:6;15430:14;15423:35;15306:159;:::o;15471:400::-;15631:3;15652:84;15734:1;15729:3;15652:84;:::i;:::-;15645:91;;15745:93;15834:3;15745:93;:::i;:::-;15863:1;15858:3;15854:11;15847:18;;15471:400;;;:::o;15877:381::-;16062:3;16084:148;16228:3;16084:148;:::i;:::-;16077:155;;16249:3;16242:10;;15877:381;;;:::o;16264:77::-;16301:7;16330:5;16319:16;;16264:77;;;:::o;16347:118::-;16434:24;16452:5;16434:24;:::i;:::-;16429:3;16422:37;16347:118;;:::o;16471:222::-;16564:4;16602:2;16591:9;16587:18;16579:26;;16615:71;16683:1;16672:9;16668:17;16659:6;16615:71;:::i;:::-;16471:222;;;;:::o;16699:143::-;16756:5;16787:6;16781:13;16772:22;;16803:33;16830:5;16803:33;:::i;:::-;16699:143;;;;:::o;16848:351::-;16918:6;16967:2;16955:9;16946:7;16942:23;16938:32;16935:119;;;16973:79;;:::i;:::-;16935:119;17093:1;17118:64;17174:7;17165:6;17154:9;17150:22;17118:64;:::i;:::-;17108:74;;17064:128;16848:351;;;;:::o;17205:163::-;17345:15;17341:1;17333:6;17329:14;17322:39;17205:163;:::o;17374:402::-;17534:3;17555:85;17637:2;17632:3;17555:85;:::i;:::-;17548:92;;17649:93;17738:3;17649:93;:::i;:::-;17767:2;17762:3;17758:12;17751:19;;17374:402;;;:::o;17782:381::-;17967:3;17989:148;18133:3;17989:148;:::i;:::-;17982:155;;18154:3;18147:10;;17782:381;;;:::o;18169:143::-;18226:5;18257:6;18251:13;18242:22;;18273:33;18300:5;18273:33;:::i;:::-;18169:143;;;;:::o;18318:507::-;18397:6;18405;18454:2;18442:9;18433:7;18429:23;18425:32;18422:119;;;18460:79;;:::i;:::-;18422:119;18580:1;18605:64;18661:7;18652:6;18641:9;18637:22;18605:64;:::i;:::-;18595:74;;18551:128;18718:2;18744:64;18800:7;18791:6;18780:9;18776:22;18744:64;:::i;:::-;18734:74;;18689:129;18318:507;;;;;:::o;18831:180::-;18879:77;18876:1;18869:88;18976:4;18973:1;18966:15;19000:4;18997:1;18990:15;19017:410;19057:7;19080:20;19098:1;19080:20;:::i;:::-;19075:25;;19114:20;19132:1;19114:20;:::i;:::-;19109:25;;19169:1;19166;19162:9;19191:30;19209:11;19191:30;:::i;:::-;19180:41;;19370:1;19361:7;19357:15;19354:1;19351:22;19331:1;19324:9;19304:83;19281:139;;19400:18;;:::i;:::-;19281:139;19065:362;19017:410;;;;:::o;19433:180::-;19481:77;19478:1;19471:88;19578:4;19575:1;19568:15;19602:4;19599:1;19592:15;19619:185;19659:1;19676:20;19694:1;19676:20;:::i;:::-;19671:25;;19710:20;19728:1;19710:20;:::i;:::-;19705:25;;19749:1;19739:35;;19754:18;;:::i;:::-;19739:35;19796:1;19793;19789:9;19784:14;;19619:185;;;;:::o;19810:181::-;19950:33;19946:1;19938:6;19934:14;19927:57;19810:181;:::o;19997:366::-;20139:3;20160:67;20224:2;20219:3;20160:67;:::i;:::-;20153:74;;20236:93;20325:3;20236:93;:::i;:::-;20354:2;20349:3;20345:12;20338:19;;19997:366;;;:::o;20369:419::-;20535:4;20573:2;20562:9;20558:18;20550:26;;20622:9;20616:4;20612:20;20608:1;20597:9;20593:17;20586:47;20650:131;20776:4;20650:131;:::i;:::-;20642:139;;20369:419;;;:::o;20794:194::-;20834:4;20854:20;20872:1;20854:20;:::i;:::-;20849:25;;20888:20;20906:1;20888:20;:::i;:::-;20883:25;;20932:1;20929;20925:9;20917:17;;20956:1;20950:4;20947:11;20944:37;;;20961:18;;:::i;:::-;20944:37;20794:194;;;;:::o;20994:172::-;21134:24;21130:1;21122:6;21118:14;21111:48;20994:172;:::o;21172:366::-;21314:3;21335:67;21399:2;21394:3;21335:67;:::i;:::-;21328:74;;21411:93;21500:3;21411:93;:::i;:::-;21529:2;21524:3;21520:12;21513:19;;21172:366;;;:::o;21544:419::-;21710:4;21748:2;21737:9;21733:18;21725:26;;21797:9;21791:4;21787:20;21783:1;21772:9;21768:17;21761:47;21825:131;21951:4;21825:131;:::i;:::-;21817:139;;21544:419;;;:::o;21969:181::-;22109:33;22105:1;22097:6;22093:14;22086:57;21969:181;:::o;22156:366::-;22298:3;22319:67;22383:2;22378:3;22319:67;:::i;:::-;22312:74;;22395:93;22484:3;22395:93;:::i;:::-;22513:2;22508:3;22504:12;22497:19;;22156:366;;;:::o;22528:419::-;22694:4;22732:2;22721:9;22717:18;22709:26;;22781:9;22775:4;22771:20;22767:1;22756:9;22752:17;22745:47;22809:131;22935:4;22809:131;:::i;:::-;22801:139;;22528:419;;;:::o;22953:172::-;23093:24;23089:1;23081:6;23077:14;23070:48;22953:172;:::o;23131:366::-;23273:3;23294:67;23358:2;23353:3;23294:67;:::i;:::-;23287:74;;23370:93;23459:3;23370:93;:::i;:::-;23488:2;23483:3;23479:12;23472:19;;23131:366;;;:::o;23503:419::-;23669:4;23707:2;23696:9;23692:18;23684:26;;23756:9;23750:4;23746:20;23742:1;23731:9;23727:17;23720:47;23784:131;23910:4;23784:131;:::i;:::-;23776:139;;23503:419;;;:::o;23928:172::-;24068:24;24064:1;24056:6;24052:14;24045:48;23928:172;:::o;24106:366::-;24248:3;24269:67;24333:2;24328:3;24269:67;:::i;:::-;24262:74;;24345:93;24434:3;24345:93;:::i;:::-;24463:2;24458:3;24454:12;24447:19;;24106:366;;;:::o;24478:419::-;24644:4;24682:2;24671:9;24667:18;24659:26;;24731:9;24725:4;24721:20;24717:1;24706:9;24702:17;24695:47;24759:131;24885:4;24759:131;:::i;:::-;24751:139;;24478:419;;;:::o;24903:172::-;25043:24;25039:1;25031:6;25027:14;25020:48;24903:172;:::o;25081:366::-;25223:3;25244:67;25308:2;25303:3;25244:67;:::i;:::-;25237:74;;25320:93;25409:3;25320:93;:::i;:::-;25438:2;25433:3;25429:12;25422:19;;25081:366;;;:::o;25453:419::-;25619:4;25657:2;25646:9;25642:18;25634:26;;25706:9;25700:4;25696:20;25692:1;25681:9;25677:17;25670:47;25734:131;25860:4;25734:131;:::i;:::-;25726:139;;25453:419;;;:::o;25878:191::-;25918:3;25937:20;25955:1;25937:20;:::i;:::-;25932:25;;25971:20;25989:1;25971:20;:::i;:::-;25966:25;;26014:1;26011;26007:9;26000:16;;26035:3;26032:1;26029:10;26026:36;;;26042:18;;:::i;:::-;26026:36;25878:191;;;;:::o;26075:171::-;26215:23;26211:1;26203:6;26199:14;26192:47;26075:171;:::o;26252:366::-;26394:3;26415:67;26479:2;26474:3;26415:67;:::i;:::-;26408:74;;26491:93;26580:3;26491:93;:::i;:::-;26609:2;26604:3;26600:12;26593:19;;26252:366;;;:::o;26624:419::-;26790:4;26828:2;26817:9;26813:18;26805:26;;26877:9;26871:4;26867:20;26863:1;26852:9;26848:17;26841:47;26905:131;27031:4;26905:131;:::i;:::-;26897:139;;26624:419;;;:::o;27049:241::-;27189:34;27185:1;27177:6;27173:14;27166:58;27258:24;27253:2;27245:6;27241:15;27234:49;27049:241;:::o;27296:366::-;27438:3;27459:67;27523:2;27518:3;27459:67;:::i;:::-;27452:74;;27535:93;27624:3;27535:93;:::i;:::-;27653:2;27648:3;27644:12;27637:19;;27296:366;;;:::o;27668:419::-;27834:4;27872:2;27861:9;27857:18;27849:26;;27921:9;27915:4;27911:20;27907:1;27896:9;27892:17;27885:47;27949:131;28075:4;27949:131;:::i;:::-;27941:139;;27668:419;;;:::o;28093:167::-;28233:19;28229:1;28221:6;28217:14;28210:43;28093:167;:::o;28266:366::-;28408:3;28429:67;28493:2;28488:3;28429:67;:::i;:::-;28422:74;;28505:93;28594:3;28505:93;:::i;:::-;28623:2;28618:3;28614:12;28607:19;;28266:366;;;:::o;28638:419::-;28804:4;28842:2;28831:9;28827:18;28819:26;;28891:9;28885:4;28881:20;28877:1;28866:9;28862:17;28855:47;28919:131;29045:4;28919:131;:::i;:::-;28911:139;;28638:419;;;:::o;29063:168::-;29203:20;29199:1;29191:6;29187:14;29180:44;29063:168;:::o;29237:366::-;29379:3;29400:67;29464:2;29459:3;29400:67;:::i;:::-;29393:74;;29476:93;29565:3;29476:93;:::i;:::-;29594:2;29589:3;29585:12;29578:19;;29237:366;;;:::o;29609:419::-;29775:4;29813:2;29802:9;29798:18;29790:26;;29862:9;29856:4;29852:20;29848:1;29837:9;29833:17;29826:47;29890:131;30016:4;29890:131;:::i;:::-;29882:139;;29609:419;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.7 <0.8.20;\n\nimport \"@openzeppelin/contracts8/access/Ownable.sol\";\n\nimport \"../../contracts/common/CalledByVm.sol\";\nimport \"../../contracts/common/Initializable.sol\";\nimport \"../../contracts/common/interfaces/ICeloVersionedContract.sol\";\nimport \"../../contracts/common/FixidityLib.sol\";\nimport \"./UsingRegistry.sol\";\nimport \"../../contracts/stability/interfaces/ISortedOracles.sol\";\nimport \"@openzeppelin/contracts8/utils/math/Math.sol\";\n\n/**\n * @title Stores and provides gas price minimum for various currencies.\n */\ncontract GasPriceMinimum is\n  ICeloVersionedContract,\n  Ownable,\n  Initializable,\n  UsingRegistry,\n  CalledByVm\n{\n  using FixidityLib for FixidityLib.Fraction;\n\n  event TargetDensitySet(uint256 targetDensity);\n  event GasPriceMinimumFloorSet(uint256 gasPriceMinimumFloor);\n  event AdjustmentSpeedSet(uint256 adjustmentSpeed);\n  event GasPriceMinimumUpdated(uint256 gasPriceMinimum);\n  event BaseFeeOpCodeActivationBlockSet(uint256 baseFeeOpCodeActivationBlock);\n\n  uint256 public deprecated_gasPriceMinimum;\n  uint256 public gasPriceMinimumFloor;\n\n  // Block congestion level targeted by the gas price minimum calculation.\n  FixidityLib.Fraction public targetDensity;\n\n  // Speed of gas price minimum adjustment due to congestion.\n  FixidityLib.Fraction public adjustmentSpeed;\n\n  uint256 public baseFeeOpCodeActivationBlock;\n  uint256 public constant ABSOLUTE_MINIMAL_GAS_PRICE = 1;\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 2, 0, 1);\n  }\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param _registryAddress The address of the registry core smart contract.\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n   */\n  function initialize(\n    address _registryAddress,\n    uint256 _gasPriceMinimumFloor,\n    uint256 _targetDensity,\n    uint256 _adjustmentSpeed,\n    uint256 _baseFeeOpCodeActivationBlock\n  ) external initializer {\n    _transferOwnership(msg.sender);\n    setRegistry(_registryAddress);\n    deprecated_gasPriceMinimum = _gasPriceMinimumFloor;\n    setGasPriceMinimumFloor(_gasPriceMinimumFloor);\n    setTargetDensity(_targetDensity);\n    setAdjustmentSpeed(_adjustmentSpeed);\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, true);\n  }\n\n  /**\n   * @notice Set a multiplier that impacts how quickly gas price minimum is adjusted.\n   * @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n   * @dev Value is expected to be < 1.\n   */\n  function setAdjustmentSpeed(uint256 _adjustmentSpeed) public onlyOwner {\n    adjustmentSpeed = FixidityLib.wrap(_adjustmentSpeed);\n    require(adjustmentSpeed.lt(FixidityLib.fixed1()), \"adjustment speed must be smaller than 1\");\n    emit AdjustmentSpeedSet(_adjustmentSpeed);\n  }\n\n  /**\n   * @notice Set the block density targeted by the gas price minimum algorithm.\n   * @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n   * @dev Value is expected to be < 1.\n   */\n  function setTargetDensity(uint256 _targetDensity) public onlyOwner {\n    targetDensity = FixidityLib.wrap(_targetDensity);\n    require(targetDensity.lt(FixidityLib.fixed1()), \"target density must be smaller than 1\");\n    emit TargetDensitySet(_targetDensity);\n  }\n\n  /**\n   * @notice Set the minimum gas price treshold.\n   * @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n   * @dev Value is expected to be > 0.\n   */\n  function setGasPriceMinimumFloor(uint256 _gasPriceMinimumFloor) public onlyOwner {\n    require(_gasPriceMinimumFloor > 0, \"gas price minimum floor must be greater than zero\");\n    gasPriceMinimumFloor = _gasPriceMinimumFloor;\n    emit GasPriceMinimumFloorSet(_gasPriceMinimumFloor);\n  }\n\n  /**\n   * @notice Set the activation block of the baseFee opCode.\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n   * @dev Value is expected to be > 0.\n   */\n  function setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock)\n    external\n    onlyOwner\n  {\n    _setBaseFeeOpCodeActivationBlock(_baseFeeOpCodeActivationBlock, false);\n  }\n\n  /**\n   * @notice Set the activation block of the baseFee opCode.\n   * @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n   * @dev Value is expected to be > 0.\n   */\n  function _setBaseFeeOpCodeActivationBlock(uint256 _baseFeeOpCodeActivationBlock, bool allowZero)\n    private\n    onlyOwner\n  {\n    require(\n      allowZero || _baseFeeOpCodeActivationBlock > 0,\n      \"baseFee opCode activation block must be greater than zero\"\n    );\n    baseFeeOpCodeActivationBlock = _baseFeeOpCodeActivationBlock;\n    emit BaseFeeOpCodeActivationBlockSet(_baseFeeOpCodeActivationBlock);\n  }\n\n  function gasPriceMinimum() public view returns (uint256) {\n    if (baseFeeOpCodeActivationBlock > 0 && block.number >= baseFeeOpCodeActivationBlock) {\n      return block.basefee;\n    } else {\n      return deprecated_gasPriceMinimum;\n    }\n  }\n\n  function _getGasPriceMinimum(address tokenAddress) private view returns (uint256) {\n    if (\n      tokenAddress == address(0) ||\n      tokenAddress == registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID)\n    ) {\n      return gasPriceMinimum();\n    } else {\n      ISortedOracles sortedOracles = ISortedOracles(\n        registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID)\n      );\n      uint256 rateNumerator;\n      uint256 rateDenominator;\n      (rateNumerator, rateDenominator) = sortedOracles.medianRate(tokenAddress);\n      return ((gasPriceMinimum() * rateNumerator) / rateDenominator);\n    }\n  }\n\n  /**\n   * @notice Retrieve the current gas price minimum for a currency.\n   * When caled for 0x0 or Celo address, it returns gasPriceMinimum().\n   * For other addresses it returns gasPriceMinimum() mutiplied by \n   * the SortedOracles median of the token. It does not check tokenAddress is a valid fee currency.\n   * this function will never returns values less than ABSOLUTE_MINIMAL_GAS_PRICE.\n   * If Oracle rate doesn't exist, it returns ABSOLUTE_MINIMAL_GAS_PRICE.\n   * @dev This functions assumes one unit of token has 18 digits.\n   * @param tokenAddress The currency the gas price should be in (defaults to Celo).\n   * @return current gas price minimum in the requested currency\n   */\n  function getGasPriceMinimum(address tokenAddress) external view returns (uint256) {\n    return Math.max(_getGasPriceMinimum(tokenAddress), ABSOLUTE_MINIMAL_GAS_PRICE);\n  }\n\n  /**\n   * @notice Adjust the gas price minimum based on governable parameters\n   * and block congestion.\n   * @param blockGasTotal The amount of gas in the most recent block.\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\n   * @return result of the calculation (new gas price minimum)\n   */\n  function updateGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\n    external\n    onlyVm\n    returns (uint256)\n  {\n    deprecated_gasPriceMinimum = getUpdatedGasPriceMinimum(blockGasTotal, blockGasLimit);\n    emit GasPriceMinimumUpdated(deprecated_gasPriceMinimum);\n    return deprecated_gasPriceMinimum;\n  }\n\n  /**\n   * @notice Calculates the gas price minimum based on governable parameters\n   * and block congestion.\n   * @param blockGasTotal The amount of gas in the most recent block.\n   * @param blockGasLimit The maxBlockGasLimit of the past block.\n   * @return result of the calculation (new gas price minimum)\n   * @dev Calculate using the following formula:\n   * oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.\n   */\n  function getUpdatedGasPriceMinimum(uint256 blockGasTotal, uint256 blockGasLimit)\n    public\n    view\n    returns (uint256)\n  {\n    FixidityLib.Fraction memory blockDensity = FixidityLib.newFixedFraction(\n      blockGasTotal,\n      blockGasLimit\n    );\n    bool densityGreaterThanTarget = blockDensity.gt(targetDensity);\n    FixidityLib.Fraction memory densityDelta = densityGreaterThanTarget\n      ? blockDensity.subtract(targetDensity)\n      : targetDensity.subtract(blockDensity);\n    FixidityLib.Fraction memory adjustment = densityGreaterThanTarget\n      ? FixidityLib.fixed1().add(adjustmentSpeed.multiply(densityDelta))\n      : FixidityLib.fixed1().subtract(adjustmentSpeed.multiply(densityDelta));\n\n    uint256 newGasPriceMinimum = adjustment\n      .multiply(FixidityLib.newFixed(gasPriceMinimum()))\n      .add(FixidityLib.fixed1())\n      .fromFixed();\n\n    return newGasPriceMinimum >= gasPriceMinimumFloor ? newGasPriceMinimum : gasPriceMinimumFloor;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/celo/celo-monorepo/packages/protocol/contracts-0.8/common/GasPriceMinimum.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/common/GasPriceMinimum.sol",
    "exportedSymbols": {
      "CalledByVm": [
        2344
      ],
      "Context": [
        212
      ],
      "FixidityLib": [
        3009
      ],
      "GasPriceMinimum": [
        1563
      ],
      "ICeloVersionedContract": [
        3057
      ],
      "IERC20": [
        190
      ],
      "IRegistry": [
        3105
      ],
      "ISortedOracles": [
        3181
      ],
      "Initializable": [
        3042
      ],
      "Math": [
        1078
      ],
      "Ownable": [
        112
      ],
      "UsingRegistry": [
        1791
      ]
    },
    "id": 1564,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1080,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:32:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts8/access/Ownable.sol",
        "file": "@openzeppelin/contracts8/access/Ownable.sol",
        "id": 1081,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 113,
        "src": "73:53:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/CalledByVm.sol",
        "file": "../../contracts/common/CalledByVm.sol",
        "id": 1082,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 2345,
        "src": "128:47:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../../contracts/common/Initializable.sol",
        "id": 1083,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 3043,
        "src": "176:50:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../../contracts/common/interfaces/ICeloVersionedContract.sol",
        "id": 1084,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 3058,
        "src": "227:70:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FixidityLib.sol",
        "file": "../../contracts/common/FixidityLib.sol",
        "id": 1085,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 3010,
        "src": "298:48:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/UsingRegistry.sol",
        "file": "./UsingRegistry.sol",
        "id": 1086,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 1792,
        "src": "347:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
        "file": "../../contracts/stability/interfaces/ISortedOracles.sol",
        "id": 1087,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 3182,
        "src": "377:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts8/utils/math/Math.sol",
        "file": "@openzeppelin/contracts8/utils/math/Math.sol",
        "id": 1088,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1564,
        "sourceUnit": 1079,
        "src": "443:54:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1090,
              "name": "ICeloVersionedContract",
              "nameLocations": [
                "609:22:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3057,
              "src": "609:22:4"
            },
            "id": 1091,
            "nodeType": "InheritanceSpecifier",
            "src": "609:22:4"
          },
          {
            "baseName": {
              "id": 1092,
              "name": "Ownable",
              "nameLocations": [
                "635:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "635:7:4"
            },
            "id": 1093,
            "nodeType": "InheritanceSpecifier",
            "src": "635:7:4"
          },
          {
            "baseName": {
              "id": 1094,
              "name": "Initializable",
              "nameLocations": [
                "646:13:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3042,
              "src": "646:13:4"
            },
            "id": 1095,
            "nodeType": "InheritanceSpecifier",
            "src": "646:13:4"
          },
          {
            "baseName": {
              "id": 1096,
              "name": "UsingRegistry",
              "nameLocations": [
                "663:13:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1791,
              "src": "663:13:4"
            },
            "id": 1097,
            "nodeType": "InheritanceSpecifier",
            "src": "663:13:4"
          },
          {
            "baseName": {
              "id": 1098,
              "name": "CalledByVm",
              "nameLocations": [
                "680:10:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2344,
              "src": "680:10:4"
            },
            "id": 1099,
            "nodeType": "InheritanceSpecifier",
            "src": "680:10:4"
          }
        ],
        "canonicalName": "GasPriceMinimum",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1089,
          "nodeType": "StructuredDocumentation",
          "src": "499:79:4",
          "text": " @title Stores and provides gas price minimum for various currencies."
        },
        "fullyImplemented": true,
        "id": 1563,
        "linearizedBaseContracts": [
          1563,
          2344,
          1791,
          3042,
          112,
          212,
          3057
        ],
        "name": "GasPriceMinimum",
        "nameLocation": "588:15:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1103,
            "libraryName": {
              "id": 1100,
              "name": "FixidityLib",
              "nameLocations": [
                "701:11:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3009,
              "src": "701:11:4"
            },
            "nodeType": "UsingForDirective",
            "src": "695:43:4",
            "typeName": {
              "id": 1102,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1101,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "717:11:4",
                  "729:8:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2350,
                "src": "717:20:4"
              },
              "referencedDeclaration": 2350,
              "src": "717:20:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2350_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "2a109bad06121312708ed2a3e9b3556ea85ef8eadd4d10d8181f50d114eb4fab",
            "id": 1107,
            "name": "TargetDensitySet",
            "nameLocation": "748:16:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetDensity",
                  "nameLocation": "773:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "765:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "764:23:4"
            },
            "src": "742:46:4"
          },
          {
            "anonymous": false,
            "eventSelector": "5548a13ccc1d9e4e2860461edda5ad49ba8a4fda485f67d954f9d7da8d2aff27",
            "id": 1111,
            "name": "GasPriceMinimumFloorSet",
            "nameLocation": "797:23:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasPriceMinimumFloor",
                  "nameLocation": "829:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "821:28:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:30:4"
            },
            "src": "791:60:4"
          },
          {
            "anonymous": false,
            "eventSelector": "d2e71cd7012df1df07d4908ff75ae4b2bfbb6c49d39144404661f1fd47253283",
            "id": 1115,
            "name": "AdjustmentSpeedSet",
            "nameLocation": "860:18:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1113,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "adjustmentSpeed",
                  "nameLocation": "887:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "879:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "878:25:4"
            },
            "src": "854:50:4"
          },
          {
            "anonymous": false,
            "eventSelector": "6e53b2f8b69496c2a175588ad1326dbabe2f66df4d82f817aeca52e3474807fb",
            "id": 1119,
            "name": "GasPriceMinimumUpdated",
            "nameLocation": "913:22:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasPriceMinimum",
                  "nameLocation": "944:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1119,
                  "src": "936:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:25:4"
            },
            "src": "907:54:4"
          },
          {
            "anonymous": false,
            "eventSelector": "c74fe30765574b78669fcec5cea6b0dcaacd907890a49fc756a40235d01b09fc",
            "id": 1123,
            "name": "BaseFeeOpCodeActivationBlockSet",
            "nameLocation": "970:31:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseFeeOpCodeActivationBlock",
                  "nameLocation": "1010:28:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "1002:36:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:38:4"
            },
            "src": "964:76:4"
          },
          {
            "constant": false,
            "functionSelector": "f8e2b062",
            "id": 1125,
            "mutability": "mutable",
            "name": "deprecated_gasPriceMinimum",
            "nameLocation": "1059:26:4",
            "nodeType": "VariableDeclaration",
            "scope": 1563,
            "src": "1044:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1124,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1044:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ceff0bd6",
            "id": 1127,
            "mutability": "mutable",
            "name": "gasPriceMinimumFloor",
            "nameLocation": "1104:20:4",
            "nodeType": "VariableDeclaration",
            "scope": 1563,
            "src": "1089:35:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1126,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1089:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a3d5fe2",
            "id": 1130,
            "mutability": "mutable",
            "name": "targetDensity",
            "nameLocation": "1232:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 1563,
            "src": "1204:41:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$2350_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "id": 1129,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1128,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "1204:11:4",
                  "1216:8:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2350,
                "src": "1204:20:4"
              },
              "referencedDeclaration": 2350,
              "src": "1204:20:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2350_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a68f548e",
            "id": 1133,
            "mutability": "mutable",
            "name": "adjustmentSpeed",
            "nameLocation": "1340:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 1563,
            "src": "1312:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$2350_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "id": 1132,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1131,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "1312:11:4",
                  "1324:8:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2350,
                "src": "1312:20:4"
              },
              "referencedDeclaration": 2350,
              "src": "1312:20:4",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2350_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8efd92ca",
            "id": 1135,
            "mutability": "mutable",
            "name": "baseFeeOpCodeActivationBlock",
            "nameLocation": "1375:28:4",
            "nodeType": "VariableDeclaration",
            "scope": 1563,
            "src": "1360:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1134,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1360:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "541170fd",
            "id": 1138,
            "mutability": "constant",
            "name": "ABSOLUTE_MINIMAL_GAS_PRICE",
            "nameLocation": "1431:26:4",
            "nodeType": "VariableDeclaration",
            "scope": 1563,
            "src": "1407:54:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1136,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1407:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1137,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1460:1:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1147,
              "nodeType": "Block",
              "src": "1661:2:4",
              "statements": []
            },
            "documentation": {
              "id": 1139,
              "nodeType": "StructuredDocumentation",
              "src": "1466:142:4",
              "text": " @notice Sets initialized == true on implementation contracts\n @param test Set to true to skip implementation initialization"
            },
            "id": 1148,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1144,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1141,
                    "src": "1655:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 1145,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1143,
                  "name": "Initializable",
                  "nameLocations": [
                    "1641:13:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3042,
                  "src": "1641:13:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1641:19:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "1628:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "1623:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1622:11:4"
            },
            "returnParameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:0:4"
            },
            "scope": 1563,
            "src": "1611:52:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3056
            ],
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "2027:30:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2041:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "32",
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2044:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "30",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2047:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2050:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "id": 1164,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2040:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_2_by_1_$_t_rational_0_by_1_$_t_rational_1_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 2,int_const 0,int_const 1)"
                    }
                  },
                  "functionReturnParameters": 1159,
                  "id": 1165,
                  "nodeType": "Return",
                  "src": "2033:19:4"
                }
              ]
            },
            "documentation": {
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "1667:270:4",
              "text": " @notice Returns the storage, major, minor, and patch version of the contract.\n @return Storage version of the contract.\n @return Major version of the contract.\n @return Minor version of the contract.\n @return Patch version of the contract."
            },
            "functionSelector": "54255be0",
            "id": 1167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nameLocation": "1949:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1965:2:4"
            },
            "returnParameters": {
              "id": 1159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "1991:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1991:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "2000:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "2009:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2009:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "2018:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1990:36:4"
            },
            "scope": 1563,
            "src": "1940:117:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1213,
              "nodeType": "Block",
              "src": "2824:339:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2849:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2853:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2849:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1183,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "2830:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2830:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "2830:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1189,
                        "name": "_registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "2878:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1188,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1776,
                      "src": "2866:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2866:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "2866:29:4"
                },
                {
                  "expression": {
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1192,
                      "name": "deprecated_gasPriceMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "2901:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1193,
                      "name": "_gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1172,
                      "src": "2930:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2901:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:50:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1197,
                        "name": "_gasPriceMinimumFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1172,
                        "src": "2981:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1196,
                      "name": "setGasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "2957:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2957:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "2957:46:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1201,
                        "name": "_targetDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "3026:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1200,
                      "name": "setTargetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "3009:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3009:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "ExpressionStatement",
                  "src": "3009:32:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1205,
                        "name": "_adjustmentSpeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1176,
                        "src": "3066:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1204,
                      "name": "setAdjustmentSpeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "3047:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "3047:36:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1209,
                        "name": "_baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "3122:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3153:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1208,
                      "name": "_setBaseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "3089:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3089:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:69:4"
                }
              ]
            },
            "documentation": {
              "id": 1168,
              "nodeType": "StructuredDocumentation",
              "src": "2061:549:4",
              "text": " @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n @param _registryAddress The address of the registry core smart contract.\n @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated"
            },
            "functionSelector": "f92ad219",
            "id": 1214,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1180,
                  "name": "initializer",
                  "nameLocations": [
                    "2812:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3041,
                  "src": "2812:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2812:11:4"
              }
            ],
            "name": "initialize",
            "nameLocation": "2622:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "_registryAddress",
                  "nameLocation": "2646:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "2638:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2638:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1172,
                  "mutability": "mutable",
                  "name": "_gasPriceMinimumFloor",
                  "nameLocation": "2676:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "2668:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1174,
                  "mutability": "mutable",
                  "name": "_targetDensity",
                  "nameLocation": "2711:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "2703:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2703:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1176,
                  "mutability": "mutable",
                  "name": "_adjustmentSpeed",
                  "nameLocation": "2739:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "2731:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2731:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1178,
                  "mutability": "mutable",
                  "name": "_baseFeeOpCodeActivationBlock",
                  "nameLocation": "2769:29:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "2761:37:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2632:170:4"
            },
            "returnParameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2824:0:4"
            },
            "scope": 1563,
            "src": "2613:550:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1243,
              "nodeType": "Block",
              "src": "3471:208:4",
              "statements": [
                {
                  "expression": {
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1222,
                      "name": "adjustmentSpeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1133,
                      "src": "3477:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1225,
                          "name": "_adjustmentSpeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1217,
                          "src": "3512:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1223,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3009,
                          "src": "3495:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3507:4:4",
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2388,
                        "src": "3495:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3495:34:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "3477:52:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 1228,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:52:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1232,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3009,
                                "src": "3562:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 1233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3574:6:4",
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2374,
                              "src": "3562:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3562:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "id": 1230,
                            "name": "adjustmentSpeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1133,
                            "src": "3543:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3559:2:4",
                          "memberName": "lt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2954,
                          "src": "3543:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3543:40:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61646a7573746d656e74207370656564206d75737420626520736d616c6c6572207468616e2031",
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3585:41:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
                          "typeString": "literal_string \"adjustment speed must be smaller than 1\""
                        },
                        "value": "adjustment speed must be smaller than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ca525b7c92ab0b7df54934c50022a14e556f23c4839d801f989aa9d9a315b5d",
                          "typeString": "literal_string \"adjustment speed must be smaller than 1\""
                        }
                      ],
                      "id": 1229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3535:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:92:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1238,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:92:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1240,
                        "name": "_adjustmentSpeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1217,
                        "src": "3657:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1239,
                      "name": "AdjustmentSpeedSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "3638:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3638:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1242,
                  "nodeType": "EmitStatement",
                  "src": "3633:41:4"
                }
              ]
            },
            "documentation": {
              "id": 1215,
              "nodeType": "StructuredDocumentation",
              "src": "3167:230:4",
              "text": " @notice Set a multiplier that impacts how quickly gas price minimum is adjusted.\n @param _adjustmentSpeed How quickly the minimum changes, expressed as a fixidity fraction.\n @dev Value is expected to be < 1."
            },
            "functionSelector": "30f726b9",
            "id": 1244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1220,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1219,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3461:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3461:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3461:9:4"
              }
            ],
            "name": "setAdjustmentSpeed",
            "nameLocation": "3409:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "_adjustmentSpeed",
                  "nameLocation": "3436:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "3428:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3428:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3427:26:4"
            },
            "returnParameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3471:0:4"
            },
            "scope": 1563,
            "src": "3400:279:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1273,
              "nodeType": "Block",
              "src": "3977:196:4",
              "statements": [
                {
                  "expression": {
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1252,
                      "name": "targetDensity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "3983:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1255,
                          "name": "_targetDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1247,
                          "src": "4016:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1253,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3009,
                          "src": "3999:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4011:4:4",
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2388,
                        "src": "3999:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3999:32:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "3983:48:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "3983:48:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1262,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3009,
                                "src": "4062:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4074:6:4",
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2374,
                              "src": "4062:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4062:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "id": 1260,
                            "name": "targetDensity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "4045:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4059:2:4",
                          "memberName": "lt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2954,
                          "src": "4045:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4045:38:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7461726765742064656e73697479206d75737420626520736d616c6c6572207468616e2031",
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4085:39:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
                          "typeString": "literal_string \"target density must be smaller than 1\""
                        },
                        "value": "target density must be smaller than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de9fc88c13166a48d03981dcc23a666759f32cad49458a022b7a646309293f6e",
                          "typeString": "literal_string \"target density must be smaller than 1\""
                        }
                      ],
                      "id": 1259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4037:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4037:88:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:88:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1270,
                        "name": "_targetDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1247,
                        "src": "4153:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1269,
                      "name": "TargetDensitySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "4136:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "EmitStatement",
                  "src": "4131:37:4"
                }
              ]
            },
            "documentation": {
              "id": 1245,
              "nodeType": "StructuredDocumentation",
              "src": "3683:224:4",
              "text": " @notice Set the block density targeted by the gas price minimum algorithm.\n @param _targetDensity The target gas fullness of blocks, expressed as a fixidity fraction.\n @dev Value is expected to be < 1."
            },
            "functionSelector": "93ca6fc4",
            "id": 1274,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1249,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3967:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3967:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3967:9:4"
              }
            ],
            "name": "setTargetDensity",
            "nameLocation": "3919:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "_targetDensity",
                  "nameLocation": "3944:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "3936:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3936:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3935:24:4"
            },
            "returnParameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3977:0:4"
            },
            "scope": 1563,
            "src": "3910:263:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1297,
              "nodeType": "Block",
              "src": "4439:205:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1283,
                          "name": "_gasPriceMinimumFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1277,
                          "src": "4453:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4477:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4453:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676173207072696365206d696e696d756d20666c6f6f72206d7573742062652067726561746572207468616e207a65726f",
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4480:51:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
                          "typeString": "literal_string \"gas price minimum floor must be greater than zero\""
                        },
                        "value": "gas price minimum floor must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8930b1a1fce9c6c6ac87e8e1f4ca019a03f6b66006482ef580a68eacea7bcd7b",
                          "typeString": "literal_string \"gas price minimum floor must be greater than zero\""
                        }
                      ],
                      "id": 1282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4445:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4445:87:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1288,
                  "nodeType": "ExpressionStatement",
                  "src": "4445:87:4"
                },
                {
                  "expression": {
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1289,
                      "name": "gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1127,
                      "src": "4538:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1290,
                      "name": "_gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "4561:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4538:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "4538:44:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1294,
                        "name": "_gasPriceMinimumFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "4617:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1293,
                      "name": "GasPriceMinimumFloorSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "4593:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4593:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1296,
                  "nodeType": "EmitStatement",
                  "src": "4588:51:4"
                }
              ]
            },
            "documentation": {
              "id": 1275,
              "nodeType": "StructuredDocumentation",
              "src": "4177:178:4",
              "text": " @notice Set the minimum gas price treshold.\n @param _gasPriceMinimumFloor The lowest value the gas price minimum can be.\n @dev Value is expected to be > 0."
            },
            "functionSelector": "b830f4a4",
            "id": 1298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1280,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1279,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4429:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4429:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4429:9:4"
              }
            ],
            "name": "setGasPriceMinimumFloor",
            "nameLocation": "4367:23:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "_gasPriceMinimumFloor",
                  "nameLocation": "4399:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "4391:29:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4390:31:4"
            },
            "returnParameters": {
              "id": 1281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4439:0:4"
            },
            "scope": 1563,
            "src": "4358:286:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "4962:81:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1307,
                        "name": "_baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1301,
                        "src": "5001:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5032:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1306,
                      "name": "_setBaseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1340,
                      "src": "4968:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4968:70:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "4968:70:4"
                }
              ]
            },
            "documentation": {
              "id": 1299,
              "nodeType": "StructuredDocumentation",
              "src": "4648:202:4",
              "text": " @notice Set the activation block of the baseFee opCode.\n @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n @dev Value is expected to be > 0."
            },
            "functionSelector": "4b930e5a",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1303,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4950:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4950:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "4950:9:4"
              }
            ],
            "name": "setBaseFeeOpCodeActivationBlock",
            "nameLocation": "4862:31:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "_baseFeeOpCodeActivationBlock",
                  "nameLocation": "4902:29:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "4894:37:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4893:39:4"
            },
            "returnParameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4962:0:4"
            },
            "scope": 1563,
            "src": "4853:190:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1339,
              "nodeType": "Block",
              "src": "5377:284:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1323,
                          "name": "allowZero",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "5398:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1324,
                            "name": "_baseFeeOpCodeActivationBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1315,
                            "src": "5411:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5443:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5411:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5398:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62617365466565206f70436f64652061637469766174696f6e20626c6f636b206d7573742062652067726561746572207468616e207a65726f",
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5452:59:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
                          "typeString": "literal_string \"baseFee opCode activation block must be greater than zero\""
                        },
                        "value": "baseFee opCode activation block must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9d51394b275342b564f39c329f58641636f622b7ee20b0abef6182e70e4bf06",
                          "typeString": "literal_string \"baseFee opCode activation block must be greater than zero\""
                        }
                      ],
                      "id": 1322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5383:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5383:134:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "5383:134:4"
                },
                {
                  "expression": {
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1331,
                      "name": "baseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "5523:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1332,
                      "name": "_baseFeeOpCodeActivationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "5554:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5523:60:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1334,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:60:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1336,
                        "name": "_baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "5626:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1335,
                      "name": "BaseFeeOpCodeActivationBlockSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "5594:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5594:62:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "EmitStatement",
                  "src": "5589:67:4"
                }
              ]
            },
            "documentation": {
              "id": 1313,
              "nodeType": "StructuredDocumentation",
              "src": "5047:202:4",
              "text": " @notice Set the activation block of the baseFee opCode.\n @param _baseFeeOpCodeActivationBlock Block number where the baseFee opCode is activated\n @dev Value is expected to be > 0."
            },
            "id": 1340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1320,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1319,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5365:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5365:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5365:9:4"
              }
            ],
            "name": "_setBaseFeeOpCodeActivationBlock",
            "nameLocation": "5261:32:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "_baseFeeOpCodeActivationBlock",
                  "nameLocation": "5302:29:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "5294:37:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5294:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "allowZero",
                  "nameLocation": "5338:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "5333:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5333:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5293:55:4"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5377:0:4"
            },
            "scope": 1563,
            "src": "5252:409:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1361,
              "nodeType": "Block",
              "src": "5722:185:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1345,
                        "name": "baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "5732:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5763:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5732:32:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1348,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "5768:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5774:6:4",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "5768:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 1350,
                        "name": "baseFeeOpCodeActivationBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1135,
                        "src": "5784:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5768:44:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5732:80:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1359,
                    "nodeType": "Block",
                    "src": "5855:48:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 1357,
                          "name": "deprecated_gasPriceMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1125,
                          "src": "5870:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1344,
                        "id": 1358,
                        "nodeType": "Return",
                        "src": "5863:33:4"
                      }
                    ]
                  },
                  "id": 1360,
                  "nodeType": "IfStatement",
                  "src": "5728:175:4",
                  "trueBody": {
                    "id": 1356,
                    "nodeType": "Block",
                    "src": "5814:35:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1353,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5829:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5835:7:4",
                          "memberName": "basefee",
                          "nodeType": "MemberAccess",
                          "src": "5829:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1344,
                        "id": 1355,
                        "nodeType": "Return",
                        "src": "5822:20:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "36945c2d",
            "id": 1362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "gasPriceMinimum",
            "nameLocation": "5674:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5689:2:4"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1362,
                  "src": "5713:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5713:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5712:9:4"
            },
            "scope": 1563,
            "src": "5665:242:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1422,
              "nodeType": "Block",
              "src": "5993:520:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1369,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "6010:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6034:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6026:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1370,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6026:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6026:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6010:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1375,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "6046:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1378,
                            "name": "GOLD_TOKEN_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1646,
                            "src": "6090:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1376,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "6062:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$3105",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6071:18:4",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3073,
                          "src": "6062:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6062:51:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6046:67:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6010:103:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1420,
                    "nodeType": "Block",
                    "src": "6165:344:4",
                    "statements": [
                      {
                        "assignments": [
                          1388
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1388,
                            "mutability": "mutable",
                            "name": "sortedOracles",
                            "nameLocation": "6188:13:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1420,
                            "src": "6173:28:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISortedOracles_$3181",
                              "typeString": "contract ISortedOracles"
                            },
                            "typeName": {
                              "id": 1387,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1386,
                                "name": "ISortedOracles",
                                "nameLocations": [
                                  "6173:14:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3181,
                                "src": "6173:14:4"
                              },
                              "referencedDeclaration": 3181,
                              "src": "6173:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISortedOracles_$3181",
                                "typeString": "contract ISortedOracles"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1395,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1392,
                                  "name": "SORTED_ORACLES_REGISTRY_ID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1694,
                                  "src": "6256:26:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1390,
                                  "name": "registry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1713,
                                  "src": "6228:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRegistry_$3105",
                                    "typeString": "contract IRegistry"
                                  }
                                },
                                "id": 1391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6237:18:4",
                                "memberName": "getAddressForOrDie",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3073,
                                "src": "6228:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view external returns (address)"
                                }
                              },
                              "id": 1393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6228:55:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1389,
                            "name": "ISortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3181,
                            "src": "6204:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISortedOracles_$3181_$",
                              "typeString": "type(contract ISortedOracles)"
                            }
                          },
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6204:87:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISortedOracles_$3181",
                            "typeString": "contract ISortedOracles"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6173:118:4"
                      },
                      {
                        "assignments": [
                          1397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1397,
                            "mutability": "mutable",
                            "name": "rateNumerator",
                            "nameLocation": "6307:13:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1420,
                            "src": "6299:21:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1396,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6299:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1398,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6299:21:4"
                      },
                      {
                        "assignments": [
                          1400
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1400,
                            "mutability": "mutable",
                            "name": "rateDenominator",
                            "nameLocation": "6336:15:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1420,
                            "src": "6328:23:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1399,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6328:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1401,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6328:23:4"
                      },
                      {
                        "expression": {
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1402,
                                "name": "rateNumerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1397,
                                "src": "6360:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1403,
                                "name": "rateDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1400,
                                "src": "6375:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1404,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "6359:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1407,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "6419:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1405,
                                "name": "sortedOracles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1388,
                                "src": "6394:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISortedOracles_$3181",
                                  "typeString": "contract ISortedOracles"
                                }
                              },
                              "id": 1406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6408:10:4",
                              "memberName": "medianRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3166,
                              "src": "6394:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256,uint256)"
                              }
                            },
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6394:38:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "6359:73:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1410,
                        "nodeType": "ExpressionStatement",
                        "src": "6359:73:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1414,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1411,
                                        "name": "gasPriceMinimum",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1362,
                                        "src": "6449:15:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                          "typeString": "function () view returns (uint256)"
                                        }
                                      },
                                      "id": 1412,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6449:17:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1413,
                                      "name": "rateNumerator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1397,
                                      "src": "6469:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6449:33:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1415,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6448:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1416,
                                "name": "rateDenominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1400,
                                "src": "6486:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6448:53:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1418,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6447:55:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1368,
                        "id": 1419,
                        "nodeType": "Return",
                        "src": "6440:62:4"
                      }
                    ]
                  },
                  "id": 1421,
                  "nodeType": "IfStatement",
                  "src": "5999:510:4",
                  "trueBody": {
                    "id": 1385,
                    "nodeType": "Block",
                    "src": "6120:39:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1382,
                            "name": "gasPriceMinimum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1362,
                            "src": "6135:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6135:17:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1368,
                        "id": 1384,
                        "nodeType": "Return",
                        "src": "6128:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getGasPriceMinimum",
            "nameLocation": "5920:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "5948:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "5940:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5940:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5939:22:4"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1423,
                  "src": "5984:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5984:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5983:9:4"
            },
            "scope": 1563,
            "src": "5911:602:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1439,
              "nodeType": "Block",
              "src": "7291:89:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1434,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1426,
                            "src": "7333:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1433,
                          "name": "_getGasPriceMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1423,
                          "src": "7313:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7313:33:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1436,
                        "name": "ABSOLUTE_MINIMAL_GAS_PRICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "7348:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1431,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "7304:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$1078_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7309:3:4",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 237,
                      "src": "7304:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7304:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1430,
                  "id": 1438,
                  "nodeType": "Return",
                  "src": "7297:78:4"
                }
              ]
            },
            "documentation": {
              "id": 1424,
              "nodeType": "StructuredDocumentation",
              "src": "6517:689:4",
              "text": " @notice Retrieve the current gas price minimum for a currency.\n When caled for 0x0 or Celo address, it returns gasPriceMinimum().\n For other addresses it returns gasPriceMinimum() mutiplied by \n the SortedOracles median of the token. It does not check tokenAddress is a valid fee currency.\n this function will never returns values less than ABSOLUTE_MINIMAL_GAS_PRICE.\n If Oracle rate doesn't exist, it returns ABSOLUTE_MINIMAL_GAS_PRICE.\n @dev This functions assumes one unit of token has 18 digits.\n @param tokenAddress The currency the gas price should be in (defaults to Celo).\n @return current gas price minimum in the requested currency"
            },
            "functionSelector": "a54b7fc0",
            "id": 1440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGasPriceMinimum",
            "nameLocation": "7218:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1426,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7245:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "7237:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7237:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7236:22:4"
            },
            "returnParameters": {
              "id": 1430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "7282:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7282:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7281:9:4"
            },
            "scope": 1563,
            "src": "7209:171:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1465,
              "nodeType": "Block",
              "src": "7820:195:4",
              "statements": [
                {
                  "expression": {
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1452,
                      "name": "deprecated_gasPriceMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1125,
                      "src": "7826:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1454,
                          "name": "blockGasTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1443,
                          "src": "7881:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1455,
                          "name": "blockGasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1445,
                          "src": "7896:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1453,
                        "name": "getUpdatedGasPriceMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1562,
                        "src": "7855:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7855:55:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7826:84:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "7826:84:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1460,
                        "name": "deprecated_gasPriceMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "7944:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1459,
                      "name": "GasPriceMinimumUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "7921:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7921:50:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1462,
                  "nodeType": "EmitStatement",
                  "src": "7916:55:4"
                },
                {
                  "expression": {
                    "id": 1463,
                    "name": "deprecated_gasPriceMinimum",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1125,
                    "src": "7984:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1451,
                  "id": 1464,
                  "nodeType": "Return",
                  "src": "7977:33:4"
                }
              ]
            },
            "documentation": {
              "id": 1441,
              "nodeType": "StructuredDocumentation",
              "src": "7384:308:4",
              "text": " @notice Adjust the gas price minimum based on governable parameters\n and block congestion.\n @param blockGasTotal The amount of gas in the most recent block.\n @param blockGasLimit The maxBlockGasLimit of the past block.\n @return result of the calculation (new gas price minimum)"
            },
            "functionSelector": "c12398b4",
            "id": 1466,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1447,
                  "name": "onlyVm",
                  "nameLocations": [
                    "7789:6:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2343,
                  "src": "7789:6:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "7789:6:4"
              }
            ],
            "name": "updateGasPriceMinimum",
            "nameLocation": "7704:21:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "blockGasTotal",
                  "nameLocation": "7734:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "7726:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7726:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "mutability": "mutable",
                  "name": "blockGasLimit",
                  "nameLocation": "7757:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "7749:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7749:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7725:46:4"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1466,
                  "src": "7809:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7809:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7808:9:4"
            },
            "scope": 1563,
            "src": "7695:320:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1561,
              "nodeType": "Block",
              "src": "8596:838:4",
              "statements": [
                {
                  "assignments": [
                    1480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1480,
                      "mutability": "mutable",
                      "name": "blockDensity",
                      "nameLocation": "8630:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1561,
                      "src": "8602:40:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "id": 1479,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1478,
                          "name": "FixidityLib.Fraction",
                          "nameLocations": [
                            "8602:11:4",
                            "8614:8:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2350,
                          "src": "8602:20:4"
                        },
                        "referencedDeclaration": 2350,
                        "src": "8602:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2350_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1486,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1483,
                        "name": "blockGasTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "8681:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1484,
                        "name": "blockGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "8702:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1481,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3009,
                        "src": "8645:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8657:16:4",
                      "memberName": "newFixedFraction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2489,
                      "src": "8645:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                        "typeString": "function (uint256,uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 1485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8645:76:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8602:119:4"
                },
                {
                  "assignments": [
                    1488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1488,
                      "mutability": "mutable",
                      "name": "densityGreaterThanTarget",
                      "nameLocation": "8732:24:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1561,
                      "src": "8727:29:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1487,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8727:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1493,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1491,
                        "name": "targetDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "8775:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                          "typeString": "struct FixidityLib.Fraction storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                          "typeString": "struct FixidityLib.Fraction storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1489,
                        "name": "blockDensity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "8759:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 1490,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8772:2:4",
                      "memberName": "gt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2916,
                      "src": "8759:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_bool_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8759:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8727:62:4"
                },
                {
                  "assignments": [
                    1498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1498,
                      "mutability": "mutable",
                      "name": "densityDelta",
                      "nameLocation": "8823:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1561,
                      "src": "8795:40:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "id": 1497,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1496,
                          "name": "FixidityLib.Fraction",
                          "nameLocations": [
                            "8795:11:4",
                            "8807:8:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2350,
                          "src": "8795:20:4"
                        },
                        "referencedDeclaration": 2350,
                        "src": "8795:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2350_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1509,
                  "initialValue": {
                    "condition": {
                      "id": 1499,
                      "name": "densityGreaterThanTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1488,
                      "src": "8838:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 1506,
                          "name": "blockDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1480,
                          "src": "8939:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "id": 1504,
                          "name": "targetDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "8916:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                            "typeString": "struct FixidityLib.Fraction storage ref"
                          }
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8930:8:4",
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2599,
                        "src": "8916:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8916:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8838:114:4",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 1502,
                          "name": "targetDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "8893:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                            "typeString": "struct FixidityLib.Fraction storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                            "typeString": "struct FixidityLib.Fraction storage ref"
                          }
                        ],
                        "expression": {
                          "id": 1500,
                          "name": "blockDensity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1480,
                          "src": "8871:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 1501,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8884:8:4",
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2599,
                        "src": "8871:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 1503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8871:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8795:157:4"
                },
                {
                  "assignments": [
                    1514
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1514,
                      "mutability": "mutable",
                      "name": "adjustment",
                      "nameLocation": "8986:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1561,
                      "src": "8958:38:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "id": 1513,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1512,
                          "name": "FixidityLib.Fraction",
                          "nameLocations": [
                            "8958:11:4",
                            "8970:8:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2350,
                          "src": "8958:20:4"
                        },
                        "referencedDeclaration": 2350,
                        "src": "8958:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2350_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1535,
                  "initialValue": {
                    "condition": {
                      "id": 1515,
                      "name": "densityGreaterThanTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1488,
                      "src": "8999:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1531,
                              "name": "densityDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1498,
                              "src": "9160:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            ],
                            "expression": {
                              "id": 1529,
                              "name": "adjustmentSpeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "9135:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                                "typeString": "struct FixidityLib.Fraction storage ref"
                              }
                            },
                            "id": 1530,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9151:8:4",
                            "memberName": "multiply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2822,
                            "src": "9135:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                              "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9135:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1525,
                              "name": "FixidityLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3009,
                              "src": "9105:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                                "typeString": "type(library FixidityLib)"
                              }
                            },
                            "id": 1526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9117:6:4",
                            "memberName": "fixed1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2374,
                            "src": "9105:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                              "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9105:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 1528,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9126:8:4",
                        "memberName": "subtract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2599,
                        "src": "9105:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 1533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9105:69:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8999:175:4",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1522,
                              "name": "densityDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1498,
                              "src": "9082:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            ],
                            "expression": {
                              "id": 1520,
                              "name": "adjustmentSpeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "9057:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$2350_storage",
                                "typeString": "struct FixidityLib.Fraction storage ref"
                              }
                            },
                            "id": 1521,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9073:8:4",
                            "memberName": "multiply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2822,
                            "src": "9057:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                              "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9057:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1516,
                              "name": "FixidityLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3009,
                              "src": "9032:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                                "typeString": "type(library FixidityLib)"
                              }
                            },
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9044:6:4",
                            "memberName": "fixed1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2374,
                            "src": "9032:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                              "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                            }
                          },
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9032:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 1519,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9053:3:4",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2568,
                        "src": "9032:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9032:64:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8958:216:4"
                },
                {
                  "assignments": [
                    1537
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1537,
                      "mutability": "mutable",
                      "name": "newGasPriceMinimum",
                      "nameLocation": "9189:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1561,
                      "src": "9181:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1536,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9181:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1553,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1547,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3009,
                                "src": "9289:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 1548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9301:6:4",
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2374,
                              "src": "9289:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 1549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9289:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1542,
                                      "name": "gasPriceMinimum",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1362,
                                      "src": "9258:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 1543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9258:17:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1540,
                                    "name": "FixidityLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3009,
                                    "src": "9237:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3009_$",
                                      "typeString": "type(library FixidityLib)"
                                    }
                                  },
                                  "id": 1541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9249:8:4",
                                  "memberName": "newFixed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2443,
                                  "src": "9237:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2350_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                                  }
                                },
                                "id": 1544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9237:39:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              ],
                              "expression": {
                                "id": 1538,
                                "name": "adjustment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1514,
                                "src": "9210:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              },
                              "id": 1539,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9228:8:4",
                              "memberName": "multiply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2822,
                              "src": "9210:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                                "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 1545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9210:67:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9285:3:4",
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2568,
                          "src": "9210:78:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_struct$_Fraction_$2350_memory_ptr_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9210:100:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2350_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9318:9:4",
                      "memberName": "fromFixed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2458,
                      "src": "9210:117:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2350_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Fraction_$2350_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9210:119:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9181:148:4"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1554,
                        "name": "newGasPriceMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1537,
                        "src": "9343:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "id": 1555,
                        "name": "gasPriceMinimumFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "9365:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9343:42:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1558,
                      "name": "gasPriceMinimumFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1127,
                      "src": "9409:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9343:86:4",
                    "trueExpression": {
                      "id": 1557,
                      "name": "newGasPriceMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1537,
                      "src": "9388:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1475,
                  "id": 1560,
                  "nodeType": "Return",
                  "src": "9336:93:4"
                }
              ]
            },
            "documentation": {
              "id": 1467,
              "nodeType": "StructuredDocumentation",
              "src": "8019:449:4",
              "text": " @notice Calculates the gas price minimum based on governable parameters\n and block congestion.\n @param blockGasTotal The amount of gas in the most recent block.\n @param blockGasLimit The maxBlockGasLimit of the past block.\n @return result of the calculation (new gas price minimum)\n @dev Calculate using the following formula:\n oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1."
            },
            "functionSelector": "ef712c5b",
            "id": 1562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUpdatedGasPriceMinimum",
            "nameLocation": "8480:25:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1469,
                  "mutability": "mutable",
                  "name": "blockGasTotal",
                  "nameLocation": "8514:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "8506:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8506:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1471,
                  "mutability": "mutable",
                  "name": "blockGasLimit",
                  "nameLocation": "8537:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "8529:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8529:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8505:46:4"
            },
            "returnParameters": {
              "id": 1475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "8585:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8585:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8584:9:4"
            },
            "scope": 1563,
            "src": "8471:963:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1564,
        "src": "579:8857:4",
        "usedErrors": []
      }
    ],
    "src": "39:9398:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2024-03-05T15:18:07.402Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "getGasPriceMinimum(address)": {
        "details": "This functions assumes one unit of token has 18 digits.",
        "params": {
          "tokenAddress": "The currency the gas price should be in (defaults to Celo)."
        },
        "returns": {
          "_0": "current gas price minimum in the requested currency"
        }
      },
      "getUpdatedGasPriceMinimum(uint256,uint256)": {
        "details": "Calculate using the following formula: oldGasPriceMinimum * (1 + (adjustmentSpeed * (blockDensity - targetDensity))) + 1.",
        "params": {
          "blockGasLimit": "The maxBlockGasLimit of the past block.",
          "blockGasTotal": "The amount of gas in the most recent block."
        },
        "returns": {
          "_0": "result of the calculation (new gas price minimum)"
        }
      },
      "getVersionNumber()": {
        "returns": {
          "_0": "Storage version of the contract.",
          "_1": "Major version of the contract.",
          "_2": "Minor version of the contract.",
          "_3": "Patch version of the contract."
        }
      },
      "initialize(address,uint256,uint256,uint256,uint256)": {
        "params": {
          "_adjustmentSpeed": "How quickly the minimum changes, expressed as a fixidity fraction.",
          "_baseFeeOpCodeActivationBlock": "Block number where the baseFee opCode is activated",
          "_gasPriceMinimumFloor": "The lowest value the gas price minimum can be.",
          "_registryAddress": "The address of the registry core smart contract.",
          "_targetDensity": "The target gas fullness of blocks, expressed as a fixidity fraction."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setAdjustmentSpeed(uint256)": {
        "details": "Value is expected to be < 1.",
        "params": {
          "_adjustmentSpeed": "How quickly the minimum changes, expressed as a fixidity fraction."
        }
      },
      "setBaseFeeOpCodeActivationBlock(uint256)": {
        "details": "Value is expected to be > 0.",
        "params": {
          "_baseFeeOpCodeActivationBlock": "Block number where the baseFee opCode is activated"
        }
      },
      "setGasPriceMinimumFloor(uint256)": {
        "details": "Value is expected to be > 0.",
        "params": {
          "_gasPriceMinimumFloor": "The lowest value the gas price minimum can be."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setTargetDensity(uint256)": {
        "details": "Value is expected to be < 1.",
        "params": {
          "_targetDensity": "The target gas fullness of blocks, expressed as a fixidity fraction."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateGasPriceMinimum(uint256,uint256)": {
        "params": {
          "blockGasLimit": "The maxBlockGasLimit of the past block.",
          "blockGasTotal": "The amount of gas in the most recent block."
        },
        "returns": {
          "_0": "result of the calculation (new gas price minimum)"
        }
      }
    },
    "title": "Stores and provides gas price minimum for various currencies.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Sets initialized == true on implementation contracts"
      },
      "getGasPriceMinimum(address)": {
        "notice": "Retrieve the current gas price minimum for a currency. When caled for 0x0 or Celo address, it returns gasPriceMinimum(). For other addresses it returns gasPriceMinimum() mutiplied by  the SortedOracles median of the token. It does not check tokenAddress is a valid fee currency. this function will never returns values less than ABSOLUTE_MINIMAL_GAS_PRICE. If Oracle rate doesn't exist, it returns ABSOLUTE_MINIMAL_GAS_PRICE."
      },
      "getUpdatedGasPriceMinimum(uint256,uint256)": {
        "notice": "Calculates the gas price minimum based on governable parameters and block congestion."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize(address,uint256,uint256,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "setAdjustmentSpeed(uint256)": {
        "notice": "Set a multiplier that impacts how quickly gas price minimum is adjusted."
      },
      "setBaseFeeOpCodeActivationBlock(uint256)": {
        "notice": "Set the activation block of the baseFee opCode."
      },
      "setGasPriceMinimumFloor(uint256)": {
        "notice": "Set the minimum gas price treshold."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setTargetDensity(uint256)": {
        "notice": "Set the block density targeted by the gas price minimum algorithm."
      },
      "updateGasPriceMinimum(uint256,uint256)": {
        "notice": "Adjust the gas price minimum based on governable parameters and block congestion."
      }
    },
    "version": 1
  }
}