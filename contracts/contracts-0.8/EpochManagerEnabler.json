{
  "contractName": "EpochManagerEnabler",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LastKnownElectedAccountsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastKnownEpochNumber",
          "type": "uint256"
        }
      ],
      "name": "LastKnownEpochNumberSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastKnownFirstBlockOfEpoch",
          "type": "uint256"
        }
      ],
      "name": "LastKnownFirstBlockOfEpochSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastKnownElectedAccounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastKnownEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastKnownFirstBlockOfEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initEpochManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "captureEpochAndValidators",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getlastKnownElectedAccounts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"LastKnownElectedAccountsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastKnownEpochNumber\",\"type\":\"uint256\"}],\"name\":\"LastKnownEpochNumberSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastKnownFirstBlockOfEpoch\",\"type\":\"uint256\"}],\"name\":\"LastKnownFirstBlockOfEpochSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"captureEpochAndValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getlastKnownElectedAccounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initEpochManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lastKnownElectedAccounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastKnownEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastKnownFirstBlockOfEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof   of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the   account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"returns\":{\"_0\":\"True upon success.\"}},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"returns\":{\"_0\":\"Numerator of the computed quantity (not reduced).\",\"_1\":\"Denominator of the computed quantity (not reduced).\"}},\"getBlockNumberFromHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"returns\":{\"_0\":\"Block number.\"}},\"getEpochNumber()\":{\"details\":\"This function will be deprecated in L2.\",\"returns\":{\"_0\":\"Current epoch number.\"}},\"getEpochNumberOfBlock(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"returns\":{\"_0\":\"Epoch number.\"}},\"getEpochSize()\":{\"details\":\"This function will be deprecated in L2.\",\"returns\":{\"_0\":\"The current epoch size in blocks.\"}},\"getParentSealBitmap(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"returns\":{\"_0\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"}},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"returns\":{\"_0\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"}},\"getVersionNumber()\":{\"returns\":{\"_0\":\"Storage version of the contract.\",\"_1\":\"Major version of the contract.\",\"_2\":\"Minor version of the contract.\",\"_3\":\"Patch version of the contract.\"}},\"getlastKnownElectedAccounts()\":{\"returns\":{\"_0\":\"a list of know elected validator accounts.\"}},\"hashHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"returns\":{\"_0\":\"Header hash.\"}},\"initialize(address)\":{\"params\":{\"registryAddress\":\"The address of the registry core smart contract.\"}},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))This function will be deprecated in L2.\"},\"minQuorumSizeInCurrentSet()\":{\"details\":\"This function will be deprecated in L2.\",\"returns\":{\"_0\":\"Byzantine quorum of validators.\"}},\"numberValidatorsInCurrentSet()\":{\"details\":\"This function will be deprecated in L2.\",\"returns\":{\"_0\":\"Size of the current elected validator set.\"}},\"numberValidatorsInSet(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"returns\":{\"_0\":\"Size of the validator set.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"returns\":{\"_0\":\"Address of validator signer at the requested index.\"}},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"returns\":{\"_0\":\"Address of validator signer at the requested index.\"}}},\"title\":\"Contract Used to initialize the EpochManager system after L2 transition.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"captureEpochAndValidators()\":{\"notice\":\"Stores the last known epochNumber and the related elected validator accounts.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"constructor\":{\"notice\":\"Sets initialized == true on implementation contracts\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"initEpochManager()\":{\"notice\":\"initializes the epochManager contract during L2 transition.\"},\"initialize(address)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInCurrentSet()\":{\"notice\":\"Gets the size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator signer address from the current validator set.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator signer address from the validator set at the given block number.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/common/EpochManagerEnabler.sol\":\"EpochManagerEnabler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/EpochManagerEnabler.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"../common/UsingRegistry.sol\\\";\\nimport \\\"../common/UsingPrecompiles.sol\\\";\\n\\nimport \\\"../../contracts/common/Initializable.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IEpochManagerEnabler.sol\\\";\\nimport \\\"./interfaces/IEpochManagerEnablerInitializer.sol\\\";\\n\\n/**\\n * @title Contract Used to initialize the EpochManager system after L2 transition.\\n */\\ncontract EpochManagerEnabler is\\n  Initializable,\\n  UsingRegistry,\\n  UsingPrecompiles,\\n  IEpochManagerEnabler,\\n  IEpochManagerEnablerInitializer\\n{\\n  uint256 public lastKnownEpochNumber;\\n  uint256 public lastKnownFirstBlockOfEpoch;\\n  address[] public lastKnownElectedAccounts;\\n\\n  event LastKnownEpochNumberSet(uint256 lastKnownEpochNumber);\\n  event LastKnownFirstBlockOfEpochSet(uint256 lastKnownFirstBlockOfEpoch);\\n  event LastKnownElectedAccountsSet();\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param registryAddress The address of the registry core smart contract.\\n   */\\n  function initialize(address registryAddress) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(registryAddress);\\n  }\\n\\n  /**\\n   * @notice initializes the epochManager contract during L2 transition.\\n   */\\n  function initEpochManager() external onlyL2 {\\n    require(lastKnownEpochNumber != 0, \\\"lastKnownEpochNumber not set.\\\");\\n    require(lastKnownFirstBlockOfEpoch != 0, \\\"lastKnownFirstBlockOfEpoch not set.\\\");\\n    require(lastKnownElectedAccounts.length > 0, \\\"lastKnownElectedAccounts not set.\\\");\\n    getEpochManager().initializeSystem(\\n      lastKnownEpochNumber,\\n      lastKnownFirstBlockOfEpoch,\\n      lastKnownElectedAccounts\\n    );\\n  }\\n\\n  /**\\n   * @notice Stores the last known epochNumber and the related elected validator accounts.\\n   */\\n  function captureEpochAndValidators() external onlyL1 {\\n    lastKnownEpochNumber = getEpochNumber();\\n    emit LastKnownEpochNumberSet(lastKnownEpochNumber);\\n\\n    uint256 numberElectedValidators = numberValidatorsInCurrentSet();\\n    lastKnownElectedAccounts = new address[](numberElectedValidators);\\n    _setFirstBlockOfEpoch();\\n\\n    for (uint256 i = 0; i < numberElectedValidators; i++) {\\n      address validatorAccountAddress = getAccounts().validatorSignerToAccount(\\n        validatorSignerAddressFromCurrentSet(i)\\n      );\\n      lastKnownElectedAccounts[i] = validatorAccountAddress;\\n    }\\n    emit LastKnownElectedAccountsSet();\\n  }\\n\\n  /**\\n   * @return a list of know elected validator accounts.\\n   */\\n  function getlastKnownElectedAccounts() external view returns (address[] memory) {\\n    return lastKnownElectedAccounts;\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 1, 0, 0);\\n  }\\n\\n  /**\\n   * @notice Sets the first block of the current epoch.\\n   * @dev Only callable on L1.\\n   */\\n  function _setFirstBlockOfEpoch() internal onlyL1 {\\n    uint256 blocksSinceEpochBlock = block.number % getEpochSize();\\n    uint256 epochBlock = block.number - blocksSinceEpochBlock;\\n    lastKnownFirstBlockOfEpoch = epochBlock;\\n    emit LastKnownFirstBlockOfEpochSet(lastKnownFirstBlockOfEpoch);\\n  }\\n}\\n\",\"keccak256\":\"0x31b9cb5533967ea30ff5fd670aff2a4c0cdc4a019ff1624af2d0d52781406dbc\",\"license\":\"UNLICENSED\"},\"project:/contracts-0.8/common/IsL2Check.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.8.20;\\n\\n/**\\n * @title Based on predeploy returns whether this is L1 or L2.\\n */\\ncontract IsL2Check {\\n  address constant proxyAdminAddress = 0x4200000000000000000000000000000000000018;\\n\\n  /**\\n   * @notice Throws if called on L2.\\n   */\\n  modifier onlyL1() {\\n    allowOnlyL1();\\n    _;\\n  }\\n\\n  /**\\n   * @notice Throws if called on L1.\\n   */\\n  modifier onlyL2() {\\n    if (!isL2()) {\\n      revert(\\\"This method is not supported in L1.\\\");\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice Checks to see if current network is Celo L2.\\n   * @return Whether or not the current network is a Celo L2.\\n   */\\n  function isL2() internal view returns (bool) {\\n    uint32 size;\\n    address _addr = proxyAdminAddress;\\n    assembly {\\n      size := extcodesize(_addr)\\n    }\\n    return (size > 0);\\n  }\\n\\n  /**\\n   * @notice Used to restrict usage of the parent function to L1 execution.\\n   * @dev Reverts if called on a Celo L2 network.\\n   */\\n  function allowOnlyL1() internal view {\\n    if (isL2()) {\\n      revert(\\\"This method is no longer supported in L2.\\\");\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4629a6f2c4364780f5a6a5e2ad5c3675c0a1d3bea35cfd4426eeaebca60cac37\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/UsingPrecompiles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.8.20;\\n\\n// Note: This is not an exact copy of UsingPrecompiles in the contract's folder, but in solidity 0.8\\nimport \\\"@openzeppelin/contracts8/utils/math/SafeMath.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../common/IsL2Check.sol\\\";\\n\\ncontract UsingPrecompiles is IsL2Check {\\n  using SafeMath for uint256;\\n\\n  address constant TRANSFER = address(0xff - 2);\\n  address constant FRACTION_MUL = address(0xff - 3);\\n  address constant PROOF_OF_POSSESSION = address(0xff - 4);\\n  address constant GET_VALIDATOR = address(0xff - 5);\\n  address constant NUMBER_VALIDATORS = address(0xff - 6);\\n  address constant EPOCH_SIZE = address(0xff - 7);\\n  address constant BLOCK_NUMBER_FROM_HEADER = address(0xff - 8);\\n  address constant HASH_HEADER = address(0xff - 9);\\n  address constant GET_PARENT_SEAL_BITMAP = address(0xff - 10);\\n  address constant GET_VERIFIED_SEAL_BITMAP = address(0xff - 11);\\n  uint256 constant DAY = 86400;\\n\\n  /**\\n   * @notice calculate a * b^x for fractions a, b to `decimals` precision\\n   * @param aNumerator Numerator of first fraction\\n   * @param aDenominator Denominator of first fraction\\n   * @param bNumerator Numerator of exponentiated fraction\\n   * @param bDenominator Denominator of exponentiated fraction\\n   * @param exponent exponent to raise b to\\n   * @param _decimals precision\\n   * @return Numerator of the computed quantity (not reduced).\\n   * @return Denominator of the computed quantity (not reduced).\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function fractionMulExp(\\n    uint256 aNumerator,\\n    uint256 aDenominator,\\n    uint256 bNumerator,\\n    uint256 bDenominator,\\n    uint256 exponent,\\n    uint256 _decimals\\n  ) public view onlyL1 returns (uint256, uint256) {\\n    require(aDenominator != 0 && bDenominator != 0, \\\"a denominator is zero\\\");\\n    uint256 returnNumerator;\\n    uint256 returnDenominator;\\n    bool success;\\n    bytes memory out;\\n    (success, out) = FRACTION_MUL.staticcall(\\n      abi.encodePacked(aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)\\n    );\\n    require(success, \\\"error calling fractionMulExp precompile\\\");\\n    returnNumerator = getUint256FromBytes(out, 0);\\n    returnDenominator = getUint256FromBytes(out, 32);\\n    return (returnNumerator, returnDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the current epoch size in blocks.\\n   * @return The current epoch size in blocks.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochSize() public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = EPOCH_SIZE.staticcall(abi.encodePacked(true));\\n    require(success, \\\"error calling getEpochSize precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @return Epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumberOfBlock(uint256 blockNumber) public view virtual onlyL1 returns (uint256) {\\n    return epochNumberOfBlock(blockNumber, getEpochSize());\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @return Current epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumber() public view virtual onlyL1 returns (uint256) {\\n    return getEpochNumberOfBlock(block.number);\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromCurrentSet(\\n    uint256 index\\n  ) public view virtual onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, uint256(block.number)));\\n    require(success, \\\"error calling validatorSignerAddressFromCurrentSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the validator set at the given block number.\\n   * @param index Index of requested validator in the validator set.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromSet(\\n    uint256 index,\\n    uint256 blockNumber\\n  ) public view virtual onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, blockNumber));\\n    require(success, \\\"error calling validatorSignerAddressFromSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets the size of the current elected validator set.\\n   * @return Size of the current elected validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInCurrentSet() public view virtual onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(uint256(block.number)));\\n    require(success, \\\"error calling numberValidatorsInCurrentSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the size of the validator set that must sign the given block number.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Size of the validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInSet(uint256 blockNumber) public view virtual onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling numberValidatorsInSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Checks a BLS proof of possession.\\n   * @param sender The address signed by the BLS key to generate the proof of possession.\\n   * @param blsKey The BLS public key that the validator is using for consensus, should pass proof\\n   *   of possession. 48 bytes.\\n   * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\\n   *   account address. 96 bytes.\\n   * @return True upon success.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function checkProofOfPossession(\\n    address sender,\\n    bytes memory blsKey,\\n    bytes memory blsPop\\n  ) public view onlyL1 returns (bool) {\\n    bool success;\\n    (success, ) = PROOF_OF_POSSESSION.staticcall(abi.encodePacked(sender, blsKey, blsPop));\\n    return success;\\n  }\\n\\n  /**\\n   * @notice Parses block number out of header.\\n   * @param header RLP encoded header\\n   * @return Block number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getBlockNumberFromHeader(bytes memory header) public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = BLOCK_NUMBER_FROM_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getBlockNumberFromHeader precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Computes hash of header.\\n   * @param header RLP encoded header\\n   * @return Header hash.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function hashHeader(bytes memory header) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = HASH_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling hashHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the parent seal bitmap from the header at the given block number.\\n   * @param blockNumber Block number to retrieve. Must be within 4 epochs of the current number.\\n   * @return Bitmap parent seal with set bits at indices corresponding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getParentSealBitmap(uint256 blockNumber) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_PARENT_SEAL_BITMAP.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling getParentSealBitmap precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Verifies the BLS signature on the header and returns the seal bitmap.\\n   * The validator set used for verification is retrieved based on the parent hash field of the\\n   * header.  If the parent hash is not in the blockchain, verification fails.\\n   * @param header RLP encoded header\\n   * @return Bitmap parent seal with set bits at indices correspoinding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getVerifiedSealBitmapFromHeader(\\n    bytes memory header\\n  ) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VERIFIED_SEAL_BITMAP.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getVerifiedSealBitmapFromHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the minimum number of required signers for a given block number.\\n   * @dev Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSize(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    return numberValidatorsInSet(blockNumber).mul(2).add(2).div(3);\\n  }\\n\\n  /**\\n   * @notice Computes byzantine quorum from current validator set size\\n   * @return Byzantine quorum of validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSizeInCurrentSet() public view onlyL1 returns (uint256) {\\n    return minQuorumSize(block.number);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @param epochSize The epoch size in blocks.\\n   * @return Epoch number.\\n   */\\n  function epochNumberOfBlock(\\n    uint256 blockNumber,\\n    uint256 epochSize\\n  ) internal pure returns (uint256) {\\n    // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\\n    uint256 epochNumber = blockNumber / epochSize;\\n    if (blockNumber % epochSize == 0) {\\n      return epochNumber;\\n    } else {\\n      return epochNumber.add(1);\\n    }\\n  }\\n\\n  /**\\n   * @notice Converts bytes to uint256.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return uint256 data\\n   */\\n  function getUint256FromBytes(bytes memory bs, uint256 start) internal pure returns (uint256) {\\n    return uint256(getBytes32FromBytes(bs, start));\\n  }\\n\\n  /**\\n   * @notice Converts bytes to bytes32.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return bytes32 data\\n   */\\n  function getBytes32FromBytes(bytes memory bs, uint256 start) internal pure returns (bytes32) {\\n    require(bs.length >= start.add(32), \\\"slicing out of range\\\");\\n    bytes32 x;\\n    assembly {\\n      x := mload(add(bs, add(start, 32)))\\n    }\\n    return x;\\n  }\\n}\\n\",\"keccak256\":\"0xc3d623e15765e2ce37dadaefd792a2c272e1a43fa9f90763e5619bcfc82cee0c\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.8.20;\\n\\n// Note: This is not an exact copy of UsingRegistry or UsingRegistryV2 in the contract's folder\\n// because Mento's interfaces still don't support Solidity 0.8\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../contracts/common/interfaces/IRegistry.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IAccounts.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IEpochManager.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFreezer.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloUnreleasedTreasury.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFeeHandlerSeller.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IEpochManager.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IValidators.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IElection.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../../contracts/stability/interfaces/ISortedOracles.sol\\\";\\n\\nimport \\\"./interfaces/IScoreReader.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n  bytes32 constant MENTOFEEHANDLERSELLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"MentoFeeHandlerSeller\\\"));\\n  bytes32 constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n  bytes32 constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  bytes32 constant SCORE_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"ScoreManager\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  event RegistrySet(address indexed registryAddress);\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelist() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registry.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  // Current version of Mento doesn't support 0.8\\n  function getStableToken() internal view returns (address) {\\n    return registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID);\\n  }\\n\\n  function getMentoFeeHandlerSeller() internal view returns (IFeeHandlerSeller) {\\n    return IFeeHandlerSeller(registry.getAddressForOrDie(MENTOFEEHANDLERSELLER_REGISTRY_ID));\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registry.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(registry.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registry.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n\\n  function getScoreReader() internal view returns (IScoreReader) {\\n    return IScoreReader(registry.getAddressForOrDie(SCORE_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x40f6a3f17d0665b82463f2c2f6837ddaf1a31bcf691c936682338f2664782dde\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/interfaces/IEpochManagerEnablerInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManagerEnablerInitializer {\\n  function initialize(address registryAddress) external;\\n}\\n\",\"keccak256\":\"0x8e7ac4682993439ede0411288410fffafbba97916f8fd5ded47bd6e2f48c5251\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/interfaces/IScoreReader.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\ninterface IScoreReader {\\n  function getValidatorScore(address validator) external view returns (uint256);\\n  function getGroupScore(address validator) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xa9276e744a343a3c1eaf68253b7f5ff2325897e18fae20a3265a257a2d0d1036\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IEpochManagerEnabler.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManagerEnabler {\\n  function initEpochManager() external;\\n  function captureEpochAndValidators() external;\\n}\\n\",\"keccak256\":\"0x4510885d2001afe69347e438fdd653956dc42712eb1a2e70736d0a49d07ce7da\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFeeHandlerSeller.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeHandlerSeller {\\n  function sell(\\n    address sellTokenAddress,\\n    address buyTokenAddress,\\n    uint256 amount,\\n    uint256 minAmount\\n  ) external returns (uint256);\\n  // in case some funds need to be returned or moved to another contract\\n  function transfer(address token, uint256 amount, address to) external returns (bool);\\n}\\n\",\"keccak256\":\"0x24e5784f088d67578e1ea00a118e0fc2e79cf610fc89d0ca7a3f23bc33a0da4e\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001dd938038062001dd98339810160408190526200003491620000b5565b808062000049576000805460ff191660011790555b5062000055336200005c565b50620000e0565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600060208284031215620000c857600080fd5b81518015158114620000d957600080fd5b9392505050565b611ce980620000f06000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806387ee8a0f11610104578063ae497c71116100a2578063e50e652d11610071578063e50e652d1461039d578063ec683072146103b0578063f2fde38b146103d8578063fae8db0a146103eb57600080fd5b8063ae497c7114610371578063b6ffcdf414610379578063c4d66de814610382578063df4da4611461039557600080fd5b80639a7b3be7116100de5780639a7b3be71461032e5780639b2b592f14610336578063a3c02eb514610349578063a91ee0dc1461035e57600080fd5b806387ee8a0f146102fd5780638a883626146103055780638da5cb5b1461031857600080fd5b806354255be011610171578063715018a61161014b578063715018a6146102d05780637385e5da146102da5780637b103999146102e2578063822e7c7c146102f557600080fd5b806354255be0146102845780635d180adb146102aa57806367960e91146102bd57600080fd5b806323f0ab65116101ad57806323f0ab651461023457806332c31368146102475780633b1eb4bf1461025e5780634b2c2f441461027157600080fd5b806303585836146101d4578063123633ea14610204578063158ef93e14610217575b600080fd5b6101e76101e23660046118cb565b6103fe565b6040516001600160a01b0390911681526020015b60405180910390f35b6101e76102123660046118cb565b610428565b6000546102249060ff1681565b60405190151581526020016101fb565b61022461024236600461199c565b610547565b61025060035481565b6040519081526020016101fb565b61025061026c3660046118cb565b6105d9565b61025061027f366004611a12565b6105fa565b6001806000806040805194855260208501939093529183015260608201526080016101fb565b6101e76102b8366004611a47565b610701565b6102506102cb366004611a12565b610806565b6102d86108e8565b005b6102506108fc565b6001546101e7906001600160a01b031681565b6102d8610914565b610250610adb565b610250610313366004611a12565b610bd5565b60005461010090046001600160a01b03166101e7565b610250610cc5565b6102506103443660046118cb565b610cd8565b610351610dc7565b6040516101fb9190611a69565b6102d861036c366004611aaa565b610e29565b6102d8610ed1565b61025060025481565b6102d8610390366004611aaa565b6110b1565b610250611126565b6102506103ab3660046118cb565b611203565b6103c36103be366004611ac7565b611237565b604080519283526020830191909152016101fb565b6102d86103e6366004611aaa565b6113b7565b6102506103f93660046118cb565b61142d565b6004818154811061040e57600080fd5b6000918252602090912001546001600160a01b0316905081565b600061043261151a565b6060600060fa6001600160a01b0316844360405160200161045d929190918252602082015260400190565b60408051601f198184030181529082905261047791611b3a565b600060405180830381855afa9150503d80600081146104b2576040519150601f19603f3d011682016040523d82523d6000602084013e6104b7565b606091505b5092509050806105345760405162461bcd60e51b815260206004820152603d60248201527f6572726f722063616c6c696e672076616c696461746f725369676e657241646460448201527f7265737346726f6d43757272656e7453657420707265636f6d70696c6500000060648201526084015b60405180910390fd5b61053f826000611588565b949350505050565b600061055161151a565b600060fb6001600160a01b031685858560405160200161057393929190611b46565b60408051601f198184030181529082905261058d91611b3a565b600060405180830381855afa9150503d80600081146105c8576040519150601f19603f3d011682016040523d82523d6000602084013e6105cd565b606091505b50909695505050505050565b60006105e361151a565b6105f4826105ef611126565b61159b565b92915050565b600061060461151a565b6060600060f46001600160a01b0316846040516020016106249190611b3a565b60408051601f198184030181529082905261063e91611b3a565b600060405180830381855afa9150503d8060008114610679576040519150601f19603f3d011682016040523d82523d6000602084013e61067e565b606091505b5092509050806106f65760405162461bcd60e51b815260206004820152603860248201527f6572726f722063616c6c696e672067657456657269666965645365616c42697460448201527f6d617046726f6d48656164657220707265636f6d70696c650000000000000000606482015260840161052b565b61053f8260006115d5565b600061070b61151a565b604080516020810185905290810183905260609060009060fa90830160408051601f198184030181529082905261074191611b3a565b600060405180830381855afa9150503d806000811461077c576040519150601f19603f3d011682016040523d82523d6000602084013e610781565b606091505b5092509050806107f25760405162461bcd60e51b815260206004820152603660248201527f6572726f722063616c6c696e672076616c696461746f725369676e65724164646044820152757265737346726f6d53657420707265636f6d70696c6560501b606482015260840161052b565b6107fd826000611588565b95945050505050565b600061081061151a565b6060600060f66001600160a01b0316846040516020016108309190611b3a565b60408051601f198184030181529082905261084a91611b3a565b600060405180830381855afa9150503d8060008114610885576040519150601f19603f3d011682016040523d82523d6000602084013e61088a565b606091505b5092509050806106f65760405162461bcd60e51b815260206004820152602360248201527f6572726f722063616c6c696e67206861736848656164657220707265636f6d70604482015262696c6560e81b606482015260840161052b565b6108f0611632565b6108fa6000611692565b565b600061090661151a565b61090f43611203565b905090565b61091c61151a565b610924610cc5565b60028190556040519081527fd9a1a76580b15ae78b2d3d40f6df34149506928db763adaa8c2b7d354f8640dd9060200160405180910390a16000610966610adb565b90508067ffffffffffffffff811115610981576109816118f9565b6040519080825280602002602001820160405280156109aa578160200160208202803683370190505b5080516109bf91600491602090910190611851565b506109c86116eb565b60005b81811015610aae5760006109dd611754565b6001600160a01b03166364439b436109f484610428565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c9190611b73565b90508060048381548110610a7257610a72611b90565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790555080610aa681611bbc565b9150506109cb565b506040517f8bcc171e37e2f3448f64d63bcf15ceda5dd7acee8f7ac90e12db4167bccbd17c90600090a150565b6000610ae561151a565b6040805143602082015260609160009160f9910160408051601f1981840301815290829052610b1391611b3a565b600060405180830381855afa9150503d8060008114610b4e576040519150601f19603f3d011682016040523d82523d6000602084013e610b53565b606091505b509250905080610bc35760405162461bcd60e51b815260206004820152603560248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201527443757272656e7453657420707265636f6d70696c6560581b606482015260840161052b565b610bce826000611588565b9250505090565b6000610bdf61151a565b6060600060f76001600160a01b031684604051602001610bff9190611b3a565b60408051601f1981840301815290829052610c1991611b3a565b600060405180830381855afa9150503d8060008114610c54576040519150601f19603f3d011682016040523d82523d6000602084013e610c59565b606091505b5092509050806105345760405162461bcd60e51b815260206004820152603160248201527f6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d60448201527048656164657220707265636f6d70696c6560781b606482015260840161052b565b6000610ccf61151a565b61090f436105d9565b6000610ce261151a565b6060600060f96001600160a01b031684604051602001610d0491815260200190565b60408051601f1981840301815290829052610d1e91611b3a565b600060405180830381855afa9150503d8060008114610d59576040519150601f19603f3d011682016040523d82523d6000602084013e610d5e565b606091505b5092509050806105345760405162461bcd60e51b815260206004820152602e60248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201526d53657420707265636f6d70696c6560901b606482015260840161052b565b60606004805480602002602001604051908101604052809291908181526020018280548015610e1f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e01575b5050505050905090565b610e31611632565b6001600160a01b038116610e875760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420726567697374657220746865206e756c6c2061646472657373604482015260640161052b565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b90600090a250565b6018602160991b013b63ffffffff16610f385760405162461bcd60e51b815260206004820152602360248201527f54686973206d6574686f64206973206e6f7420737570706f7274656420696e2060448201526226189760e91b606482015260840161052b565b600254600003610f8a5760405162461bcd60e51b815260206004820152601d60248201527f6c6173744b6e6f776e45706f63684e756d626572206e6f74207365742e000000604482015260640161052b565b600354600003610fe85760405162461bcd60e51b815260206004820152602360248201527f6c6173744b6e6f776e4669727374426c6f636b4f6645706f6368206e6f74207360448201526232ba1760e91b606482015260840161052b565b6004546110415760405162461bcd60e51b815260206004820152602160248201527f6c6173744b6e6f776e456c65637465644163636f756e7473206e6f74207365746044820152601760f91b606482015260840161052b565b6110496117f7565b6001600160a01b03166351ccd8f060025460035460046040518463ffffffff1660e01b815260040161107d93929190611bd5565b600060405180830381600087803b15801561109757600080fd5b505af11580156110ab573d6000803e3d6000fd5b50505050565b60005460ff16156111045760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a656400000000604482015260640161052b565b6000805460ff1916600117905561111a33611692565b61112381610e29565b50565b600061113061151a565b604051600160f81b602082015260609060009060f89060210160408051601f198184030181529082905261116391611b3a565b600060405180830381855afa9150503d806000811461119e576040519150601f19603f3d011682016040523d82523d6000602084013e6111a3565b606091505b509250905080610bc35760405162461bcd60e51b815260206004820152602560248201527f6572726f722063616c6c696e672067657445706f636853697a6520707265636f6044820152646d70696c6560d81b606482015260840161052b565b600061120d61151a565b6105f46003611231600261122b600261122588610cd8565b9061182d565b90611839565b90611845565b60008061124261151a565b861580159061125057508415155b6112945760405162461bcd60e51b8152602060048201526015602482015274612064656e6f6d696e61746f72206973207a65726f60581b604482015260640161052b565b60408051602081018a905290810188905260608181018890526080820187905260a0820186905260c082018590526000918291829160fc9060e00160408051601f19818403018152908290526112e991611b3a565b600060405180830381855afa9150503d8060008114611324576040519150601f19603f3d011682016040523d82523d6000602084013e611329565b606091505b5090925090508161138c5760405162461bcd60e51b815260206004820152602760248201527f6572726f722063616c6c696e67206672616374696f6e4d756c45787020707265604482015266636f6d70696c6560c81b606482015260840161052b565b611397816000611588565b93506113a4816020611588565b939c939b50929950505050505050505050565b6113bf611632565b6001600160a01b0381166114245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052b565b61112381611692565b600061143761151a565b6060600060f56001600160a01b03168460405160200161145991815260200190565b60408051601f198184030181529082905261147391611b3a565b600060405180830381855afa9150503d80600081146114ae576040519150601f19603f3d011682016040523d82523d6000602084013e6114b3565b606091505b5092509050806106f65760405162461bcd60e51b815260206004820152602c60248201527f6572726f722063616c6c696e6720676574506172656e745365616c4269746d6160448201526b7020707265636f6d70696c6560a01b606482015260840161052b565b6018602160991b013b63ffffffff16156108fa5760405162461bcd60e51b815260206004820152602960248201527f54686973206d6574686f64206973206e6f206c6f6e67657220737570706f727460448201526832b21034b71026191760b91b606482015260840161052b565b600061159483836115d5565b9392505050565b6000806115a88385611c4e565b90506115b48385611c62565b6000036115c25790506105f4565b6115cd816001611839565b9150506105f4565b60006115e2826020611839565b835110156116295760405162461bcd60e51b8152602060048201526014602482015273736c6963696e67206f7574206f662072616e676560601b604482015260640161052b565b50016020015190565b6000546001600160a01b036101009091041633146108fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052b565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6116f361151a565b60006116fd611126565b6117079043611c62565b905060006117158243611c76565b60038190556040518181529091507fc4d72df1a0e397a9d4f36d402b48854435f6e38b3fa95f918c7125c3de0d33e49060200160405180910390a15050565b600154604051674163636f756e747360c01b60208201526000916001600160a01b03169063dcf0aaed906028015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016117b691815260200190565b602060405180830381865afa1580156117d3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190611b73565b6001546040516b22b837b1b426b0b730b3b2b960a11b60208201526000916001600160a01b03169063dcf0aaed90602c01611782565b60006115948284611c89565b60006115948284611ca0565b60006115948284611c4e565b8280548282559060005260206000209081019282156118a6579160200282015b828111156118a657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611871565b506118b29291506118b6565b5090565b5b808211156118b257600081556001016118b7565b6000602082840312156118dd57600080fd5b5035919050565b6001600160a01b038116811461112357600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261192057600080fd5b813567ffffffffffffffff8082111561193b5761193b6118f9565b604051601f8301601f19908116603f01168101908282118183101715611963576119636118f9565b8160405283815286602085880101111561197c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156119b157600080fd5b83356119bc816118e4565b9250602084013567ffffffffffffffff808211156119d957600080fd5b6119e58783880161190f565b935060408601359150808211156119fb57600080fd5b50611a088682870161190f565b9150509250925092565b600060208284031215611a2457600080fd5b813567ffffffffffffffff811115611a3b57600080fd5b61053f8482850161190f565b60008060408385031215611a5a57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156105cd5783516001600160a01b031683529284019291840191600101611a85565b600060208284031215611abc57600080fd5b8135611594816118e4565b60008060008060008060c08789031215611ae057600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000815160005b81811015611b2b5760208185018101518683015201611b11565b50600093019283525090919050565b60006115948284611b0a565b6bffffffffffffffffffffffff198460601b16815260006107fd611b6d6014840186611b0a565b84611b0a565b600060208284031215611b8557600080fd5b8151611594816118e4565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611bce57611bce611ba6565b5060010190565b60006060820185835260208581850152606060408501528185548084526080860191508660005282600020935060005b81811015611c2a5784546001600160a01b031683526001948501949284019201611c05565b509098975050505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611c5d57611c5d611c38565b500490565b600082611c7157611c71611c38565b500690565b818103818111156105f4576105f4611ba6565b80820281158282048414176105f4576105f4611ba6565b808201808211156105f4576105f4611ba656fea26469706673582212209b8fd15fd91b96197cd134cb9ffa1c2ef1edf48ceb8b0ecd51306be3bce3e1c464736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806387ee8a0f11610104578063ae497c71116100a2578063e50e652d11610071578063e50e652d1461039d578063ec683072146103b0578063f2fde38b146103d8578063fae8db0a146103eb57600080fd5b8063ae497c7114610371578063b6ffcdf414610379578063c4d66de814610382578063df4da4611461039557600080fd5b80639a7b3be7116100de5780639a7b3be71461032e5780639b2b592f14610336578063a3c02eb514610349578063a91ee0dc1461035e57600080fd5b806387ee8a0f146102fd5780638a883626146103055780638da5cb5b1461031857600080fd5b806354255be011610171578063715018a61161014b578063715018a6146102d05780637385e5da146102da5780637b103999146102e2578063822e7c7c146102f557600080fd5b806354255be0146102845780635d180adb146102aa57806367960e91146102bd57600080fd5b806323f0ab65116101ad57806323f0ab651461023457806332c31368146102475780633b1eb4bf1461025e5780634b2c2f441461027157600080fd5b806303585836146101d4578063123633ea14610204578063158ef93e14610217575b600080fd5b6101e76101e23660046118cb565b6103fe565b6040516001600160a01b0390911681526020015b60405180910390f35b6101e76102123660046118cb565b610428565b6000546102249060ff1681565b60405190151581526020016101fb565b61022461024236600461199c565b610547565b61025060035481565b6040519081526020016101fb565b61025061026c3660046118cb565b6105d9565b61025061027f366004611a12565b6105fa565b6001806000806040805194855260208501939093529183015260608201526080016101fb565b6101e76102b8366004611a47565b610701565b6102506102cb366004611a12565b610806565b6102d86108e8565b005b6102506108fc565b6001546101e7906001600160a01b031681565b6102d8610914565b610250610adb565b610250610313366004611a12565b610bd5565b60005461010090046001600160a01b03166101e7565b610250610cc5565b6102506103443660046118cb565b610cd8565b610351610dc7565b6040516101fb9190611a69565b6102d861036c366004611aaa565b610e29565b6102d8610ed1565b61025060025481565b6102d8610390366004611aaa565b6110b1565b610250611126565b6102506103ab3660046118cb565b611203565b6103c36103be366004611ac7565b611237565b604080519283526020830191909152016101fb565b6102d86103e6366004611aaa565b6113b7565b6102506103f93660046118cb565b61142d565b6004818154811061040e57600080fd5b6000918252602090912001546001600160a01b0316905081565b600061043261151a565b6060600060fa6001600160a01b0316844360405160200161045d929190918252602082015260400190565b60408051601f198184030181529082905261047791611b3a565b600060405180830381855afa9150503d80600081146104b2576040519150601f19603f3d011682016040523d82523d6000602084013e6104b7565b606091505b5092509050806105345760405162461bcd60e51b815260206004820152603d60248201527f6572726f722063616c6c696e672076616c696461746f725369676e657241646460448201527f7265737346726f6d43757272656e7453657420707265636f6d70696c6500000060648201526084015b60405180910390fd5b61053f826000611588565b949350505050565b600061055161151a565b600060fb6001600160a01b031685858560405160200161057393929190611b46565b60408051601f198184030181529082905261058d91611b3a565b600060405180830381855afa9150503d80600081146105c8576040519150601f19603f3d011682016040523d82523d6000602084013e6105cd565b606091505b50909695505050505050565b60006105e361151a565b6105f4826105ef611126565b61159b565b92915050565b600061060461151a565b6060600060f46001600160a01b0316846040516020016106249190611b3a565b60408051601f198184030181529082905261063e91611b3a565b600060405180830381855afa9150503d8060008114610679576040519150601f19603f3d011682016040523d82523d6000602084013e61067e565b606091505b5092509050806106f65760405162461bcd60e51b815260206004820152603860248201527f6572726f722063616c6c696e672067657456657269666965645365616c42697460448201527f6d617046726f6d48656164657220707265636f6d70696c650000000000000000606482015260840161052b565b61053f8260006115d5565b600061070b61151a565b604080516020810185905290810183905260609060009060fa90830160408051601f198184030181529082905261074191611b3a565b600060405180830381855afa9150503d806000811461077c576040519150601f19603f3d011682016040523d82523d6000602084013e610781565b606091505b5092509050806107f25760405162461bcd60e51b815260206004820152603660248201527f6572726f722063616c6c696e672076616c696461746f725369676e65724164646044820152757265737346726f6d53657420707265636f6d70696c6560501b606482015260840161052b565b6107fd826000611588565b95945050505050565b600061081061151a565b6060600060f66001600160a01b0316846040516020016108309190611b3a565b60408051601f198184030181529082905261084a91611b3a565b600060405180830381855afa9150503d8060008114610885576040519150601f19603f3d011682016040523d82523d6000602084013e61088a565b606091505b5092509050806106f65760405162461bcd60e51b815260206004820152602360248201527f6572726f722063616c6c696e67206861736848656164657220707265636f6d70604482015262696c6560e81b606482015260840161052b565b6108f0611632565b6108fa6000611692565b565b600061090661151a565b61090f43611203565b905090565b61091c61151a565b610924610cc5565b60028190556040519081527fd9a1a76580b15ae78b2d3d40f6df34149506928db763adaa8c2b7d354f8640dd9060200160405180910390a16000610966610adb565b90508067ffffffffffffffff811115610981576109816118f9565b6040519080825280602002602001820160405280156109aa578160200160208202803683370190505b5080516109bf91600491602090910190611851565b506109c86116eb565b60005b81811015610aae5760006109dd611754565b6001600160a01b03166364439b436109f484610428565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c9190611b73565b90508060048381548110610a7257610a72611b90565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790555080610aa681611bbc565b9150506109cb565b506040517f8bcc171e37e2f3448f64d63bcf15ceda5dd7acee8f7ac90e12db4167bccbd17c90600090a150565b6000610ae561151a565b6040805143602082015260609160009160f9910160408051601f1981840301815290829052610b1391611b3a565b600060405180830381855afa9150503d8060008114610b4e576040519150601f19603f3d011682016040523d82523d6000602084013e610b53565b606091505b509250905080610bc35760405162461bcd60e51b815260206004820152603560248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201527443757272656e7453657420707265636f6d70696c6560581b606482015260840161052b565b610bce826000611588565b9250505090565b6000610bdf61151a565b6060600060f76001600160a01b031684604051602001610bff9190611b3a565b60408051601f1981840301815290829052610c1991611b3a565b600060405180830381855afa9150503d8060008114610c54576040519150601f19603f3d011682016040523d82523d6000602084013e610c59565b606091505b5092509050806105345760405162461bcd60e51b815260206004820152603160248201527f6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d60448201527048656164657220707265636f6d70696c6560781b606482015260840161052b565b6000610ccf61151a565b61090f436105d9565b6000610ce261151a565b6060600060f96001600160a01b031684604051602001610d0491815260200190565b60408051601f1981840301815290829052610d1e91611b3a565b600060405180830381855afa9150503d8060008114610d59576040519150601f19603f3d011682016040523d82523d6000602084013e610d5e565b606091505b5092509050806105345760405162461bcd60e51b815260206004820152602e60248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201526d53657420707265636f6d70696c6560901b606482015260840161052b565b60606004805480602002602001604051908101604052809291908181526020018280548015610e1f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e01575b5050505050905090565b610e31611632565b6001600160a01b038116610e875760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420726567697374657220746865206e756c6c2061646472657373604482015260640161052b565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b90600090a250565b6018602160991b013b63ffffffff16610f385760405162461bcd60e51b815260206004820152602360248201527f54686973206d6574686f64206973206e6f7420737570706f7274656420696e2060448201526226189760e91b606482015260840161052b565b600254600003610f8a5760405162461bcd60e51b815260206004820152601d60248201527f6c6173744b6e6f776e45706f63684e756d626572206e6f74207365742e000000604482015260640161052b565b600354600003610fe85760405162461bcd60e51b815260206004820152602360248201527f6c6173744b6e6f776e4669727374426c6f636b4f6645706f6368206e6f74207360448201526232ba1760e91b606482015260840161052b565b6004546110415760405162461bcd60e51b815260206004820152602160248201527f6c6173744b6e6f776e456c65637465644163636f756e7473206e6f74207365746044820152601760f91b606482015260840161052b565b6110496117f7565b6001600160a01b03166351ccd8f060025460035460046040518463ffffffff1660e01b815260040161107d93929190611bd5565b600060405180830381600087803b15801561109757600080fd5b505af11580156110ab573d6000803e3d6000fd5b50505050565b60005460ff16156111045760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a656400000000604482015260640161052b565b6000805460ff1916600117905561111a33611692565b61112381610e29565b50565b600061113061151a565b604051600160f81b602082015260609060009060f89060210160408051601f198184030181529082905261116391611b3a565b600060405180830381855afa9150503d806000811461119e576040519150601f19603f3d011682016040523d82523d6000602084013e6111a3565b606091505b509250905080610bc35760405162461bcd60e51b815260206004820152602560248201527f6572726f722063616c6c696e672067657445706f636853697a6520707265636f6044820152646d70696c6560d81b606482015260840161052b565b600061120d61151a565b6105f46003611231600261122b600261122588610cd8565b9061182d565b90611839565b90611845565b60008061124261151a565b861580159061125057508415155b6112945760405162461bcd60e51b8152602060048201526015602482015274612064656e6f6d696e61746f72206973207a65726f60581b604482015260640161052b565b60408051602081018a905290810188905260608181018890526080820187905260a0820186905260c082018590526000918291829160fc9060e00160408051601f19818403018152908290526112e991611b3a565b600060405180830381855afa9150503d8060008114611324576040519150601f19603f3d011682016040523d82523d6000602084013e611329565b606091505b5090925090508161138c5760405162461bcd60e51b815260206004820152602760248201527f6572726f722063616c6c696e67206672616374696f6e4d756c45787020707265604482015266636f6d70696c6560c81b606482015260840161052b565b611397816000611588565b93506113a4816020611588565b939c939b50929950505050505050505050565b6113bf611632565b6001600160a01b0381166114245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052b565b61112381611692565b600061143761151a565b6060600060f56001600160a01b03168460405160200161145991815260200190565b60408051601f198184030181529082905261147391611b3a565b600060405180830381855afa9150503d80600081146114ae576040519150601f19603f3d011682016040523d82523d6000602084013e6114b3565b606091505b5092509050806106f65760405162461bcd60e51b815260206004820152602c60248201527f6572726f722063616c6c696e6720676574506172656e745365616c4269746d6160448201526b7020707265636f6d70696c6560a01b606482015260840161052b565b6018602160991b013b63ffffffff16156108fa5760405162461bcd60e51b815260206004820152602960248201527f54686973206d6574686f64206973206e6f206c6f6e67657220737570706f727460448201526832b21034b71026191760b91b606482015260840161052b565b600061159483836115d5565b9392505050565b6000806115a88385611c4e565b90506115b48385611c62565b6000036115c25790506105f4565b6115cd816001611839565b9150506105f4565b60006115e2826020611839565b835110156116295760405162461bcd60e51b8152602060048201526014602482015273736c6963696e67206f7574206f662072616e676560601b604482015260640161052b565b50016020015190565b6000546001600160a01b036101009091041633146108fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052b565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6116f361151a565b60006116fd611126565b6117079043611c62565b905060006117158243611c76565b60038190556040518181529091507fc4d72df1a0e397a9d4f36d402b48854435f6e38b3fa95f918c7125c3de0d33e49060200160405180910390a15050565b600154604051674163636f756e747360c01b60208201526000916001600160a01b03169063dcf0aaed906028015b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016117b691815260200190565b602060405180830381865afa1580156117d3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090f9190611b73565b6001546040516b22b837b1b426b0b730b3b2b960a11b60208201526000916001600160a01b03169063dcf0aaed90602c01611782565b60006115948284611c89565b60006115948284611ca0565b60006115948284611c4e565b8280548282559060005260206000209081019282156118a6579160200282015b828111156118a657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611871565b506118b29291506118b6565b5090565b5b808211156118b257600081556001016118b7565b6000602082840312156118dd57600080fd5b5035919050565b6001600160a01b038116811461112357600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261192057600080fd5b813567ffffffffffffffff8082111561193b5761193b6118f9565b604051601f8301601f19908116603f01168101908282118183101715611963576119636118f9565b8160405283815286602085880101111561197c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156119b157600080fd5b83356119bc816118e4565b9250602084013567ffffffffffffffff808211156119d957600080fd5b6119e58783880161190f565b935060408601359150808211156119fb57600080fd5b50611a088682870161190f565b9150509250925092565b600060208284031215611a2457600080fd5b813567ffffffffffffffff811115611a3b57600080fd5b61053f8482850161190f565b60008060408385031215611a5a57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156105cd5783516001600160a01b031683529284019291840191600101611a85565b600060208284031215611abc57600080fd5b8135611594816118e4565b60008060008060008060c08789031215611ae057600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000815160005b81811015611b2b5760208185018101518683015201611b11565b50600093019283525090919050565b60006115948284611b0a565b6bffffffffffffffffffffffff198460601b16815260006107fd611b6d6014840186611b0a565b84611b0a565b600060208284031215611b8557600080fd5b8151611594816118e4565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611bce57611bce611ba6565b5060010190565b60006060820185835260208581850152606060408501528185548084526080860191508660005282600020935060005b81811015611c2a5784546001600160a01b031683526001948501949284019201611c05565b509098975050505050505050565b634e487b7160e01b600052601260045260246000fd5b600082611c5d57611c5d611c38565b500490565b600082611c7157611c71611c38565b500690565b818103818111156105f4576105f4611ba6565b80820281158282048414176105f4576105f4611ba6565b808201808211156105f4576105f4611ba656fea26469706673582212209b8fd15fd91b96197cd134cb9ffa1c2ef1edf48ceb8b0ecd51306be3bce3e1c464736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:293:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:85",
                "type": ""
              }
            ],
            "src": "14:277:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18743:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:85",
                "type": ""
              }
            ],
            "src": "14:180:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "383:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "392:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "375:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "375:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:85",
                "type": ""
              }
            ],
            "src": "199:203:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "502:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "512:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "524:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "535:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "520:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "512:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "554:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "579:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "572:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "572:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "565:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "565:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "547:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "547:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "547:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "471:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "482:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "493:4:85",
                "type": ""
              }
            ],
            "src": "407:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "644:86:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "708:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "717:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "720:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "710:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "710:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "710:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "667:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "678:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "693:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "698:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "689:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "689:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "702:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "685:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "685:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "674:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "674:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "664:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "664:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "657:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "654:70:85"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "633:5:85",
                "type": ""
              }
            ],
            "src": "599:131:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "767:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "784:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "791:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "796:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "787:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "787:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "777:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "777:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "777:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "824:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "827:4:85",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "817:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "817:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "817:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "848:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "851:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "841:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "841:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "841:15:85"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "735:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "919:666:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "977:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "980:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "970:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "947:6:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "955:4:85",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "943:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "943:17:85"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "962:3:85"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "932:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "929:55:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "993:30:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1016:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1003:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:20:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "997:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1032:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1042:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1036:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1083:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1085:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1085:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1085:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1075:2:85"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1079:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1072:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1072:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1069:36:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1114:17:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1128:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1124:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:7:85"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1118:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1140:23:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1160:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1154:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:9:85"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1144:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1172:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1194:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1218:2:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1222:4:85",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1214:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1214:13:85"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1229:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1210:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1210:22:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1234:2:85",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1206:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1206:31:85"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1239:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1202:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1202:40:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1190:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:53:85"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1176:10:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1302:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1304:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1304:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1304:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1261:10:85"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1273:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1258:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1258:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1281:10:85"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1293:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1278:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1278:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1255:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1255:46:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1252:72:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1340:2:85",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1344:10:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1333:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1333:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1333:22:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1371:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1379:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1364:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1364:18:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1364:18:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1430:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1439:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1442:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1432:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1432:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1432:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1405:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1413:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1401:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1401:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1418:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1397:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:26:85"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1425:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1394:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1394:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1391:55:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1472:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1480:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1468:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1468:17:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:17:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1506:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1455:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:54:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1455:54:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1533:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1541:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1529:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1529:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1546:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1525:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1525:26:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1553:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1518:37:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1518:37:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1564:15:85",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1573:6:85"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1564:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "893:6:85",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "901:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "909:5:85",
                "type": ""
              }
            ],
            "src": "867:718:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1712:552:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1758:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1767:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1770:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1760:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1760:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1760:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1733:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1742:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1729:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1729:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1725:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1725:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1722:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1783:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1809:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1796:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1796:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1787:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1853:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1828:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1828:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1828:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1868:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1878:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1868:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1892:46:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1923:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1934:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1919:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1919:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1906:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1906:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1896:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1947:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1957:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1951:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2002:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2011:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2014:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2004:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2004:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2004:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1990:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1998:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1987:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1987:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1984:34:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2027:59:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2058:9:85"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2069:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2054:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2054:22:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2078:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2037:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:49:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2027:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2095:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2128:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2139:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2124:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2124:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2111:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2099:8:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2172:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2181:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2184:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2174:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2174:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2174:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2158:8:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2168:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2155:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:16:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2152:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2197:61:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2228:9:85"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2239:8:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2224:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2224:24:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2250:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2207:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2207:51:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2197:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1662:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1673:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1685:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1693:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1701:6:85",
                "type": ""
              }
            ],
            "src": "1590:674:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2370:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2380:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2392:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2403:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2388:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2388:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2380:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2422:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2433:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2415:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2415:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2415:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2339:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2350:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2361:4:85",
                "type": ""
              }
            ],
            "src": "2269:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2530:241:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2576:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2585:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2588:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2578:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2578:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2578:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2551:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2560:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2547:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2547:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2572:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2543:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2540:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2601:37:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2628:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2615:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2615:23:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2605:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2681:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2690:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2693:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2683:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2683:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2683:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2653:6:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2661:18:85",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2650:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:30:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2647:50:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2706:59:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2737:9:85"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2748:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2733:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2733:22:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2757:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2716:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:49:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2706:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2496:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2507:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2519:6:85",
                "type": ""
              }
            ],
            "src": "2451:320:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2877:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2887:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2899:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2910:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2895:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2895:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2887:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2929:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2940:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2922:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2922:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2922:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2846:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2857:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2868:4:85",
                "type": ""
              }
            ],
            "src": "2776:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3143:206:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3153:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3165:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3176:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3161:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3161:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3153:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3196:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3207:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3189:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3189:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3189:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3234:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3245:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3230:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3230:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3250:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3223:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3223:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3277:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3288:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3273:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3273:18:85"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3293:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3266:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3266:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3320:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3331:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:18:85"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3336:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3309:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3309:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3309:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3088:9:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3099:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3107:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3115:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3123:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3134:4:85",
                "type": ""
              }
            ],
            "src": "2958:391:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3441:161:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3487:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3496:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3499:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3489:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3489:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3489:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3462:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3471:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3458:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3458:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3483:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3454:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3454:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3451:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3512:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3535:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3522:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3512:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3554:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3581:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3592:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3577:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3577:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3564:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3564:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3554:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3399:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3410:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3422:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3430:6:85",
                "type": ""
              }
            ],
            "src": "3354:248:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3727:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3737:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3749:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3760:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3745:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3737:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3779:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3794:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3810:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3815:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3806:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3806:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3819:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3802:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3802:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3790:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3790:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3772:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3772:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IRegistry_$17608__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3696:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3707:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3718:4:85",
                "type": ""
              }
            ],
            "src": "3607:222:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3985:507:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3995:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4005:2:85",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3999:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4016:32:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4034:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4045:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4030:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:18:85"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4020:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4064:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4075:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4057:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4057:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4057:21:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4087:17:85",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4098:6:85"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4091:3:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4113:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4133:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4127:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4127:13:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4117:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4156:6:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4164:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4149:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4149:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4149:22:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4180:25:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4191:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4202:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4187:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4187:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4180:3:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4214:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4232:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4240:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4228:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4228:15:85"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4218:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4252:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4261:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4256:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4320:146:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4341:3:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4356:6:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4350:5:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4350:13:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4373:3:85",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4378:1:85",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "4369:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4369:11:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4382:1:85",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "4365:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4365:19:85"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4346:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4346:39:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4334:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4334:52:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4334:52:85"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4399:19:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4410:3:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4415:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4406:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4406:12:85"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4399:3:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4431:25:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4445:6:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4453:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4441:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4441:15:85"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4431:6:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4282:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4285:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4279:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4279:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4293:18:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4295:14:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4304:1:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4307:1:85",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4300:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4300:9:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4295:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4275:3:85",
                    "statements": []
                  },
                  "src": "4271:195:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4475:11:85",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4483:3:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4475:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3954:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3965:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3976:4:85",
                "type": ""
              }
            ],
            "src": "3834:658:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4567:177:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4613:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4622:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4625:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4615:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4615:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4615:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4588:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4597:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4584:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4584:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4609:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4580:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4580:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4577:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4638:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4664:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4651:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4651:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4642:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4708:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4683:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4683:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4683:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4723:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4733:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4723:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4533:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4544:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4556:6:85",
                "type": ""
              }
            ],
            "src": "4497:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4904:368:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4951:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4960:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4963:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4953:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4953:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4953:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4925:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4934:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4921:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4921:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4946:3:85",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4917:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4917:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4914:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4976:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4999:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4986:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4986:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4976:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5018:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5045:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5056:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5041:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5041:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5028:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5028:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5018:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5069:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5096:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5107:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5092:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5092:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5079:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5069:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5120:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5147:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5158:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5143:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5143:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5130:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5130:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "5120:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5171:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5198:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5209:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5194:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5194:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5181:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5181:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5171:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5223:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5250:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5261:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5246:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5246:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5233:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5233:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5223:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4830:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4841:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4853:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4861:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4869:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4877:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4885:6:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4893:6:85",
                "type": ""
              }
            ],
            "src": "4749:523:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5406:119:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5416:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5428:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5439:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5424:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5424:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5416:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5458:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5469:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5451:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5451:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5451:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5496:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5507:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5492:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5492:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5512:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5485:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5485:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5485:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5367:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5378:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5386:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5397:4:85",
                "type": ""
              }
            ],
            "src": "5277:248:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5677:100:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5694:3:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5699:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5687:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5687:19:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5687:19:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5726:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5731:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5722:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5722:12:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5736:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5715:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5715:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5715:28:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5752:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5763:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5768:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5759:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5759:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5752:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5645:3:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5650:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5658:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5669:3:85",
                "type": ""
              }
            ],
            "src": "5530:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5831:273:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5841:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5861:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5855:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5855:12:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5845:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5876:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5885:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5880:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5947:76:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5972:3:85"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5977:1:85"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5968:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5968:11:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "5995:5:85"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6002:1:85"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5991:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5991:13:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6006:4:85",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5987:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5987:24:85"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5981:5:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5981:31:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5961:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5961:52:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5961:52:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5906:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5909:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5903:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5903:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5917:21:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5919:17:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5928:1:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5931:4:85",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5924:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5924:12:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5919:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5899:3:85",
                    "statements": []
                  },
                  "src": "5895:128:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6032:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6046:3:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6051:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6042:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6042:16:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6036:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6074:2:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6078:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6067:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6067:13:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6067:13:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6089:9:85",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "6096:2:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6089:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5808:5:85",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5815:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5823:3:85",
                "type": ""
              }
            ],
            "src": "5782:322:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6246:52:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6256:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6280:6:85"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6288:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "6263:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6263:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6256:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6222:3:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6227:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6238:3:85",
                "type": ""
              }
            ],
            "src": "6109:189:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6477:251:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6494:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6505:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6487:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6487:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6487:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6528:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6539:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6524:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6524:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6544:2:85",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6517:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6517:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6517:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6567:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6578:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6563:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6563:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672076616c696461746f725369676e6572416464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6583:34:85",
                        "type": "",
                        "value": "error calling validatorSignerAdd"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6556:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6556:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6556:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6638:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6649:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6634:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6634:18:85"
                      },
                      {
                        "hexValue": "7265737346726f6d43757272656e7453657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6654:31:85",
                        "type": "",
                        "value": "ressFromCurrentSet precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6627:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6627:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6627:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6695:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6707:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6718:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6703:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6703:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6695:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6462a441a9c5f3244f1c9680749f4acdbc975d93926917f87e614a5ca4aa639f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6454:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6468:4:85",
                "type": ""
              }
            ],
            "src": "6303:425:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6944:162:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6961:3:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6974:2:85",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6978:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6970:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6970:15:85"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6991:26:85",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "6987:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6987:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6966:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6966:53:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6954:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6954:66:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6954:66:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7029:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7053:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7078:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7090:3:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7095:2:85",
                                "type": "",
                                "value": "20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7086:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7086:12:85"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "7061:16:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7061:38:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "7036:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7036:64:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7029:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6904:3:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6909:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6917:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6925:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6936:3:85",
                "type": ""
              }
            ],
            "src": "6733:373:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7285:246:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7302:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7313:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7295:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7295:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7295:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7336:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7347:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7332:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7332:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7352:2:85",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7325:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7325:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7325:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7375:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7386:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7371:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7371:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672067657456657269666965645365616c426974",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7391:34:85",
                        "type": "",
                        "value": "error calling getVerifiedSealBit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7364:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7364:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7364:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7446:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7457:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7442:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7442:18:85"
                      },
                      {
                        "hexValue": "6d617046726f6d48656164657220707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7462:26:85",
                        "type": "",
                        "value": "mapFromHeader precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7435:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:54:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7435:54:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7498:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7510:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7521:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7506:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7506:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7498:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_56189b7fd32d7bffe51f1cba3b0a122d0fd578114f9bbb970c9be1e50aa17714__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7262:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7276:4:85",
                "type": ""
              }
            ],
            "src": "7111:420:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7710:244:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7727:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7738:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7720:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7720:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7720:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7761:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7772:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7757:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7757:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7777:2:85",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7750:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7750:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7750:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7800:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7811:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7796:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7796:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672076616c696461746f725369676e6572416464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7816:34:85",
                        "type": "",
                        "value": "error calling validatorSignerAdd"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7789:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7789:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7789:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7871:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7882:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7867:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7867:18:85"
                      },
                      {
                        "hexValue": "7265737346726f6d53657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7887:24:85",
                        "type": "",
                        "value": "ressFromSet precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7860:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7860:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7860:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7921:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7933:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7944:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7929:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7929:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7921:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7935951f22369c4587c3039035cb3a1c8f1b4d619fcd3628fe6c1a3359ec8a78__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7687:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7701:4:85",
                "type": ""
              }
            ],
            "src": "7536:418:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8133:225:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8150:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8161:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8143:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8143:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8143:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8184:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8195:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8180:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8180:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8200:2:85",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8173:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8173:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8173:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8223:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8234:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8219:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8219:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206861736848656164657220707265636f6d70",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8239:34:85",
                        "type": "",
                        "value": "error calling hashHeader precomp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8212:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8212:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8212:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8294:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8305:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8290:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8290:18:85"
                      },
                      {
                        "hexValue": "696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8310:5:85",
                        "type": "",
                        "value": "ile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8283:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8283:33:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8283:33:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8325:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8337:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8348:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8333:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8333:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8325:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f231089bc9eca69e7b856c7ee260182a26a7e5150828b66bb54c2df60342a744__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8110:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8124:4:85",
                "type": ""
              }
            ],
            "src": "7959:399:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8444:170:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8490:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8499:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8502:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8492:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8492:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8492:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8465:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8474:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8461:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8461:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8486:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8457:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8457:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8454:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8515:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8534:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8528:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8528:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8519:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8578:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8553:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8553:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8593:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8603:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8593:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8410:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8421:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8433:6:85",
                "type": ""
              }
            ],
            "src": "8363:251:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8651:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8668:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8675:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8680:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8671:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8671:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8661:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8661:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8661:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8708:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8711:4:85",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8701:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8701:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8701:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8732:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8735:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8725:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8725:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8725:15:85"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "8619:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8783:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8800:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8807:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8812:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8803:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8803:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8793:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8793:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8793:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8840:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8843:4:85",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8833:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8833:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8833:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8864:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8867:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8857:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8857:15:85"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8751:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8930:88:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8961:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8963:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8963:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8963:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8946:5:85"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8957:1:85",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8953:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8953:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "8943:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8943:17:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8940:43:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8992:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9003:5:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9010:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8999:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8999:13:85"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "8992:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8912:5:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "8922:3:85",
                "type": ""
              }
            ],
            "src": "8883:135:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9142:63:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9159:3:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9164:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9152:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9152:19:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9152:19:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9180:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9191:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9196:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9187:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9187:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9180:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9118:3:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9123:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9134:3:85",
                "type": ""
              }
            ],
            "src": "9023:182:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9384:243:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9401:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9412:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9394:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9394:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9394:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9435:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9446:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9431:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9431:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9451:2:85",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9424:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9424:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9424:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9474:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9485:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9470:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9470:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9490:34:85",
                        "type": "",
                        "value": "error calling numberValidatorsIn"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9463:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9463:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9463:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9545:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9556:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9541:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9541:18:85"
                      },
                      {
                        "hexValue": "43757272656e7453657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9561:23:85",
                        "type": "",
                        "value": "CurrentSet precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9534:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9534:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9534:51:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9594:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9606:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9617:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9602:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9602:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9594:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6496ea69494c489b267f6f8d019e01d5a0bff78cb1bd0f0be3199909d3ef9d57__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9361:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9375:4:85",
                "type": ""
              }
            ],
            "src": "9210:417:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9806:239:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9823:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9834:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9816:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9816:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9816:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9857:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9868:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9853:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9853:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9873:2:85",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9846:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9846:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9846:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9896:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9907:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9892:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9892:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9912:34:85",
                        "type": "",
                        "value": "error calling getBlockNumberFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9885:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9885:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9885:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9967:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9978:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9963:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9963:18:85"
                      },
                      {
                        "hexValue": "48656164657220707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9983:19:85",
                        "type": "",
                        "value": "Header precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9956:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:47:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9956:47:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10024:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10035:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10020:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10020:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10012:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c87df661c709786f64e40e71e73322865ee74ff0de0b04788546a0aaf938099a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9783:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9797:4:85",
                "type": ""
              }
            ],
            "src": "9632:413:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10224:236:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10241:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10252:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10234:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10234:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10234:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10275:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10286:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10271:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10271:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10291:2:85",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10264:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10264:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10264:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10314:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10325:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10310:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10310:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10330:34:85",
                        "type": "",
                        "value": "error calling numberValidatorsIn"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10303:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10303:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10303:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10385:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10396:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10381:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10381:18:85"
                      },
                      {
                        "hexValue": "53657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10401:16:85",
                        "type": "",
                        "value": "Set precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10374:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10374:44:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10374:44:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10427:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10439:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10450:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10435:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10435:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10427:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_14d0832ccf124a1f4d003ef7e8c127c127252b26b1f5fb00b299ce6c15976140__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10201:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10215:4:85",
                "type": ""
              }
            ],
            "src": "10050:410:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10639:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10656:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10667:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10649:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10649:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10649:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10690:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10701:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10686:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10686:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10706:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10679:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10679:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10679:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10729:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10740:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10725:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10725:18:85"
                      },
                      {
                        "hexValue": "43616e6e6f7420726567697374657220746865206e756c6c2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10745:34:85",
                        "type": "",
                        "value": "Cannot register the null address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10718:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10718:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10718:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10789:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10801:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10812:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10797:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10797:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10789:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10616:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10630:4:85",
                "type": ""
              }
            ],
            "src": "10465:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11000:225:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11017:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11028:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11010:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11010:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11010:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11051:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11062:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11047:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11047:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11067:2:85",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11040:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11040:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11040:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11090:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11101:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11086:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11086:18:85"
                      },
                      {
                        "hexValue": "54686973206d6574686f64206973206e6f7420737570706f7274656420696e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11106:34:85",
                        "type": "",
                        "value": "This method is not supported in "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11079:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11079:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11079:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11161:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11172:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11157:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11157:18:85"
                      },
                      {
                        "hexValue": "4c312e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11177:5:85",
                        "type": "",
                        "value": "L1."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11150:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11150:33:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11150:33:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11192:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11204:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11215:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11200:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11200:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11192:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce77717eff8b0d7c6ecf190f14db828402a59c9029d0deafbceed192f68fe306__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10977:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10991:4:85",
                "type": ""
              }
            ],
            "src": "10826:399:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11404:179:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11421:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11432:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11414:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11414:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11414:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11455:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11466:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11451:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11451:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11471:2:85",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11444:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11444:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11444:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11494:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11505:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11490:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11490:18:85"
                      },
                      {
                        "hexValue": "6c6173744b6e6f776e45706f63684e756d626572206e6f74207365742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11510:31:85",
                        "type": "",
                        "value": "lastKnownEpochNumber not set."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11483:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11483:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11483:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11551:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11563:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11574:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11559:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11559:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11551:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35d2c899bcc670ca8d8266bdaf3c172e2283dc1ad940dcf30117da6860a6b865__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11381:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11395:4:85",
                "type": ""
              }
            ],
            "src": "11230:353:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11762:225:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11779:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11790:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11772:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11772:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11772:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11813:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11824:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11809:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11809:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11829:2:85",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11802:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11802:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11802:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11852:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11863:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11848:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11848:18:85"
                      },
                      {
                        "hexValue": "6c6173744b6e6f776e4669727374426c6f636b4f6645706f6368206e6f742073",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11868:34:85",
                        "type": "",
                        "value": "lastKnownFirstBlockOfEpoch not s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11841:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11841:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11841:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11923:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11934:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11919:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11919:18:85"
                      },
                      {
                        "hexValue": "65742e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11939:5:85",
                        "type": "",
                        "value": "et."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11912:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11912:33:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11912:33:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11954:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11966:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11977:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11962:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11962:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11954:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bd4787b4da918d3d0a7ae0eb08d850d3179a9998f2e040e5b58fa56fc667a98a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11739:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11753:4:85",
                "type": ""
              }
            ],
            "src": "11588:399:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12166:223:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12183:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12194:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12176:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12176:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12176:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12217:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12228:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12213:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12213:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12233:2:85",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12206:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12206:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12206:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12256:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12267:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12252:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12252:18:85"
                      },
                      {
                        "hexValue": "6c6173744b6e6f776e456c65637465644163636f756e7473206e6f7420736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12272:34:85",
                        "type": "",
                        "value": "lastKnownElectedAccounts not set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12245:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12245:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12245:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12327:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12338:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12323:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12323:18:85"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12343:3:85",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12316:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12316:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12316:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12356:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12368:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12379:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12364:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12364:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12356:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_887fb5a39cc56ecc6cb9ad4af5dd92fe99df675362ccc7388ea43f3728d869a6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12143:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12157:4:85",
                "type": ""
              }
            ],
            "src": "11992:397:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12598:620:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12608:32:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12626:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12637:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12622:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12622:18:85"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "12612:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12656:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12667:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12649:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12649:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12649:25:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12683:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12693:2:85",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12687:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12715:9:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12726:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12711:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12711:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12731:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12704:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12704:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12704:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12758:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12769:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12754:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12754:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12774:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12747:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12747:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12747:30:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12786:17:85",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "12797:6:85"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "12790:3:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12812:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12832:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "12826:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12826:13:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12816:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "12855:6:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "12863:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12848:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12848:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12848:22:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12879:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12890:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12901:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12886:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12886:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12879:3:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12921:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12924:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12914:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12914:17:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12914:17:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12940:30:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12964:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12967:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "12954:9:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12954:16:85"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "12944:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12979:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12988:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "12983:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13047:145:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13068:3:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "13083:6:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sload",
                                    "nodeType": "YulIdentifier",
                                    "src": "13077:5:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13077:13:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13100:3:85",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13105:1:85",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "13096:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13096:11:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13109:1:85",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "13092:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13092:19:85"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "13073:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13073:39:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13061:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13061:52:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13061:52:85"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13126:19:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13137:3:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "13142:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13133:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13133:12:85"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13126:3:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13158:24:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "13172:6:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13180:1:85",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13168:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13168:14:85"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13158:6:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "13009:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13012:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13006:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13006:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "13020:18:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13022:14:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "13031:1:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13034:1:85",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13027:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13027:9:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "13022:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "13002:3:85",
                    "statements": []
                  },
                  "src": "12998:194:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13201:11:85",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "13209:3:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13201:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_storage__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12551:9:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12562:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12570:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12578:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12589:4:85",
                "type": ""
              }
            ],
            "src": "12394:824:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13397:178:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13414:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13425:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13407:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13407:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13407:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13448:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13459:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13444:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13444:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13464:2:85",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13437:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13437:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13437:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13487:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13498:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13483:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13483:18:85"
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13503:30:85",
                        "type": "",
                        "value": "contract already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13476:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13476:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13476:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13543:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13555:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13566:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13551:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13551:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13543:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13374:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13388:4:85",
                "type": ""
              }
            ],
            "src": "13223:352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13693:88:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13710:3:85"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13719:3:85",
                            "type": "",
                            "value": "248"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13738:6:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13731:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13731:14:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13724:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13724:22:85"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13715:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13715:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13703:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13703:45:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13703:45:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13757:18:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13768:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13773:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13764:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13764:11:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13757:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bool__to_t_bool__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13669:3:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13674:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13685:3:85",
                "type": ""
              }
            ],
            "src": "13580:201:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13960:227:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13977:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13988:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13970:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13970:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13970:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14011:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14022:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14007:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14007:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14027:2:85",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14000:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14000:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14000:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14050:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14061:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14046:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14046:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672067657445706f636853697a6520707265636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14066:34:85",
                        "type": "",
                        "value": "error calling getEpochSize preco"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14039:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14039:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14039:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14121:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14132:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14117:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14117:18:85"
                      },
                      {
                        "hexValue": "6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14137:7:85",
                        "type": "",
                        "value": "mpile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14110:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14110:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14110:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14154:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14166:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14177:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14162:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14162:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14154:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a8d6bdf190a0e574d8eb34a04fdb935afc2bf9b093f7e4f2637fb4ceabf22bbe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13937:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13951:4:85",
                "type": ""
              }
            ],
            "src": "13786:401:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14366:171:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14383:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14394:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14376:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14376:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14376:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14417:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14428:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14413:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14413:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14433:2:85",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14406:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14406:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14406:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14456:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14467:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14452:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14452:18:85"
                      },
                      {
                        "hexValue": "612064656e6f6d696e61746f72206973207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14472:23:85",
                        "type": "",
                        "value": "a denominator is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14445:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14445:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14445:51:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14505:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14517:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14528:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14513:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14513:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14505:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_774f1e8ba4b1c2c5160da82215d6020ee806a9c78d42e2392b54701b956bcc37__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14343:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14357:4:85",
                "type": ""
              }
            ],
            "src": "14192:345:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14801:251:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14818:3:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14823:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14811:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14811:19:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14811:19:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14850:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14855:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14846:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14846:12:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "14860:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14839:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14839:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14839:28:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14887:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14892:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14883:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14883:12:85"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14897:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14876:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14876:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14876:28:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14924:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14929:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14920:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14920:12:85"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "14934:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14913:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14913:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14913:28:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14961:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14966:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14957:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14957:13:85"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "14972:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14950:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14950:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14950:29:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14999:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15004:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14995:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14995:13:85"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "15010:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14988:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14988:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14988:29:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15026:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15037:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15042:3:85",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15033:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15033:13:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15026:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14737:3:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "14742:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "14750:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "14758:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "14766:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "14774:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14782:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14793:3:85",
                "type": ""
              }
            ],
            "src": "14542:510:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15231:229:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15248:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15259:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15241:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15241:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15241:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15282:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15293:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15278:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15278:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15298:2:85",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15271:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15271:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15271:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15321:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15332:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15317:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15317:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206672616374696f6e4d756c45787020707265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15337:34:85",
                        "type": "",
                        "value": "error calling fractionMulExp pre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15310:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15310:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15310:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15392:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15403:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15388:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15388:18:85"
                      },
                      {
                        "hexValue": "636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15408:9:85",
                        "type": "",
                        "value": "compile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15381:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15381:37:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15381:37:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15427:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15439:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15450:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15435:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15435:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15427:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a69762de9d67a3fadd0f5eb579f0048f356af43c4099a48782845e58130de6be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15208:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15222:4:85",
                "type": ""
              }
            ],
            "src": "15057:403:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15639:228:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15656:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15667:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15649:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15649:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15649:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15690:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15701:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15686:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15686:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15706:2:85",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15679:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15679:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15679:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15729:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15740:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15725:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15725:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15745:34:85",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15718:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15718:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15718:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15800:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15811:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15796:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15796:18:85"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15816:8:85",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15789:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15789:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15789:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15834:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15846:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15857:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15842:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15842:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15834:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15616:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15630:4:85",
                "type": ""
              }
            ],
            "src": "15465:402:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16046:234:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16063:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16074:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16056:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16056:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16056:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16097:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16108:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16093:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16093:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16113:2:85",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16086:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16086:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16086:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16136:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16147:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16132:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16132:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e6720676574506172656e745365616c4269746d61",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16152:34:85",
                        "type": "",
                        "value": "error calling getParentSealBitma"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16125:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16125:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16125:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16207:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16218:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16203:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16203:18:85"
                      },
                      {
                        "hexValue": "7020707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16223:14:85",
                        "type": "",
                        "value": "p precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16196:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16196:42:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16196:42:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16247:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16259:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16270:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16255:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16255:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16247:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c1cbb6616a2f8ce07a426d19cdcbcaa8305d686de3a7391a12e2172a43b08db8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16023:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16037:4:85",
                "type": ""
              }
            ],
            "src": "15872:408:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16459:231:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16476:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16487:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16469:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16469:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16469:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16510:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16521:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16506:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16506:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16526:2:85",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16499:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16499:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16499:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16549:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16560:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16545:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16545:18:85"
                      },
                      {
                        "hexValue": "54686973206d6574686f64206973206e6f206c6f6e67657220737570706f7274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16565:34:85",
                        "type": "",
                        "value": "This method is no longer support"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16538:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16538:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16538:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16620:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16631:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16616:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16616:18:85"
                      },
                      {
                        "hexValue": "656420696e204c322e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16636:11:85",
                        "type": "",
                        "value": "ed in L2."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16609:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16609:39:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16609:39:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16657:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16669:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16680:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16665:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16665:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16657:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6b58fe460f24176f3213b61028eeed65350ffc7614db8ee67f6cecd2e8cd9d28__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16436:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16450:4:85",
                "type": ""
              }
            ],
            "src": "16285:405:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16727:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16744:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16751:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16756:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "16747:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16747:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16737:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16737:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16737:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16784:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16787:4:85",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16777:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16777:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16777:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16808:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16811:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16801:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16801:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16801:15:85"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "16695:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16873:74:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16896:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "16898:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16898:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16898:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16893:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16886:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16886:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "16883:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16927:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16936:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16939:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "16932:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16932:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "16927:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16858:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16861:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "16867:1:85",
                "type": ""
              }
            ],
            "src": "16827:120:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16990:74:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17013:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "17015:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17015:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17015:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17010:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17003:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17003:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "17000:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17044:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17053:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17056:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "17049:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17049:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "17044:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16975:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16978:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "16984:1:85",
                "type": ""
              }
            ],
            "src": "16952:112:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17243:170:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17260:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17271:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17253:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17253:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17253:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17294:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17305:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17290:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17290:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17310:2:85",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17283:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17283:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17283:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17333:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17344:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17329:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17329:18:85"
                      },
                      {
                        "hexValue": "736c6963696e67206f7574206f662072616e6765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17349:22:85",
                        "type": "",
                        "value": "slicing out of range"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17322:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17322:50:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17322:50:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17381:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17393:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17404:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17389:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17389:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17381:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_294d2bd5b6fb7e8eb608d7ff076f4babdc08155a7a6671f4f35801fb90c8bda4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17220:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17234:4:85",
                "type": ""
              }
            ],
            "src": "17069:344:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17592:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17609:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17620:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17602:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17602:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17602:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17643:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17654:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17639:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17639:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17659:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17632:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17632:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17632:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17682:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17693:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17678:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17678:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17698:34:85",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17671:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17671:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17671:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17742:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17754:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17765:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17750:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17750:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17742:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17569:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17583:4:85",
                "type": ""
              }
            ],
            "src": "17418:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17828:79:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17838:17:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17850:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17853:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17846:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17846:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17838:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17879:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17881:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17881:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17881:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "17870:4:85"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17876:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17867:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17867:11:85"
                  },
                  "nodeType": "YulIf",
                  "src": "17864:37:85"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17810:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17813:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17819:4:85",
                "type": ""
              }
            ],
            "src": "17779:128:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18104:66:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18121:3:85"
                      },
                      {
                        "hexValue": "4163636f756e7473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18126:10:85",
                        "type": "",
                        "value": "Accounts"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18114:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18114:23:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18114:23:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18146:18:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18157:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18162:1:85",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18153:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18153:11:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18146:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_065b3511e672769036815d78dd1d8a43df1e790e38323f22c4aed211e85ea281__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18088:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18096:3:85",
                "type": ""
              }
            ],
            "src": "17912:258:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18367:71:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18384:3:85"
                      },
                      {
                        "hexValue": "45706f63684d616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18389:14:85",
                        "type": "",
                        "value": "EpochManager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18377:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18377:27:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18377:27:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18413:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18424:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18429:2:85",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18420:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18420:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18413:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c713c3df6d14cdf946460395d09af88993ee2b948b1a808161494e32c5f67063__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18351:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18359:3:85",
                "type": ""
              }
            ],
            "src": "18175:263:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18495:116:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18505:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18520:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18523:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "18516:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18516:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "18505:7:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18583:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18585:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18585:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18585:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "18554:1:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "18547:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18547:9:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "18561:1:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "18568:7:85"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "18577:1:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "18564:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18564:15:85"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "18558:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18558:22:85"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "18544:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18544:37:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18537:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18537:45:85"
                  },
                  "nodeType": "YulIf",
                  "src": "18534:71:85"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18474:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18477:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "18483:7:85",
                "type": ""
              }
            ],
            "src": "18443:168:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18664:77:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18674:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18685:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18688:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18681:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18681:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "18674:3:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18713:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18715:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18715:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18715:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18705:1:85"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "18708:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18702:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18702:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "18699:36:85"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18647:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18650:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "18656:3:85",
                "type": ""
              }
            ],
            "src": "18616:125:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IRegistry_$17608__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_bytes(value0, pos)\n    }\n    function abi_encode_tuple_t_stringliteral_6462a441a9c5f3244f1c9680749f4acdbc975d93926917f87e614a5ca4aa639f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"error calling validatorSignerAdd\")\n        mstore(add(headStart, 96), \"ressFromCurrentSet precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := abi_encode_bytes(value2, abi_encode_bytes(value1, add(pos, 20)))\n    }\n    function abi_encode_tuple_t_stringliteral_56189b7fd32d7bffe51f1cba3b0a122d0fd578114f9bbb970c9be1e50aa17714__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"error calling getVerifiedSealBit\")\n        mstore(add(headStart, 96), \"mapFromHeader precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7935951f22369c4587c3039035cb3a1c8f1b4d619fcd3628fe6c1a3359ec8a78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"error calling validatorSignerAdd\")\n        mstore(add(headStart, 96), \"ressFromSet precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f231089bc9eca69e7b856c7ee260182a26a7e5150828b66bb54c2df60342a744__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"error calling hashHeader precomp\")\n        mstore(add(headStart, 96), \"ile\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_stringliteral_6496ea69494c489b267f6f8d019e01d5a0bff78cb1bd0f0be3199909d3ef9d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"error calling numberValidatorsIn\")\n        mstore(add(headStart, 96), \"CurrentSet precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c87df661c709786f64e40e71e73322865ee74ff0de0b04788546a0aaf938099a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"error calling getBlockNumberFrom\")\n        mstore(add(headStart, 96), \"Header precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_14d0832ccf124a1f4d003ef7e8c127c127252b26b1f5fb00b299ce6c15976140__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"error calling numberValidatorsIn\")\n        mstore(add(headStart, 96), \"Set precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Cannot register the null address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce77717eff8b0d7c6ecf190f14db828402a59c9029d0deafbceed192f68fe306__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"This method is not supported in \")\n        mstore(add(headStart, 96), \"L1.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_35d2c899bcc670ca8d8266bdaf3c172e2283dc1ad940dcf30117da6860a6b865__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"lastKnownEpochNumber not set.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd4787b4da918d3d0a7ae0eb08d850d3179a9998f2e040e5b58fa56fc667a98a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"lastKnownFirstBlockOfEpoch not s\")\n        mstore(add(headStart, 96), \"et.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_887fb5a39cc56ecc6cb9ad4af5dd92fe99df675362ccc7388ea43f3728d869a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"lastKnownElectedAccounts not set\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_storage__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 96)\n        let pos := tail_1\n        let length := sload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        mstore(0, value2)\n        let srcPtr := keccak256(0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, 1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"contract already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bool__to_t_bool__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, shl(248, iszero(iszero(value0))))\n        end := add(pos, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_a8d6bdf190a0e574d8eb34a04fdb935afc2bf9b093f7e4f2637fb4ceabf22bbe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"error calling getEpochSize preco\")\n        mstore(add(headStart, 96), \"mpile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_774f1e8ba4b1c2c5160da82215d6020ee806a9c78d42e2392b54701b956bcc37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"a denominator is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), value3)\n        mstore(add(pos, 128), value4)\n        mstore(add(pos, 160), value5)\n        end := add(pos, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_a69762de9d67a3fadd0f5eb579f0048f356af43c4099a48782845e58130de6be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"error calling fractionMulExp pre\")\n        mstore(add(headStart, 96), \"compile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c1cbb6616a2f8ce07a426d19cdcbcaa8305d686de3a7391a12e2172a43b08db8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"error calling getParentSealBitma\")\n        mstore(add(headStart, 96), \"p precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6b58fe460f24176f3213b61028eeed65350ffc7614db8ee67f6cecd2e8cd9d28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"This method is no longer support\")\n        mstore(add(headStart, 96), \"ed in L2.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_294d2bd5b6fb7e8eb608d7ff076f4babdc08155a7a6671f4f35801fb90c8bda4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"slicing out of range\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_065b3511e672769036815d78dd1d8a43df1e790e38323f22c4aed211e85ea281__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"Accounts\")\n        end := add(pos, 8)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c713c3df6d14cdf946460395d09af88993ee2b948b1a808161494e32c5f67063__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"EpochManager\")\n        end := add(pos, 12)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "561:3231:8:-:0;;;1162:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1199:4;896:17:59;891:57;;923:11;:18;;-1:-1:-1;;923:18:59;937:4;923:18;;;891:57;-1:-1:-1;936:32:0;719:10:2;936:18:0;:32::i;:::-;1162:45:8;561:3231;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;14:277:85:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:85:o;:::-;561:3231:8;;;;;;",
  "deployedSourceMap": "561:3231:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;793:41;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:85;;;345:51;;333:2;318:18;793:41:8;;;;;;;;3732:399:17;;;;;;:::i;:::-;;:::i;319:23:59:-;;;;;;;;;;;;572:14:85;;565:22;547:41;;535:2;520:18;319:23:59;407:187:85;6525:275:17;;;;;;:::i;:::-;;:::i;748:41:8:-;;;;;;;;;2415:25:85;;;2403:2;2388:18;748:41:8;2269:177:85;3018:162:17;;;;;;:::i;:::-;;:::i;8905:358::-;;;;;;:::i;:::-;;:::i;3273:117:8:-;3374:1;;3324:7;;3273:117;;;3189:25:85;;;3245:2;3230:18;;3223:34;;;;3273:18;;;3266:34;3331:2;3316:18;;3309:34;3176:3;3161:19;3273:117:8;2958:391:85;4499:400:17;;;;;;:::i;:::-;;:::i;7483:295::-;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;:::-;;9837:119:17;;;:::i;3794:25:18:-;;;;;-1:-1:-1;;;;;3794:25:18;;;2167:635:8;;;:::i;5086:341:17:-;;;:::i;6979:336::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;3331:124:17;;;:::i;5693:336::-;;;;;;:::i;:::-;;:::i;2874:122:8:-;;;:::i;:::-;;;;;;;:::i;4398:230:18:-;;;;;;:::i;:::-;;:::i;1626:434:8:-;;;:::i;709:35::-;;;;;;1396:141;;;;;;:::i;:::-;;:::i;2527:277:17:-;;;:::i;9501:154::-;;;;;;:::i;:::-;;:::i;1589:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;5451:25:85;;;5507:2;5492:18;;5485:34;;;;5424:18;1589:770:17;5277:248:85;2074:198:0;;;;;;:::i;:::-;;:::i;8119:329:17:-;;;;;;:::i;:::-;;:::i;793:41:8:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;793:41:8;;-1:-1:-1;793:41:8;:::o;3732:399:17:-;3837:7;328:13:11;:11;:13::i;:::-;3852:16:17::1;3874:12;619:8;-1:-1:-1::0;;;;;3909:24:17::1;3951:5;3966:12;3934:46;;;;;;;;5687:19:85::0;;;5731:2;5722:12;;5715:28;5768:2;5759:12;;5530:247;3934:46:17::1;;::::0;;-1:-1:-1;;3934:46:17;;::::1;::::0;;;;;;;3909:72:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;3892:89:17;-1:-1:-1;3892:89:17;-1:-1:-1;3892:89:17;3987:81:::1;;;::::0;-1:-1:-1;;;3987:81:17;;6505:2:85;3987:81:17::1;::::0;::::1;6487:21:85::0;6544:2;6524:18;;;6517:30;6583:34;6563:18;;;6556:62;6654:31;6634:18;;;6627:59;6703:19;;3987:81:17::1;;;;;;;;;4097:27;4117:3;4122:1;4097:19;:27::i;:::-;4074:52:::0;3732:399;-1:-1:-1;;;;3732:399:17:o;6525:275::-;6659:4;328:13:11;:11;:13::i;:::-;6671:12:17::1;565:8;-1:-1:-1::0;;;;;6703:30:17::1;6751:6;6759;6767;6734:40;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;6734:40:17;;::::1;::::0;;;;;;;6703:72:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;6689:86:17;;6525:275;-1:-1:-1;;;;;;6525:275:17:o;3018:162::-;3106:7;328:13:11;:11;:13::i;:::-;3128:47:17::1;3147:11;3160:14;:12;:14::i;:::-;3128:18;:47::i;:::-;3121:54:::0;3018:162;-1:-1:-1;;3018:162:17:o;8905:358::-;9003:7;328:13:11;:11;:13::i;:::-;9018:16:17::1;9040:12;974:9;-1:-1:-1::0;;;;;9075:35:17::1;9128:6;9111:24;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;9111:24:17;;::::1;::::0;;;;;;;9075:61:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;9058:78:17;-1:-1:-1;9058:78:17;-1:-1:-1;9058:78:17;9142:76:::1;;;::::0;-1:-1:-1;;;9142:76:17;;7313:2:85;9142:76:17::1;::::0;::::1;7295:21:85::0;7352:2;7332:18;;;7325:30;7391:34;7371:18;;;7364:62;7462:26;7442:18;;;7435:54;7506:19;;9142:76:17::1;7111:420:85::0;9142:76:17::1;9231:27;9251:3;9256:1;9231:19;:27::i;4499:400::-:0;4622:7;328:13:11;:11;:13::i;:::-;4719:36:17::1;::::0;;::::1;::::0;::::1;5687:19:85::0;;;5722:12;;;5715:28;;;4637:16:17::1;::::0;4659:12:::1;::::0;619:8:::1;::::0;5759:12:85;;4719:36:17::1;::::0;;-1:-1:-1;;4719:36:17;;::::1;::::0;;;;;;;4694:62:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;4677:79:17;-1:-1:-1;4677:79:17;-1:-1:-1;4677:79:17;4762:74:::1;;;::::0;-1:-1:-1;;;4762:74:17;;7738:2:85;4762:74:17::1;::::0;::::1;7720:21:85::0;7777:2;7757:18;;;7750:30;7816:34;7796:18;;;7789:62;-1:-1:-1;;;7867:18:85;;;7860:52;7929:19;;4762:74:17::1;7536:418:85::0;4762:74:17::1;4865:27;4885:3;4890:1;4865:19;:27::i;:::-;4842:52:::0;4499:400;-1:-1:-1;;;;;4499:400:17:o;7483:295::-;7552:7;328:13:11;:11;:13::i;:::-;7567:16:17::1;7589:12;845:8;-1:-1:-1::0;;;;;7624:22:17::1;7664:6;7647:24;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;7647:24:17;;::::1;::::0;;;;;;;7624:48:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;7607:65:17;-1:-1:-1;7607:65:17;-1:-1:-1;7607:65:17;7678:55:::1;;;::::0;-1:-1:-1;;;7678:55:17;;8161:2:85;7678:55:17::1;::::0;::::1;8143:21:85::0;8200:2;8180:18;;;8173:30;8239:34;8219:18;;;8212:62;-1:-1:-1;;;8290:18:85;;;8283:33;8333:19;;7678:55:17::1;7959:399:85::0;1824:101:0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;9837:119:17:-;9902:7;328:13:11;:11;:13::i;:::-;9924:27:17::1;9938:12;9924:13;:27::i;:::-;9917:34;;9837:119:::0;:::o;2167:635:8:-;328:13:11;:11;:13::i;:::-;2249:16:8::1;:14;:16::i;:::-;2226:20;:39:::0;;;2276:45:::1;::::0;2415:25:85;;;2276:45:8::1;::::0;2403:2:85;2388:18;2276:45:8::1;;;;;;;2328:31;2362:30;:28;:30::i;:::-;2328:64;;2439:23;2425:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2425:38:8::1;-1:-1:-1::0;2398:65:8;;::::1;::::0;:24:::1;::::0;:65:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;2469:23;:21;:23::i;:::-;2504:9;2499:259;2523:23;2519:1;:27;2499:259;;;2561:31;2595:13;:11;:13::i;:::-;-1:-1:-1::0;;;;;2595:38:8::1;;2643:39;2680:1;2643:36;:39::i;:::-;2595:95;::::0;-1:-1:-1;;;;;;2595:95:8::1;::::0;;;;;;-1:-1:-1;;;;;363:32:85;;;2595:95:8::1;::::0;::::1;345:51:85::0;318:18;;2595:95:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2561:129;;2728:23;2698:24;2723:1;2698:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:53:::0;;-1:-1:-1;;;;;;2698:53:8::1;-1:-1:-1::0;;;;;2698:53:8;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2548:3:8;::::1;::::0;::::1;:::i;:::-;;;;2499:259;;;-1:-1:-1::0;2768:29:8::1;::::0;::::1;::::0;;;::::1;2220:582;2167:635::o:0;5086:341:17:-;5162:7;328:13:11;:11;:13::i;:::-;5263:39:17::1;::::0;;5288:12:::1;5263:39;::::0;::::1;9152:19:85::0;5177:16:17::1;::::0;5199:12:::1;::::0;677:8:::1;::::0;9187:12:85;5263:39:17::1;::::0;;-1:-1:-1;;5263:39:17;;::::1;::::0;;;;;;;5234:69:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;5217:86:17;-1:-1:-1;5217:86:17;-1:-1:-1;5217:86:17;5309:73:::1;;;::::0;-1:-1:-1;;;5309:73:17;;9412:2:85;5309:73:17::1;::::0;::::1;9394:21:85::0;9451:2;9431:18;;;9424:30;9490:34;9470:18;;;9463:62;-1:-1:-1;;;9541:18:85;;;9534:51;9602:19;;5309:73:17::1;9210:417:85::0;5309:73:17::1;5395:27;5415:3;5420:1;5395:19;:27::i;:::-;5388:34;;;;5086:341:::0;:::o;6979:336::-;7062:7;328:13:11;:11;:13::i;:::-;7077:16:17::1;7099:12;793:8;-1:-1:-1::0;;;;;7134:35:17::1;7187:6;7170:24;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;7170:24:17;;::::1;::::0;;;;;;;7134:61:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;7117:78:17;-1:-1:-1;7117:78:17;-1:-1:-1;7117:78:17;7201:69:::1;;;::::0;-1:-1:-1;;;7201:69:17;;9834:2:85;7201:69:17::1;::::0;::::1;9816:21:85::0;9873:2;9853:18;;;9846:30;9912:34;9892:18;;;9885:62;-1:-1:-1;;;9963:18:85;;;9956:47;10020:19;;7201:69:17::1;9632:413:85::0;3331:124:17;3393:7;328:13:11;:11;:13::i;:::-;3415:35:17::1;3437:12;3415:21;:35::i;5693:336::-:0;5781:7;328:13:11;:11;:13::i;:::-;5796:16:17::1;5818:12;677:8;-1:-1:-1::0;;;;;5853:28:17::1;5899:11;5882:29;;;;;;9152:19:85::0;;9196:2;9187:12;;9023:182;5882:29:17::1;;::::0;;-1:-1:-1;;5882:29:17;;::::1;::::0;;;;;;;5853:59:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;5836:76:17;-1:-1:-1;5836:76:17;-1:-1:-1;5836:76:17;5918:66:::1;;;::::0;-1:-1:-1;;;5918:66:17;;10252:2:85;5918:66:17::1;::::0;::::1;10234:21:85::0;10291:2;10271:18;;;10264:30;10330:34;10310:18;;;10303:62;-1:-1:-1;;;10381:18:85;;;10374:44;10435:19;;5918:66:17::1;10050:410:85::0;2874:122:8;2936:16;2967:24;2960:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2960:31:8;;;;;;;;;;;;;;;;;;;;;;;2874:122;:::o;4398:230:18:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4475:29:18;::::1;4467:74;;;::::0;-1:-1:-1;;;4467:74:18;;10667:2:85;4467:74:18::1;::::0;::::1;10649:21:85::0;;;10686:18;;;10679:30;10745:34;10725:18;;;10718:62;10797:18;;4467:74:18::1;10465:356:85::0;4467:74:18::1;4547:8;:37:::0;;-1:-1:-1;;;;;;4547:37:18::1;-1:-1:-1::0;;;;;4547:37:18;::::1;::::0;;::::1;::::0;;;4595:28:::1;::::0;::::1;::::0;-1:-1:-1;;4595:28:18::1;4398:230:::0;:::o;1626:434:8:-;-1:-1:-1;;;;;782:18:11;819:8;;430:73;;451:45;;-1:-1:-1;;;451:45:11;;11028:2:85;451:45:11;;;11010:21:85;11067:2;11047:18;;;11040:30;11106:34;11086:18;;;11079:62;-1:-1:-1;;;11157:18:85;;;11150:33;11200:19;;451:45:11;10826:399:85;430:73:11;1684:20:8::1;;1708:1;1684:25:::0;1676:67:::1;;;::::0;-1:-1:-1;;;1676:67:8;;11432:2:85;1676:67:8::1;::::0;::::1;11414:21:85::0;11471:2;11451:18;;;11444:30;11510:31;11490:18;;;11483:59;11559:18;;1676:67:8::1;11230:353:85::0;1676:67:8::1;1757:26;;1787:1;1757:31:::0;1749:79:::1;;;::::0;-1:-1:-1;;;1749:79:8;;11790:2:85;1749:79:8::1;::::0;::::1;11772:21:85::0;11829:2;11809:18;;;11802:30;11868:34;11848:18;;;11841:62;-1:-1:-1;;;11919:18:85;;;11912:33;11962:19;;1749:79:8::1;11588:399:85::0;1749:79:8::1;1842:24;:31:::0;1834:81:::1;;;::::0;-1:-1:-1;;;1834:81:8;;12194:2:85;1834:81:8::1;::::0;::::1;12176:21:85::0;12233:2;12213:18;;;12206:30;12272:34;12252:18;;;12245:62;-1:-1:-1;;;12323:18:85;;;12316:31;12364:19;;1834:81:8::1;11992:397:85::0;1834:81:8::1;1921:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;1921:34:8::1;;1963:20;;1991:26;;2025:24;1921:134;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1626:434::o:0;1396:141::-;476:11:59;;;;475:12;467:53;;;;-1:-1:-1;;;467:53:59;;13425:2:85;467:53:59;;;13407:21:85;13464:2;13444:18;;;13437:30;13503;13483:18;;;13476:58;13551:18;;467:53:59;13223:352:85;467:53:59;526:11;:18;;-1:-1:-1;;526:18:59;540:4;526:18;;;1468:30:8::1;1487:10;1468:18;:30::i;:::-;1504:28;1516:15;1504:11;:28::i;:::-;1396:141:::0;:::o;2527:277:17:-;2579:7;328:13:11;:11;:13::i;:::-;2673:22:17::1;::::0;-1:-1:-1;;;2673:22:17::1;::::0;::::1;13703:45:85::0;2594:16:17::1;::::0;2616:12:::1;::::0;728:8:::1;::::0;13764:11:85;;2673:22:17::1;::::0;;-1:-1:-1;;2673:22:17;;::::1;::::0;;;;;;;2651:45:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2634:62:17;-1:-1:-1;2634:62:17;-1:-1:-1;2634:62:17;2702:57:::1;;;::::0;-1:-1:-1;;;2702:57:17;;13988:2:85;2702:57:17::1;::::0;::::1;13970:21:85::0;14027:2;14007:18;;;14000:30;14066:34;14046:18;;;14039:62;-1:-1:-1;;;14117:18:85;;;14110:35;14162:19;;2702:57:17::1;13786:401:85::0;9501:154:17;9573:7;328:13:11;:11;:13::i;:::-;9595:55:17::1;9648:1;9595:48;9641:1;9595:41;9634:1;9595:34;9617:11;9595:21;:34::i;:::-;:38:::0;::::1;:41::i;:::-;:45:::0;::::1;:48::i;:::-;:52:::0;::::1;:55::i;1589:770::-:0;1790:7;1799;328:13:11;:11;:13::i;:::-;1822:17:17;;;::::1;::::0;:38:::1;;-1:-1:-1::0;1843:17:17;;::::1;1822:38;1814:72;;;::::0;-1:-1:-1;;;1814:72:17;;14394:2:85;1814:72:17::1;::::0;::::1;14376:21:85::0;14433:2;14413:18;;;14406:30;-1:-1:-1;;;14452:18:85;;;14445:51;14513:18;;1814:72:17::1;14192:345:85::0;1814:72:17::1;2040:89;::::0;;::::1;::::0;::::1;14811:19:85::0;;;14846:12;;;14839:28;;;1970:16:17::1;14883:12:85::0;;;14876:28;;;14920:12;;;14913:28;;;14957:13;;;14950:29;;;14995:13;;;14988:29;;;1892:23:17::1;::::0;;;;;505:8:::1;::::0;15033:13:85;;2040:89:17::1;::::0;;-1:-1:-1;;2040:89:17;;::::1;::::0;;;;;;;2009:126:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1992:143:17;;-1:-1:-1;1992:143:17;-1:-1:-1;1992:143:17;2141:59:::1;;;::::0;-1:-1:-1;;;2141:59:17;;15259:2:85;2141:59:17::1;::::0;::::1;15241:21:85::0;15298:2;15278:18;;;15271:30;15337:34;15317:18;;;15310:62;-1:-1:-1;;;15388:18:85;;;15381:37;15435:19;;2141:59:17::1;15057:403:85::0;2141:59:17::1;2224:27;2244:3;2249:1;2224:19;:27::i;:::-;2206:45;;2277:28;2297:3;2302:2;2277:19;:28::i;:::-;2319:15:::0;;;;-1:-1:-1;1589:770:17;;-1:-1:-1;;;;;;;;;;1589:770:17:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;15667:2:85;2154:73:0::1;::::0;::::1;15649:21:85::0;15706:2;15686:18;;;15679:30;15745:34;15725:18;;;15718:62;-1:-1:-1;;;15796:18:85;;;15789:36;15842:19;;2154:73:0::1;15465:402:85::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;8119:329:17:-:0;8197:7;328:13:11;:11;:13::i;:::-;8212:16:17::1;8234:12;908:9;-1:-1:-1::0;;;;;8269:33:17::1;8320:11;8303:29;;;;;;9152:19:85::0;;9196:2;9187:12;;9023:182;8303:29:17::1;;::::0;;-1:-1:-1;;8303:29:17;;::::1;::::0;;;;;;;8269:64:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;8252:81:17;-1:-1:-1;8252:81:17;-1:-1:-1;8252:81:17;8339:64:::1;;;::::0;-1:-1:-1;;;8339:64:17;;16074:2:85;8339:64:17::1;::::0;::::1;16056:21:85::0;16113:2;16093:18;;;16086:30;16152:34;16132:18;;;16125:62;-1:-1:-1;;;16203:18:85;;;16196:42;16255:19;;8339:64:17::1;15872:408:85::0;975:125:11;-1:-1:-1;;;;;782:18:11;819:8;;;1018:78;;1038:51;;-1:-1:-1;;;1038:51:11;;16487:2:85;1038:51:11;;;16469:21:85;16526:2;16506:18;;;16499:30;16565:34;16545:18;;;16538:62;-1:-1:-1;;;16616:18:85;;;16609:39;16665:19;;1038:51:11;16285:405:85;10705:150:17;10789:7;10819:30;10839:2;10843:5;10819:19;:30::i;:::-;10811:39;10705:150;-1:-1:-1;;;10705:150:17:o;10168:377::-;10271:7;;10399:23;10413:9;10399:11;:23;:::i;:::-;10377:45;-1:-1:-1;10432:23:17;10446:9;10432:11;:23;:::i;:::-;10459:1;10432:28;10428:113;;10477:11;-1:-1:-1;10470:18:17;;10428:113;10516:18;:11;10532:1;10516:15;:18::i;:::-;10509:25;;;;;11015:255;11099:7;11135:13;:5;11145:2;11135:9;:13::i;:::-;11122:2;:9;:26;;11114:59;;;;-1:-1:-1;;;11114:59:17;;17271:2:85;11114:59:17;;;17253:21:85;17310:2;17290:18;;;17283:30;-1:-1:-1;;;17329:18:85;;;17322:50;17389:18;;11114:59:17;17069:344:85;11114:59:17;-1:-1:-1;11222:23:17;11241:2;11222:23;11216:30;;11015:255::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;;;;;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;17620:2:85;1414:68:0;;;17602:21:85;;;17639:18;;;17632:30;17698:34;17678:18;;;17671:62;17750:18;;1414:68:0;17418:356:85;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;3493:297:8:-;328:13:11;:11;:13::i;:::-;3548:29:8::1;3595:14;:12;:14::i;:::-;3580:29;::::0;:12:::1;:29;:::i;:::-;3548:61:::0;-1:-1:-1;3615:18:8::1;3636:36;3548:61:::0;3636:12:::1;:36;:::i;:::-;3678:26;:39:::0;;;3728:57:::1;::::0;2415:25:85;;;3678:39:8;;-1:-1:-1;3728:57:8::1;::::0;2403:2:85;2388:18;3728:57:8::1;;;;;;;3542:248;;3493:297::o:0;6048:135:18:-;6128:8;;1472:28;;-1:-1:-1;;;1472:28:18;;;18114:23:85;6094:9:18;;-1:-1:-1;;;;;6128:8:18;;:27;;18153:11:85;;1472:28:18;;;;;;;;;;;;;1462:39;;;;;;6128:49;;;;;;;;;;;;;2415:25:85;;2403:2;2388:18;;2269:177;6128:49:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6979:152::-;7071:8;;3627:32;;-1:-1:-1;;;3627:32:18;;;18377:27:85;7029:13:18;;-1:-1:-1;;;;;7071:8:18;;:27;;18420:12:85;;3627:32:18;18175:263:85;3465:96:5;3523:7;3549:5;3553:1;3549;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:85;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:85;;14:180;-1:-1:-1;14:180:85:o;599:131::-;-1:-1:-1;;;;;674:31:85;;664:42;;654:70;;720:1;717;710:12;735:127;796:10;791:3;787:20;784:1;777:31;827:4;824:1;817:15;851:4;848:1;841:15;867:718;909:5;962:3;955:4;947:6;943:17;939:27;929:55;;980:1;977;970:12;929:55;1016:6;1003:20;1042:18;1079:2;1075;1072:10;1069:36;;;1085:18;;:::i;:::-;1160:2;1154:9;1128:2;1214:13;;-1:-1:-1;;1210:22:85;;;1234:2;1206:31;1202:40;1190:53;;;1258:18;;;1278:22;;;1255:46;1252:72;;;1304:18;;:::i;:::-;1344:10;1340:2;1333:22;1379:2;1371:6;1364:18;1425:3;1418:4;1413:2;1405:6;1401:15;1397:26;1394:35;1391:55;;;1442:1;1439;1432:12;1391:55;1506:2;1499:4;1491:6;1487:17;1480:4;1472:6;1468:17;1455:54;1553:1;1546:4;1541:2;1533:6;1529:15;1525:26;1518:37;1573:6;1564:15;;;;;;867:718;;;;:::o;1590:674::-;1685:6;1693;1701;1754:2;1742:9;1733:7;1729:23;1725:32;1722:52;;;1770:1;1767;1760:12;1722:52;1809:9;1796:23;1828:31;1853:5;1828:31;:::i;:::-;1878:5;-1:-1:-1;1934:2:85;1919:18;;1906:32;1957:18;1987:14;;;1984:34;;;2014:1;2011;2004:12;1984:34;2037:49;2078:7;2069:6;2058:9;2054:22;2037:49;:::i;:::-;2027:59;;2139:2;2128:9;2124:18;2111:32;2095:48;;2168:2;2158:8;2155:16;2152:36;;;2184:1;2181;2174:12;2152:36;;2207:51;2250:7;2239:8;2228:9;2224:24;2207:51;:::i;:::-;2197:61;;;1590:674;;;;;:::o;2451:320::-;2519:6;2572:2;2560:9;2551:7;2547:23;2543:32;2540:52;;;2588:1;2585;2578:12;2540:52;2628:9;2615:23;2661:18;2653:6;2650:30;2647:50;;;2693:1;2690;2683:12;2647:50;2716:49;2757:7;2748:6;2737:9;2733:22;2716:49;:::i;3354:248::-;3422:6;3430;3483:2;3471:9;3462:7;3458:23;3454:32;3451:52;;;3499:1;3496;3489:12;3451:52;-1:-1:-1;;3522:23:85;;;3592:2;3577:18;;;3564:32;;-1:-1:-1;3354:248:85:o;3834:658::-;4005:2;4057:21;;;4127:13;;4030:18;;;4149:22;;;3976:4;;4005:2;4228:15;;;;4202:2;4187:18;;;3976:4;4271:195;4285:6;4282:1;4279:13;4271:195;;;4350:13;;-1:-1:-1;;;;;4346:39:85;4334:52;;4441:15;;;;4406:12;;;;4382:1;4300:9;4271:195;;4497:247;4556:6;4609:2;4597:9;4588:7;4584:23;4580:32;4577:52;;;4625:1;4622;4615:12;4577:52;4664:9;4651:23;4683:31;4708:5;4683:31;:::i;4749:523::-;4853:6;4861;4869;4877;4885;4893;4946:3;4934:9;4925:7;4921:23;4917:33;4914:53;;;4963:1;4960;4953:12;4914:53;-1:-1:-1;;4986:23:85;;;5056:2;5041:18;;5028:32;;-1:-1:-1;5107:2:85;5092:18;;5079:32;;5158:2;5143:18;;5130:32;;-1:-1:-1;5209:3:85;5194:19;;5181:33;;-1:-1:-1;5261:3:85;5246:19;5233:33;;-1:-1:-1;4749:523:85;-1:-1:-1;4749:523:85:o;5782:322::-;5823:3;5861:5;5855:12;5885:1;5895:128;5909:6;5906:1;5903:13;5895:128;;;6006:4;5991:13;;;5987:24;;5981:31;5968:11;;;5961:52;5924:12;5895:128;;;-1:-1:-1;6078:1:85;6042:16;;6067:13;;;-1:-1:-1;6042:16:85;;5782:322;-1:-1:-1;5782:322:85:o;6109:189::-;6238:3;6263:29;6288:3;6280:6;6263:29;:::i;6733:373::-;6991:26;6987:31;6978:6;6974:2;6970:15;6966:53;6961:3;6954:66;6936:3;7036:64;7061:38;7095:2;7090:3;7086:12;7078:6;7061:38;:::i;:::-;7053:6;7036:64;:::i;8363:251::-;8433:6;8486:2;8474:9;8465:7;8461:23;8457:32;8454:52;;;8502:1;8499;8492:12;8454:52;8534:9;8528:16;8553:31;8578:5;8553:31;:::i;8619:127::-;8680:10;8675:3;8671:20;8668:1;8661:31;8711:4;8708:1;8701:15;8735:4;8732:1;8725:15;8751:127;8812:10;8807:3;8803:20;8800:1;8793:31;8843:4;8840:1;8833:15;8867:4;8864:1;8857:15;8883:135;8922:3;8943:17;;;8940:43;;8963:18;;:::i;:::-;-1:-1:-1;9010:1:85;8999:13;;8883:135::o;12394:824::-;12589:4;12637:2;12626:9;12622:18;12667:6;12656:9;12649:25;12693:2;12731:6;12726:2;12715:9;12711:18;12704:34;12774:2;12769;12758:9;12754:18;12747:30;12797:6;12832;12826:13;12863:6;12855;12848:22;12901:3;12890:9;12886:19;12879:26;;12924:6;12921:1;12914:17;12967:2;12964:1;12954:16;12940:30;;12988:1;12998:194;13012:6;13009:1;13006:13;12998:194;;;13077:13;;-1:-1:-1;;;;;13073:39:85;13061:52;;13109:1;13168:14;;;;13133:12;;;;13027:9;12998:194;;;-1:-1:-1;13209:3:85;;12394:824;-1:-1:-1;;;;;;;;12394:824:85:o;16695:127::-;16756:10;16751:3;16747:20;16744:1;16737:31;16787:4;16784:1;16777:15;16811:4;16808:1;16801:15;16827:120;16867:1;16893;16883:35;;16898:18;;:::i;:::-;-1:-1:-1;16932:9:85;;16827:120::o;16952:112::-;16984:1;17010;17000:35;;17015:18;;:::i;:::-;-1:-1:-1;17049:9:85;;16952:112::o;17779:128::-;17846:9;;;17867:11;;;17864:37;;;17881:18;;:::i;18443:168::-;18516:9;;;18547;;18564:15;;;18558:22;;18544:37;18534:71;;18585:18;;:::i;18616:125::-;18681:9;;;18702:10;;;18699:36;;;18715:18;;:::i",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.7 <0.8.20;\n\nimport \"../common/UsingRegistry.sol\";\nimport \"../common/UsingPrecompiles.sol\";\n\nimport \"../../contracts/common/Initializable.sol\";\nimport \"../../contracts/common/interfaces/ICeloVersionedContract.sol\";\nimport \"../../contracts/governance/interfaces/IEpochRewards.sol\";\nimport \"../../contracts/common/interfaces/IEpochManagerEnabler.sol\";\nimport \"./interfaces/IEpochManagerEnablerInitializer.sol\";\n\n/**\n * @title Contract Used to initialize the EpochManager system after L2 transition.\n */\ncontract EpochManagerEnabler is\n  Initializable,\n  UsingRegistry,\n  UsingPrecompiles,\n  IEpochManagerEnabler,\n  IEpochManagerEnablerInitializer\n{\n  uint256 public lastKnownEpochNumber;\n  uint256 public lastKnownFirstBlockOfEpoch;\n  address[] public lastKnownElectedAccounts;\n\n  event LastKnownEpochNumberSet(uint256 lastKnownEpochNumber);\n  event LastKnownFirstBlockOfEpochSet(uint256 lastKnownFirstBlockOfEpoch);\n  event LastKnownElectedAccountsSet();\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) Initializable(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param registryAddress The address of the registry core smart contract.\n   */\n  function initialize(address registryAddress) external initializer {\n    _transferOwnership(msg.sender);\n    setRegistry(registryAddress);\n  }\n\n  /**\n   * @notice initializes the epochManager contract during L2 transition.\n   */\n  function initEpochManager() external onlyL2 {\n    require(lastKnownEpochNumber != 0, \"lastKnownEpochNumber not set.\");\n    require(lastKnownFirstBlockOfEpoch != 0, \"lastKnownFirstBlockOfEpoch not set.\");\n    require(lastKnownElectedAccounts.length > 0, \"lastKnownElectedAccounts not set.\");\n    getEpochManager().initializeSystem(\n      lastKnownEpochNumber,\n      lastKnownFirstBlockOfEpoch,\n      lastKnownElectedAccounts\n    );\n  }\n\n  /**\n   * @notice Stores the last known epochNumber and the related elected validator accounts.\n   */\n  function captureEpochAndValidators() external onlyL1 {\n    lastKnownEpochNumber = getEpochNumber();\n    emit LastKnownEpochNumberSet(lastKnownEpochNumber);\n\n    uint256 numberElectedValidators = numberValidatorsInCurrentSet();\n    lastKnownElectedAccounts = new address[](numberElectedValidators);\n    _setFirstBlockOfEpoch();\n\n    for (uint256 i = 0; i < numberElectedValidators; i++) {\n      address validatorAccountAddress = getAccounts().validatorSignerToAccount(\n        validatorSignerAddressFromCurrentSet(i)\n      );\n      lastKnownElectedAccounts[i] = validatorAccountAddress;\n    }\n    emit LastKnownElectedAccountsSet();\n  }\n\n  /**\n   * @return a list of know elected validator accounts.\n   */\n  function getlastKnownElectedAccounts() external view returns (address[] memory) {\n    return lastKnownElectedAccounts;\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 1, 0, 0);\n  }\n\n  /**\n   * @notice Sets the first block of the current epoch.\n   * @dev Only callable on L1.\n   */\n  function _setFirstBlockOfEpoch() internal onlyL1 {\n    uint256 blocksSinceEpochBlock = block.number % getEpochSize();\n    uint256 epochBlock = block.number - blocksSinceEpochBlock;\n    lastKnownFirstBlockOfEpoch = epochBlock;\n    emit LastKnownFirstBlockOfEpochSet(lastKnownFirstBlockOfEpoch);\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/common/EpochManagerEnabler.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/common/EpochManagerEnabler.sol",
    "exportedSymbols": {
      "Context": [
        212
      ],
      "EpochManagerEnabler": [
        3789
      ],
      "IAccounts": [
        17249
      ],
      "ICeloUnreleasedTreasury": [
        17265
      ],
      "ICeloVersionedContract": [
        17280
      ],
      "IERC20": [
        190
      ],
      "IElection": [
        18056
      ],
      "IEpochManager": [
        17462
      ],
      "IEpochManagerEnabler": [
        17471
      ],
      "IEpochManagerEnablerInitializer": [
        7290
      ],
      "IEpochRewards": [
        18121
      ],
      "IFeeCurrencyWhitelist": [
        17488
      ],
      "IFeeHandlerSeller": [
        17515
      ],
      "IFreezer": [
        17535
      ],
      "IGovernance": [
        18193
      ],
      "ILockedCelo": [
        18336
      ],
      "ILockedGold": [
        18472
      ],
      "IRegistry": [
        17608
      ],
      "IScoreReader": [
        7470
      ],
      "ISortedOracles": [
        19333
      ],
      "IValidators": [
        18940
      ],
      "Initializable": [
        16991
      ],
      "IsL2Check": [
        4661
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        1471
      ],
      "UsingPrecompiles": [
        6197
      ],
      "UsingRegistry": [
        6725
      ]
    },
    "id": 3790,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3566,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:32:8"
      },
      {
        "absolutePath": "project:/contracts-0.8/common/UsingRegistry.sol",
        "file": "../common/UsingRegistry.sol",
        "id": 3567,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3790,
        "sourceUnit": 6726,
        "src": "73:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/UsingPrecompiles.sol",
        "file": "../common/UsingPrecompiles.sol",
        "id": 3568,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3790,
        "sourceUnit": 6198,
        "src": "111:40:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../../contracts/common/Initializable.sol",
        "id": 3569,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3790,
        "sourceUnit": 16992,
        "src": "153:50:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../../contracts/common/interfaces/ICeloVersionedContract.sol",
        "id": 3570,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3790,
        "sourceUnit": 17281,
        "src": "204:70:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/IEpochRewards.sol",
        "file": "../../contracts/governance/interfaces/IEpochRewards.sol",
        "id": 3571,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3790,
        "sourceUnit": 18122,
        "src": "275:65:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IEpochManagerEnabler.sol",
        "file": "../../contracts/common/interfaces/IEpochManagerEnabler.sol",
        "id": 3572,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3790,
        "sourceUnit": 17472,
        "src": "341:68:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/interfaces/IEpochManagerEnablerInitializer.sol",
        "file": "./interfaces/IEpochManagerEnablerInitializer.sol",
        "id": 3573,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3790,
        "sourceUnit": 7291,
        "src": "410:58:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3575,
              "name": "Initializable",
              "nameLocations": [
                "595:13:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16991,
              "src": "595:13:8"
            },
            "id": 3576,
            "nodeType": "InheritanceSpecifier",
            "src": "595:13:8"
          },
          {
            "baseName": {
              "id": 3577,
              "name": "UsingRegistry",
              "nameLocations": [
                "612:13:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6725,
              "src": "612:13:8"
            },
            "id": 3578,
            "nodeType": "InheritanceSpecifier",
            "src": "612:13:8"
          },
          {
            "baseName": {
              "id": 3579,
              "name": "UsingPrecompiles",
              "nameLocations": [
                "629:16:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6197,
              "src": "629:16:8"
            },
            "id": 3580,
            "nodeType": "InheritanceSpecifier",
            "src": "629:16:8"
          },
          {
            "baseName": {
              "id": 3581,
              "name": "IEpochManagerEnabler",
              "nameLocations": [
                "649:20:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17471,
              "src": "649:20:8"
            },
            "id": 3582,
            "nodeType": "InheritanceSpecifier",
            "src": "649:20:8"
          },
          {
            "baseName": {
              "id": 3583,
              "name": "IEpochManagerEnablerInitializer",
              "nameLocations": [
                "673:31:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7290,
              "src": "673:31:8"
            },
            "id": 3584,
            "nodeType": "InheritanceSpecifier",
            "src": "673:31:8"
          }
        ],
        "canonicalName": "EpochManagerEnabler",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3574,
          "nodeType": "StructuredDocumentation",
          "src": "470:90:8",
          "text": " @title Contract Used to initialize the EpochManager system after L2 transition."
        },
        "fullyImplemented": true,
        "id": 3789,
        "linearizedBaseContracts": [
          3789,
          7290,
          17471,
          6197,
          4661,
          6725,
          112,
          212,
          16991
        ],
        "name": "EpochManagerEnabler",
        "nameLocation": "570:19:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b6ffcdf4",
            "id": 3586,
            "mutability": "mutable",
            "name": "lastKnownEpochNumber",
            "nameLocation": "724:20:8",
            "nodeType": "VariableDeclaration",
            "scope": 3789,
            "src": "709:35:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3585,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "709:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32c31368",
            "id": 3588,
            "mutability": "mutable",
            "name": "lastKnownFirstBlockOfEpoch",
            "nameLocation": "763:26:8",
            "nodeType": "VariableDeclaration",
            "scope": 3789,
            "src": "748:41:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3587,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "03585836",
            "id": 3591,
            "mutability": "mutable",
            "name": "lastKnownElectedAccounts",
            "nameLocation": "810:24:8",
            "nodeType": "VariableDeclaration",
            "scope": 3789,
            "src": "793:41:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3589,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "793:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3590,
              "nodeType": "ArrayTypeName",
              "src": "793:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "d9a1a76580b15ae78b2d3d40f6df34149506928db763adaa8c2b7d354f8640dd",
            "id": 3595,
            "name": "LastKnownEpochNumberSet",
            "nameLocation": "845:23:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3593,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastKnownEpochNumber",
                  "nameLocation": "877:20:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3595,
                  "src": "869:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "868:30:8"
            },
            "src": "839:60:8"
          },
          {
            "anonymous": false,
            "eventSelector": "c4d72df1a0e397a9d4f36d402b48854435f6e38b3fa95f918c7125c3de0d33e4",
            "id": 3599,
            "name": "LastKnownFirstBlockOfEpochSet",
            "nameLocation": "908:29:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3597,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastKnownFirstBlockOfEpoch",
                  "nameLocation": "946:26:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "938:34:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "937:36:8"
            },
            "src": "902:72:8"
          },
          {
            "anonymous": false,
            "eventSelector": "8bcc171e37e2f3448f64d63bcf15ceda5dd7acee8f7ac90e12db4167bccbd17c",
            "id": 3601,
            "name": "LastKnownElectedAccountsSet",
            "nameLocation": "983:27:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1010:2:8"
            },
            "src": "977:36:8"
          },
          {
            "body": {
              "id": 3610,
              "nodeType": "Block",
              "src": "1205:2:8",
              "statements": []
            },
            "documentation": {
              "id": 3602,
              "nodeType": "StructuredDocumentation",
              "src": "1017:142:8",
              "text": " @notice Sets initialized == true on implementation contracts\n @param test Set to true to skip implementation initialization"
            },
            "id": 3611,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3607,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3604,
                    "src": "1199:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 3608,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3606,
                  "name": "Initializable",
                  "nameLocations": [
                    "1185:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16991,
                  "src": "1185:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1185:19:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3604,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "1179:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3611,
                  "src": "1174:9:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1173:11:8"
            },
            "returnParameters": {
              "id": 3609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1205:0:8"
            },
            "scope": 3789,
            "src": "1162:45:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7289
            ],
            "body": {
              "id": 3628,
              "nodeType": "Block",
              "src": "1462:75:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3620,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1487:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1491:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1487:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3619,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1468:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1468:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3623,
                  "nodeType": "ExpressionStatement",
                  "src": "1468:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3625,
                        "name": "registryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3614,
                        "src": "1516:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3624,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6489,
                      "src": "1504:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1504:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3627,
                  "nodeType": "ExpressionStatement",
                  "src": "1504:28:8"
                }
              ]
            },
            "documentation": {
              "id": 3612,
              "nodeType": "StructuredDocumentation",
              "src": "1211:182:8",
              "text": " @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n @param registryAddress The address of the registry core smart contract."
            },
            "functionSelector": "c4d66de8",
            "id": 3629,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3617,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3616,
                  "name": "initializer",
                  "nameLocations": [
                    "1450:11:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16975,
                  "src": "1450:11:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1450:11:8"
              }
            ],
            "name": "initialize",
            "nameLocation": "1405:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3614,
                  "mutability": "mutable",
                  "name": "registryAddress",
                  "nameLocation": "1424:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 3629,
                  "src": "1416:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1415:25:8"
            },
            "returnParameters": {
              "id": 3618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1462:0:8"
            },
            "scope": 3789,
            "src": "1396:141:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17467
            ],
            "body": {
              "id": 3665,
              "nodeType": "Block",
              "src": "1670:390:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3636,
                          "name": "lastKnownEpochNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3586,
                          "src": "1684:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1708:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1684:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6173744b6e6f776e45706f63684e756d626572206e6f74207365742e",
                        "id": 3639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35d2c899bcc670ca8d8266bdaf3c172e2283dc1ad940dcf30117da6860a6b865",
                          "typeString": "literal_string \"lastKnownEpochNumber not set.\""
                        },
                        "value": "lastKnownEpochNumber not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35d2c899bcc670ca8d8266bdaf3c172e2283dc1ad940dcf30117da6860a6b865",
                          "typeString": "literal_string \"lastKnownEpochNumber not set.\""
                        }
                      ],
                      "id": 3635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1676:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:67:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3641,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:67:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3643,
                          "name": "lastKnownFirstBlockOfEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3588,
                          "src": "1757:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1787:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1757:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6173744b6e6f776e4669727374426c6f636b4f6645706f6368206e6f74207365742e",
                        "id": 3646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1790:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd4787b4da918d3d0a7ae0eb08d850d3179a9998f2e040e5b58fa56fc667a98a",
                          "typeString": "literal_string \"lastKnownFirstBlockOfEpoch not set.\""
                        },
                        "value": "lastKnownFirstBlockOfEpoch not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd4787b4da918d3d0a7ae0eb08d850d3179a9998f2e040e5b58fa56fc667a98a",
                          "typeString": "literal_string \"lastKnownFirstBlockOfEpoch not set.\""
                        }
                      ],
                      "id": 3642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1749:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1749:79:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3648,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:79:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3650,
                            "name": "lastKnownElectedAccounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3591,
                            "src": "1842:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1867:6:8",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1842:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1876:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1842:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c6173744b6e6f776e456c65637465644163636f756e7473206e6f74207365742e",
                        "id": 3654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1879:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_887fb5a39cc56ecc6cb9ad4af5dd92fe99df675362ccc7388ea43f3728d869a6",
                          "typeString": "literal_string \"lastKnownElectedAccounts not set.\""
                        },
                        "value": "lastKnownElectedAccounts not set."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_887fb5a39cc56ecc6cb9ad4af5dd92fe99df675362ccc7388ea43f3728d869a6",
                          "typeString": "literal_string \"lastKnownElectedAccounts not set.\""
                        }
                      ],
                      "id": 3649,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1834:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1834:81:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3656,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:81:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3660,
                        "name": "lastKnownEpochNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3586,
                        "src": "1963:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3661,
                        "name": "lastKnownFirstBlockOfEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3588,
                        "src": "1991:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3662,
                        "name": "lastKnownElectedAccounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3591,
                        "src": "2025:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3657,
                          "name": "getEpochManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6710,
                          "src": "1921:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEpochManager_$17462_$",
                            "typeString": "function () view returns (contract IEpochManager)"
                          }
                        },
                        "id": 3658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1921:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEpochManager_$17462",
                          "typeString": "contract IEpochManager"
                        }
                      },
                      "id": 3659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1939:16:8",
                      "memberName": "initializeSystem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17292,
                      "src": "1921:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory) external"
                      }
                    },
                    "id": 3663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:134:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3664,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:134:8"
                }
              ]
            },
            "documentation": {
              "id": 3630,
              "nodeType": "StructuredDocumentation",
              "src": "1541:82:8",
              "text": " @notice initializes the epochManager contract during L2 transition."
            },
            "functionSelector": "ae497c71",
            "id": 3666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3633,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3632,
                  "name": "onlyL2",
                  "nameLocations": [
                    "1663:6:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4627,
                  "src": "1663:6:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1663:6:8"
              }
            ],
            "name": "initEpochManager",
            "nameLocation": "1635:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1651:2:8"
            },
            "returnParameters": {
              "id": 3634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1670:0:8"
            },
            "scope": 3789,
            "src": "1626:434:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17470
            ],
            "body": {
              "id": 3728,
              "nodeType": "Block",
              "src": "2220:582:8",
              "statements": [
                {
                  "expression": {
                    "id": 3675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3672,
                      "name": "lastKnownEpochNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3586,
                      "src": "2226:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3673,
                        "name": "getEpochNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5712,
                        "src": "2249:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 3674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2249:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2226:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3676,
                  "nodeType": "ExpressionStatement",
                  "src": "2226:39:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3678,
                        "name": "lastKnownEpochNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3586,
                        "src": "2300:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3677,
                      "name": "LastKnownEpochNumberSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3595,
                      "src": "2276:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2276:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3680,
                  "nodeType": "EmitStatement",
                  "src": "2271:50:8"
                },
                {
                  "assignments": [
                    3682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3682,
                      "mutability": "mutable",
                      "name": "numberElectedValidators",
                      "nameLocation": "2336:23:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3728,
                      "src": "2328:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3681,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2328:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3685,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3683,
                      "name": "numberValidatorsInCurrentSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
                      "src": "2362:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 3684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2362:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2328:64:8"
                },
                {
                  "expression": {
                    "id": 3692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3686,
                      "name": "lastKnownElectedAccounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3591,
                      "src": "2398:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3690,
                          "name": "numberElectedValidators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3682,
                          "src": "2439:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2425:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 3687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2429:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3688,
                          "nodeType": "ArrayTypeName",
                          "src": "2429:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 3691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2425:38:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2398:65:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 3693,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:65:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3694,
                      "name": "_setFirstBlockOfEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3788,
                      "src": "2469:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2469:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3696,
                  "nodeType": "ExpressionStatement",
                  "src": "2469:23:8"
                },
                {
                  "body": {
                    "id": 3723,
                    "nodeType": "Block",
                    "src": "2553:205:8",
                    "statements": [
                      {
                        "assignments": [
                          3708
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3708,
                            "mutability": "mutable",
                            "name": "validatorAccountAddress",
                            "nameLocation": "2569:23:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 3723,
                            "src": "2561:31:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3707,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2561:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3716,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3713,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3698,
                                  "src": "2680:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3712,
                                "name": "validatorSignerAddressFromCurrentSet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5762,
                                "src": "2643:36:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 3714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2643:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3709,
                                "name": "getAccounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6626,
                                "src": "2595:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAccounts_$17249_$",
                                  "typeString": "function () view returns (contract IAccounts)"
                                }
                              },
                              "id": 3710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2595:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccounts_$17249",
                                "typeString": "contract IAccounts"
                              }
                            },
                            "id": 3711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2609:24:8",
                            "memberName": "validatorSignerToAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17133,
                            "src": "2595:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 3715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2595:95:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2561:129:8"
                      },
                      {
                        "expression": {
                          "id": 3721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3717,
                              "name": "lastKnownElectedAccounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3591,
                              "src": "2698:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3719,
                            "indexExpression": {
                              "id": 3718,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "2723:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2698:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3720,
                            "name": "validatorAccountAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3708,
                            "src": "2728:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2698:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3722,
                        "nodeType": "ExpressionStatement",
                        "src": "2698:53:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3701,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3698,
                      "src": "2519:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3702,
                      "name": "numberElectedValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3682,
                      "src": "2523:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2519:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3724,
                  "initializationExpression": {
                    "assignments": [
                      3698
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3698,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2512:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 3724,
                        "src": "2504:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3697,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2504:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3700,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2516:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2504:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2548:3:8",
                      "subExpression": {
                        "id": 3704,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3698,
                        "src": "2548:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3706,
                    "nodeType": "ExpressionStatement",
                    "src": "2548:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "2499:259:8"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3725,
                      "name": "LastKnownElectedAccountsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3601,
                      "src": "2768:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3727,
                  "nodeType": "EmitStatement",
                  "src": "2763:34:8"
                }
              ]
            },
            "documentation": {
              "id": 3667,
              "nodeType": "StructuredDocumentation",
              "src": "2064:100:8",
              "text": " @notice Stores the last known epochNumber and the related elected validator accounts."
            },
            "functionSelector": "822e7c7c",
            "id": 3729,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3670,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3669,
                  "name": "onlyL1",
                  "nameLocations": [
                    "2213:6:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4613,
                  "src": "2213:6:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2213:6:8"
              }
            ],
            "name": "captureEpochAndValidators",
            "nameLocation": "2176:25:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2201:2:8"
            },
            "returnParameters": {
              "id": 3671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2220:0:8"
            },
            "scope": 3789,
            "src": "2167:635:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3738,
              "nodeType": "Block",
              "src": "2954:42:8",
              "statements": [
                {
                  "expression": {
                    "id": 3736,
                    "name": "lastKnownElectedAccounts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3591,
                    "src": "2967:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3735,
                  "id": 3737,
                  "nodeType": "Return",
                  "src": "2960:31:8"
                }
              ]
            },
            "documentation": {
              "id": 3730,
              "nodeType": "StructuredDocumentation",
              "src": "2806:65:8",
              "text": " @return a list of know elected validator accounts."
            },
            "functionSelector": "a3c02eb5",
            "id": 3739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getlastKnownElectedAccounts",
            "nameLocation": "2883:27:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2910:2:8"
            },
            "returnParameters": {
              "id": 3735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3734,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3739,
                  "src": "2936:16:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3732,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2936:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3733,
                    "nodeType": "ArrayTypeName",
                    "src": "2936:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2935:18:8"
            },
            "scope": 3789,
            "src": "2874:122:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3757,
              "nodeType": "Block",
              "src": "3360:30:8",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 3751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3374:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 3752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3377:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 3753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3380:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3383:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 3755,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3373:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 3750,
                  "id": 3756,
                  "nodeType": "Return",
                  "src": "3366:19:8"
                }
              ]
            },
            "documentation": {
              "id": 3740,
              "nodeType": "StructuredDocumentation",
              "src": "3000:270:8",
              "text": " @notice Returns the storage, major, minor, and patch version of the contract.\n @return Storage version of the contract.\n @return Major version of the contract.\n @return Minor version of the contract.\n @return Patch version of the contract."
            },
            "functionSelector": "54255be0",
            "id": 3758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nameLocation": "3282:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3298:2:8"
            },
            "returnParameters": {
              "id": 3750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3743,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3758,
                  "src": "3324:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3745,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3758,
                  "src": "3333:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3758,
                  "src": "3342:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3342:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3749,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3758,
                  "src": "3351:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3323:36:8"
            },
            "scope": 3789,
            "src": "3273:117:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3787,
              "nodeType": "Block",
              "src": "3542:248:8",
              "statements": [
                {
                  "assignments": [
                    3765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3765,
                      "mutability": "mutable",
                      "name": "blocksSinceEpochBlock",
                      "nameLocation": "3556:21:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3787,
                      "src": "3548:29:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3771,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3766,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3580:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3586:6:8",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3580:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3768,
                        "name": "getEpochSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5681,
                        "src": "3595:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 3769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3595:14:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3580:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:61:8"
                },
                {
                  "assignments": [
                    3773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3773,
                      "mutability": "mutable",
                      "name": "epochBlock",
                      "nameLocation": "3623:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 3787,
                      "src": "3615:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3615:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3778,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3774,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3636:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3642:6:8",
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3636:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 3776,
                      "name": "blocksSinceEpochBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3765,
                      "src": "3651:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3636:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3615:57:8"
                },
                {
                  "expression": {
                    "id": 3781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3779,
                      "name": "lastKnownFirstBlockOfEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3588,
                      "src": "3678:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3780,
                      "name": "epochBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3773,
                      "src": "3707:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3678:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3782,
                  "nodeType": "ExpressionStatement",
                  "src": "3678:39:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3784,
                        "name": "lastKnownFirstBlockOfEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3588,
                        "src": "3758:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3783,
                      "name": "LastKnownFirstBlockOfEpochSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "3728:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3728:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3786,
                  "nodeType": "EmitStatement",
                  "src": "3723:62:8"
                }
              ]
            },
            "documentation": {
              "id": 3759,
              "nodeType": "StructuredDocumentation",
              "src": "3394:96:8",
              "text": " @notice Sets the first block of the current epoch.\n @dev Only callable on L1."
            },
            "id": 3788,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3762,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3761,
                  "name": "onlyL1",
                  "nameLocations": [
                    "3535:6:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4613,
                  "src": "3535:6:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3535:6:8"
              }
            ],
            "name": "_setFirstBlockOfEpoch",
            "nameLocation": "3502:21:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3523:2:8"
            },
            "returnParameters": {
              "id": 3763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:0:8"
            },
            "scope": 3789,
            "src": "3493:297:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3790,
        "src": "561:3231:8",
        "usedErrors": []
      }
    ],
    "src": "39:3754:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.133Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof   of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the   account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "returns": {
          "_0": "True upon success."
        }
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "returns": {
          "_0": "Numerator of the computed quantity (not reduced).",
          "_1": "Denominator of the computed quantity (not reduced)."
        }
      },
      "getBlockNumberFromHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "returns": {
          "_0": "Block number."
        }
      },
      "getEpochNumber()": {
        "details": "This function will be deprecated in L2.",
        "returns": {
          "_0": "Current epoch number."
        }
      },
      "getEpochNumberOfBlock(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "returns": {
          "_0": "Epoch number."
        }
      },
      "getEpochSize()": {
        "details": "This function will be deprecated in L2.",
        "returns": {
          "_0": "The current epoch size in blocks."
        }
      },
      "getParentSealBitmap(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "returns": {
          "_0": "Bitmap parent seal with set bits at indices corresponding to signing validators."
        }
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "returns": {
          "_0": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
        }
      },
      "getVersionNumber()": {
        "returns": {
          "_0": "Storage version of the contract.",
          "_1": "Major version of the contract.",
          "_2": "Minor version of the contract.",
          "_3": "Patch version of the contract."
        }
      },
      "getlastKnownElectedAccounts()": {
        "returns": {
          "_0": "a list of know elected validator accounts."
        }
      },
      "hashHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "returns": {
          "_0": "Header hash."
        }
      },
      "initialize(address)": {
        "params": {
          "registryAddress": "The address of the registry core smart contract."
        }
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))This function will be deprecated in L2."
      },
      "minQuorumSizeInCurrentSet()": {
        "details": "This function will be deprecated in L2.",
        "returns": {
          "_0": "Byzantine quorum of validators."
        }
      },
      "numberValidatorsInCurrentSet()": {
        "details": "This function will be deprecated in L2.",
        "returns": {
          "_0": "Size of the current elected validator set."
        }
      },
      "numberValidatorsInSet(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "returns": {
          "_0": "Size of the validator set."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "returns": {
          "_0": "Address of validator signer at the requested index."
        }
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "returns": {
          "_0": "Address of validator signer at the requested index."
        }
      }
    },
    "title": "Contract Used to initialize the EpochManager system after L2 transition.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "captureEpochAndValidators()": {
        "notice": "Stores the last known epochNumber and the related elected validator accounts."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "constructor": {
        "notice": "Sets initialized == true on implementation contracts"
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "initEpochManager()": {
        "notice": "initializes the epochManager contract during L2 transition."
      },
      "initialize(address)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInCurrentSet()": {
        "notice": "Gets the size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator signer address from the current validator set."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator signer address from the validator set at the given block number."
      }
    },
    "version": 1
  }
}