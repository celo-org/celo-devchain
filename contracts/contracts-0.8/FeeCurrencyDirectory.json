{
  "contractName": "FeeCurrencyDirectory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "intrinsicGas",
          "type": "uint256"
        }
      ],
      "name": "CurrencyConfigSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CurrencyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "currencies",
      "outputs": [
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "intrinsicGas",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "oracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "intrinsicGas",
          "type": "uint256"
        }
      ],
      "name": "setCurrencyConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeCurrencies",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrencies",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getCurrencyConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "intrinsicGas",
              "type": "uint256"
            }
          ],
          "internalType": "struct IFeeCurrencyDirectory.CurrencyConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "denominator",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"intrinsicGas\",\"type\":\"uint256\"}],\"name\":\"CurrencyConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CurrencyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"currencies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"intrinsicGas\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrencies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getCurrencyConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"intrinsicGas\",\"type\":\"uint256\"}],\"internalType\":\"struct IFeeCurrencyDirectory.CurrencyConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeCurrencies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"intrinsicGas\",\"type\":\"uint256\"}],\"name\":\"setCurrencyConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CurrencyConfigSet(address,address,uint256)\":{\"params\":{\"intrinsicGas\":\"The intrinsic gas value for transactions.\",\"oracle\":\"Address of the currency token oracle.\",\"token\":\"Address of the added currency token.\"}},\"CurrencyRemoved(address)\":{\"params\":{\"token\":\"Address of the removed currency token.\"}}},\"kind\":\"dev\",\"methods\":{\"getCurrencies()\":{\"returns\":{\"_0\":\"An array of addresses.\"}},\"getCurrencyConfig(address)\":{\"params\":{\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"Currency configuration of the token.\"}},\"getExchangeRate(address)\":{\"params\":{\"token\":\"The token address whose price is to be fetched.\"},\"returns\":{\"denominator\":\"The exchange rate denominator.\",\"numerator\":\"The exchange rate numerator.\"}},\"getVersionNumber()\":{\"returns\":{\"_0\":\"Storage version of the contract.\",\"_1\":\"Major version of the contract.\",\"_2\":\"Minor version of the contract.\",\"_3\":\"Patch version of the contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeCurrencies(address,uint256)\":{\"details\":\"This action can only be performed by the contract owner.\",\"params\":{\"index\":\"The index in the list of directory currencies.\",\"token\":\"The token address to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setCurrencyConfig(address,address,uint256)\":{\"details\":\"This action can only be performed by the contract owner.\",\"params\":{\"intrinsicGas\":\"The intrinsic gas value for transactions.\",\"oracle\":\"The oracle address for price fetching.\",\"token\":\"The token address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CurrencyConfigSet(address,address,uint256)\":{\"notice\":\"Emitted when currency config is set.\"},\"CurrencyRemoved(address)\":{\"notice\":\"Emitted when currency is removed.\"}},\"kind\":\"user\",\"methods\":{\"getCurrencies()\":{\"notice\":\"Returns the list of all currency addresses.\"},\"getCurrencyConfig(address)\":{\"notice\":\"Returns the configuration for a currency.\"},\"getExchangeRate(address)\":{\"notice\":\"Retrieves exchange rate between token and CELO.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize()\":{\"notice\":\"Initializes the contract with the owner set.\"},\"removeCurrencies(address,uint256)\":{\"notice\":\"Removes a token from the directory.\"},\"setCurrencyConfig(address,address,uint256)\":{\"notice\":\"Sets the currency configuration for a token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/common/FeeCurrencyDirectory.sol\":\"FeeCurrencyDirectory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/FeeCurrencyDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../contracts/common/Initializable.sol\\\";\\nimport \\\"./interfaces/IOracle.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyDirectory.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyDirectoryInitializer.sol\\\";\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\n\\ncontract FeeCurrencyDirectory is\\n  IFeeCurrencyDirectory,\\n  IFeeCurrencyDirectoryInitializer,\\n  Initializable,\\n  Ownable\\n{\\n  mapping(address => CurrencyConfig) public currencies;\\n  address[] private currencyList;\\n\\n  /**\\n   * @notice Emitted when currency config is set.\\n   * @param token Address of the added currency token.\\n   * @param oracle Address of the currency token oracle.\\n   * @param intrinsicGas The intrinsic gas value for transactions.\\n   */\\n  event CurrencyConfigSet(address indexed token, address indexed oracle, uint256 intrinsicGas);\\n\\n  /**\\n   * @notice Emitted when currency is removed.\\n   * @param token Address of the removed currency token.\\n   */\\n  event CurrencyRemoved(address indexed token);\\n\\n  constructor(bool test) Initializable(test) {}\\n\\n  /**\\n   * @notice Initializes the contract with the owner set.\\n   */\\n  function initialize() public initializer {\\n    _transferOwnership(msg.sender);\\n  }\\n\\n  /**\\n   * @notice Sets the currency configuration for a token.\\n   * @dev This action can only be performed by the contract owner.\\n   * @param token The token address.\\n   * @param oracle The oracle address for price fetching.\\n   * @param intrinsicGas The intrinsic gas value for transactions.\\n   */\\n  function setCurrencyConfig(\\n    address token,\\n    address oracle,\\n    uint256 intrinsicGas\\n  ) external onlyOwner {\\n    require(oracle != address(0), \\\"Oracle address cannot be zero\\\");\\n    require(intrinsicGas > 0, \\\"Intrinsic gas cannot be zero\\\");\\n    require(currencies[token].oracle == address(0), \\\"Currency already in the directory\\\");\\n\\n    currencies[token] = CurrencyConfig({ oracle: oracle, intrinsicGas: intrinsicGas });\\n    currencyList.push(token);\\n    emit CurrencyConfigSet(token, oracle, intrinsicGas);\\n  }\\n\\n  /**\\n   * @notice Removes a token from the directory.\\n   * @dev This action can only be performed by the contract owner.\\n   * @param token The token address to remove.\\n   * @param index The index in the list of directory currencies.\\n   */\\n  function removeCurrencies(address token, uint256 index) external onlyOwner {\\n    require(index < currencyList.length, \\\"Index out of bounds\\\");\\n    require(currencyList[index] == token, \\\"Index does not match token\\\");\\n\\n    delete currencies[token];\\n    currencyList[index] = currencyList[currencyList.length - 1];\\n    currencyList.pop();\\n    emit CurrencyRemoved(token);\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 1, 0, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the list of all currency addresses.\\n   * @return An array of addresses.\\n   */\\n  function getCurrencies() public view returns (address[] memory) {\\n    return currencyList;\\n  }\\n\\n  /**\\n   * @notice Returns the configuration for a currency.\\n   * @param token The address of the token.\\n   * @return Currency configuration of the token.\\n   */\\n  function getCurrencyConfig(address token) public view returns (CurrencyConfig memory) {\\n    return currencies[token];\\n  }\\n\\n  /**\\n   * @notice Retrieves exchange rate between token and CELO.\\n   * @param token The token address whose price is to be fetched.\\n   * @return numerator The exchange rate numerator.\\n   * @return denominator The exchange rate denominator.\\n   */\\n  function getExchangeRate(\\n    address token\\n  ) public view returns (uint256 numerator, uint256 denominator) {\\n    require(currencies[token].oracle != address(0), \\\"Currency not in the directory\\\");\\n    (numerator, denominator) = IOracle(currencies[token].oracle).getExchangeRate(token);\\n  }\\n}\\n\",\"keccak256\":\"0x4fe06751c788365571db148c7baebef37dd841e1e137ba236847d7ee7a910dad\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/interfaces/IFeeCurrencyDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IFeeCurrencyDirectory {\\n  struct CurrencyConfig {\\n    address oracle;\\n    uint256 intrinsicGas;\\n  }\\n\\n  /**\\n   * @notice Sets the currency configuration for a token.\\n   * @dev This action can only be performed by the contract owner.\\n   * @param token The token address.\\n   * @param oracle The oracle address for price fetching.\\n   * @param intrinsicGas The intrinsic gas value for transactions.\\n   */\\n  function setCurrencyConfig(address token, address oracle, uint256 intrinsicGas) external;\\n\\n  /**\\n   * @notice Returns the list of all currency addresses.\\n   * @return An array of addresses.\\n   */\\n  function getCurrencies() external view returns (address[] memory);\\n  /**\\n   * @notice Returns the configuration for a currency.\\n   * @param token The address of the token.\\n   * @return Currency configuration of the token.\\n   */\\n  function getCurrencyConfig(address token) external view returns (CurrencyConfig memory);\\n\\n  /**\\n   * @notice Retrieves exchange rate between token and CELO.\\n   * @param token The token address whose price is to be fetched.\\n   * @return numerator The exchange rate numerator.\\n   * @return denominator The exchange rate denominator.\\n   */\\n  function getExchangeRate(\\n    address token\\n  ) external view returns (uint256 numerator, uint256 denominator);\\n}\\n\",\"keccak256\":\"0x67de62a4cd2baace51d893a35c8b7f2b47c15f67082258a6e688764d54740a56\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/interfaces/IFeeCurrencyDirectoryInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IFeeCurrencyDirectoryInitializer {\\n  function initialize() external;\\n}\\n\",\"keccak256\":\"0xcbfc1db1553f658cabe98a6751db700265ae90170e30f169ad40fc9a76d825b4\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/// Possibly not final version\\ninterface IOracle {\\n  function getExchangeRate(\\n    address token\\n  ) external view returns (uint256 numerator, uint256 denominator);\\n}\\n\",\"keccak256\":\"0xabf489c01ce86008d0aff7b1f8d31da44acd585c8dd44b8cd2895b633149cbe9\",\"license\":\"MIT\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610bc4380380610bc483398101604081905261002f916100ac565b8080610043576000805460ff191660011790555b5061004d33610053565b506100d5565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000602082840312156100be57600080fd5b815180151581146100ce57600080fd5b9392505050565b610ae0806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101905780638129fc1c146101985780638da5cb5b146101a0578063eab43d97146101c9578063efb7601d14610245578063f2fde38b1461026d57600080fd5b8063158ef93e146100b957806316be73a8146100db578063216ab7df146100f057806354255be0146101035780636036cba31461012957806361c661de1461017b575b600080fd5b6000546100c69060ff1681565b60405190151581526020015b60405180910390f35b6100ee6100e936600461095e565b610280565b005b6100ee6100fe366004610988565b610465565b6001806000806040805194855260208501939093529183015260608201526080016100d2565b61015c6101373660046109c4565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100d2565b61018361063f565b6040516100d291906109e6565b6100ee6106a1565b6100ee6106b5565b60005461010090046001600160a01b03166040516001600160a01b0390911681526020016100d2565b6102216101d73660046109c4565b604080518082018252600080825260209182018190526001600160a01b03938416815260018083529083902083518085019094528054909416835292909201549181019190915290565b6040805182516001600160a01b0316815260209283015192810192909252016100d2565b6102586102533660046109c4565b61071e565b604080519283526020830191909152016100d2565b6100ee61027b3660046109c4565b610810565b610288610889565b60025481106102d45760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064015b60405180910390fd5b816001600160a01b0316600282815481106102f1576102f1610a33565b6000918252602090912001546001600160a01b0316146103535760405162461bcd60e51b815260206004820152601a60248201527f496e64657820646f6573206e6f74206d6174636820746f6b656e00000000000060448201526064016102cb565b6001600160a01b0382166000908152600160208190526040822080546001600160a01b031916815581019190915560028054909161039091610a49565b815481106103a0576103a0610a33565b600091825260209091200154600280546001600160a01b0390921691839081106103cc576103cc610a33565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061040b5761040b610a70565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917fa40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b91a25050565b61046d610889565b6001600160a01b0382166104c35760405162461bcd60e51b815260206004820152601d60248201527f4f7261636c6520616464726573732063616e6e6f74206265207a65726f00000060448201526064016102cb565b600081116105135760405162461bcd60e51b815260206004820152601c60248201527f496e7472696e736963206761732063616e6e6f74206265207a65726f0000000060448201526064016102cb565b6001600160a01b0383811660009081526001602052604090205416156105855760405162461bcd60e51b815260206004820152602160248201527f43757272656e637920616c726561647920696e20746865206469726563746f726044820152607960f81b60648201526084016102cb565b6040805180820182526001600160a01b038481168083526020808401868152888416600081815260018085528882209751885497166001600160a01b03199788161788559251968301969096556002805492830181559095527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054909316841790925592518481527f1bfad71c54fe241478cb00c00067b069d43cf48531041328242990dbb9cdba51910160405180910390a3505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561069757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610679575b5050505050905090565b6106a9610889565b6106b360006108e9565b565b60005460ff16156107085760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a65640000000060448201526064016102cb565b6000805460ff191660011790556106b3336108e9565b6001600160a01b0381811660009081526001602052604081205490918291166107895760405162461bcd60e51b815260206004820152601d60248201527f43757272656e6379206e6f7420696e20746865206469726563746f727900000060448201526064016102cb565b6001600160a01b038381166000818152600160205260409081902054905163efb7601d60e01b815260048101929092529091169063efb7601d906024016040805180830381865afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190610a86565b9094909350915050565b610818610889565b6001600160a01b03811661087d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102cb565b610886816108e9565b50565b6000546001600160a01b036101009091041633146106b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102cb565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80356001600160a01b038116811461095957600080fd5b919050565b6000806040838503121561097157600080fd5b61097a83610942565b946020939093013593505050565b60008060006060848603121561099d57600080fd5b6109a684610942565b92506109b460208501610942565b9150604084013590509250925092565b6000602082840312156109d657600080fd5b6109df82610942565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610a275783516001600160a01b031683529284019291840191600101610a02565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610a6a57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603160045260246000fd5b60008060408385031215610a9957600080fd5b50508051602090910151909290915056fea2646970667358221220822a17e00d76185a21cc15098a99ade05ec896c35365016a201ae47b5f75106664736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101905780638129fc1c146101985780638da5cb5b146101a0578063eab43d97146101c9578063efb7601d14610245578063f2fde38b1461026d57600080fd5b8063158ef93e146100b957806316be73a8146100db578063216ab7df146100f057806354255be0146101035780636036cba31461012957806361c661de1461017b575b600080fd5b6000546100c69060ff1681565b60405190151581526020015b60405180910390f35b6100ee6100e936600461095e565b610280565b005b6100ee6100fe366004610988565b610465565b6001806000806040805194855260208501939093529183015260608201526080016100d2565b61015c6101373660046109c4565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100d2565b61018361063f565b6040516100d291906109e6565b6100ee6106a1565b6100ee6106b5565b60005461010090046001600160a01b03166040516001600160a01b0390911681526020016100d2565b6102216101d73660046109c4565b604080518082018252600080825260209182018190526001600160a01b03938416815260018083529083902083518085019094528054909416835292909201549181019190915290565b6040805182516001600160a01b0316815260209283015192810192909252016100d2565b6102586102533660046109c4565b61071e565b604080519283526020830191909152016100d2565b6100ee61027b3660046109c4565b610810565b610288610889565b60025481106102d45760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064015b60405180910390fd5b816001600160a01b0316600282815481106102f1576102f1610a33565b6000918252602090912001546001600160a01b0316146103535760405162461bcd60e51b815260206004820152601a60248201527f496e64657820646f6573206e6f74206d6174636820746f6b656e00000000000060448201526064016102cb565b6001600160a01b0382166000908152600160208190526040822080546001600160a01b031916815581019190915560028054909161039091610a49565b815481106103a0576103a0610a33565b600091825260209091200154600280546001600160a01b0390921691839081106103cc576103cc610a33565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600280548061040b5761040b610a70565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917fa40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b91a25050565b61046d610889565b6001600160a01b0382166104c35760405162461bcd60e51b815260206004820152601d60248201527f4f7261636c6520616464726573732063616e6e6f74206265207a65726f00000060448201526064016102cb565b600081116105135760405162461bcd60e51b815260206004820152601c60248201527f496e7472696e736963206761732063616e6e6f74206265207a65726f0000000060448201526064016102cb565b6001600160a01b0383811660009081526001602052604090205416156105855760405162461bcd60e51b815260206004820152602160248201527f43757272656e637920616c726561647920696e20746865206469726563746f726044820152607960f81b60648201526084016102cb565b6040805180820182526001600160a01b038481168083526020808401868152888416600081815260018085528882209751885497166001600160a01b03199788161788559251968301969096556002805492830181559095527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054909316841790925592518481527f1bfad71c54fe241478cb00c00067b069d43cf48531041328242990dbb9cdba51910160405180910390a3505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561069757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610679575b5050505050905090565b6106a9610889565b6106b360006108e9565b565b60005460ff16156107085760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a65640000000060448201526064016102cb565b6000805460ff191660011790556106b3336108e9565b6001600160a01b0381811660009081526001602052604081205490918291166107895760405162461bcd60e51b815260206004820152601d60248201527f43757272656e6379206e6f7420696e20746865206469726563746f727900000060448201526064016102cb565b6001600160a01b038381166000818152600160205260409081902054905163efb7601d60e01b815260048101929092529091169063efb7601d906024016040805180830381865afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190610a86565b9094909350915050565b610818610889565b6001600160a01b03811661087d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102cb565b610886816108e9565b50565b6000546001600160a01b036101009091041633146106b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102cb565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80356001600160a01b038116811461095957600080fd5b919050565b6000806040838503121561097157600080fd5b61097a83610942565b946020939093013593505050565b60008060006060848603121561099d57600080fd5b6109a684610942565b92506109b460208501610942565b9150604084013590509250925092565b6000602082840312156109d657600080fd5b6109df82610942565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610a275783516001600160a01b031683529284019291840191600101610a02565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610a6a57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603160045260246000fd5b60008060408385031215610a9957600080fd5b50508051602090910151909290915056fea2646970667358221220822a17e00d76185a21cc15098a99ade05ec896c35365016a201ae47b5f75106664736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:293:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:85",
                "type": ""
              }
            ],
            "src": "14:277:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7534:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "119:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "131:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "142:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "127:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "119:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "161:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "186:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "179:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "179:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "172:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "172:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "154:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "154:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "154:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "78:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "89:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "100:4:85",
                "type": ""
              }
            ],
            "src": "14:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "255:124:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "265:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "287:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "274:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "274:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "265:5:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "366:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "316:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "327:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "342:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "347:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "338:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "338:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "351:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "334:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "334:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "323:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "323:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "313:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "313:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "306:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "306:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "303:70:85"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "234:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:85",
                "type": ""
              }
            ],
            "src": "206:173:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "471:167:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "492:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "501:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "488:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "488:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "513:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "484:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "484:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "481:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "542:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "571:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "552:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "542:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "590:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "617:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "628:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "613:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "613:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "600:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "600:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "590:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "429:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "440:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "452:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "460:6:85",
                "type": ""
              }
            ],
            "src": "384:254:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "747:224:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "793:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "802:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "805:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "795:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "795:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "795:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "768:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "777:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "764:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "764:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "789:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "760:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "760:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "757:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "818:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "847:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "828:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "818:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "866:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "899:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "910:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "876:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "876:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "866:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "923:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "950:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "961:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "946:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "946:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "933:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "933:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "923:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "697:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "708:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "720:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "728:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "736:6:85",
                "type": ""
              }
            ],
            "src": "643:328:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1161:206:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1171:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1183:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1194:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1179:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1179:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1171:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1214:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1225:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1207:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1207:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1207:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1252:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1263:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1248:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1248:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1268:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1241:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1295:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1306:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1291:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1291:18:85"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1311:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1284:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1284:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1284:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1338:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1349:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1334:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1334:18:85"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1354:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1327:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1106:9:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1117:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1125:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1133:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1141:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1152:4:85",
                "type": ""
              }
            ],
            "src": "976:391:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1442:116:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1488:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1497:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1500:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1490:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1490:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1490:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1463:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1472:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1459:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1459:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1484:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1455:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1452:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1513:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1542:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1523:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1523:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1513:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1408:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1419:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1431:6:85",
                "type": ""
              }
            ],
            "src": "1372:186:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1692:145:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1702:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1714:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1725:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1710:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1702:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1744:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1759:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1775:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1780:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1771:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1771:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1784:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1767:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1767:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1755:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1755:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1737:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1737:51:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1808:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1819:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1804:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1804:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1824:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1797:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1797:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1797:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1653:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1664:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1672:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1683:4:85",
                "type": ""
              }
            ],
            "src": "1563:274:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1993:507:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2003:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2013:2:85",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2007:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2024:32:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2042:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2053:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2038:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2038:18:85"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2028:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2072:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2083:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2065:21:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2095:17:85",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "2106:6:85"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2099:3:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2121:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2141:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2135:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:13:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2125:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2164:6:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2172:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2157:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2157:22:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2188:25:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2199:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2210:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2195:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2195:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2188:3:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2222:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2240:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2248:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2236:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2236:15:85"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2226:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2260:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2269:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2264:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2328:146:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2349:3:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2364:6:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2358:5:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2358:13:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2381:3:85",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2386:1:85",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "2377:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2377:11:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2390:1:85",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "2373:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2373:19:85"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2354:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2354:39:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2342:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2342:52:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2342:52:85"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2407:19:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2418:3:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2423:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2414:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2414:12:85"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2407:3:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2439:25:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2453:6:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2461:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2449:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2449:15:85"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2439:6:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2290:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2293:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2287:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2287:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2301:18:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2303:14:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2312:1:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2315:1:85",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2308:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2308:9:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2303:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2283:3:85",
                    "statements": []
                  },
                  "src": "2279:195:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2483:11:85",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "2491:3:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2483:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1962:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1973:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1984:4:85",
                "type": ""
              }
            ],
            "src": "1842:658:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2606:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2616:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2628:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2639:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2624:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2624:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2616:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2658:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2673:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2689:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2694:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2685:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2685:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2698:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2681:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2681:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2669:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2669:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2651:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2651:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2651:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2575:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2586:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2597:4:85",
                "type": ""
              }
            ],
            "src": "2505:203:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2878:172:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2888:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2900:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2911:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2896:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2896:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2888:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2930:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2951:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2945:5:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2945:13:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2968:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2973:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2964:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2964:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2977:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2960:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2960:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2941:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2941:39:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2923:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2923:58:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3001:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3012:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2997:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2997:20:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3029:6:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3037:4:85",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3025:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3025:17:85"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3019:5:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3019:24:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2990:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2990:54:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2990:54:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_CurrencyConfig_$7307_memory_ptr__to_t_struct$_CurrencyConfig_$7307_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2847:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2858:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2869:4:85",
                "type": ""
              }
            ],
            "src": "2713:337:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3184:119:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3194:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3206:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3217:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3202:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3194:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3236:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3247:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3229:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3229:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3229:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3274:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3285:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3270:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3270:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3290:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3263:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3263:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3263:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3145:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3156:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3164:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3175:4:85",
                "type": ""
              }
            ],
            "src": "3055:248:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3482:169:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3499:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3510:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3492:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3533:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3544:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3529:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3529:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3549:2:85",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3522:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3522:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3572:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3583:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3568:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3568:18:85"
                      },
                      {
                        "hexValue": "496e646578206f7574206f6620626f756e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3588:21:85",
                        "type": "",
                        "value": "Index out of bounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3561:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3561:49:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3561:49:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3619:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3631:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3642:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3627:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3627:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3619:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3459:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3473:4:85",
                "type": ""
              }
            ],
            "src": "3308:343:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3688:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3705:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3712:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3717:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3708:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3708:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3698:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3745:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3748:4:85",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3738:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3738:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3738:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3769:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3772:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3762:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3762:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3762:15:85"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "3656:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3962:176:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3979:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3972:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3972:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3972:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4013:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4024:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4009:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4009:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4029:2:85",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4002:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4002:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4002:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4052:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4063:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4048:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4048:18:85"
                      },
                      {
                        "hexValue": "496e64657820646f6573206e6f74206d6174636820746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4068:28:85",
                        "type": "",
                        "value": "Index does not match token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4041:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4041:56:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4041:56:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4106:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4118:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4129:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4114:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4114:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4106:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_78fe32b0af4d16ffa3c673114483acb9679d5e3920d7a0e2b2d59c649dc7d19a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3939:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3953:4:85",
                "type": ""
              }
            ],
            "src": "3788:350:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4192:176:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4202:17:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4214:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4217:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4210:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4210:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4202:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4251:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4272:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4279:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4284:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4275:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4275:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4265:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4265:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4265:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4316:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4319:4:85",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4309:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4309:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4309:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4344:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4347:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4337:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4337:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4337:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "4234:4:85"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4240:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4231:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4231:11:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4228:134:85"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4174:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4177:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4183:4:85",
                "type": ""
              }
            ],
            "src": "4143:225:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4405:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4422:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4429:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4434:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4425:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4425:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4415:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4415:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4415:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4462:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4465:4:85",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4455:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4455:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4455:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4486:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4489:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4479:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4479:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4479:15:85"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "4373:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4679:179:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4696:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4707:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4689:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4689:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4689:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4730:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4741:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4726:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4726:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4746:2:85",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4719:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4719:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4719:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4769:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4780:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4765:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4765:18:85"
                      },
                      {
                        "hexValue": "4f7261636c6520616464726573732063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4785:31:85",
                        "type": "",
                        "value": "Oracle address cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4758:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4758:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4758:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4826:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4838:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4849:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4834:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4834:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4826:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a5e69dedfb6cda6b4eea6bc0c134ce03f4385d094739efc7f34a0b56aa3a36ed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4656:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4670:4:85",
                "type": ""
              }
            ],
            "src": "4505:353:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5037:178:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5054:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5065:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5047:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5047:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5047:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5088:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5099:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5084:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5084:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5104:2:85",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5077:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5077:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5077:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5127:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5138:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5123:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5123:18:85"
                      },
                      {
                        "hexValue": "496e7472696e736963206761732063616e6e6f74206265207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5143:30:85",
                        "type": "",
                        "value": "Intrinsic gas cannot be zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5116:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5116:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5116:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5183:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5195:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5206:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5191:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5191:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5183:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e243f108d59b231535fcfea663c6e9d361c83927e97c243e212fe6b860c7f687__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5014:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5028:4:85",
                "type": ""
              }
            ],
            "src": "4863:352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5394:223:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5411:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5422:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5404:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5404:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5404:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5445:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5456:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5441:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5441:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5461:2:85",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5434:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5434:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5434:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5484:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5495:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5480:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5480:18:85"
                      },
                      {
                        "hexValue": "43757272656e637920616c726561647920696e20746865206469726563746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5500:34:85",
                        "type": "",
                        "value": "Currency already in the director"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5473:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5473:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5473:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5555:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5566:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5551:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5551:18:85"
                      },
                      {
                        "hexValue": "79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5571:3:85",
                        "type": "",
                        "value": "y"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5544:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5544:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5544:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5584:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5596:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5607:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5592:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5592:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5584:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_11bcf91cc9388b54ece5b41b89bf7183f3cc218567edda1e8f34bfeece4d26f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5371:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5385:4:85",
                "type": ""
              }
            ],
            "src": "5220:397:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5723:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5733:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5745:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5756:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5741:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5741:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5733:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5775:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5786:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5768:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5768:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5768:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5692:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5703:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5714:4:85",
                "type": ""
              }
            ],
            "src": "5622:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5978:178:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5995:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6006:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5988:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5988:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5988:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6029:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6040:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6025:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6025:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6045:2:85",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6018:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6018:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6018:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6068:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6079:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6064:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6064:18:85"
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6084:30:85",
                        "type": "",
                        "value": "contract already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6057:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6057:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6057:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6124:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6136:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6147:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6132:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6132:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6124:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5955:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5969:4:85",
                "type": ""
              }
            ],
            "src": "5804:352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6335:179:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6352:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6363:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6345:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6345:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6345:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6386:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6397:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6382:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6382:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6402:2:85",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6375:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6375:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6375:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6425:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6436:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6421:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6421:18:85"
                      },
                      {
                        "hexValue": "43757272656e6379206e6f7420696e20746865206469726563746f7279",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6441:31:85",
                        "type": "",
                        "value": "Currency not in the directory"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6414:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6414:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6414:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6482:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6494:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6505:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6490:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6490:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6482:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_071cd46dae9c7c02ae5a0512b29620695835f16d63f4f3ea50ed4bde7de9575b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6312:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6326:4:85",
                "type": ""
              }
            ],
            "src": "6161:353:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6617:147:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6663:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6672:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6675:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6665:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6665:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6665:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6638:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6647:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6634:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6634:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6659:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6630:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "6627:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6704:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6698:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6698:16:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6688:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6723:35:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6743:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6754:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6739:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6739:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6733:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6733:25:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6723:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6575:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6586:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6598:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6606:6:85",
                "type": ""
              }
            ],
            "src": "6519:245:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6943:228:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6960:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6971:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6953:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6953:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6953:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6994:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7005:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6990:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6990:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7010:2:85",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6983:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6983:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6983:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7033:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7044:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7029:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7029:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7049:34:85",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7022:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7022:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7022:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7104:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7115:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7100:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7100:18:85"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7120:8:85",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7093:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7093:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7093:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7138:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7150:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7161:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7146:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7146:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7138:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6920:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6934:4:85",
                "type": ""
              }
            ],
            "src": "6769:402:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7350:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7367:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7378:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7360:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7360:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7360:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7401:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7412:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7397:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7397:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7417:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7390:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7390:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7390:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7440:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7451:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7436:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7436:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7456:34:85",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7429:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7429:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7429:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7500:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7512:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7523:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7508:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7508:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7500:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7327:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7341:4:85",
                "type": ""
              }
            ],
            "src": "7176:356:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_struct$_CurrencyConfig_$7307_memory_ptr__to_t_struct$_CurrencyConfig_$7307_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_78fe32b0af4d16ffa3c673114483acb9679d5e3920d7a0e2b2d59c649dc7d19a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Index does not match token\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_a5e69dedfb6cda6b4eea6bc0c134ce03f4385d094739efc7f34a0b56aa3a36ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Oracle address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e243f108d59b231535fcfea663c6e9d361c83927e97c243e212fe6b860c7f687__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Intrinsic gas cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_11bcf91cc9388b54ece5b41b89bf7183f3cc218567edda1e8f34bfeece4d26f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Currency already in the director\")\n        mstore(add(headStart, 96), \"y\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"contract already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_071cd46dae9c7c02ae5a0512b29620695835f16d63f4f3ea50ed4bde7de9575b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Currency not in the directory\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "307:3780:9:-:0;;;1026:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:4;896:17:59;891:57;;923:11;:18;;-1:-1:-1;;923:18:59;937:4;923:18;;;891:57;-1:-1:-1;936:32:0;719:10:2;936:18:0;:32::i;:::-;1026:45:9;307:3780;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;14:277:85:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:85:o;:::-;307:3780:9;;;;;;",
  "deployedSourceMap": "307:3780:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:23:59;;;;;;;;;;;;179:14:85;;172:22;154:41;;142:2;127:18;319:23:59;;;;;;;;2291:371:9;;;;;;:::i;:::-;;:::i;:::-;;1530:517;;;;;;:::i;:::-;;:::i;2939:117::-;3040:1;;2990:7;;2939:117;;;1207:25:85;;;1263:2;1248:18;;1241:34;;;;1291:18;;;1284:34;1349:2;1334:18;;1327:34;1194:3;1179:19;2939:117:9;976:391:85;432:52:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;432:52:9;;;;;;;;;;-1:-1:-1;;;;;1755:32:85;;;1737:51;;1819:2;1804:18;;1797:34;;;;1710:18;432:52:9;1563:274:85;3165:94:9;;;:::i;:::-;;;;;;;:::i;1824:101:0:-;;;:::i;1145:82:9:-;;;:::i;1201:85:0:-;1247:7;1273:6;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;2669:32:85;;;2651:51;;2639:2;2624:18;1201:85:0;2505:203:85;3424:121:9;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3523:17:9;;;;;:10;:17;;;;;;;3516:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;3424:121;;;;;2945:13:85;;-1:-1:-1;;;;;2941:39:85;2923:58;;3037:4;3025:17;;;3019:24;2997:20;;;2990:54;;;;2896:18;3424:121:9;2713:337:85;3796:289:9;;;;;;:::i;:::-;;:::i;:::-;;;;3229:25:85;;;3285:2;3270:18;;3263:34;;;;3202:18;3796:289:9;3055:248:85;2074:198:0;;;;;;:::i;:::-;;:::i;2291:371:9:-;1094:13:0;:11;:13::i;:::-;2388:12:9::1;:19:::0;2380:27;::::1;2372:59;;;::::0;-1:-1:-1;;;2372:59:9;;3510:2:85;2372:59:9::1;::::0;::::1;3492:21:85::0;3549:2;3529:18;;;3522:30;-1:-1:-1;;;3568:18:85;;;3561:49;3627:18;;2372:59:9::1;;;;;;;;;2468:5;-1:-1:-1::0;;;;;2445:28:9::1;:12;2458:5;2445:19;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2445:19:9::1;:28;2437:67;;;::::0;-1:-1:-1;;;2437:67:9;;3990:2:85;2437:67:9::1;::::0;::::1;3972:21:85::0;4029:2;4009:18;;;4002:30;4068:28;4048:18;;;4041:56;4114:18;;2437:67:9::1;3788:350:85::0;2437:67:9::1;-1:-1:-1::0;;;;;2518:17:9;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;2511:24;;-1:-1:-1;;;;;;2511:24:9::1;::::0;;;::::1;::::0;;;;2563:12:::1;2576:19:::0;;2563:12;;2576:23:::1;::::0;::::1;:::i;:::-;2563:37;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;2541:12:::1;:19:::0;;-1:-1:-1;;;;;2563:37:9;;::::1;::::0;2554:5;;2541:19;::::1;;;;;:::i;:::-;;;;;;;;;:59;;;;;-1:-1:-1::0;;;;;2541:59:9::1;;;;;-1:-1:-1::0;;;;;2541:59:9::1;;;;;;2606:12;:18;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;2606:18:9;;;;;-1:-1:-1;;;;;;2606:18:9::1;::::0;;;;;;;;2635:22:::1;::::0;-1:-1:-1;;;;;2635:22:9;::::1;::::0;::::1;::::0;::::1;2291:371:::0;;:::o;1530:517::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1659:20:9;::::1;1651:62;;;::::0;-1:-1:-1;;;1651:62:9;;4707:2:85;1651:62:9::1;::::0;::::1;4689:21:85::0;4746:2;4726:18;;;4719:30;4785:31;4765:18;;;4758:59;4834:18;;1651:62:9::1;4505:353:85::0;1651:62:9::1;1742:1;1727:12;:16;1719:57;;;::::0;-1:-1:-1;;;1719:57:9;;5065:2:85;1719:57:9::1;::::0;::::1;5047:21:85::0;5104:2;5084:18;;;5077:30;5143;5123:18;;;5116:58;5191:18;;1719:57:9::1;4863:352:85::0;1719:57:9::1;-1:-1:-1::0;;;;;1790:17:9;;::::1;1826:1;1790:17:::0;;;:10:::1;:17;::::0;;;;:24;::::1;:38:::0;1782:84:::1;;;::::0;-1:-1:-1;;;1782:84:9;;5422:2:85;1782:84:9::1;::::0;::::1;5404:21:85::0;5461:2;5441:18;;;5434:30;5500:34;5480:18;;;5473:62;-1:-1:-1;;;5551:18:85;;;5544:31;5592:19;;1782:84:9::1;5220:397:85::0;1782:84:9::1;1893:62;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;1893:62:9;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;1873:17;;::::1;-1:-1:-1::0;1873:17:9;;;:10:::1;:17:::0;;;;;;:82;;;;;::::1;-1:-1:-1::0;;;;;;1873:82:9;;::::1;;::::0;;;;;;::::1;::::0;;;;1961:12:::1;:24:::0;;;;::::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;1996:46;;5768:25:85;;;1996:46:9::1;::::0;5741:18:85;1996:46:9::1;;;;;;;1530:517:::0;;;:::o;3165:94::-;3211:16;3242:12;3235:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3235:19:9;;;;;;;;;;;;;;;;;;;;;;;3165:94;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1145:82:9:-;476:11:59;;;;475:12;467:53;;;;-1:-1:-1;;;467:53:59;;6006:2:85;467:53:59;;;5988:21:85;6045:2;6025:18;;;6018:30;6084;6064:18;;;6057:58;6132:18;;467:53:59;5804:352:85;467:53:59;526:11;:18;;-1:-1:-1;;526:18:59;540:4;526:18;;;1192:30:9::1;1211:10;1192:18;:30::i;3796:289::-:0;-1:-1:-1;;;;;3919:17:9;;;3865;3919;;;:10;:17;;;;;:24;3865:17;;;;3919:24;3911:80;;;;-1:-1:-1;;;3911:80:9;;6363:2:85;3911:80:9;;;6345:21:85;6402:2;6382:18;;;6375:30;6441:31;6421:18;;;6414:59;6490:18;;3911:80:9;6161:353:85;3911:80:9;-1:-1:-1;;;;;4032:17:9;;;;;;;:10;:17;;;;;;;:24;4024:56;;-1:-1:-1;;;4024:56:9;;;;;2651:51:85;;;;4032:24:9;;;;4024:49;;2624:18:85;;4024:56:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3997:83;;;;-1:-1:-1;3796:289:9;-1:-1:-1;;3796:289:9:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;6971:2:85;2154:73:0::1;::::0;::::1;6953:21:85::0;7010:2;6990:18;;;6983:30;7049:34;7029:18;;;7022:62;-1:-1:-1;;;7100:18:85;;;7093:36;7146:19;;2154:73:0::1;6769:402:85::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;;;;;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;7378:2:85;1414:68:0;;;7360:21:85;;;7397:18;;;7390:30;7456:34;7436:18;;;7429:62;7508:18;;1414:68:0;7176:356:85;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;206:173:85:-;274:20;;-1:-1:-1;;;;;323:31:85;;313:42;;303:70;;369:1;366;359:12;303:70;206:173;;;:::o;384:254::-;452:6;460;513:2;501:9;492:7;488:23;484:32;481:52;;;529:1;526;519:12;481:52;552:29;571:9;552:29;:::i;:::-;542:39;628:2;613:18;;;;600:32;;-1:-1:-1;;;384:254:85:o;643:328::-;720:6;728;736;789:2;777:9;768:7;764:23;760:32;757:52;;;805:1;802;795:12;757:52;828:29;847:9;828:29;:::i;:::-;818:39;;876:38;910:2;899:9;895:18;876:38;:::i;:::-;866:48;;961:2;950:9;946:18;933:32;923:42;;643:328;;;;;:::o;1372:186::-;1431:6;1484:2;1472:9;1463:7;1459:23;1455:32;1452:52;;;1500:1;1497;1490:12;1452:52;1523:29;1542:9;1523:29;:::i;:::-;1513:39;1372:186;-1:-1:-1;;;1372:186:85:o;1842:658::-;2013:2;2065:21;;;2135:13;;2038:18;;;2157:22;;;1984:4;;2013:2;2236:15;;;;2210:2;2195:18;;;1984:4;2279:195;2293:6;2290:1;2287:13;2279:195;;;2358:13;;-1:-1:-1;;;;;2354:39:85;2342:52;;2449:15;;;;2414:12;;;;2390:1;2308:9;2279:195;;;-1:-1:-1;2491:3:85;;1842:658;-1:-1:-1;;;;;;1842:658:85:o;3656:127::-;3717:10;3712:3;3708:20;3705:1;3698:31;3748:4;3745:1;3738:15;3772:4;3769:1;3762:15;4143:225;4210:9;;;4231:11;;;4228:134;;;4284:10;4279:3;4275:20;4272:1;4265:31;4319:4;4316:1;4309:15;4347:4;4344:1;4337:15;4228:134;4143:225;;;;:::o;4373:127::-;4434:10;4429:3;4425:20;4422:1;4415:31;4465:4;4462:1;4455:15;4489:4;4486:1;4479:15;6519:245;6598:6;6606;6659:2;6647:9;6638:7;6634:23;6630:32;6627:52;;;6675:1;6672;6665:12;6627:52;-1:-1:-1;;6698:16:85;;6754:2;6739:18;;;6733:25;6698:16;;6733:25;;-1:-1:-1;6519:245:85:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../../contracts/common/Initializable.sol\";\nimport \"./interfaces/IOracle.sol\";\nimport \"./interfaces/IFeeCurrencyDirectory.sol\";\nimport \"./interfaces/IFeeCurrencyDirectoryInitializer.sol\";\nimport \"@openzeppelin/contracts8/access/Ownable.sol\";\n\ncontract FeeCurrencyDirectory is\n  IFeeCurrencyDirectory,\n  IFeeCurrencyDirectoryInitializer,\n  Initializable,\n  Ownable\n{\n  mapping(address => CurrencyConfig) public currencies;\n  address[] private currencyList;\n\n  /**\n   * @notice Emitted when currency config is set.\n   * @param token Address of the added currency token.\n   * @param oracle Address of the currency token oracle.\n   * @param intrinsicGas The intrinsic gas value for transactions.\n   */\n  event CurrencyConfigSet(address indexed token, address indexed oracle, uint256 intrinsicGas);\n\n  /**\n   * @notice Emitted when currency is removed.\n   * @param token Address of the removed currency token.\n   */\n  event CurrencyRemoved(address indexed token);\n\n  constructor(bool test) Initializable(test) {}\n\n  /**\n   * @notice Initializes the contract with the owner set.\n   */\n  function initialize() public initializer {\n    _transferOwnership(msg.sender);\n  }\n\n  /**\n   * @notice Sets the currency configuration for a token.\n   * @dev This action can only be performed by the contract owner.\n   * @param token The token address.\n   * @param oracle The oracle address for price fetching.\n   * @param intrinsicGas The intrinsic gas value for transactions.\n   */\n  function setCurrencyConfig(\n    address token,\n    address oracle,\n    uint256 intrinsicGas\n  ) external onlyOwner {\n    require(oracle != address(0), \"Oracle address cannot be zero\");\n    require(intrinsicGas > 0, \"Intrinsic gas cannot be zero\");\n    require(currencies[token].oracle == address(0), \"Currency already in the directory\");\n\n    currencies[token] = CurrencyConfig({ oracle: oracle, intrinsicGas: intrinsicGas });\n    currencyList.push(token);\n    emit CurrencyConfigSet(token, oracle, intrinsicGas);\n  }\n\n  /**\n   * @notice Removes a token from the directory.\n   * @dev This action can only be performed by the contract owner.\n   * @param token The token address to remove.\n   * @param index The index in the list of directory currencies.\n   */\n  function removeCurrencies(address token, uint256 index) external onlyOwner {\n    require(index < currencyList.length, \"Index out of bounds\");\n    require(currencyList[index] == token, \"Index does not match token\");\n\n    delete currencies[token];\n    currencyList[index] = currencyList[currencyList.length - 1];\n    currencyList.pop();\n    emit CurrencyRemoved(token);\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 1, 0, 0);\n  }\n\n  /**\n   * @notice Returns the list of all currency addresses.\n   * @return An array of addresses.\n   */\n  function getCurrencies() public view returns (address[] memory) {\n    return currencyList;\n  }\n\n  /**\n   * @notice Returns the configuration for a currency.\n   * @param token The address of the token.\n   * @return Currency configuration of the token.\n   */\n  function getCurrencyConfig(address token) public view returns (CurrencyConfig memory) {\n    return currencies[token];\n  }\n\n  /**\n   * @notice Retrieves exchange rate between token and CELO.\n   * @param token The token address whose price is to be fetched.\n   * @return numerator The exchange rate numerator.\n   * @return denominator The exchange rate denominator.\n   */\n  function getExchangeRate(\n    address token\n  ) public view returns (uint256 numerator, uint256 denominator) {\n    require(currencies[token].oracle != address(0), \"Currency not in the directory\");\n    (numerator, denominator) = IOracle(currencies[token].oracle).getExchangeRate(token);\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/common/FeeCurrencyDirectory.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/common/FeeCurrencyDirectory.sol",
    "exportedSymbols": {
      "Context": [
        212
      ],
      "FeeCurrencyDirectory": [
        4046
      ],
      "IFeeCurrencyDirectory": [
        7344
      ],
      "IFeeCurrencyDirectoryInitializer": [
        7350
      ],
      "IOracle": [
        7398
      ],
      "Initializable": [
        16991
      ],
      "Ownable": [
        112
      ]
    },
    "id": 4047,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3791,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../../contracts/common/Initializable.sol",
        "id": 3792,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4047,
        "sourceUnit": 16992,
        "src": "57:50:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/interfaces/IOracle.sol",
        "file": "./interfaces/IOracle.sol",
        "id": 3793,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4047,
        "sourceUnit": 7399,
        "src": "108:34:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/interfaces/IFeeCurrencyDirectory.sol",
        "file": "./interfaces/IFeeCurrencyDirectory.sol",
        "id": 3794,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4047,
        "sourceUnit": 7345,
        "src": "143:48:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/interfaces/IFeeCurrencyDirectoryInitializer.sol",
        "file": "./interfaces/IFeeCurrencyDirectoryInitializer.sol",
        "id": 3795,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4047,
        "sourceUnit": 7351,
        "src": "192:59:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts8/access/Ownable.sol",
        "file": "@openzeppelin/contracts8/access/Ownable.sol",
        "id": 3796,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4047,
        "sourceUnit": 113,
        "src": "252:53:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3797,
              "name": "IFeeCurrencyDirectory",
              "nameLocations": [
                "342:21:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7344,
              "src": "342:21:9"
            },
            "id": 3798,
            "nodeType": "InheritanceSpecifier",
            "src": "342:21:9"
          },
          {
            "baseName": {
              "id": 3799,
              "name": "IFeeCurrencyDirectoryInitializer",
              "nameLocations": [
                "367:32:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7350,
              "src": "367:32:9"
            },
            "id": 3800,
            "nodeType": "InheritanceSpecifier",
            "src": "367:32:9"
          },
          {
            "baseName": {
              "id": 3801,
              "name": "Initializable",
              "nameLocations": [
                "403:13:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16991,
              "src": "403:13:9"
            },
            "id": 3802,
            "nodeType": "InheritanceSpecifier",
            "src": "403:13:9"
          },
          {
            "baseName": {
              "id": 3803,
              "name": "Ownable",
              "nameLocations": [
                "420:7:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "420:7:9"
            },
            "id": 3804,
            "nodeType": "InheritanceSpecifier",
            "src": "420:7:9"
          }
        ],
        "canonicalName": "FeeCurrencyDirectory",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4046,
        "linearizedBaseContracts": [
          4046,
          112,
          212,
          16991,
          7350,
          7344
        ],
        "name": "FeeCurrencyDirectory",
        "nameLocation": "316:20:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6036cba3",
            "id": 3809,
            "mutability": "mutable",
            "name": "currencies",
            "nameLocation": "474:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 4046,
            "src": "432:52:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
              "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig)"
            },
            "typeName": {
              "id": 3808,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3805,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "440:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "432:34:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
                "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3807,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3806,
                  "name": "CurrencyConfig",
                  "nameLocations": [
                    "451:14:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7307,
                  "src": "451:14:9"
                },
                "referencedDeclaration": 7307,
                "src": "451:14:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage_ptr",
                  "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3812,
            "mutability": "mutable",
            "name": "currencyList",
            "nameLocation": "506:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 4046,
            "src": "488:30:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3810,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "488:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3811,
              "nodeType": "ArrayTypeName",
              "src": "488:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3813,
              "nodeType": "StructuredDocumentation",
              "src": "523:238:9",
              "text": " @notice Emitted when currency config is set.\n @param token Address of the added currency token.\n @param oracle Address of the currency token oracle.\n @param intrinsicGas The intrinsic gas value for transactions."
            },
            "eventSelector": "1bfad71c54fe241478cb00c00067b069d43cf48531041328242990dbb9cdba51",
            "id": 3821,
            "name": "CurrencyConfigSet",
            "nameLocation": "770:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3815,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "804:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3821,
                  "src": "788:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3817,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nameLocation": "827:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3821,
                  "src": "811:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "intrinsicGas",
                  "nameLocation": "843:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3821,
                  "src": "835:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:69:9"
            },
            "src": "764:93:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3822,
              "nodeType": "StructuredDocumentation",
              "src": "861:113:9",
              "text": " @notice Emitted when currency is removed.\n @param token Address of the removed currency token."
            },
            "eventSelector": "a40d69111be14f29022626d38310e47cc2d7f4cb728961509c2f65a4bee08c5b",
            "id": 3826,
            "name": "CurrencyRemoved",
            "nameLocation": "983:15:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3824,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1015:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3826,
                  "src": "999:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:23:9"
            },
            "src": "977:45:9"
          },
          {
            "body": {
              "id": 3834,
              "nodeType": "Block",
              "src": "1069:2:9",
              "statements": []
            },
            "id": 3835,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3831,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3828,
                    "src": "1063:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 3832,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3830,
                  "name": "Initializable",
                  "nameLocations": [
                    "1049:13:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16991,
                  "src": "1049:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:19:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3828,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "1043:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3835,
                  "src": "1038:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3827,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:11:9"
            },
            "returnParameters": {
              "id": 3833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:9"
            },
            "scope": 4046,
            "src": "1026:45:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7349
            ],
            "body": {
              "id": 3846,
              "nodeType": "Block",
              "src": "1186:41:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1211:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1215:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1211:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3841,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1192:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1192:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3845,
                  "nodeType": "ExpressionStatement",
                  "src": "1192:30:9"
                }
              ]
            },
            "documentation": {
              "id": 3836,
              "nodeType": "StructuredDocumentation",
              "src": "1075:67:9",
              "text": " @notice Initializes the contract with the owner set."
            },
            "functionSelector": "8129fc1c",
            "id": 3847,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3839,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3838,
                  "name": "initializer",
                  "nameLocations": [
                    "1174:11:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16975,
                  "src": "1174:11:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1174:11:9"
              }
            ],
            "name": "initialize",
            "nameLocation": "1154:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:9"
            },
            "returnParameters": {
              "id": 3840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:9"
            },
            "scope": 4046,
            "src": "1145:82:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7317
            ],
            "body": {
              "id": 3910,
              "nodeType": "Block",
              "src": "1645:402:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3860,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3852,
                          "src": "1659:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1677:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1669:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3861,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1669:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1659:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7261636c6520616464726573732063616e6e6f74206265207a65726f",
                        "id": 3866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1681:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5e69dedfb6cda6b4eea6bc0c134ce03f4385d094739efc7f34a0b56aa3a36ed",
                          "typeString": "literal_string \"Oracle address cannot be zero\""
                        },
                        "value": "Oracle address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5e69dedfb6cda6b4eea6bc0c134ce03f4385d094739efc7f34a0b56aa3a36ed",
                          "typeString": "literal_string \"Oracle address cannot be zero\""
                        }
                      ],
                      "id": 3859,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1651:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3868,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3870,
                          "name": "intrinsicGas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3854,
                          "src": "1727:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1742:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1727:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e7472696e736963206761732063616e6e6f74206265207a65726f",
                        "id": 3873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1745:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e243f108d59b231535fcfea663c6e9d361c83927e97c243e212fe6b860c7f687",
                          "typeString": "literal_string \"Intrinsic gas cannot be zero\""
                        },
                        "value": "Intrinsic gas cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e243f108d59b231535fcfea663c6e9d361c83927e97c243e212fe6b860c7f687",
                          "typeString": "literal_string \"Intrinsic gas cannot be zero\""
                        }
                      ],
                      "id": 3869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1719:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1719:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:57:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3877,
                              "name": "currencies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3809,
                              "src": "1790:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
                                "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig storage ref)"
                              }
                            },
                            "id": 3879,
                            "indexExpression": {
                              "id": 3878,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3850,
                              "src": "1801:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1790:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage",
                              "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig storage ref"
                            }
                          },
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1808:6:9",
                          "memberName": "oracle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7304,
                          "src": "1790:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1826:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1818:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3881,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1818:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1818:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1790:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e637920616c726561647920696e20746865206469726563746f7279",
                        "id": 3886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1830:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11bcf91cc9388b54ece5b41b89bf7183f3cc218567edda1e8f34bfeece4d26f7",
                          "typeString": "literal_string \"Currency already in the directory\""
                        },
                        "value": "Currency already in the directory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11bcf91cc9388b54ece5b41b89bf7183f3cc218567edda1e8f34bfeece4d26f7",
                          "typeString": "literal_string \"Currency already in the directory\""
                        }
                      ],
                      "id": 3876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1782:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:84:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3888,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:84:9"
                },
                {
                  "expression": {
                    "id": 3896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3889,
                        "name": "currencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3809,
                        "src": "1873:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
                          "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig storage ref)"
                        }
                      },
                      "id": 3891,
                      "indexExpression": {
                        "id": 3890,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3850,
                        "src": "1884:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1873:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage",
                        "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3893,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3852,
                          "src": "1918:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3894,
                          "name": "intrinsicGas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3854,
                          "src": "1940:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3892,
                        "name": "CurrencyConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7307,
                        "src": "1893:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CurrencyConfig_$7307_storage_ptr_$",
                          "typeString": "type(struct IFeeCurrencyDirectory.CurrencyConfig storage pointer)"
                        }
                      },
                      "id": 3895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1910:6:9",
                        "1926:12:9"
                      ],
                      "names": [
                        "oracle",
                        "intrinsicGas"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1893:62:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyConfig_$7307_memory_ptr",
                        "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig memory"
                      }
                    },
                    "src": "1873:82:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage",
                      "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig storage ref"
                    }
                  },
                  "id": 3897,
                  "nodeType": "ExpressionStatement",
                  "src": "1873:82:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3901,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3850,
                        "src": "1979:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3898,
                        "name": "currencyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "1961:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1974:4:9",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1961:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3903,
                  "nodeType": "ExpressionStatement",
                  "src": "1961:24:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3905,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3850,
                        "src": "2014:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3906,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3852,
                        "src": "2021:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3907,
                        "name": "intrinsicGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3854,
                        "src": "2029:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3904,
                      "name": "CurrencyConfigSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3821,
                      "src": "1996:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3909,
                  "nodeType": "EmitStatement",
                  "src": "1991:51:9"
                }
              ]
            },
            "documentation": {
              "id": 3848,
              "nodeType": "StructuredDocumentation",
              "src": "1231:296:9",
              "text": " @notice Sets the currency configuration for a token.\n @dev This action can only be performed by the contract owner.\n @param token The token address.\n @param oracle The oracle address for price fetching.\n @param intrinsicGas The intrinsic gas value for transactions."
            },
            "functionSelector": "216ab7df",
            "id": 3911,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3857,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3856,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1635:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1635:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1635:9:9"
              }
            ],
            "name": "setCurrencyConfig",
            "nameLocation": "1539:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3850,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1570:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "1562:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1562:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3852,
                  "mutability": "mutable",
                  "name": "oracle",
                  "nameLocation": "1589:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "1581:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3854,
                  "mutability": "mutable",
                  "name": "intrinsicGas",
                  "nameLocation": "1609:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "1601:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1556:69:9"
            },
            "returnParameters": {
              "id": 3858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1645:0:9"
            },
            "scope": 4046,
            "src": "1530:517:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3963,
              "nodeType": "Block",
              "src": "2366:296:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3922,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3916,
                          "src": "2380:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 3923,
                            "name": "currencyList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3812,
                            "src": "2388:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2401:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2388:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2380:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578206f7574206f6620626f756e6473",
                        "id": 3926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2409:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        },
                        "value": "Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        }
                      ],
                      "id": 3921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2372:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2372:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3928,
                  "nodeType": "ExpressionStatement",
                  "src": "2372:59:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3930,
                            "name": "currencyList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3812,
                            "src": "2445:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3932,
                          "indexExpression": {
                            "id": 3931,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3916,
                            "src": "2458:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2445:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3933,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3914,
                          "src": "2468:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2445:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e64657820646f6573206e6f74206d6174636820746f6b656e",
                        "id": 3935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2475:28:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78fe32b0af4d16ffa3c673114483acb9679d5e3920d7a0e2b2d59c649dc7d19a",
                          "typeString": "literal_string \"Index does not match token\""
                        },
                        "value": "Index does not match token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78fe32b0af4d16ffa3c673114483acb9679d5e3920d7a0e2b2d59c649dc7d19a",
                          "typeString": "literal_string \"Index does not match token\""
                        }
                      ],
                      "id": 3929,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2437:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2437:67:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3937,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:67:9"
                },
                {
                  "expression": {
                    "id": 3941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2511:24:9",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3938,
                        "name": "currencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3809,
                        "src": "2518:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
                          "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig storage ref)"
                        }
                      },
                      "id": 3940,
                      "indexExpression": {
                        "id": 3939,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3914,
                        "src": "2529:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2518:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage",
                        "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3942,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:24:9"
                },
                {
                  "expression": {
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3943,
                        "name": "currencyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "2541:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3945,
                      "indexExpression": {
                        "id": 3944,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3916,
                        "src": "2554:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2541:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 3946,
                        "name": "currencyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "2563:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3951,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3947,
                            "name": "currencyList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3812,
                            "src": "2576:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2589:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2576:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2598:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2576:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2563:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2541:59:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3953,
                  "nodeType": "ExpressionStatement",
                  "src": "2541:59:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3954,
                        "name": "currencyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "2606:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2619:3:9",
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "2606:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer)"
                      }
                    },
                    "id": 3957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3958,
                  "nodeType": "ExpressionStatement",
                  "src": "2606:18:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3960,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3914,
                        "src": "2651:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3959,
                      "name": "CurrencyRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3826,
                      "src": "2635:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2635:22:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3962,
                  "nodeType": "EmitStatement",
                  "src": "2630:27:9"
                }
              ]
            },
            "documentation": {
              "id": 3912,
              "nodeType": "StructuredDocumentation",
              "src": "2051:237:9",
              "text": " @notice Removes a token from the directory.\n @dev This action can only be performed by the contract owner.\n @param token The token address to remove.\n @param index The index in the list of directory currencies."
            },
            "functionSelector": "16be73a8",
            "id": 3964,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3919,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3918,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2356:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "2356:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2356:9:9"
              }
            ],
            "name": "removeCurrencies",
            "nameLocation": "2300:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3914,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2325:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3964,
                  "src": "2317:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3916,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2340:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3964,
                  "src": "2332:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:30:9"
            },
            "returnParameters": {
              "id": 3920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:0:9"
            },
            "scope": 4046,
            "src": "2291:371:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3982,
              "nodeType": "Block",
              "src": "3026:30:9",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 3976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3040:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 3977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3043:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 3978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3046:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3049:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 3980,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3039:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 3975,
                  "id": 3981,
                  "nodeType": "Return",
                  "src": "3032:19:9"
                }
              ]
            },
            "documentation": {
              "id": 3965,
              "nodeType": "StructuredDocumentation",
              "src": "2666:270:9",
              "text": " @notice Returns the storage, major, minor, and patch version of the contract.\n @return Storage version of the contract.\n @return Major version of the contract.\n @return Minor version of the contract.\n @return Patch version of the contract."
            },
            "functionSelector": "54255be0",
            "id": 3983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nameLocation": "2948:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2964:2:9"
            },
            "returnParameters": {
              "id": 3975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3983,
                  "src": "2990:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3967,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2990:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3983,
                  "src": "2999:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2999:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3983,
                  "src": "3008:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3974,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3983,
                  "src": "3017:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2989:36:9"
            },
            "scope": 4046,
            "src": "2939:117:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              7324
            ],
            "body": {
              "id": 3992,
              "nodeType": "Block",
              "src": "3229:30:9",
              "statements": [
                {
                  "expression": {
                    "id": 3990,
                    "name": "currencyList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3812,
                    "src": "3242:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3989,
                  "id": 3991,
                  "nodeType": "Return",
                  "src": "3235:19:9"
                }
              ]
            },
            "documentation": {
              "id": 3984,
              "nodeType": "StructuredDocumentation",
              "src": "3060:102:9",
              "text": " @notice Returns the list of all currency addresses.\n @return An array of addresses."
            },
            "functionSelector": "61c661de",
            "id": 3993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrencies",
            "nameLocation": "3174:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3187:2:9"
            },
            "returnParameters": {
              "id": 3989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3993,
                  "src": "3211:16:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3986,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3211:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3987,
                    "nodeType": "ArrayTypeName",
                    "src": "3211:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3210:18:9"
            },
            "scope": 4046,
            "src": "3165:94:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7333
            ],
            "body": {
              "id": 4006,
              "nodeType": "Block",
              "src": "3510:35:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4002,
                      "name": "currencies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3809,
                      "src": "3523:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
                        "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig storage ref)"
                      }
                    },
                    "id": 4004,
                    "indexExpression": {
                      "id": 4003,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3996,
                      "src": "3534:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3523:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage",
                      "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 4001,
                  "id": 4005,
                  "nodeType": "Return",
                  "src": "3516:24:9"
                }
              ]
            },
            "documentation": {
              "id": 3994,
              "nodeType": "StructuredDocumentation",
              "src": "3263:158:9",
              "text": " @notice Returns the configuration for a currency.\n @param token The address of the token.\n @return Currency configuration of the token."
            },
            "functionSelector": "eab43d97",
            "id": 4007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrencyConfig",
            "nameLocation": "3433:17:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3996,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3459:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "3451:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3451:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3450:15:9"
            },
            "returnParameters": {
              "id": 4001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "3487:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CurrencyConfig_$7307_memory_ptr",
                    "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig"
                  },
                  "typeName": {
                    "id": 3999,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3998,
                      "name": "CurrencyConfig",
                      "nameLocations": [
                        "3487:14:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7307,
                      "src": "3487:14:9"
                    },
                    "referencedDeclaration": 7307,
                    "src": "3487:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage_ptr",
                      "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3486:23:9"
            },
            "scope": 4046,
            "src": "3424:121:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7343
            ],
            "body": {
              "id": 4044,
              "nodeType": "Block",
              "src": "3905:180:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4018,
                              "name": "currencies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3809,
                              "src": "3919:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
                                "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig storage ref)"
                              }
                            },
                            "id": 4020,
                            "indexExpression": {
                              "id": 4019,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4010,
                              "src": "3930:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3919:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage",
                              "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig storage ref"
                            }
                          },
                          "id": 4021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3937:6:9",
                          "memberName": "oracle",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7304,
                          "src": "3919:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3955:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3947:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4022,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3947:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3947:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3919:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43757272656e6379206e6f7420696e20746865206469726563746f7279",
                        "id": 4027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3959:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_071cd46dae9c7c02ae5a0512b29620695835f16d63f4f3ea50ed4bde7de9575b",
                          "typeString": "literal_string \"Currency not in the directory\""
                        },
                        "value": "Currency not in the directory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_071cd46dae9c7c02ae5a0512b29620695835f16d63f4f3ea50ed4bde7de9575b",
                          "typeString": "literal_string \"Currency not in the directory\""
                        }
                      ],
                      "id": 4017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3911:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:80:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4029,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:80:9"
                },
                {
                  "expression": {
                    "id": 4042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 4030,
                          "name": "numerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4013,
                          "src": "3998:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 4031,
                          "name": "denominator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4015,
                          "src": "4009:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4032,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3997:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4040,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4010,
                          "src": "4074:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 4034,
                                  "name": "currencies",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3809,
                                  "src": "4032:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CurrencyConfig_$7307_storage_$",
                                    "typeString": "mapping(address => struct IFeeCurrencyDirectory.CurrencyConfig storage ref)"
                                  }
                                },
                                "id": 4036,
                                "indexExpression": {
                                  "id": 4035,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4010,
                                  "src": "4043:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4032:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CurrencyConfig_$7307_storage",
                                  "typeString": "struct IFeeCurrencyDirectory.CurrencyConfig storage ref"
                                }
                              },
                              "id": 4037,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4050:6:9",
                              "memberName": "oracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7304,
                              "src": "4032:24:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4033,
                            "name": "IOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7398,
                            "src": "4024:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IOracle_$7398_$",
                              "typeString": "type(contract IOracle)"
                            }
                          },
                          "id": 4038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4024:33:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IOracle_$7398",
                            "typeString": "contract IOracle"
                          }
                        },
                        "id": 4039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4058:15:9",
                        "memberName": "getExchangeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7397,
                        "src": "4024:49:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 4041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4024:56:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "3997:83:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4043,
                  "nodeType": "ExpressionStatement",
                  "src": "3997:83:9"
                }
              ]
            },
            "documentation": {
              "id": 4008,
              "nodeType": "StructuredDocumentation",
              "src": "3549:244:9",
              "text": " @notice Retrieves exchange rate between token and CELO.\n @param token The token address whose price is to be fetched.\n @return numerator The exchange rate numerator.\n @return denominator The exchange rate denominator."
            },
            "functionSelector": "efb7601d",
            "id": 4045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchangeRate",
            "nameLocation": "3805:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4010,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3834:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4045,
                  "src": "3826:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3826:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3820:23:9"
            },
            "returnParameters": {
              "id": 4016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4013,
                  "mutability": "mutable",
                  "name": "numerator",
                  "nameLocation": "3873:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4045,
                  "src": "3865:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3865:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4015,
                  "mutability": "mutable",
                  "name": "denominator",
                  "nameLocation": "3892:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4045,
                  "src": "3884:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3884:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3864:40:9"
            },
            "scope": 4046,
            "src": "3796:289:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4047,
        "src": "307:3780:9",
        "usedErrors": []
      }
    ],
    "src": "32:4056:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.137Z",
  "devdoc": {
    "events": {
      "CurrencyConfigSet(address,address,uint256)": {
        "params": {
          "intrinsicGas": "The intrinsic gas value for transactions.",
          "oracle": "Address of the currency token oracle.",
          "token": "Address of the added currency token."
        }
      },
      "CurrencyRemoved(address)": {
        "params": {
          "token": "Address of the removed currency token."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "getCurrencies()": {
        "returns": {
          "_0": "An array of addresses."
        }
      },
      "getCurrencyConfig(address)": {
        "params": {
          "token": "The address of the token."
        },
        "returns": {
          "_0": "Currency configuration of the token."
        }
      },
      "getExchangeRate(address)": {
        "params": {
          "token": "The token address whose price is to be fetched."
        },
        "returns": {
          "denominator": "The exchange rate denominator.",
          "numerator": "The exchange rate numerator."
        }
      },
      "getVersionNumber()": {
        "returns": {
          "_0": "Storage version of the contract.",
          "_1": "Major version of the contract.",
          "_2": "Minor version of the contract.",
          "_3": "Patch version of the contract."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeCurrencies(address,uint256)": {
        "details": "This action can only be performed by the contract owner.",
        "params": {
          "index": "The index in the list of directory currencies.",
          "token": "The token address to remove."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setCurrencyConfig(address,address,uint256)": {
        "details": "This action can only be performed by the contract owner.",
        "params": {
          "intrinsicGas": "The intrinsic gas value for transactions.",
          "oracle": "The oracle address for price fetching.",
          "token": "The token address."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "CurrencyConfigSet(address,address,uint256)": {
        "notice": "Emitted when currency config is set."
      },
      "CurrencyRemoved(address)": {
        "notice": "Emitted when currency is removed."
      }
    },
    "kind": "user",
    "methods": {
      "getCurrencies()": {
        "notice": "Returns the list of all currency addresses."
      },
      "getCurrencyConfig(address)": {
        "notice": "Returns the configuration for a currency."
      },
      "getExchangeRate(address)": {
        "notice": "Retrieves exchange rate between token and CELO."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize()": {
        "notice": "Initializes the contract with the owner set."
      },
      "removeCurrencies(address,uint256)": {
        "notice": "Removes a token from the directory."
      },
      "setCurrencyConfig(address,address,uint256)": {
        "notice": "Sets the currency configuration for a token."
      }
    },
    "version": 1
  }
}