{
  "contractName": "FeeCurrencyAdapterOwnable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "adaptedToken",
      "outputs": [
        {
          "internalType": "contract IFeeCurrency",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "refundRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tipRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gatewayFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "refundAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tipAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gatewayFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "creditGasFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "debitGasFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "digitDifference",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectedDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdaptedToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adaptedToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_expectedDecimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adaptedToken",
          "type": "address"
        }
      ],
      "name": "setAdaptedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adaptedToken\",\"outputs\":[{\"internalType\":\"contract IFeeCurrency\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"refundRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tipRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gatewayFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tipAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gatewayFeeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseFeeAmount\",\"type\":\"uint256\"}],\"name\":\"creditGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"debitGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"digitDifference\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectedDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdaptedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adaptedToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_expectedDecimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adaptedToken\",\"type\":\"address\"}],\"name\":\"setAdaptedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"params\":{\"account\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"The balance of the specified address.\"}},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"_gatewayFeeAmount\":\"The amount of the gateway fee (in adapted token digits). Unused.\",\"_gatewayFeeRecipient\":\"The recipient of the gateway fee. Unused.\",\"baseFeeAmount\":\"The amount of the base fee (in adapted token digits).\",\"baseFeeRecipient\":\"The recipient of the base fee.\",\"refundAmount\":\"The amount to refund (in adapted token digits).\",\"refundRecipient\":\"The recipient of the refund.\",\"tipAmount\":\"The amount to tip (in adapted token digits).\",\"tipRecipient\":\"The recipient of the tip.\"}},\"debitGasFees(address,uint256)\":{\"params\":{\"from\":\"from address\",\"value\":\"Debited value in the adapted digits.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The total supply.\"}},\"getAdaptedToken()\":{\"returns\":{\"_0\":\"The adapted token address.\"}},\"initialize(address,string,string,uint8)\":{\"params\":{\"_adaptedToken\":\"The address of the adapted token.\",\"_expectedDecimals\":\"The expected number of decimals of the adapted token.\",\"_name\":\"The name of the adapted token.\",\"_symbol\":\"The symbol of the adapted token.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAdaptedToken(address)\":{\"params\":{\"_adaptedToken\":\"The address of the adapted token.\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"The total supply.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Gets the balance of the specified address with correct digits.\"},\"constructor\":{\"notice\":\"Sets initialized == true on implementation contracts\"},\"creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Downscales value to the adapted token's native digits and credits it.\"},\"debitGasFees(address,uint256)\":{\"notice\":\"Downscales value to the adapted token's native digits and debits it.\"},\"decimals()\":{\"notice\":\"Gets the total supply with correct digits.\"},\"getAdaptedToken()\":{\"notice\":\"Returns adapted token address.\"},\"initialize(address,string,string,uint8)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"setAdaptedToken(address)\":{\"notice\":\"Sets adapted token address.\"},\"totalSupply()\":{\"notice\":\"Gets the total supply with correct digits.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/stability/FeeCurrencyAdapterOwnable.sol\":\"FeeCurrencyAdapterOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"project:/contracts-0.8/stability/FeeCurrencyAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../contracts/common/CalledByVm.sol\\\";\\nimport \\\"../../contracts/common/Initializable.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../../contracts/common/FixidityLib.sol\\\";\\nimport \\\"../../contracts/stability/interfaces/ISortedOracles.sol\\\";\\nimport \\\"./interfaces/IFeeCurrency.sol\\\";\\nimport \\\"./interfaces/IDecimals.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyAdapter.sol\\\";\\n\\ncontract FeeCurrencyAdapter is Initializable, CalledByVm, IFeeCurrencyAdapter {\\n  IFeeCurrency public adaptedToken;\\n\\n  uint96 public digitDifference;\\n\\n  uint256 public debited = 0;\\n\\n  string public name;\\n  string public symbol;\\n\\n  uint8 public expectedDecimals;\\n\\n  uint256[44] __gap;\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param _adaptedToken The address of the adapted token.\\n   * @param _name The name of the adapted token.\\n   * @param _symbol The symbol of the adapted token.\\n   * @param _expectedDecimals The expected number of decimals of the adapted token.\\n   * @notice _expectedDecimals must be bigger than _adaptedToken.decimals().\\n   */\\n  function initialize(\\n    address _adaptedToken,\\n    string memory _name,\\n    string memory _symbol,\\n    uint8 _expectedDecimals\\n  ) public virtual initializer {\\n    _setAdaptedToken(_adaptedToken);\\n    name = _name;\\n    symbol = _symbol;\\n    uint8 _decimals = IDecimals(_adaptedToken).decimals();\\n    require(\\n      _decimals < _expectedDecimals,\\n      \\\"Decimals of adapted token must be < expected decimals.\\\"\\n    );\\n    digitDifference = uint96(10 ** (_expectedDecimals - _decimals));\\n    expectedDecimals = _expectedDecimals;\\n  }\\n\\n  /**\\n   * Downscales value to the adapted token's native digits and debits it.\\n   * @param from from address\\n   * @param value Debited value in the adapted digits.\\n   */\\n  function debitGasFees(address from, uint256 value) external onlyVm {\\n    uint256 valueScaled = downscale(value);\\n    require(valueScaled > 0, \\\"Scaled debit value must be > 0.\\\");\\n    debited = valueScaled;\\n    adaptedToken.debitGasFees(from, valueScaled);\\n  }\\n\\n  /**\\n   * Downscales value to the adapted token's native digits and credits it.\\n   * @param refundRecipient The recipient of the refund.\\n   * @param tipRecipient The recipient of the tip.\\n   * @param _gatewayFeeRecipient The recipient of the gateway fee. Unused.\\n   * @param baseFeeRecipient The recipient of the base fee.\\n   * @param refundAmount The amount to refund (in adapted token digits).\\n   * @param tipAmount The amount to tip (in adapted token digits).\\n   * @param _gatewayFeeAmount The amount of the gateway fee (in adapted token digits). Unused.\\n   * @param baseFeeAmount The amount of the base fee (in adapted token digits).\\n   */\\n  function creditGasFees(\\n    address refundRecipient,\\n    address tipRecipient,\\n    address _gatewayFeeRecipient,\\n    address baseFeeRecipient,\\n    uint256 refundAmount,\\n    uint256 tipAmount,\\n    uint256 _gatewayFeeAmount,\\n    uint256 baseFeeAmount\\n  ) external onlyVm {\\n    if (debited == 0) {\\n      // When eth.estimateGas is called, this function is called but we don't want to credit anything.\\n      return;\\n    }\\n\\n    uint256 refundScaled = downscale(refundAmount);\\n    uint256 tipTxFeeScaled = downscale(tipAmount);\\n    uint256 baseTxFeeScaled = downscale(baseFeeAmount);\\n\\n    require(\\n      refundScaled + tipTxFeeScaled + baseTxFeeScaled <= debited,\\n      \\\"Cannot credit more than debited.\\\"\\n    );\\n\\n    uint256 roundingError = debited - (refundScaled + tipTxFeeScaled + baseTxFeeScaled);\\n\\n    if (roundingError > 0) {\\n      baseTxFeeScaled += roundingError;\\n    }\\n    adaptedToken.creditGasFees(\\n      refundRecipient,\\n      tipRecipient,\\n      address(0),\\n      baseFeeRecipient,\\n      refundScaled,\\n      tipTxFeeScaled,\\n      0,\\n      baseTxFeeScaled\\n    );\\n\\n    debited = 0;\\n  }\\n\\n  /**\\n   * @notice Returns adapted token address.\\n   * @return The adapted token address.\\n   */\\n  function getAdaptedToken() external view returns (address) {\\n    return address(adaptedToken);\\n  }\\n\\n  /**\\n   * @notice Gets the balance of the specified address with correct digits.\\n   * @param account The address to query the balance of.\\n   * @return The balance of the specified address.\\n   */\\n  function balanceOf(address account) external view returns (uint256) {\\n    return upscale(adaptedToken.balanceOf(account));\\n  }\\n\\n  /**\\n   * @notice Gets the total supply with correct digits.\\n   * @return The total supply.\\n   */\\n  function totalSupply() external view returns (uint256) {\\n    return upscale(adaptedToken.totalSupply());\\n  }\\n\\n  /**\\n   * @notice Gets the total supply with correct digits.\\n   * @return The total supply.\\n   */\\n  function decimals() external view returns (uint8) {\\n    return expectedDecimals;\\n  }\\n\\n  function _setAdaptedToken(address _adaptedToken) internal virtual {\\n    adaptedToken = IFeeCurrency(_adaptedToken);\\n  }\\n\\n  function upscale(uint256 value) internal view returns (uint256) {\\n    return value * digitDifference;\\n  }\\n\\n  /**\\n   * @notice Downscales value to the adapted token's native digits.\\n   * @dev Downscale is rounding up in favour of protocol. User possibly can pay a bit more than expected (up to 1 unit of a token).\\n   * Example:\\n   * USDC has 6 decimals and in such case user can pay up to 0.000001 USDC more than expected.\\n   * WBTC (currently not supported by Celo chain as fee currency) has 8 decimals and in such case user can pay up to 0.00000001 WBTC more than expected.\\n   * Considering the current price of WBTC, it's less than 0.0005 USD. Even when WBTC price would be 1 mil USD, it's still would be only 0.01 USD.\\n   * In general it is a very small amount and it is acceptable to round up in favor of the protocol.\\n   * @param value The value to downscale.\\n   */\\n  function downscale(uint256 value) internal view returns (uint256) {\\n    return (value + digitDifference - 1) / digitDifference;\\n  }\\n}\\n\",\"keccak256\":\"0x4c13e1c6bbe3dedb83dcf35abb4a6a96be4c673a5a4f7e928df54a7c384a779b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/stability/FeeCurrencyAdapterOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./FeeCurrencyAdapter.sol\\\";\\n\\ncontract FeeCurrencyAdapterOwnable is FeeCurrencyAdapter, Ownable {\\n  uint256[49] __gap2;\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) FeeCurrencyAdapter(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param _adaptedToken The address of the adapted token.\\n   * @param _name The name of the adapted token.\\n   * @param _symbol The symbol of the adapted token.\\n   * @param _expectedDecimals The expected number of decimals of the adapted token.\\n   */\\n  function initialize(\\n    address _adaptedToken,\\n    string memory _name,\\n    string memory _symbol,\\n    uint8 _expectedDecimals\\n  ) public override {\\n    _transferOwnership(msg.sender);\\n    FeeCurrencyAdapter.initialize(_adaptedToken, _name, _symbol, _expectedDecimals);\\n  }\\n\\n  /**\\n   * @notice Sets adapted token address.\\n   * @param _adaptedToken The address of the adapted token.\\n   */\\n  function setAdaptedToken(address _adaptedToken) public onlyOwner {\\n    _setAdaptedToken(_adaptedToken);\\n  }\\n}\\n\",\"keccak256\":\"0x5a089e30277fc3050193bb526b41ef395e0c06fa32119816448ef39b02769b6e\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/stability/interfaces/IDecimals.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.8.13;\\n\\ninterface IDecimals {\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x3198787b08f9a2986ea5f3a8e6714cd859433030bc973baf271ccd9334efa303\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/stability/interfaces/IFeeCurrency.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeeCurrency is IERC20 {\\n  /*\\n       This interface should be implemented for tokens which are supposed to\\n       act as fee currencies on the Celo blockchain, meaning that they can be\\n       used to pay gas fees for CIP-64 transactions (and some older tx types).\\n       See https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0064.md\\n\\n       Before executing a tx with non-empty feeCurrency field, the fee\\n       currency's `debitGasFees` function is called to reserve the maximum\\n       amount that tx can spend on gas. After the tx has been executed, the\\n       `creditGasFees` function is called to refund the unused gas and credit\\n       the spent fees to the correct recipients. Events which are raised inside\\n       these functions will show up for every transaction using the token as a\\n       fee currency.\\n\\n       Requirements:\\n       - The functions will be called by the blockchain client with `msg.sender\\n         == address(0)`. If this condition is not met, the functions must\\n         revert to prevent malicious users from crediting their accounts directly.\\n       - `creditGasFees` must credit all specified amounts. If it impossible to\\n         credit one of the recipients for some reason, add the amount to the\\n         value credited to the first valid recipient. This is important to keep\\n         the debited and credited amounts consistent.\\n    */\\n\\n  // Called before transaction execution to reserve the maximum amount of gas\\n  // that can be used by the transaction.\\n  // - The implementation must reduce `from`'s balance by `value`.\\n  // - Must revert if `msg.sender` is not the zero address.\\n  function debitGasFees(address from, uint256 value) external;\\n\\n  /**\\n   * Called after transaction execution to refund the unused gas and credit the\\n   * spent fees to the correct recipients.\\n   * @param refundRecipient The recipient of the refund.\\n   * @param tipRecipient The recipient of the tip.\\n   * @param _gatewayFeeRecipient The recipient of the gateway fee. Unused.\\n   * @param baseFeeRecipient The recipient of the base fee.\\n   * @param refundAmount The amount to refund.\\n   * @param tipAmount The amount to tip.\\n   * @param _gatewayFeeAmount The amount of the gateway fee. Unused.\\n   * @param baseFeeAmount The amount of the base fee.\\n   */\\n  function creditGasFees(\\n    address refundRecipient,\\n    address tipRecipient,\\n    address _gatewayFeeRecipient,\\n    address baseFeeRecipient,\\n    uint256 refundAmount,\\n    uint256 tipAmount,\\n    uint256 _gatewayFeeAmount,\\n    uint256 baseFeeAmount\\n  ) external;\\n}\\n\",\"keccak256\":\"0xd135815cf6178f7c59a196330c93a14e9eefcbdcc7e7544cc82b71bebc0d4df3\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/stability/interfaces/IFeeCurrencyAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\ninterface IFeeCurrencyAdapter {\\n  /**\\n   * @notice Same as debitGasFees in IFeeCurrency, always using the number of decimals the evm expects.\\n   */\\n  function debitGasFees(address from, uint256 value) external;\\n\\n  /**\\n   * @notice Same as creditGasFees in IFeeCurrency, always using the number of decimals the evm expects.\\n   */\\n  function creditGasFees(\\n    address refundRecipient,\\n    address tipRecipient,\\n    address _gatewayFeeRecipient,\\n    address baseFeeRecipient,\\n    uint256 refundAmount,\\n    uint256 tipAmount,\\n    uint256 _gatewayFeeAmount,\\n    uint256 baseFeeAmount\\n  ) external;\\n\\n  /**\\n   * @return The address of the adapted token.\\n   */\\n  function getAdaptedToken() external view returns (address);\\n\\n  /**\\n   * @return The multiplier that should be used when upscaling and downscaling. This is the result of 10**(expectedDecimals - getAdaptedToken().decimals()).\\n   */\\n  function digitDifference() external view returns (uint96);\\n\\n  /**\\n   * @return The amount that is debited after calling debitGasFees() and before creditGasFees().\\n   */\\n  function debited() external view returns (uint256);\\n\\n  /**\\n   * @return The name of the adapted token.\\n   */\\n  function name() external view returns (string memory);\\n\\n  /**\\n   * @return The symbol of adapted token.\\n   */\\n  function symbol() external view returns (string memory);\\n\\n  /**\\n   * @return The decimals expected by the vm.\\n   */\\n  function decimals() external view returns (uint8);\\n\\n  /**\\n   * @return Same as decimals.\\n   */\\n  function expectedDecimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x94fe3be4d3fdcb2ebc633ad634c0ff1a5cdb65ed139e3ccee2ffcd9d00dbbcb1\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/CalledByVm.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract CalledByVm {\\n  modifier onlyVm() {\\n    require(msg.sender == address(0), \\\"Only VM can call\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xb94d2b580a505f5d4ef51bb14b12b6fa19d69e4fa94c96f2f105091673a0a0a4\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/FixidityLib.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n  struct Fraction {\\n    uint256 value;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n  /**\\n   * @notice Number of positions that the comma is shifted to the right.\\n   */\\n  function digits() internal pure returns (uint8) {\\n    return 24;\\n  }\\n\\n  /**\\n   * @notice This is 1 in the fixed point units used in this library.\\n   * @dev Test fixed1() equals 10^digits()\\n   * Hardcoded to 24 digits.\\n   */\\n  function fixed1() internal pure returns (Fraction memory) {\\n    return Fraction(FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n   * struct.\\n   * @param x Number that already represents a 24-decimal fraction.\\n   * @return A Fraction struct with contents x.\\n   */\\n  function wrap(uint256 x) internal pure returns (Fraction memory) {\\n    return Fraction(x);\\n  }\\n\\n  /**\\n   * @notice Unwraps the uint256 inside of a Fraction struct.\\n   */\\n  function unwrap(Fraction memory x) internal pure returns (uint256) {\\n    return x.value;\\n  }\\n\\n  /**\\n   * @notice The amount of decimals lost on each multiplication operand.\\n   * @dev Test mulPrecision() equals sqrt(fixed1)\\n   */\\n  function mulPrecision() internal pure returns (uint256) {\\n    return 1000000000000;\\n  }\\n\\n  /**\\n   * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n   * @dev\\n   * Test maxNewFixed() equals maxUint256() / fixed1()\\n   */\\n  function maxNewFixed() internal pure returns (uint256) {\\n    return 115792089237316195423570985008687907853269984665640564;\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 to fixed point Fraction\\n   * @dev Test newFixed(0) returns 0\\n   * Test newFixed(1) returns fixed1()\\n   * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n   * Test newFixed(maxNewFixed()+1) fails\\n   */\\n  function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n    require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n    return Fraction(x * FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 in the fixed point representation of this\\n   * library to a non decimal. All decimal digits will be truncated.\\n   */\\n  function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n    return x.value / FIXED1_UINT;\\n  }\\n\\n  /**\\n   * @notice Converts two uint256 representing a fraction to fixed point units,\\n   * equivalent to multiplying dividend and divisor by 10^digits().\\n   * @param numerator numerator must be <= maxNewFixed()\\n   * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n   * @dev\\n   * Test newFixedFraction(1,0) fails\\n   * Test newFixedFraction(0,1) returns 0\\n   * Test newFixedFraction(1,1) returns fixed1()\\n   * Test newFixedFraction(1,fixed1()) returns 1\\n   */\\n  function newFixedFraction(\\n    uint256 numerator,\\n    uint256 denominator\\n  ) internal pure returns (Fraction memory) {\\n    Fraction memory convertedNumerator = newFixed(numerator);\\n    Fraction memory convertedDenominator = newFixed(denominator);\\n    return divide(convertedNumerator, convertedDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the integer part of a fixed point number.\\n   * @dev\\n   * Test integer(0) returns 0\\n   * Test integer(fixed1()) returns fixed1()\\n   * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n   */\\n  function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice Returns the fractional part of a fixed point number.\\n   * In the case of a negative number the fractional is also negative.\\n   * @dev\\n   * Test fractional(0) returns 0\\n   * Test fractional(fixed1()) returns 0\\n   * Test fractional(fixed1()-1) returns 10^24-1\\n   */\\n  function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x+y.\\n   * @dev The maximum value that can be safely used as an addition operator is defined as\\n   * maxFixedAdd = maxUint256()-1 / 2, or\\n   * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n   * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n   * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n   */\\n  function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    uint256 z = x.value + y.value;\\n    require(z >= x.value, \\\"add overflow detected\\\");\\n    return Fraction(z);\\n  }\\n\\n  /**\\n   * @notice x-y.\\n   * @dev\\n   * Test subtract(6, 10) fails\\n   */\\n  function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n    return Fraction(x.value - y.value);\\n  }\\n\\n  /**\\n   * @notice x*y. If any of the operators is higher than the max multiplier value it\\n   * might overflow.\\n   * @dev The maximum value that can be safely used as a multiplication operator\\n   * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n   * or 340282366920938463463374607431768211455999999999999\\n   * Test multiply(0,0) returns 0\\n   * Test multiply(maxFixedMul,0) returns 0\\n   * Test multiply(0,maxFixedMul) returns 0\\n   * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n   * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n   * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n   */\\n  function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    if (x.value == 0 || y.value == 0) return Fraction(0);\\n    if (y.value == FIXED1_UINT) return x;\\n    if (x.value == FIXED1_UINT) return y;\\n\\n    // Separate into integer and fractional parts\\n    // x = x1 + x2, y = y1 + y2\\n    uint256 x1 = integer(x).value / FIXED1_UINT;\\n    uint256 x2 = fractional(x).value;\\n    uint256 y1 = integer(y).value / FIXED1_UINT;\\n    uint256 y2 = fractional(y).value;\\n\\n    // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n    uint256 x1y1 = x1 * y1;\\n    if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n    // x1y1 needs to be multiplied back by fixed1\\n    // solium-disable-next-line mixedcase\\n    uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n    if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n    x1y1 = fixed_x1y1;\\n\\n    uint256 x2y1 = x2 * y1;\\n    if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n    uint256 x1y2 = x1 * y2;\\n    if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n    x2 = x2 / mulPrecision();\\n    y2 = y2 / mulPrecision();\\n    uint256 x2y2 = x2 * y2;\\n    if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n    // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n    Fraction memory result = Fraction(x1y1);\\n    result = add(result, Fraction(x2y1)); // Add checks for overflow\\n    result = add(result, Fraction(x1y2)); // Add checks for overflow\\n    result = add(result, Fraction(x2y2)); // Add checks for overflow\\n    return result;\\n  }\\n\\n  /**\\n   * @notice 1/x\\n   * @dev\\n   * Test reciprocal(0) fails\\n   * Test reciprocal(fixed1()) returns fixed1()\\n   * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n   * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n   * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n   */\\n  function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n    require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n    return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x/y. If the dividend is higher than the max dividend value, it\\n   * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n   * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n   * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n   * This yields the value 115792089237316195423570985008687907853269984665640564.\\n   * Test maxNewFixed equals maxUint256()/fixed1()\\n   * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n   * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n   * Test divide(fixed1(),0) fails\\n   * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n   * Test divide(maxNewFixed+1,1) throws\\n   */\\n  function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(y.value != 0, \\\"can't divide by 0\\\");\\n    uint256 X = x.value * FIXED1_UINT;\\n    require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n    return Fraction(X / y.value);\\n  }\\n\\n  /**\\n   * @notice x > y\\n   */\\n  function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value > y.value;\\n  }\\n\\n  /**\\n   * @notice x >= y\\n   */\\n  function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value >= y.value;\\n  }\\n\\n  /**\\n   * @notice x < y\\n   */\\n  function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value < y.value;\\n  }\\n\\n  /**\\n   * @notice x <= y\\n   */\\n  function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value <= y.value;\\n  }\\n\\n  /**\\n   * @notice x == y\\n   */\\n  function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value == y.value;\\n  }\\n\\n  /**\\n   * @notice x <= 1\\n   */\\n  function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n    return lte(x, fixed1());\\n  }\\n}\\n\",\"keccak256\":\"0x546944b106cf70ad6f793e71dffd41733bec3e03ca820a3d08213fc795c042b0\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063cc23a4a311610071578063cc23a4a314610241578063eeee9dc21461024e578063f2fde38b14610264578063f6d2ee8614610277578063fadbb8591461028a57600080fd5b8063715018a6146101f45780638da5cb5b146101fc57806395d89b4114610221578063989516db1461022957600080fd5b80633cf03412116100e95780633cf034121461018557806358cf96721461018e5780635ee5c82a146101a35780636a30b253146101ce57806370a08231146101e157600080fd5b806306fdde031461011b578063158ef93e1461013957806318160ddd14610156578063313ce5671461016c575b600080fd5b61012361029d565b6040516101309190610a76565b60405180910390f35b6000546101469060ff1681565b6040519015158152602001610130565b61015e61032b565b604051908152602001610130565b60055460ff165b60405160ff9091168152602001610130565b61015e60025481565b6101a161019c366004610ae0565b6103b1565b005b6001546101b6906001600160601b031681565b6040516001600160601b039091168152602001610130565b6101a16101dc366004610b0a565b6104ca565b61015e6101ef366004610b82565b610689565b6101a16106e1565b6032546001600160a01b03165b6040516001600160a01b039091168152602001610130565b6101236106f5565b6000546102099061010090046001600160a01b031681565b6005546101739060ff1681565b60005461010090046001600160a01b0316610209565b6101a1610272366004610b82565b610702565b6101a1610285366004610c56565b61077b565b6101a1610298366004610b82565b610796565b600380546102aa90610cdd565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690610cdd565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b505050505081565b60006103ac600060019054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a79190610d17565b6107a7565b905090565b33156103f75760405162461bcd60e51b815260206004820152601060248201526f13db9b1e4815934818d85b8818d85b1b60821b60448201526064015b60405180910390fd5b6000610402826107c0565b9050600081116104545760405162461bcd60e51b815260206004820152601f60248201527f5363616c65642064656269742076616c7565206d757374206265203e20302e0060448201526064016103ee565b6002819055600054604051632c67cb3960e11b81526001600160a01b03858116600483015260248201849052610100909204909116906358cf967290604401600060405180830381600087803b1580156104ad57600080fd5b505af11580156104c1573d6000803e3d6000fd5b50505050505050565b331561050b5760405162461bcd60e51b815260206004820152601060248201526f13db9b1e4815934818d85b8818d85b1b60821b60448201526064016103ee565b6002541561067f57600061051e856107c0565b9050600061052b856107c0565b90506000610538846107c0565b600254909150816105498486610d46565b6105539190610d46565b11156105a15760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420637265646974206d6f7265207468616e20646562697465642e60448201526064016103ee565b6000816105ae8486610d46565b6105b89190610d46565b6002546105c59190610d59565b905080156105da576105d78183610d46565b91505b60008054604051636a30b25360e01b81526001600160a01b038f811660048301528e81166024830152604482018490528c811660648301526084820188905260a4820187905260c482019390935260e4810185905261010090910490911690636a30b2539061010401600060405180830381600087803b15801561065d57600080fd5b505af1158015610671573d6000803e3d6000fd5b505060006002555050505050505b5050505050505050565b600080546040516370a0823160e01b81526001600160a01b0384811660048301526106db92610100900416906370a0823190602401602060405180830381865afa158015610383573d6000803e3d6000fd5b92915050565b6106e96107f1565b6106f3600061084b565b565b600480546102aa90610cdd565b61070a6107f1565b6001600160a01b03811661076f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103ee565b6107788161084b565b50565b6107843361084b565b6107908484848461089d565b50505050565b61079e6107f1565b61077881610a4e565b6001546000906106db906001600160601b031683610d6c565b600180546000916001600160601b03909116906107dd8285610d46565b6107e79190610d59565b6106db9190610d83565b6032546001600160a01b031633146106f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ee565b603280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005460ff16156108f05760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a65640000000060448201526064016103ee565b6000805460ff1916600117905561090684610a4e565b60036109128482610df4565b50600461091f8382610df4565b506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610eb4565b90508160ff168160ff16106109fa5760405162461bcd60e51b815260206004820152603660248201527f446563696d616c73206f66206164617074656420746f6b656e206d757374206260448201527532901e1032bc3832b1ba32b2103232b1b4b6b0b6399760511b60648201526084016103ee565b610a048183610ed1565b610a0f90600a610fce565b600180546bffffffffffffffffffffffff19166001600160601b0392909216919091179055506005805460ff191660ff92909216919091179055505050565b600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600060208083528351808285015260005b81811015610aa357858101830151858201604001528201610a87565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610adb57600080fd5b919050565b60008060408385031215610af357600080fd5b610afc83610ac4565b946020939093013593505050565b600080600080600080600080610100898b031215610b2757600080fd5b610b3089610ac4565b9750610b3e60208a01610ac4565b9650610b4c60408a01610ac4565b9550610b5a60608a01610ac4565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b600060208284031215610b9457600080fd5b610b9d82610ac4565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610bcb57600080fd5b813567ffffffffffffffff80821115610be657610be6610ba4565b604051601f8301601f19908116603f01168101908282118183101715610c0e57610c0e610ba4565b81604052838152866020858801011115610c2757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60ff8116811461077857600080fd5b60008060008060808587031215610c6c57600080fd5b610c7585610ac4565b9350602085013567ffffffffffffffff80821115610c9257600080fd5b610c9e88838901610bba565b94506040870135915080821115610cb457600080fd5b50610cc187828801610bba565b9250506060850135610cd281610c47565b939692955090935050565b600181811c90821680610cf157607f821691505b602082108103610d1157634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610d2957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106db576106db610d30565b818103818111156106db576106db610d30565b80820281158282048414176106db576106db610d30565b600082610da057634e487b7160e01b600052601260045260246000fd5b500490565b601f821115610def57600081815260208120601f850160051c81016020861015610dcc5750805b601f850160051c820191505b81811015610deb57828155600101610dd8565b5050505b505050565b815167ffffffffffffffff811115610e0e57610e0e610ba4565b610e2281610e1c8454610cdd565b84610da5565b602080601f831160018114610e575760008415610e3f5750858301515b600019600386901b1c1916600185901b178555610deb565b600085815260208120601f198616915b82811015610e8657888601518255948401946001909101908401610e67565b5085821015610ea45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610ec657600080fd5b8151610b9d81610c47565b60ff82811682821603908111156106db576106db610d30565b600181815b80851115610f25578160001904821115610f0b57610f0b610d30565b80851615610f1857918102915b93841c9390800290610eef565b509250929050565b600082610f3c575060016106db565b81610f49575060006106db565b8160018114610f5f5760028114610f6957610f85565b60019150506106db565b60ff841115610f7a57610f7a610d30565b50506001821b6106db565b5060208310610133831016604e8410600b8410161715610fa8575081810a6106db565b610fb28383610eea565b8060001904821115610fc657610fc6610d30565b029392505050565b6000610b9d60ff841683610f2d56fea2646970667358221220339ed41f79632d27f306d26ec28377c4e958eb281f904fb61e52e095d1ac7a6664736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:293:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:85",
                "type": ""
              }
            ],
            "src": "14:277:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13843:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:427:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:85",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:85"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:85"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:85",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:85"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:85"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:85"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:85"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:85",
                    "statements": []
                  },
                  "src": "294:140:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:85"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "469:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "454:22:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "478:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:31:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:42:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "443:42:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "494:62:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "529:6:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "537:2:85",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "525:15:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "546:2:85",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:7:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "521:29:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:45:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "553:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:54:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "494:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:85",
                "type": ""
              }
            ],
            "src": "14:548:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "662:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "672:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "684:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "695:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "680:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "672:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "714:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "739:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "732:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "732:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "725:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "725:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "707:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "707:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "631:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "642:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "653:4:85",
                "type": ""
              }
            ],
            "src": "567:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "860:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "870:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "882:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "893:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "870:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "923:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "905:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "905:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "829:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "840:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "851:4:85",
                "type": ""
              }
            ],
            "src": "759:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1038:87:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1048:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1060:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1071:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1056:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1056:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1048:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1090:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1113:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1101:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1101:17:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1083:36:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1007:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1018:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1029:4:85",
                "type": ""
              }
            ],
            "src": "941:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1179:124:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1189:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1211:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1198:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1189:5:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1281:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1290:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1293:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1283:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1283:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1283:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1240:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1251:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1266:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1271:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1262:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1262:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1275:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1258:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1258:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1247:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1247:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1237:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1237:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1230:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1230:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1227:70:85"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1158:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1169:5:85",
                "type": ""
              }
            ],
            "src": "1130:173:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:167:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1441:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1453:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1443:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1443:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1443:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1416:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1425:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1412:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1412:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1437:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1408:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1405:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1466:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1495:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1476:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1466:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1514:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1541:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1552:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1537:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1537:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1524:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1514:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1353:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1364:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1376:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1384:6:85",
                "type": ""
              }
            ],
            "src": "1308:254:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1666:109:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1676:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1688:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1699:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1684:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1676:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1718:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1733:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:26:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1729:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1729:39:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1711:58:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1635:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1646:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1657:4:85",
                "type": ""
              }
            ],
            "src": "1567:208:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1969:496:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2016:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2025:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2028:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2018:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2018:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1990:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1999:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1986:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1986:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:3:85",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1982:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1979:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2041:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2070:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2051:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2041:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2089:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2099:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2089:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2146:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2179:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2190:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2175:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2175:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2156:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2156:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2203:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2236:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2247:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2232:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2232:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2213:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2213:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2203:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2260:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2287:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2298:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2283:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2283:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2270:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2312:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2339:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2350:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2322:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2312:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2364:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2391:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2402:3:85",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2387:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2387:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2374:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2374:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "2364:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2416:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2443:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2454:3:85",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2439:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2439:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2426:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2426:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "2416:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1879:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1890:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1902:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1910:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1918:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1926:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1934:6:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1942:6:85",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "1950:6:85",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "1958:6:85",
                "type": ""
              }
            ],
            "src": "1780:685:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2540:116:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2586:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2595:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2598:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2588:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2588:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2588:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2561:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2570:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2557:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2557:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2582:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2553:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2553:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2550:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2611:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2640:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2621:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2611:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2506:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2517:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2529:6:85",
                "type": ""
              }
            ],
            "src": "2470:186:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2762:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2772:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2784:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2795:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2780:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2780:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2772:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2814:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2829:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2845:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2850:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2841:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2841:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2854:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2837:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2837:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2825:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2825:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2807:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2807:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2731:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2742:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2753:4:85",
                "type": ""
              }
            ],
            "src": "2661:203:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2992:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3002:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3014:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3025:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3010:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3002:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3044:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3059:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3075:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3080:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3071:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3071:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3084:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3067:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3067:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3055:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3055:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3037:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3037:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3037:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IFeeCurrency_$15797__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2961:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2972:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2983:4:85",
                "type": ""
              }
            ],
            "src": "2869:225:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3131:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3148:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3155:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3160:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3151:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3151:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3141:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3141:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3141:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3188:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3191:4:85",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3181:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3181:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3181:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3212:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3215:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3205:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3205:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3205:15:85"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3099:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3284:666:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3333:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3342:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3345:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3335:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3335:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3335:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3312:6:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3320:4:85",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3308:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3308:17:85"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3327:3:85"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3304:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3304:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3294:55:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3358:30:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3381:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3368:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:20:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3362:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3397:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3407:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3401:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3448:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3450:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3450:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3450:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3440:2:85"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3444:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3437:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3434:36:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3479:17:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3493:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3489:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:7:85"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3483:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3505:23:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3525:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3519:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3519:9:85"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3509:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3537:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3559:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3583:2:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3587:4:85",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3579:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3579:13:85"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3594:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3575:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3575:22:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3599:2:85",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3571:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3571:31:85"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3604:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3567:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3567:40:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3555:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3555:53:85"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3541:10:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3667:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3669:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3669:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3669:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3626:10:85"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3638:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3623:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3623:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3646:10:85"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3658:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3643:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3643:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3620:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3620:46:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3617:72:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3705:2:85",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3709:10:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3698:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:22:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3736:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3744:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3729:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3729:18:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3729:18:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3795:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3804:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3807:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3797:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3797:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3797:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3770:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3778:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3766:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3766:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3783:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3762:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3762:26:85"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3790:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3759:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3759:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3756:55:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3837:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3845:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3833:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3833:17:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3856:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3864:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3852:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3852:17:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3871:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3820:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3820:54:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3820:54:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3898:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3906:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3911:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3890:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3890:26:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3918:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3883:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3883:37:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3883:37:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3929:15:85",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3938:6:85"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3929:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3258:6:85",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3266:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3274:5:85",
                "type": ""
              }
            ],
            "src": "3231:719:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3998:71:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4047:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4056:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4059:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4049:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4049:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4049:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4021:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4032:5:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4039:4:85",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4028:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4028:16:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4018:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4018:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4011:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4011:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4008:55:85"
                }
              ]
            },
            "name": "validator_revert_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3987:5:85",
                "type": ""
              }
            ],
            "src": "3955:114:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4213:610:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4260:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4269:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4272:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4262:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4262:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4262:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4234:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4243:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4230:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4230:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4255:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4226:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4223:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4285:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4314:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4295:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4285:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4333:46:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4364:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4375:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4360:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4360:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4347:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4337:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4388:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4398:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4392:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4443:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4452:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4455:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4445:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4445:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4445:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4431:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4439:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4428:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4428:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4425:34:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4468:60:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4500:9:85"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4511:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4496:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4496:22:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4520:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4478:17:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4478:50:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4468:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4537:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4570:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4581:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4566:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4566:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4553:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4553:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4541:8:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4614:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4623:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4626:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4616:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4616:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4616:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4600:8:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4610:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4597:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:16:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4594:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4639:62:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4671:9:85"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4682:8:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4667:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4667:24:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4693:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4649:17:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4649:52:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4639:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4710:45:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4740:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4751:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4736:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4723:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4723:32:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4714:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4787:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4764:22:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4764:29:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4802:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4812:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4802:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4155:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4166:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4178:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4186:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4194:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4202:6:85",
                "type": ""
              }
            ],
            "src": "4074:749:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4883:325:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4893:22:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4907:1:85",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4910:4:85"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "4903:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4903:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4893:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4924:38:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4954:4:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4960:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4950:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:12:85"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "4928:18:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5001:31:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5003:27:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5017:6:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5025:4:85",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5013:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5013:17:85"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5003:6:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4981:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4974:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4974:26:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4971:61:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5091:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5112:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5119:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5124:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5115:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5115:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5105:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5105:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5105:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5156:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5159:4:85",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5149:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5149:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5149:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5184:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5187:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5177:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5177:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5177:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5047:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5070:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5078:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5067:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5067:14:85"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5044:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5044:38:85"
                  },
                  "nodeType": "YulIf",
                  "src": "5041:161:85"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4863:4:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4872:6:85",
                "type": ""
              }
            ],
            "src": "4828:380:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5294:103:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5340:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5349:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5352:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5342:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5342:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5342:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5315:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5324:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5311:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5311:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5336:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5307:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5307:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "5304:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5365:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5381:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5375:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:16:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5365:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5260:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5271:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5283:6:85",
                "type": ""
              }
            ],
            "src": "5213:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5576:166:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5593:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5604:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5586:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5586:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5586:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5627:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5638:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5623:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5623:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5643:2:85",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5616:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5616:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5666:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5677:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5662:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5662:18:85"
                      },
                      {
                        "hexValue": "4f6e6c7920564d2063616e2063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5682:18:85",
                        "type": "",
                        "value": "Only VM can call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5655:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5655:46:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5655:46:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5710:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5722:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5733:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5718:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5718:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5710:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5553:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5567:4:85",
                "type": ""
              }
            ],
            "src": "5402:340:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5921:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5938:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5949:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5931:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5931:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5931:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5972:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5983:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5968:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5968:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5988:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5961:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5961:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5961:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6011:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6022:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6007:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6007:18:85"
                      },
                      {
                        "hexValue": "5363616c65642064656269742076616c7565206d757374206265203e20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6027:33:85",
                        "type": "",
                        "value": "Scaled debit value must be > 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6000:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6000:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6000:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6070:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6082:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6093:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6078:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6078:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6070:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7323159da833d5c90bb8ffe80c173507ca32f037d0d06cd6f9733bdee79cb007__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5898:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5912:4:85",
                "type": ""
              }
            ],
            "src": "5747:355:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6236:145:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6246:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6258:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6269:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6254:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6254:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6246:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6288:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6303:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6319:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6324:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6315:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6315:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6328:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6311:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6311:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6299:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6299:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6281:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6281:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6281:51:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6352:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6363:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6348:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6348:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6368:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6341:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6341:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6341:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6197:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6208:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6216:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6227:4:85",
                "type": ""
              }
            ],
            "src": "6107:274:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6418:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6435:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6442:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6447:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6438:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6438:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6428:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6428:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6428:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6475:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6478:4:85",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6468:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6468:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6468:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6499:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6502:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6492:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6492:15:85"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6386:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6566:77:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6576:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6587:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6590:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6583:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6583:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6576:3:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6615:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6617:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6617:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6617:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6607:1:85"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "6610:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6604:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "6601:36:85"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6549:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6552:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6558:3:85",
                "type": ""
              }
            ],
            "src": "6518:125:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6822:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6839:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6850:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6832:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6832:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6832:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6873:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6884:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6869:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6869:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6889:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6862:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6862:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6912:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6923:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6908:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6908:18:85"
                      },
                      {
                        "hexValue": "43616e6e6f7420637265646974206d6f7265207468616e20646562697465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6928:34:85",
                        "type": "",
                        "value": "Cannot credit more than debited."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6901:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6901:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6901:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6972:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6984:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6995:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6980:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6972:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a35bbd323c4fb3e59cee627945e7a78a4cd03a3657d56d98aa33e3b6d3bf22fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6799:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6813:4:85",
                "type": ""
              }
            ],
            "src": "6648:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7058:79:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7068:17:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7080:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7083:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7076:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7076:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7068:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7109:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7111:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7111:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7111:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "7100:4:85"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7106:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7097:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7097:11:85"
                  },
                  "nodeType": "YulIf",
                  "src": "7094:37:85"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7040:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7043:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7049:4:85",
                "type": ""
              }
            ],
            "src": "7009:128:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7447:456:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7457:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7469:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7480:3:85",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7465:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7465:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7457:4:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7493:29:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7511:3:85",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7516:1:85",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7507:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7507:11:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7520:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7503:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7503:19:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7497:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7538:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7553:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7561:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7549:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7549:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7531:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7531:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7531:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7585:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7596:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7581:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7581:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7605:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7613:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7601:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7601:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7574:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7574:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7574:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7637:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7648:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7633:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7633:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7657:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7665:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7653:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7653:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7626:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7626:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7626:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7689:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7700:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7685:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7685:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7709:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7717:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7705:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7705:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7678:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7678:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7678:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7741:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7752:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7737:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7737:19:85"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7758:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7730:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7730:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7730:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7785:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7796:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7781:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7781:19:85"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "7802:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7774:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7774:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7774:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7829:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7840:3:85",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7825:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7825:19:85"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "7846:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7818:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7818:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7818:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7873:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7884:3:85",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7869:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7869:19:85"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "7890:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7862:35:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7360:9:85",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "7371:6:85",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "7379:6:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7387:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7395:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7403:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7411:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7419:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7427:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7438:4:85",
                "type": ""
              }
            ],
            "src": "7142:761:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8082:228:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8099:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8110:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8092:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8092:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8092:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8133:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8144:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8129:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8129:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8149:2:85",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8122:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8122:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8122:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8172:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8183:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8168:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8168:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8188:34:85",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8161:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8161:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8161:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8243:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8254:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8239:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8239:18:85"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8259:8:85",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8232:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8232:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8232:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8277:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8289:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8300:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8285:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8285:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8277:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8059:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8073:4:85",
                "type": ""
              }
            ],
            "src": "7908:402:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8367:116:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8377:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8392:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8395:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8388:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8388:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8377:7:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8455:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8457:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8457:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8457:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8426:1:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8419:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8419:9:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "8433:1:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "8440:7:85"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "8449:1:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "8436:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8436:15:85"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "8430:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8430:22:85"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "8416:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8416:37:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8409:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8409:45:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8406:71:85"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8346:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8349:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8355:7:85",
                "type": ""
              }
            ],
            "src": "8315:168:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8534:171:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8565:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8586:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8593:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8598:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8589:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8589:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8579:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8579:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8579:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8630:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8633:4:85",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8623:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8623:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8623:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8658:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8661:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8651:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8651:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8651:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8554:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8547:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8547:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8544:132:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8685:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8694:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8697:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8690:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8690:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8685:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8519:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8522:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8528:1:85",
                "type": ""
              }
            ],
            "src": "8488:217:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8884:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8901:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8912:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8894:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8894:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8894:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8935:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8946:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8931:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8931:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8951:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8924:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8924:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8924:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8974:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8985:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8970:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8970:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8990:34:85",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8963:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8963:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8963:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9034:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9046:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9057:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9042:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9034:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8861:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8875:4:85",
                "type": ""
              }
            ],
            "src": "8710:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9245:178:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9262:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9273:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9255:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9255:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9255:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9296:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9307:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9292:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9292:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9312:2:85",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9285:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9285:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9285:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9335:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9346:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9331:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9331:18:85"
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9351:30:85",
                        "type": "",
                        "value": "contract already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9324:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9324:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9324:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9391:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9403:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9414:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9399:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9399:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9391:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9222:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9236:4:85",
                "type": ""
              }
            ],
            "src": "9071:352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9484:65:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9501:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "9504:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9494:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9494:14:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9494:14:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9517:26:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9535:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9538:4:85",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "9525:9:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9525:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "9517:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "9467:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9475:4:85",
                "type": ""
              }
            ],
            "src": "9428:121:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9635:464:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9668:425:85",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9682:11:85",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9692:1:85",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "9686:2:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9713:2:85"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "9717:5:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9706:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9706:17:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9706:17:85"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9736:31:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9758:2:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9762:4:85",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "9748:9:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9748:19:85"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "9740:4:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9780:57:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "9803:4:85"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9813:1:85",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "9820:10:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9832:2:85",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9816:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9816:19:85"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "9809:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9809:27:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9799:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9799:38:85"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "9784:11:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9874:23:85",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9876:19:85",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "9891:4:85"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9876:11:85"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "9856:10:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9868:4:85",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "9853:2:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9853:20:85"
                        },
                        "nodeType": "YulIf",
                        "src": "9850:47:85"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9910:41:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "9924:4:85"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9934:1:85",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "9941:3:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9946:2:85",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9937:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9937:12:85"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "9930:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9930:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9920:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9920:31:85"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "9914:2:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "9964:24:85",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "9977:11:85"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "9968:5:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10062:21:85",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "10071:5:85"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10078:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10064:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10064:17:85"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10064:17:85"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "10012:5:85"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "10019:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "10009:2:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10009:13:85"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "10023:26:85",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10025:22:85",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "10038:5:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10045:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10034:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10034:13:85"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "10025:5:85"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "10005:3:85",
                          "statements": []
                        },
                        "src": "10001:82:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "9651:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9656:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9648:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9648:11:85"
                  },
                  "nodeType": "YulIf",
                  "src": "9645:448:85"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "9607:5:85",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "9614:3:85",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "9619:10:85",
                "type": ""
              }
            ],
            "src": "9554:545:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10189:81:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10199:65:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "10214:4:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10232:1:85",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "10235:3:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10228:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10228:11:85"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10245:1:85",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "10241:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10241:6:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10224:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10224:24:85"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "10220:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10220:29:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10210:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10210:40:85"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10256:1:85",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "10259:3:85"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10252:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10252:11:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "10207:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10207:57:85"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "10199:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "10166:4:85",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "10172:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "10180:4:85",
                "type": ""
              }
            ],
            "src": "10104:166:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10371:1256:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10381:24:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "10401:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10395:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10395:10:85"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "10385:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10448:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "10450:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10450:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10450:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "10420:6:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10428:18:85",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10417:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10417:30:85"
                  },
                  "nodeType": "YulIf",
                  "src": "10414:56:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "10523:4:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "10561:4:85"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "10555:5:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10555:11:85"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "10529:25:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10529:38:85"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "10569:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "10479:43:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10479:97:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10479:97:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10585:18:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10602:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "10589:9:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10612:23:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10631:4:85",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "10616:11:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10644:24:85",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "10657:11:85"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "10644:9:85"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10714:656:85",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10728:35:85",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "10747:6:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10759:2:85",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "10755:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10755:7:85"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "10743:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10743:20:85"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "10732:7:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10776:49:85",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "10820:4:85"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "10790:29:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10790:35:85"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "10780:6:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10838:10:85",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10847:1:85",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "10842:1:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10925:172:85",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "10950:6:85"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "10968:3:85"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "10973:9:85"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "10964:3:85"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10964:19:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "10958:5:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10958:26:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "10943:6:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10943:42:85"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10943:42:85"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11002:24:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11016:6:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11024:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11012:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11012:14:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "11002:6:85"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11043:40:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11060:9:85"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11071:11:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11056:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11056:27:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "11043:9:85"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10872:1:85"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "10875:7:85"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "10869:2:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10869:14:85"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "10884:28:85",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10886:24:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "10895:1:85"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10898:11:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10891:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10891:19:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10886:1:85"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "10865:3:85",
                              "statements": []
                            },
                            "src": "10861:236:85"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11145:166:85",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "11163:43:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "11190:3:85"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "11195:9:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11186:3:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11186:19:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "11180:5:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11180:26:85"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "11167:9:85",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "11230:6:85"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "11242:9:85"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "11269:1:85",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "11272:6:85"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "11265:3:85"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "11265:14:85"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "11281:3:85",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11261:3:85"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11261:24:85"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "11291:1:85",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11287:3:85"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11287:6:85"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11257:3:85"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11257:37:85"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "11253:3:85"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11253:42:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "11238:3:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11238:58:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "11223:6:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11223:74:85"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11223:74:85"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "11116:7:85"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "11125:6:85"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "11113:2:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11113:19:85"
                            },
                            "nodeType": "YulIf",
                            "src": "11110:201:85"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "11331:4:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11345:1:85",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "11348:6:85"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "11341:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11341:14:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11357:1:85",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11337:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11337:22:85"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "11324:6:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11324:36:85"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11324:36:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10707:663:85",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10712:1:85",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11387:234:85",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "11401:14:85",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11414:1:85",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "11405:5:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11450:67:85",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11468:35:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "11487:3:85"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "11492:9:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11483:3:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11483:19:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "11477:5:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11477:26:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "11468:5:85"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "11431:6:85"
                            },
                            "nodeType": "YulIf",
                            "src": "11428:89:85"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "11537:4:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "11596:5:85"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "11603:6:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "11543:52:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11543:67:85"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "11530:6:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11530:81:85"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "11530:81:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "11379:242:85",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "10687:6:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10695:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10684:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10684:14:85"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10677:944:85"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "10356:4:85",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10362:3:85",
                "type": ""
              }
            ],
            "src": "10275:1352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11711:168:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11757:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11766:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11769:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11759:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11759:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11759:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11732:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11741:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11728:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11728:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11753:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11724:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11724:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "11721:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11782:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11801:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11795:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11795:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11786:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11843:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "11820:22:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11820:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11820:29:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11858:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11868:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11858:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11677:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11688:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11700:6:85",
                "type": ""
              }
            ],
            "src": "11632:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12058:244:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12075:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12086:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12068:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12068:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12068:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12109:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12120:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12105:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12105:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12125:2:85",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12098:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12098:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12098:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12148:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12159:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12144:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12144:18:85"
                      },
                      {
                        "hexValue": "446563696d616c73206f66206164617074656420746f6b656e206d7573742062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12164:34:85",
                        "type": "",
                        "value": "Decimals of adapted token must b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12137:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12137:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12137:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12219:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12230:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12215:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12215:18:85"
                      },
                      {
                        "hexValue": "65203c20657870656374656420646563696d616c732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12235:24:85",
                        "type": "",
                        "value": "e < expected decimals."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12208:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12208:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12208:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12269:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12281:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12292:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12277:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12277:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12269:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_135aa443ed453db3647abc31c5ebf8d7e70b844e8bc25b25469b9140aa4b7c77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12035:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12049:4:85",
                "type": ""
              }
            ],
            "src": "11884:418:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12354:104:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12364:39:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "12380:1:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12383:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12376:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12376:12:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12394:1:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12397:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12390:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12390:12:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12372:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12372:31:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12364:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12430:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12432:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12432:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12432:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "12418:4:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12424:4:85",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12415:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12415:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "12412:40:85"
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12336:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12339:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12345:4:85",
                "type": ""
              }
            ],
            "src": "12307:151:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12527:358:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12537:16:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12552:1:85",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "12541:7:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12562:16:85",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "12571:7:85"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12562:5:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12587:13:85",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "12595:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "12587:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12651:228:85",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12696:22:85",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "12698:16:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12698:18:85"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12698:18:85"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12671:4:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "12685:1:85",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "12681:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12681:6:85"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "12689:4:85"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "12677:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12677:17:85"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "12668:2:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12668:27:85"
                        },
                        "nodeType": "YulIf",
                        "src": "12665:53:85"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12757:29:85",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12759:25:85",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "12772:5:85"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "12779:4:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "12768:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12768:16:85"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "12759:5:85"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12738:8:85"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "12748:7:85"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "12734:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12734:22:85"
                        },
                        "nodeType": "YulIf",
                        "src": "12731:55:85"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "12799:23:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12811:4:85"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12817:4:85"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "12807:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12807:15:85"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "12799:4:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "12835:34:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "12851:7:85"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12860:8:85"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "12847:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12847:22:85"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "12835:8:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12620:8:85"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "12630:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12617:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12617:21:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12639:3:85",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12613:3:85",
                    "statements": []
                  },
                  "src": "12609:270:85"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "12491:5:85",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12498:8:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12511:5:85",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12518:4:85",
                "type": ""
              }
            ],
            "src": "12463:422:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12949:747:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12987:52:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13001:10:85",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "13010:1:85",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "13001:5:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "13024:5:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12969:8:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12962:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12962:16:85"
                  },
                  "nodeType": "YulIf",
                  "src": "12959:80:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13072:52:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13086:10:85",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "13095:1:85",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "13086:5:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "13109:5:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "13058:4:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13051:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13051:12:85"
                  },
                  "nodeType": "YulIf",
                  "src": "13048:76:85"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13160:52:85",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "13174:10:85",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13183:1:85",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "13174:5:85"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "13197:5:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "13153:59:85",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13158:1:85",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13228:123:85",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13263:22:85",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "13265:16:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13265:18:85"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13265:18:85"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "13248:8:85"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13258:3:85",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "13245:2:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13245:17:85"
                            },
                            "nodeType": "YulIf",
                            "src": "13242:43:85"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "13298:25:85",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "13311:8:85"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13321:1:85",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "13307:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13307:16:85"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "13298:5:85"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "13336:5:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "13221:130:85",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13226:1:85",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "13140:4:85"
                  },
                  "nodeType": "YulSwitch",
                  "src": "13133:218:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13449:70:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13463:28:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "13476:4:85"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "13482:8:85"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "13472:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13472:19:85"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "13463:5:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "13504:5:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "13373:4:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13379:2:85",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13370:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13370:12:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "13387:8:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13397:2:85",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13384:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13384:16:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13366:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13366:35:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "13410:4:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13416:3:85",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13407:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13407:13:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "13425:8:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13435:2:85",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13422:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13422:16:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13403:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13403:36:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "13363:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13363:77:85"
                  },
                  "nodeType": "YulIf",
                  "src": "13360:159:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13528:57:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "13570:4:85"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "13576:8:85"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "13551:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13551:34:85"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "13532:7:85",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "13541:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13630:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13632:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13632:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13632:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "13600:7:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13617:1:85",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "13613:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13613:6:85"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "13621:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "13609:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13609:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13597:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13597:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "13594:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13661:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "13674:7:85"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "13683:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13670:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13670:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "13661:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12920:4:85",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12926:8:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12939:5:85",
                "type": ""
              }
            ],
            "src": "12890:806:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13769:72:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13779:56:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "13809:4:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "13819:8:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13829:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13815:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13815:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "13788:20:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13788:47:85"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "13779:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "13740:4:85",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "13746:8:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "13759:5:85",
                "type": ""
              }
            ],
            "src": "13701:140:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IFeeCurrency_$15797__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 96))\n        validator_revert_uint8(value)\n        value3 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Only VM can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7323159da833d5c90bb8ffe80c173507ca32f037d0d06cd6f9733bdee79cb007__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Scaled debit value must be > 0.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a35bbd323c4fb3e59cee627945e7a78a4cd03a3657d56d98aa33e3b6d3bf22fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Cannot credit more than debited.\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"contract already initialized\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_135aa443ed453db3647abc31c5ebf8d7e70b844e8bc25b25469b9140aa4b7c77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Decimals of adapted token must b\")\n        mstore(add(headStart, 96), \"e < expected decimals.\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "225:1146:51:-:0;;;777:1:50;752:26;;463:50:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;505:4;1068::50;896:17:59;891:57;;923:11;:18;;-1:-1:-1;;923:18:59;937:4;923:18;;;891:57;-1:-1:-1;936:32:0;;-1:-1:-1;719:10:2;936:18:0;:32::i;:::-;463:50:51;225:1146;;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:277:85:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:85:o;:::-;225:1146:51;;;;;;",
  "deployedSourceMap": "225:1146:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:18:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;319:23:59;;;;;;;;;;;;732:14:85;;725:22;707:41;;695:2;680:18;319:23:59;567:187:85;4841:108:50;;;:::i;:::-;;;905:25:85;;;893:2;878:18;4841:108:50;759:177:85;5052:84:50;5115:16;;;;5052:84;;;1113:4:85;1101:17;;;1083:36;;1071:2;1056:18;5052:84:50;941:184:85;752:26:50;;;;;;2217:258;;;;;;:::i;:::-;;:::i;:::-;;718:29;;;;;-1:-1:-1;;;;;718:29:50;;;;;;-1:-1:-1;;;;;1729:39:85;;;1711:58;;1699:2;1684:18;718:29:50;1567:208:85;3124:1090:50;;;;;;:::i;:::-;;:::i;4612:126::-;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;2825:32:85;;;2807:51;;2795:2;2780:18;1201:85:0;2661:203:85;805:20:50;;;:::i;681:32::-;;;;;;;;-1:-1:-1;;;;;681:32:50;;;830:29;;;;;;;;;4314:98;4364:7;4394:12;;;;-1:-1:-1;;;;;4394:12:50;4314:98;;2074:198:0;;;;;;:::i;:::-;;:::i;871:274:51:-;;;;;;:::i;:::-;;:::i;1262:107::-;;;;;;:::i;:::-;;:::i;783:18:50:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4841:108::-;4887:7;4909:35;4917:12;;;;;;;;;-1:-1:-1;;;;;4917:12:50;-1:-1:-1;;;;;4917:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4909:7;:35::i;:::-;4902:42;;4841:108;:::o;2217:258::-;132:10:57;:24;124:53;;;;-1:-1:-1;;;124:53:57;;5604:2:85;124:53:57;;;5586:21:85;5643:2;5623:18;;;5616:30;-1:-1:-1;;;5662:18:85;;;5655:46;5718:18;;124:53:57;;;;;;;;;2290:19:50::1;2312:16;2322:5;2312:9;:16::i;:::-;2290:38;;2356:1;2342:11;:15;2334:59;;;::::0;-1:-1:-1;;;2334:59:50;;5949:2:85;2334:59:50::1;::::0;::::1;5931:21:85::0;5988:2;5968:18;;;5961:30;6027:33;6007:18;;;6000:61;6078:18;;2334:59:50::1;5747:355:85::0;2334:59:50::1;2399:7;:21:::0;;;2426:12:::1;::::0;:44:::1;::::0;-1:-1:-1;;;2426:44:50;;-1:-1:-1;;;;;6299:32:85;;;2426:44:50::1;::::0;::::1;6281:51:85::0;6348:18;;;6341:34;;;2426:12:50::1;::::0;;::::1;::::0;;::::1;::::0;:25:::1;::::0;6254:18:85;;2426:44:50::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2284:191;2217:258:::0;;:::o;3124:1090::-;132:10:57;:24;124:53;;;;-1:-1:-1;;;124:53:57;;5604:2:85;124:53:57;;;5586:21:85;5643:2;5623:18;;;5616:30;-1:-1:-1;;;5662:18:85;;;5655:46;5718:18;;124:53:57;5402:340:85;124:53:57;3403:7:50::1;::::0;3399:142;3528:7:::1;3399:142;3547:20;3570:23;3580:12;3570:9;:23::i;:::-;3547:46;;3599:22;3624:20;3634:9;3624;:20::i;:::-;3599:45;;3650:23;3676:24;3686:13;3676:9;:24::i;:::-;3773:7;::::0;3650:50;;-1:-1:-1;3650:50:50;3722:29:::1;3737:14:::0;3722:12;:29:::1;:::i;:::-;:47;;;;:::i;:::-;:58;;3707:121;;;::::0;-1:-1:-1;;;3707:121:50;;6850:2:85;3707:121:50::1;::::0;::::1;6832:21:85::0;;;6869:18;;;6862:30;6928:34;6908:18;;;6901:62;6980:18;;3707:121:50::1;6648:356:85::0;3707:121:50::1;3835:21;3902:15:::0;3870:29:::1;3885:14:::0;3870:12;:29:::1;:::i;:::-;:47;;;;:::i;:::-;3859:7;;:59;;;;:::i;:::-;3835:83:::0;-1:-1:-1;3929:17:50;;3925:70:::1;;3956:32;3975:13:::0;3956:32;::::1;:::i;:::-;;;3925:70;4000:12;::::0;;:191:::1;::::0;-1:-1:-1;;;4000:191:50;;-1:-1:-1;;;;;7549:15:85;;;4000:191:50::1;::::0;::::1;7531:34:85::0;7601:15;;;7581:18;;;7574:43;7633:18;;;7626:43;;;7705:15;;;7685:18;;;7678:43;7737:19;;;7730:35;;;7781:19;;;7774:35;;;7825:19;;;7818:35;;;;7869:19;;;7862:35;;;4000:12:50::1;::::0;;::::1;::::0;;::::1;::::0;:26:::1;::::0;7465:19:85;;4000:191:50::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4208:1:50::1;4198:7;:11:::0;-1:-1:-1;;;;;;183:1:57::1;3124:1090:50::0;;;;;;;;:::o;4612:126::-;4671:7;4701:12;;:31;;-1:-1:-1;;;4701:31:50;;-1:-1:-1;;;;;2825:32:85;;;4701:31:50;;;2807:51:85;4693:40:50;;4701:12;;;;;:22;;2780:18:85;;4701:31:50;;;;;;;;;;;;;;;;;;;;;;4693:40;4686:47;4612:126;-1:-1:-1;;4612:126:50:o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;805:20:50:-;;;;;;;:::i;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;8110:2:85;2154:73:0::1;::::0;::::1;8092:21:85::0;8149:2;8129:18;;;8122:30;8188:34;8168:18;;;8161:62;-1:-1:-1;;;8239:18:85;;;8232:36;8285:19;;2154:73:0::1;7908:402:85::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;871:274:51:-;1025:30;1044:10;1025:18;:30::i;:::-;1061:79;1091:13;1106:5;1113:7;1122:17;1061:29;:79::i;:::-;871:274;;;;:::o;1262:107::-;1094:13:0;:11;:13::i;:::-;1333:31:51::1;1350:13;1333:16;:31::i;5263:105:50:-:0;5348:15;;5318:7;;5340:23;;-1:-1:-1;;;;;5348:15:50;5340:5;:23;:::i;6136:131::-;6247:15;;;6193:7;;-1:-1:-1;;;;;6247:15:50;;;;6216:23;6247:15;6216:5;:23;:::i;:::-;:27;;;;:::i;:::-;6215:47;;;;:::i;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;8912:2:85;1414:68:0;;;8894:21:85;;;8931:18;;;8924:30;8990:34;8970:18;;;8963:62;9042:18;;1414:68:0;8710:356:85;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;1511:531:50:-;476:11:59;;;;475:12;467:53;;;;-1:-1:-1;;;467:53:59;;9273:2:85;467:53:59;;;9255:21:85;9312:2;9292:18;;;9285:30;9351;9331:18;;;9324:58;9399:18;;467:53:59;9071:352:85;467:53:59;526:11;:18;;-1:-1:-1;;526:18:59;540:4;526:18;;;1676:31:50::1;1693:13:::0;1676:16:::1;:31::i;:::-;1713:4;:12;1720:5:::0;1713:4;:12:::1;:::i;:::-;-1:-1:-1::0;1731:6:50::1;:16;1740:7:::0;1731:6;:16:::1;:::i;:::-;;1753:15;1781:13;-1:-1:-1::0;;;;;1771:33:50::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:53;;1839:17;1827:29;;:9;:29;;;1812:114;;;::::0;-1:-1:-1;;;1812:114:50;;12086:2:85;1812:114:50::1;::::0;::::1;12068:21:85::0;12125:2;12105:18;;;12098:30;12164:34;12144:18;;;12137:62;-1:-1:-1;;;12215:18:85;;;12208:52;12277:19;;1812:114:50::1;11884:418:85::0;1812:114:50::1;1964:29;1984:9:::0;1964:17;:29:::1;:::i;:::-;1957:37;::::0;:2:::1;:37;:::i;:::-;1932:15;:63:::0;;-1:-1:-1;;1932:63:50::1;-1:-1:-1::0;;;;;1932:63:50;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2001:16:50::1;:36:::0;;-1:-1:-1;;2001:36:50::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1511:531:50:o;5140:119::-;5212:12;:42;;-1:-1:-1;;;;;5212:42:50;;;;;-1:-1:-1;;;;;;5212:42:50;;;;;;;;;5140:119::o;14:548:85:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;1130:173::-;1198:20;;-1:-1:-1;;;;;1247:31:85;;1237:42;;1227:70;;1293:1;1290;1283:12;1227:70;1130:173;;;:::o;1308:254::-;1376:6;1384;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;1476:29;1495:9;1476:29;:::i;:::-;1466:39;1552:2;1537:18;;;;1524:32;;-1:-1:-1;;;1308:254:85:o;1780:685::-;1902:6;1910;1918;1926;1934;1942;1950;1958;2011:3;1999:9;1990:7;1986:23;1982:33;1979:53;;;2028:1;2025;2018:12;1979:53;2051:29;2070:9;2051:29;:::i;:::-;2041:39;;2099:38;2133:2;2122:9;2118:18;2099:38;:::i;:::-;2089:48;;2156:38;2190:2;2179:9;2175:18;2156:38;:::i;:::-;2146:48;;2213:38;2247:2;2236:9;2232:18;2213:38;:::i;:::-;1780:685;;;;-1:-1:-1;1780:685:85;;2298:3;2283:19;;2270:33;;2350:3;2335:19;;2322:33;;-1:-1:-1;2402:3:85;2387:19;;2374:33;;-1:-1:-1;2454:3:85;2439:19;;;2426:33;;-1:-1:-1;1780:685:85;-1:-1:-1;;1780:685:85:o;2470:186::-;2529:6;2582:2;2570:9;2561:7;2557:23;2553:32;2550:52;;;2598:1;2595;2588:12;2550:52;2621:29;2640:9;2621:29;:::i;:::-;2611:39;2470:186;-1:-1:-1;;;2470:186:85:o;3099:127::-;3160:10;3155:3;3151:20;3148:1;3141:31;3191:4;3188:1;3181:15;3215:4;3212:1;3205:15;3231:719;3274:5;3327:3;3320:4;3312:6;3308:17;3304:27;3294:55;;3345:1;3342;3335:12;3294:55;3381:6;3368:20;3407:18;3444:2;3440;3437:10;3434:36;;;3450:18;;:::i;:::-;3525:2;3519:9;3493:2;3579:13;;-1:-1:-1;;3575:22:85;;;3599:2;3571:31;3567:40;3555:53;;;3623:18;;;3643:22;;;3620:46;3617:72;;;3669:18;;:::i;:::-;3709:10;3705:2;3698:22;3744:2;3736:6;3729:18;3790:3;3783:4;3778:2;3770:6;3766:15;3762:26;3759:35;3756:55;;;3807:1;3804;3797:12;3756:55;3871:2;3864:4;3856:6;3852:17;3845:4;3837:6;3833:17;3820:54;3918:1;3911:4;3906:2;3898:6;3894:15;3890:26;3883:37;3938:6;3929:15;;;;;;3231:719;;;;:::o;3955:114::-;4039:4;4032:5;4028:16;4021:5;4018:27;4008:55;;4059:1;4056;4049:12;4074:749;4178:6;4186;4194;4202;4255:3;4243:9;4234:7;4230:23;4226:33;4223:53;;;4272:1;4269;4262:12;4223:53;4295:29;4314:9;4295:29;:::i;:::-;4285:39;;4375:2;4364:9;4360:18;4347:32;4398:18;4439:2;4431:6;4428:14;4425:34;;;4455:1;4452;4445:12;4425:34;4478:50;4520:7;4511:6;4500:9;4496:22;4478:50;:::i;:::-;4468:60;;4581:2;4570:9;4566:18;4553:32;4537:48;;4610:2;4600:8;4597:16;4594:36;;;4626:1;4623;4616:12;4594:36;;4649:52;4693:7;4682:8;4671:9;4667:24;4649:52;:::i;:::-;4639:62;;;4751:2;4740:9;4736:18;4723:32;4764:29;4787:5;4764:29;:::i;:::-;4074:749;;;;-1:-1:-1;4074:749:85;;-1:-1:-1;;4074:749:85:o;4828:380::-;4907:1;4903:12;;;;4950;;;4971:61;;5025:4;5017:6;5013:17;5003:27;;4971:61;5078:2;5070:6;5067:14;5047:18;5044:38;5041:161;;5124:10;5119:3;5115:20;5112:1;5105:31;5159:4;5156:1;5149:15;5187:4;5184:1;5177:15;5041:161;;4828:380;;;:::o;5213:184::-;5283:6;5336:2;5324:9;5315:7;5311:23;5307:32;5304:52;;;5352:1;5349;5342:12;5304:52;-1:-1:-1;5375:16:85;;5213:184;-1:-1:-1;5213:184:85:o;6386:127::-;6447:10;6442:3;6438:20;6435:1;6428:31;6478:4;6475:1;6468:15;6502:4;6499:1;6492:15;6518:125;6583:9;;;6604:10;;;6601:36;;;6617:18;;:::i;7009:128::-;7076:9;;;7097:11;;;7094:37;;;7111:18;;:::i;8315:168::-;8388:9;;;8419;;8436:15;;;8430:22;;8416:37;8406:71;;8457:18;;:::i;8488:217::-;8528:1;8554;8544:132;;8598:10;8593:3;8589:20;8586:1;8579:31;8633:4;8630:1;8623:15;8661:4;8658:1;8651:15;8544:132;-1:-1:-1;8690:9:85;;8488:217::o;9554:545::-;9656:2;9651:3;9648:11;9645:448;;;9692:1;9717:5;9713:2;9706:17;9762:4;9758:2;9748:19;9832:2;9820:10;9816:19;9813:1;9809:27;9803:4;9799:38;9868:4;9856:10;9853:20;9850:47;;;-1:-1:-1;9891:4:85;9850:47;9946:2;9941:3;9937:12;9934:1;9930:20;9924:4;9920:31;9910:41;;10001:82;10019:2;10012:5;10009:13;10001:82;;;10064:17;;;10045:1;10034:13;10001:82;;;10005:3;;;9645:448;9554:545;;;:::o;10275:1352::-;10401:3;10395:10;10428:18;10420:6;10417:30;10414:56;;;10450:18;;:::i;:::-;10479:97;10569:6;10529:38;10561:4;10555:11;10529:38;:::i;:::-;10523:4;10479:97;:::i;:::-;10631:4;;10695:2;10684:14;;10712:1;10707:663;;;;11414:1;11431:6;11428:89;;;-1:-1:-1;11483:19:85;;;11477:26;11428:89;-1:-1:-1;;10232:1:85;10228:11;;;10224:24;10220:29;10210:40;10256:1;10252:11;;;10207:57;11530:81;;10677:944;;10707:663;9501:1;9494:14;;;9538:4;9525:18;;-1:-1:-1;;10743:20:85;;;10861:236;10875:7;10872:1;10869:14;10861:236;;;10964:19;;;10958:26;10943:42;;11056:27;;;;11024:1;11012:14;;;;10891:19;;10861:236;;;10865:3;11125:6;11116:7;11113:19;11110:201;;;11186:19;;;11180:26;-1:-1:-1;;11269:1:85;11265:14;;;11281:3;11261:24;11257:37;11253:42;11238:58;11223:74;;11110:201;-1:-1:-1;;;;;11357:1:85;11341:14;;;11337:22;11324:36;;-1:-1:-1;10275:1352:85:o;11632:247::-;11700:6;11753:2;11741:9;11732:7;11728:23;11724:32;11721:52;;;11769:1;11766;11759:12;11721:52;11801:9;11795:16;11820:29;11843:5;11820:29;:::i;12307:151::-;12397:4;12390:12;;;12376;;;12372:31;;12415:14;;12412:40;;;12432:18;;:::i;12463:422::-;12552:1;12595:5;12552:1;12609:270;12630:7;12620:8;12617:21;12609:270;;;12689:4;12685:1;12681:6;12677:17;12671:4;12668:27;12665:53;;;12698:18;;:::i;:::-;12748:7;12738:8;12734:22;12731:55;;;12768:16;;;;12731:55;12847:22;;;;12807:15;;;;12609:270;;;12613:3;12463:422;;;;;:::o;12890:806::-;12939:5;12969:8;12959:80;;-1:-1:-1;13010:1:85;13024:5;;12959:80;13058:4;13048:76;;-1:-1:-1;13095:1:85;13109:5;;13048:76;13140:4;13158:1;13153:59;;;;13226:1;13221:130;;;;13133:218;;13153:59;13183:1;13174:10;;13197:5;;;13221:130;13258:3;13248:8;13245:17;13242:43;;;13265:18;;:::i;:::-;-1:-1:-1;;13321:1:85;13307:16;;13336:5;;13133:218;;13435:2;13425:8;13422:16;13416:3;13410:4;13407:13;13403:36;13397:2;13387:8;13384:16;13379:2;13373:4;13370:12;13366:35;13363:77;13360:159;;;-1:-1:-1;13472:19:85;;;13504:5;;13360:159;13551:34;13576:8;13570:4;13551:34;:::i;:::-;13621:6;13617:1;13613:6;13609:19;13600:7;13597:32;13594:58;;;13632:18;;:::i;:::-;13670:20;;12890:806;-1:-1:-1;;;12890:806:85:o;13701:140::-;13759:5;13788:47;13829:4;13819:8;13815:19;13809:4;13788:47;:::i",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.8.7 <0.8.20;\n\nimport \"@openzeppelin/contracts8/access/Ownable.sol\";\nimport \"@openzeppelin/contracts8/token/ERC20/IERC20.sol\";\n\nimport \"./FeeCurrencyAdapter.sol\";\n\ncontract FeeCurrencyAdapterOwnable is FeeCurrencyAdapter, Ownable {\n  uint256[49] __gap2;\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) FeeCurrencyAdapter(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param _adaptedToken The address of the adapted token.\n   * @param _name The name of the adapted token.\n   * @param _symbol The symbol of the adapted token.\n   * @param _expectedDecimals The expected number of decimals of the adapted token.\n   */\n  function initialize(\n    address _adaptedToken,\n    string memory _name,\n    string memory _symbol,\n    uint8 _expectedDecimals\n  ) public override {\n    _transferOwnership(msg.sender);\n    FeeCurrencyAdapter.initialize(_adaptedToken, _name, _symbol, _expectedDecimals);\n  }\n\n  /**\n   * @notice Sets adapted token address.\n   * @param _adaptedToken The address of the adapted token.\n   */\n  function setAdaptedToken(address _adaptedToken) public onlyOwner {\n    _setAdaptedToken(_adaptedToken);\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/stability/FeeCurrencyAdapterOwnable.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/stability/FeeCurrencyAdapterOwnable.sol",
    "exportedSymbols": {
      "CalledByVm": [
        16290
      ],
      "Context": [
        212
      ],
      "FeeCurrencyAdapter": [
        15691
      ],
      "FeeCurrencyAdapterOwnable": [
        15756
      ],
      "FixidityLib": [
        16955
      ],
      "ICeloVersionedContract": [
        17280
      ],
      "IDecimals": [
        15764
      ],
      "IERC20": [
        190
      ],
      "IFeeCurrency": [
        15797
      ],
      "IFeeCurrencyAdapter": [
        15870
      ],
      "ISortedOracles": [
        19333
      ],
      "Initializable": [
        16991
      ],
      "Ownable": [
        112
      ]
    },
    "id": 15757,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15693,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:51"
      },
      {
        "absolutePath": "@openzeppelin/contracts8/access/Ownable.sol",
        "file": "@openzeppelin/contracts8/access/Ownable.sol",
        "id": 15694,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15757,
        "sourceUnit": 113,
        "src": "76:53:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "id": 15695,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15757,
        "sourceUnit": 191,
        "src": "130:57:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/stability/FeeCurrencyAdapter.sol",
        "file": "./FeeCurrencyAdapter.sol",
        "id": 15696,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15757,
        "sourceUnit": 15692,
        "src": "189:34:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15697,
              "name": "FeeCurrencyAdapter",
              "nameLocations": [
                "263:18:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15691,
              "src": "263:18:51"
            },
            "id": 15698,
            "nodeType": "InheritanceSpecifier",
            "src": "263:18:51"
          },
          {
            "baseName": {
              "id": 15699,
              "name": "Ownable",
              "nameLocations": [
                "283:7:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "283:7:51"
            },
            "id": 15700,
            "nodeType": "InheritanceSpecifier",
            "src": "283:7:51"
          }
        ],
        "canonicalName": "FeeCurrencyAdapterOwnable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 15756,
        "linearizedBaseContracts": [
          15756,
          112,
          212,
          15691,
          15870,
          16290,
          16991
        ],
        "name": "FeeCurrencyAdapterOwnable",
        "nameLocation": "234:25:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15704,
            "mutability": "mutable",
            "name": "__gap2",
            "nameLocation": "307:6:51",
            "nodeType": "VariableDeclaration",
            "scope": 15756,
            "src": "295:18:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 15701,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "295:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 15703,
              "length": {
                "hexValue": "3439",
                "id": 15702,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "303:2:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "295:11:51",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15713,
              "nodeType": "Block",
              "src": "511:2:51",
              "statements": []
            },
            "documentation": {
              "id": 15705,
              "nodeType": "StructuredDocumentation",
              "src": "318:142:51",
              "text": " @notice Sets initialized == true on implementation contracts\n @param test Set to true to skip implementation initialization"
            },
            "id": 15714,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15710,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15707,
                    "src": "505:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 15711,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15709,
                  "name": "FeeCurrencyAdapter",
                  "nameLocations": [
                    "486:18:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15691,
                  "src": "486:18:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "486:24:51"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15707,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "480:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 15714,
                  "src": "475:9:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15706,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:11:51"
            },
            "returnParameters": {
              "id": 15712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:0:51"
            },
            "scope": 15756,
            "src": "463:50:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15465
            ],
            "body": {
              "id": 15741,
              "nodeType": "Block",
              "src": "1019:126:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1044:3:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1048:6:51",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1044:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15727,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1025:18:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:30:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15731,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:30:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15735,
                        "name": "_adaptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15717,
                        "src": "1091:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15736,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15719,
                        "src": "1106:5:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 15737,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15721,
                        "src": "1113:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 15738,
                        "name": "_expectedDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15723,
                        "src": "1122:17:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 15732,
                        "name": "FeeCurrencyAdapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15691,
                        "src": "1061:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FeeCurrencyAdapter_$15691_$",
                          "typeString": "type(contract FeeCurrencyAdapter)"
                        }
                      },
                      "id": 15734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1080:10:51",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15465,
                      "src": "1061:29:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (address,string memory,string memory,uint8)"
                      }
                    },
                    "id": 15739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1061:79:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15740,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:79:51"
                }
              ]
            },
            "documentation": {
              "id": 15715,
              "nodeType": "StructuredDocumentation",
              "src": "517:351:51",
              "text": " @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n @param _adaptedToken The address of the adapted token.\n @param _name The name of the adapted token.\n @param _symbol The symbol of the adapted token.\n @param _expectedDecimals The expected number of decimals of the adapted token."
            },
            "functionSelector": "f6d2ee86",
            "id": 15742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "880:10:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15725,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1010:8:51"
            },
            "parameters": {
              "id": 15724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15717,
                  "mutability": "mutable",
                  "name": "_adaptedToken",
                  "nameLocation": "904:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 15742,
                  "src": "896:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15719,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "937:5:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 15742,
                  "src": "923:19:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15718,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15721,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "962:7:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 15742,
                  "src": "948:21:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15720,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15723,
                  "mutability": "mutable",
                  "name": "_expectedDecimals",
                  "nameLocation": "981:17:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 15742,
                  "src": "975:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15722,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:112:51"
            },
            "returnParameters": {
              "id": 15726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1019:0:51"
            },
            "scope": 15756,
            "src": "871:274:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15754,
              "nodeType": "Block",
              "src": "1327:42:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15751,
                        "name": "_adaptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15745,
                        "src": "1350:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15750,
                      "name": "_setAdaptedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15660,
                      "src": "1333:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:31:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15753,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:31:51"
                }
              ]
            },
            "documentation": {
              "id": 15743,
              "nodeType": "StructuredDocumentation",
              "src": "1149:110:51",
              "text": " @notice Sets adapted token address.\n @param _adaptedToken The address of the adapted token."
            },
            "functionSelector": "fadbb859",
            "id": 15755,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15748,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15747,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1317:9:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1317:9:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "1317:9:51"
              }
            ],
            "name": "setAdaptedToken",
            "nameLocation": "1271:15:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15745,
                  "mutability": "mutable",
                  "name": "_adaptedToken",
                  "nameLocation": "1295:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 15755,
                  "src": "1287:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1286:23:51"
            },
            "returnParameters": {
              "id": 15749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:51"
            },
            "scope": 15756,
            "src": "1262:107:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 15757,
        "src": "225:1146:51",
        "usedErrors": []
      }
    ],
    "src": "42:1330:51"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.220Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "params": {
          "account": "The address to query the balance of."
        },
        "returns": {
          "_0": "The balance of the specified address."
        }
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)": {
        "params": {
          "_gatewayFeeAmount": "The amount of the gateway fee (in adapted token digits). Unused.",
          "_gatewayFeeRecipient": "The recipient of the gateway fee. Unused.",
          "baseFeeAmount": "The amount of the base fee (in adapted token digits).",
          "baseFeeRecipient": "The recipient of the base fee.",
          "refundAmount": "The amount to refund (in adapted token digits).",
          "refundRecipient": "The recipient of the refund.",
          "tipAmount": "The amount to tip (in adapted token digits).",
          "tipRecipient": "The recipient of the tip."
        }
      },
      "debitGasFees(address,uint256)": {
        "params": {
          "from": "from address",
          "value": "Debited value in the adapted digits."
        }
      },
      "decimals()": {
        "returns": {
          "_0": "The total supply."
        }
      },
      "getAdaptedToken()": {
        "returns": {
          "_0": "The adapted token address."
        }
      },
      "initialize(address,string,string,uint8)": {
        "params": {
          "_adaptedToken": "The address of the adapted token.",
          "_expectedDecimals": "The expected number of decimals of the adapted token.",
          "_name": "The name of the adapted token.",
          "_symbol": "The symbol of the adapted token."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setAdaptedToken(address)": {
        "params": {
          "_adaptedToken": "The address of the adapted token."
        }
      },
      "totalSupply()": {
        "returns": {
          "_0": "The total supply."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Gets the balance of the specified address with correct digits."
      },
      "constructor": {
        "notice": "Sets initialized == true on implementation contracts"
      },
      "creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)": {
        "notice": "Downscales value to the adapted token's native digits and credits it."
      },
      "debitGasFees(address,uint256)": {
        "notice": "Downscales value to the adapted token's native digits and debits it."
      },
      "decimals()": {
        "notice": "Gets the total supply with correct digits."
      },
      "getAdaptedToken()": {
        "notice": "Returns adapted token address."
      },
      "initialize(address,string,string,uint8)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "setAdaptedToken(address)": {
        "notice": "Sets adapted token address."
      },
      "totalSupply()": {
        "notice": "Gets the total supply with correct digits."
      }
    },
    "version": 1
  }
}