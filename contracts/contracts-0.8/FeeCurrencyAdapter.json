{
  "contractName": "FeeCurrencyAdapter",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "adaptedToken",
      "outputs": [
        {
          "internalType": "contract IFeeCurrency",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "digitDifference",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectedDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_adaptedToken",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_expectedDecimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "debitGasFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "refundRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tipRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gatewayFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseFeeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "refundAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tipAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gatewayFeeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseFeeAmount",
          "type": "uint256"
        }
      ],
      "name": "creditGasFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdaptedToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"adaptedToken\",\"outputs\":[{\"internalType\":\"contract IFeeCurrency\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"refundRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tipRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gatewayFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tipAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gatewayFeeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseFeeAmount\",\"type\":\"uint256\"}],\"name\":\"creditGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"debitGasFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"digitDifference\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectedDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdaptedToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adaptedToken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_expectedDecimals\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"params\":{\"account\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"The balance of the specified address.\"}},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"_gatewayFeeAmount\":\"The amount of the gateway fee (in adapted token digits). Unused.\",\"_gatewayFeeRecipient\":\"The recipient of the gateway fee. Unused.\",\"baseFeeAmount\":\"The amount of the base fee (in adapted token digits).\",\"baseFeeRecipient\":\"The recipient of the base fee.\",\"refundAmount\":\"The amount to refund (in adapted token digits).\",\"refundRecipient\":\"The recipient of the refund.\",\"tipAmount\":\"The amount to tip (in adapted token digits).\",\"tipRecipient\":\"The recipient of the tip.\"}},\"debitGasFees(address,uint256)\":{\"params\":{\"from\":\"from address\",\"value\":\"Debited value in the adapted digits.\"}},\"decimals()\":{\"returns\":{\"_0\":\"The total supply.\"}},\"getAdaptedToken()\":{\"returns\":{\"_0\":\"The adapted token address.\"}},\"initialize(address,string,string,uint8)\":{\"params\":{\"_adaptedToken\":\"The address of the adapted token.\",\"_expectedDecimals\":\"The expected number of decimals of the adapted token.\",\"_name\":\"The name of the adapted token.\",\"_symbol\":\"The symbol of the adapted token.\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"The total supply.\"}}},\"stateVariables\":{\"debited\":{\"return\":\"The amount that is debited after calling debitGasFees() and before creditGasFees().\",\"returns\":{\"_0\":\"The amount that is debited after calling debitGasFees() and before creditGasFees().\"}},\"digitDifference\":{\"return\":\"The multiplier that should be used when upscaling and downscaling. This is the result of 10**(expectedDecimals - getAdaptedToken().decimals()).\",\"returns\":{\"_0\":\"The multiplier that should be used when upscaling and downscaling. This is the result of 10**(expectedDecimals - getAdaptedToken().decimals()).\"}},\"expectedDecimals\":{\"return\":\"Same as decimals.\",\"returns\":{\"_0\":\"Same as decimals.\"}},\"name\":{\"return\":\"The name of the adapted token.\",\"returns\":{\"_0\":\"The name of the adapted token.\"}},\"symbol\":{\"return\":\"The symbol of adapted token.\",\"returns\":{\"_0\":\"The symbol of adapted token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Gets the balance of the specified address with correct digits.\"},\"constructor\":{\"notice\":\"Sets initialized == true on implementation contracts\"},\"creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Downscales value to the adapted token's native digits and credits it.\"},\"debitGasFees(address,uint256)\":{\"notice\":\"Downscales value to the adapted token's native digits and debits it.\"},\"decimals()\":{\"notice\":\"Gets the total supply with correct digits.\"},\"getAdaptedToken()\":{\"notice\":\"Returns adapted token address.\"},\"initialize(address,string,string,uint8)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy._expectedDecimals must be bigger than _adaptedToken.decimals().\"},\"totalSupply()\":{\"notice\":\"Gets the total supply with correct digits.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/stability/FeeCurrencyAdapter.sol\":\"FeeCurrencyAdapter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"project:/contracts-0.8/stability/FeeCurrencyAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../contracts/common/CalledByVm.sol\\\";\\nimport \\\"../../contracts/common/Initializable.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../../contracts/common/FixidityLib.sol\\\";\\nimport \\\"../../contracts/stability/interfaces/ISortedOracles.sol\\\";\\nimport \\\"./interfaces/IFeeCurrency.sol\\\";\\nimport \\\"./interfaces/IDecimals.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyAdapter.sol\\\";\\n\\ncontract FeeCurrencyAdapter is Initializable, CalledByVm, IFeeCurrencyAdapter {\\n  IFeeCurrency public adaptedToken;\\n\\n  uint96 public digitDifference;\\n\\n  uint256 public debited = 0;\\n\\n  string public name;\\n  string public symbol;\\n\\n  uint8 public expectedDecimals;\\n\\n  uint256[44] __gap;\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param _adaptedToken The address of the adapted token.\\n   * @param _name The name of the adapted token.\\n   * @param _symbol The symbol of the adapted token.\\n   * @param _expectedDecimals The expected number of decimals of the adapted token.\\n   * @notice _expectedDecimals must be bigger than _adaptedToken.decimals().\\n   */\\n  function initialize(\\n    address _adaptedToken,\\n    string memory _name,\\n    string memory _symbol,\\n    uint8 _expectedDecimals\\n  ) public virtual initializer {\\n    _setAdaptedToken(_adaptedToken);\\n    name = _name;\\n    symbol = _symbol;\\n    uint8 _decimals = IDecimals(_adaptedToken).decimals();\\n    require(\\n      _decimals < _expectedDecimals,\\n      \\\"Decimals of adapted token must be < expected decimals.\\\"\\n    );\\n    digitDifference = uint96(10 ** (_expectedDecimals - _decimals));\\n    expectedDecimals = _expectedDecimals;\\n  }\\n\\n  /**\\n   * Downscales value to the adapted token's native digits and debits it.\\n   * @param from from address\\n   * @param value Debited value in the adapted digits.\\n   */\\n  function debitGasFees(address from, uint256 value) external onlyVm {\\n    uint256 valueScaled = downscale(value);\\n    require(valueScaled > 0, \\\"Scaled debit value must be > 0.\\\");\\n    debited = valueScaled;\\n    adaptedToken.debitGasFees(from, valueScaled);\\n  }\\n\\n  /**\\n   * Downscales value to the adapted token's native digits and credits it.\\n   * @param refundRecipient The recipient of the refund.\\n   * @param tipRecipient The recipient of the tip.\\n   * @param _gatewayFeeRecipient The recipient of the gateway fee. Unused.\\n   * @param baseFeeRecipient The recipient of the base fee.\\n   * @param refundAmount The amount to refund (in adapted token digits).\\n   * @param tipAmount The amount to tip (in adapted token digits).\\n   * @param _gatewayFeeAmount The amount of the gateway fee (in adapted token digits). Unused.\\n   * @param baseFeeAmount The amount of the base fee (in adapted token digits).\\n   */\\n  function creditGasFees(\\n    address refundRecipient,\\n    address tipRecipient,\\n    address _gatewayFeeRecipient,\\n    address baseFeeRecipient,\\n    uint256 refundAmount,\\n    uint256 tipAmount,\\n    uint256 _gatewayFeeAmount,\\n    uint256 baseFeeAmount\\n  ) external onlyVm {\\n    if (debited == 0) {\\n      // When eth.estimateGas is called, this function is called but we don't want to credit anything.\\n      return;\\n    }\\n\\n    uint256 refundScaled = downscale(refundAmount);\\n    uint256 tipTxFeeScaled = downscale(tipAmount);\\n    uint256 baseTxFeeScaled = downscale(baseFeeAmount);\\n\\n    require(\\n      refundScaled + tipTxFeeScaled + baseTxFeeScaled <= debited,\\n      \\\"Cannot credit more than debited.\\\"\\n    );\\n\\n    uint256 roundingError = debited - (refundScaled + tipTxFeeScaled + baseTxFeeScaled);\\n\\n    if (roundingError > 0) {\\n      baseTxFeeScaled += roundingError;\\n    }\\n    adaptedToken.creditGasFees(\\n      refundRecipient,\\n      tipRecipient,\\n      address(0),\\n      baseFeeRecipient,\\n      refundScaled,\\n      tipTxFeeScaled,\\n      0,\\n      baseTxFeeScaled\\n    );\\n\\n    debited = 0;\\n  }\\n\\n  /**\\n   * @notice Returns adapted token address.\\n   * @return The adapted token address.\\n   */\\n  function getAdaptedToken() external view returns (address) {\\n    return address(adaptedToken);\\n  }\\n\\n  /**\\n   * @notice Gets the balance of the specified address with correct digits.\\n   * @param account The address to query the balance of.\\n   * @return The balance of the specified address.\\n   */\\n  function balanceOf(address account) external view returns (uint256) {\\n    return upscale(adaptedToken.balanceOf(account));\\n  }\\n\\n  /**\\n   * @notice Gets the total supply with correct digits.\\n   * @return The total supply.\\n   */\\n  function totalSupply() external view returns (uint256) {\\n    return upscale(adaptedToken.totalSupply());\\n  }\\n\\n  /**\\n   * @notice Gets the total supply with correct digits.\\n   * @return The total supply.\\n   */\\n  function decimals() external view returns (uint8) {\\n    return expectedDecimals;\\n  }\\n\\n  function _setAdaptedToken(address _adaptedToken) internal virtual {\\n    adaptedToken = IFeeCurrency(_adaptedToken);\\n  }\\n\\n  function upscale(uint256 value) internal view returns (uint256) {\\n    return value * digitDifference;\\n  }\\n\\n  /**\\n   * @notice Downscales value to the adapted token's native digits.\\n   * @dev Downscale is rounding up in favour of protocol. User possibly can pay a bit more than expected (up to 1 unit of a token).\\n   * Example:\\n   * USDC has 6 decimals and in such case user can pay up to 0.000001 USDC more than expected.\\n   * WBTC (currently not supported by Celo chain as fee currency) has 8 decimals and in such case user can pay up to 0.00000001 WBTC more than expected.\\n   * Considering the current price of WBTC, it's less than 0.0005 USD. Even when WBTC price would be 1 mil USD, it's still would be only 0.01 USD.\\n   * In general it is a very small amount and it is acceptable to round up in favor of the protocol.\\n   * @param value The value to downscale.\\n   */\\n  function downscale(uint256 value) internal view returns (uint256) {\\n    return (value + digitDifference - 1) / digitDifference;\\n  }\\n}\\n\",\"keccak256\":\"0x4c13e1c6bbe3dedb83dcf35abb4a6a96be4c673a5a4f7e928df54a7c384a779b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/stability/interfaces/IDecimals.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.8.13;\\n\\ninterface IDecimals {\\n  function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x3198787b08f9a2986ea5f3a8e6714cd859433030bc973baf271ccd9334efa303\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/stability/interfaces/IFeeCurrency.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\ninterface IFeeCurrency is IERC20 {\\n  /*\\n       This interface should be implemented for tokens which are supposed to\\n       act as fee currencies on the Celo blockchain, meaning that they can be\\n       used to pay gas fees for CIP-64 transactions (and some older tx types).\\n       See https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0064.md\\n\\n       Before executing a tx with non-empty feeCurrency field, the fee\\n       currency's `debitGasFees` function is called to reserve the maximum\\n       amount that tx can spend on gas. After the tx has been executed, the\\n       `creditGasFees` function is called to refund the unused gas and credit\\n       the spent fees to the correct recipients. Events which are raised inside\\n       these functions will show up for every transaction using the token as a\\n       fee currency.\\n\\n       Requirements:\\n       - The functions will be called by the blockchain client with `msg.sender\\n         == address(0)`. If this condition is not met, the functions must\\n         revert to prevent malicious users from crediting their accounts directly.\\n       - `creditGasFees` must credit all specified amounts. If it impossible to\\n         credit one of the recipients for some reason, add the amount to the\\n         value credited to the first valid recipient. This is important to keep\\n         the debited and credited amounts consistent.\\n    */\\n\\n  // Called before transaction execution to reserve the maximum amount of gas\\n  // that can be used by the transaction.\\n  // - The implementation must reduce `from`'s balance by `value`.\\n  // - Must revert if `msg.sender` is not the zero address.\\n  function debitGasFees(address from, uint256 value) external;\\n\\n  /**\\n   * Called after transaction execution to refund the unused gas and credit the\\n   * spent fees to the correct recipients.\\n   * @param refundRecipient The recipient of the refund.\\n   * @param tipRecipient The recipient of the tip.\\n   * @param _gatewayFeeRecipient The recipient of the gateway fee. Unused.\\n   * @param baseFeeRecipient The recipient of the base fee.\\n   * @param refundAmount The amount to refund.\\n   * @param tipAmount The amount to tip.\\n   * @param _gatewayFeeAmount The amount of the gateway fee. Unused.\\n   * @param baseFeeAmount The amount of the base fee.\\n   */\\n  function creditGasFees(\\n    address refundRecipient,\\n    address tipRecipient,\\n    address _gatewayFeeRecipient,\\n    address baseFeeRecipient,\\n    uint256 refundAmount,\\n    uint256 tipAmount,\\n    uint256 _gatewayFeeAmount,\\n    uint256 baseFeeAmount\\n  ) external;\\n}\\n\",\"keccak256\":\"0xd135815cf6178f7c59a196330c93a14e9eefcbdcc7e7544cc82b71bebc0d4df3\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/stability/interfaces/IFeeCurrencyAdapter.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\ninterface IFeeCurrencyAdapter {\\n  /**\\n   * @notice Same as debitGasFees in IFeeCurrency, always using the number of decimals the evm expects.\\n   */\\n  function debitGasFees(address from, uint256 value) external;\\n\\n  /**\\n   * @notice Same as creditGasFees in IFeeCurrency, always using the number of decimals the evm expects.\\n   */\\n  function creditGasFees(\\n    address refundRecipient,\\n    address tipRecipient,\\n    address _gatewayFeeRecipient,\\n    address baseFeeRecipient,\\n    uint256 refundAmount,\\n    uint256 tipAmount,\\n    uint256 _gatewayFeeAmount,\\n    uint256 baseFeeAmount\\n  ) external;\\n\\n  /**\\n   * @return The address of the adapted token.\\n   */\\n  function getAdaptedToken() external view returns (address);\\n\\n  /**\\n   * @return The multiplier that should be used when upscaling and downscaling. This is the result of 10**(expectedDecimals - getAdaptedToken().decimals()).\\n   */\\n  function digitDifference() external view returns (uint96);\\n\\n  /**\\n   * @return The amount that is debited after calling debitGasFees() and before creditGasFees().\\n   */\\n  function debited() external view returns (uint256);\\n\\n  /**\\n   * @return The name of the adapted token.\\n   */\\n  function name() external view returns (string memory);\\n\\n  /**\\n   * @return The symbol of adapted token.\\n   */\\n  function symbol() external view returns (string memory);\\n\\n  /**\\n   * @return The decimals expected by the vm.\\n   */\\n  function decimals() external view returns (uint8);\\n\\n  /**\\n   * @return Same as decimals.\\n   */\\n  function expectedDecimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x94fe3be4d3fdcb2ebc633ad634c0ff1a5cdb65ed139e3ccee2ffcd9d00dbbcb1\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/CalledByVm.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract CalledByVm {\\n  modifier onlyVm() {\\n    require(msg.sender == address(0), \\\"Only VM can call\\\");\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0xb94d2b580a505f5d4ef51bb14b12b6fa19d69e4fa94c96f2f105091673a0a0a4\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/FixidityLib.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n  struct Fraction {\\n    uint256 value;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n  /**\\n   * @notice Number of positions that the comma is shifted to the right.\\n   */\\n  function digits() internal pure returns (uint8) {\\n    return 24;\\n  }\\n\\n  /**\\n   * @notice This is 1 in the fixed point units used in this library.\\n   * @dev Test fixed1() equals 10^digits()\\n   * Hardcoded to 24 digits.\\n   */\\n  function fixed1() internal pure returns (Fraction memory) {\\n    return Fraction(FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n   * struct.\\n   * @param x Number that already represents a 24-decimal fraction.\\n   * @return A Fraction struct with contents x.\\n   */\\n  function wrap(uint256 x) internal pure returns (Fraction memory) {\\n    return Fraction(x);\\n  }\\n\\n  /**\\n   * @notice Unwraps the uint256 inside of a Fraction struct.\\n   */\\n  function unwrap(Fraction memory x) internal pure returns (uint256) {\\n    return x.value;\\n  }\\n\\n  /**\\n   * @notice The amount of decimals lost on each multiplication operand.\\n   * @dev Test mulPrecision() equals sqrt(fixed1)\\n   */\\n  function mulPrecision() internal pure returns (uint256) {\\n    return 1000000000000;\\n  }\\n\\n  /**\\n   * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n   * @dev\\n   * Test maxNewFixed() equals maxUint256() / fixed1()\\n   */\\n  function maxNewFixed() internal pure returns (uint256) {\\n    return 115792089237316195423570985008687907853269984665640564;\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 to fixed point Fraction\\n   * @dev Test newFixed(0) returns 0\\n   * Test newFixed(1) returns fixed1()\\n   * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n   * Test newFixed(maxNewFixed()+1) fails\\n   */\\n  function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n    require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n    return Fraction(x * FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 in the fixed point representation of this\\n   * library to a non decimal. All decimal digits will be truncated.\\n   */\\n  function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n    return x.value / FIXED1_UINT;\\n  }\\n\\n  /**\\n   * @notice Converts two uint256 representing a fraction to fixed point units,\\n   * equivalent to multiplying dividend and divisor by 10^digits().\\n   * @param numerator numerator must be <= maxNewFixed()\\n   * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n   * @dev\\n   * Test newFixedFraction(1,0) fails\\n   * Test newFixedFraction(0,1) returns 0\\n   * Test newFixedFraction(1,1) returns fixed1()\\n   * Test newFixedFraction(1,fixed1()) returns 1\\n   */\\n  function newFixedFraction(\\n    uint256 numerator,\\n    uint256 denominator\\n  ) internal pure returns (Fraction memory) {\\n    Fraction memory convertedNumerator = newFixed(numerator);\\n    Fraction memory convertedDenominator = newFixed(denominator);\\n    return divide(convertedNumerator, convertedDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the integer part of a fixed point number.\\n   * @dev\\n   * Test integer(0) returns 0\\n   * Test integer(fixed1()) returns fixed1()\\n   * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n   */\\n  function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice Returns the fractional part of a fixed point number.\\n   * In the case of a negative number the fractional is also negative.\\n   * @dev\\n   * Test fractional(0) returns 0\\n   * Test fractional(fixed1()) returns 0\\n   * Test fractional(fixed1()-1) returns 10^24-1\\n   */\\n  function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x+y.\\n   * @dev The maximum value that can be safely used as an addition operator is defined as\\n   * maxFixedAdd = maxUint256()-1 / 2, or\\n   * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n   * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n   * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n   */\\n  function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    uint256 z = x.value + y.value;\\n    require(z >= x.value, \\\"add overflow detected\\\");\\n    return Fraction(z);\\n  }\\n\\n  /**\\n   * @notice x-y.\\n   * @dev\\n   * Test subtract(6, 10) fails\\n   */\\n  function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n    return Fraction(x.value - y.value);\\n  }\\n\\n  /**\\n   * @notice x*y. If any of the operators is higher than the max multiplier value it\\n   * might overflow.\\n   * @dev The maximum value that can be safely used as a multiplication operator\\n   * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n   * or 340282366920938463463374607431768211455999999999999\\n   * Test multiply(0,0) returns 0\\n   * Test multiply(maxFixedMul,0) returns 0\\n   * Test multiply(0,maxFixedMul) returns 0\\n   * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n   * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n   * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n   */\\n  function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    if (x.value == 0 || y.value == 0) return Fraction(0);\\n    if (y.value == FIXED1_UINT) return x;\\n    if (x.value == FIXED1_UINT) return y;\\n\\n    // Separate into integer and fractional parts\\n    // x = x1 + x2, y = y1 + y2\\n    uint256 x1 = integer(x).value / FIXED1_UINT;\\n    uint256 x2 = fractional(x).value;\\n    uint256 y1 = integer(y).value / FIXED1_UINT;\\n    uint256 y2 = fractional(y).value;\\n\\n    // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n    uint256 x1y1 = x1 * y1;\\n    if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n    // x1y1 needs to be multiplied back by fixed1\\n    // solium-disable-next-line mixedcase\\n    uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n    if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n    x1y1 = fixed_x1y1;\\n\\n    uint256 x2y1 = x2 * y1;\\n    if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n    uint256 x1y2 = x1 * y2;\\n    if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n    x2 = x2 / mulPrecision();\\n    y2 = y2 / mulPrecision();\\n    uint256 x2y2 = x2 * y2;\\n    if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n    // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n    Fraction memory result = Fraction(x1y1);\\n    result = add(result, Fraction(x2y1)); // Add checks for overflow\\n    result = add(result, Fraction(x1y2)); // Add checks for overflow\\n    result = add(result, Fraction(x2y2)); // Add checks for overflow\\n    return result;\\n  }\\n\\n  /**\\n   * @notice 1/x\\n   * @dev\\n   * Test reciprocal(0) fails\\n   * Test reciprocal(fixed1()) returns fixed1()\\n   * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n   * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n   * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n   */\\n  function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n    require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n    return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x/y. If the dividend is higher than the max dividend value, it\\n   * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n   * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n   * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n   * This yields the value 115792089237316195423570985008687907853269984665640564.\\n   * Test maxNewFixed equals maxUint256()/fixed1()\\n   * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n   * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n   * Test divide(fixed1(),0) fails\\n   * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n   * Test divide(maxNewFixed+1,1) throws\\n   */\\n  function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(y.value != 0, \\\"can't divide by 0\\\");\\n    uint256 X = x.value * FIXED1_UINT;\\n    require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n    return Fraction(X / y.value);\\n  }\\n\\n  /**\\n   * @notice x > y\\n   */\\n  function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value > y.value;\\n  }\\n\\n  /**\\n   * @notice x >= y\\n   */\\n  function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value >= y.value;\\n  }\\n\\n  /**\\n   * @notice x < y\\n   */\\n  function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value < y.value;\\n  }\\n\\n  /**\\n   * @notice x <= y\\n   */\\n  function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value <= y.value;\\n  }\\n\\n  /**\\n   * @notice x == y\\n   */\\n  function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value == y.value;\\n  }\\n\\n  /**\\n   * @notice x <= 1\\n   */\\n  function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n    return lte(x, fixed1());\\n  }\\n}\\n\",\"keccak256\":\"0x546944b106cf70ad6f793e71dffd41733bec3e03ca820a3d08213fc795c042b0\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x6080604052600060025534801561001557600080fd5b50604051610eb5380380610eb58339810160408190526100349161004f565b8080610048576000805460ff191660011790555b5050610078565b60006020828403121561006157600080fd5b8151801515811461007157600080fd5b9392505050565b610e2e806100876000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636a30b2531161008c578063989516db11610066578063989516db146101d0578063cc23a4a314610200578063eeee9dc21461020d578063f6d2ee861461022357600080fd5b80636a30b253146101a257806370a08231146101b557806395d89b41146101c857600080fd5b8063313ce567116100c8578063313ce567146101405780633cf034121461015957806358cf9672146101625780635ee5c82a1461017757600080fd5b806306fdde03146100ef578063158ef93e1461010d57806318160ddd1461012a575b600080fd5b6100f7610236565b604051610104919061088e565b60405180910390f35b60005461011a9060ff1681565b6040519015158152602001610104565b6101326102c4565b604051908152602001610104565b60055460ff165b60405160ff9091168152602001610104565b61013260025481565b6101756101703660046108f8565b61034a565b005b60015461018a906001600160601b031681565b6040516001600160601b039091168152602001610104565b6101756101b0366004610922565b610463565b6101326101c336600461099a565b610622565b6100f761067a565b6000546101e89061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6005546101479060ff1681565b60005461010090046001600160a01b03166101e8565b610175610231366004610a71565b610687565b6003805461024390610af8565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610af8565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b505050505081565b6000610345600060019054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103409190610b32565b610844565b905090565b33156103905760405162461bcd60e51b815260206004820152601060248201526f13db9b1e4815934818d85b8818d85b1b60821b60448201526064015b60405180910390fd5b600061039b8261085d565b9050600081116103ed5760405162461bcd60e51b815260206004820152601f60248201527f5363616c65642064656269742076616c7565206d757374206265203e20302e006044820152606401610387565b6002819055600054604051632c67cb3960e11b81526001600160a01b03858116600483015260248201849052610100909204909116906358cf967290604401600060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b50505050505050565b33156104a45760405162461bcd60e51b815260206004820152601060248201526f13db9b1e4815934818d85b8818d85b1b60821b6044820152606401610387565b600254156106185760006104b78561085d565b905060006104c48561085d565b905060006104d18461085d565b600254909150816104e28486610b61565b6104ec9190610b61565b111561053a5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420637265646974206d6f7265207468616e20646562697465642e6044820152606401610387565b6000816105478486610b61565b6105519190610b61565b60025461055e9190610b74565b90508015610573576105708183610b61565b91505b60008054604051636a30b25360e01b81526001600160a01b038f811660048301528e81166024830152604482018490528c811660648301526084820188905260a4820187905260c482019390935260e4810185905261010090910490911690636a30b2539061010401600060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505060006002555050505050505b5050505050505050565b600080546040516370a0823160e01b81526001600160a01b03848116600483015261067492610100900416906370a0823190602401602060405180830381865afa15801561031c573d6000803e3d6000fd5b92915050565b6004805461024390610af8565b60005460ff16156106da5760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a6564000000006044820152606401610387565b600080546001600160a81b0319166101006001600160a01b0387160217600117905560036107088482610bd6565b5060046107158382610bd6565b506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190610c96565b90508160ff168160ff16106107f05760405162461bcd60e51b815260206004820152603660248201527f446563696d616c73206f66206164617074656420746f6b656e206d757374206260448201527532901e1032bc3832b1ba32b2103232b1b4b6b0b6399760511b6064820152608401610387565b6107fa8183610cb3565b61080590600a610db0565b600180546bffffffffffffffffffffffff19166001600160601b0392909216919091179055506005805460ff191660ff92909216919091179055505050565b600154600090610674906001600160601b031683610dbf565b600180546000916001600160601b039091169061087a8285610b61565b6108849190610b74565b6106749190610dd6565b600060208083528351808285015260005b818110156108bb5785810183015185820160400152820161089f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108f357600080fd5b919050565b6000806040838503121561090b57600080fd5b610914836108dc565b946020939093013593505050565b600080600080600080600080610100898b03121561093f57600080fd5b610948896108dc565b975061095660208a016108dc565b965061096460408a016108dc565b955061097260608a016108dc565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b6000602082840312156109ac57600080fd5b6109b5826108dc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109e357600080fd5b813567ffffffffffffffff808211156109fe576109fe6109bc565b604051601f8301601f19908116603f01168101908282118183101715610a2657610a266109bc565b81604052838152866020858801011115610a3f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60ff81168114610a6e57600080fd5b50565b60008060008060808587031215610a8757600080fd5b610a90856108dc565b9350602085013567ffffffffffffffff80821115610aad57600080fd5b610ab9888389016109d2565b94506040870135915080821115610acf57600080fd5b50610adc878288016109d2565b9250506060850135610aed81610a5f565b939692955090935050565b600181811c90821680610b0c57607f821691505b602082108103610b2c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610b4457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561067457610674610b4b565b8181038181111561067457610674610b4b565b601f821115610bd157600081815260208120601f850160051c81016020861015610bae5750805b601f850160051c820191505b81811015610bcd57828155600101610bba565b5050505b505050565b815167ffffffffffffffff811115610bf057610bf06109bc565b610c0481610bfe8454610af8565b84610b87565b602080601f831160018114610c395760008415610c215750858301515b600019600386901b1c1916600185901b178555610bcd565b600085815260208120601f198616915b82811015610c6857888601518255948401946001909101908401610c49565b5085821015610c865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610ca857600080fd5b81516109b581610a5f565b60ff828116828216039081111561067457610674610b4b565b600181815b80851115610d07578160001904821115610ced57610ced610b4b565b80851615610cfa57918102915b93841c9390800290610cd1565b509250929050565b600082610d1e57506001610674565b81610d2b57506000610674565b8160018114610d415760028114610d4b57610d67565b6001915050610674565b60ff841115610d5c57610d5c610b4b565b50506001821b610674565b5060208310610133831016604e8410600b8410161715610d8a575081810a610674565b610d948383610ccc565b8060001904821115610da857610da8610b4b565b029392505050565b60006109b560ff841683610d0f565b808202811582820484141761067457610674610b4b565b600082610df357634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207d6d33aa887a49c0be6ac8296ac2dac010d77fb0163c4d93366f6d3e1058e7e164736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636a30b2531161008c578063989516db11610066578063989516db146101d0578063cc23a4a314610200578063eeee9dc21461020d578063f6d2ee861461022357600080fd5b80636a30b253146101a257806370a08231146101b557806395d89b41146101c857600080fd5b8063313ce567116100c8578063313ce567146101405780633cf034121461015957806358cf9672146101625780635ee5c82a1461017757600080fd5b806306fdde03146100ef578063158ef93e1461010d57806318160ddd1461012a575b600080fd5b6100f7610236565b604051610104919061088e565b60405180910390f35b60005461011a9060ff1681565b6040519015158152602001610104565b6101326102c4565b604051908152602001610104565b60055460ff165b60405160ff9091168152602001610104565b61013260025481565b6101756101703660046108f8565b61034a565b005b60015461018a906001600160601b031681565b6040516001600160601b039091168152602001610104565b6101756101b0366004610922565b610463565b6101326101c336600461099a565b610622565b6100f761067a565b6000546101e89061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610104565b6005546101479060ff1681565b60005461010090046001600160a01b03166101e8565b610175610231366004610a71565b610687565b6003805461024390610af8565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610af8565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b505050505081565b6000610345600060019054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103409190610b32565b610844565b905090565b33156103905760405162461bcd60e51b815260206004820152601060248201526f13db9b1e4815934818d85b8818d85b1b60821b60448201526064015b60405180910390fd5b600061039b8261085d565b9050600081116103ed5760405162461bcd60e51b815260206004820152601f60248201527f5363616c65642064656269742076616c7565206d757374206265203e20302e006044820152606401610387565b6002819055600054604051632c67cb3960e11b81526001600160a01b03858116600483015260248201849052610100909204909116906358cf967290604401600060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b50505050505050565b33156104a45760405162461bcd60e51b815260206004820152601060248201526f13db9b1e4815934818d85b8818d85b1b60821b6044820152606401610387565b600254156106185760006104b78561085d565b905060006104c48561085d565b905060006104d18461085d565b600254909150816104e28486610b61565b6104ec9190610b61565b111561053a5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420637265646974206d6f7265207468616e20646562697465642e6044820152606401610387565b6000816105478486610b61565b6105519190610b61565b60025461055e9190610b74565b90508015610573576105708183610b61565b91505b60008054604051636a30b25360e01b81526001600160a01b038f811660048301528e81166024830152604482018490528c811660648301526084820188905260a4820187905260c482019390935260e4810185905261010090910490911690636a30b2539061010401600060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505060006002555050505050505b5050505050505050565b600080546040516370a0823160e01b81526001600160a01b03848116600483015261067492610100900416906370a0823190602401602060405180830381865afa15801561031c573d6000803e3d6000fd5b92915050565b6004805461024390610af8565b60005460ff16156106da5760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a6564000000006044820152606401610387565b600080546001600160a81b0319166101006001600160a01b0387160217600117905560036107088482610bd6565b5060046107158382610bd6565b506000846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190610c96565b90508160ff168160ff16106107f05760405162461bcd60e51b815260206004820152603660248201527f446563696d616c73206f66206164617074656420746f6b656e206d757374206260448201527532901e1032bc3832b1ba32b2103232b1b4b6b0b6399760511b6064820152608401610387565b6107fa8183610cb3565b61080590600a610db0565b600180546bffffffffffffffffffffffff19166001600160601b0392909216919091179055506005805460ff191660ff92909216919091179055505050565b600154600090610674906001600160601b031683610dbf565b600180546000916001600160601b039091169061087a8285610b61565b6108849190610b74565b6106749190610dd6565b600060208083528351808285015260005b818110156108bb5785810183015185820160400152820161089f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108f357600080fd5b919050565b6000806040838503121561090b57600080fd5b610914836108dc565b946020939093013593505050565b600080600080600080600080610100898b03121561093f57600080fd5b610948896108dc565b975061095660208a016108dc565b965061096460408a016108dc565b955061097260608a016108dc565b979a969950949760808101359660a0820135965060c0820135955060e0909101359350915050565b6000602082840312156109ac57600080fd5b6109b5826108dc565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109e357600080fd5b813567ffffffffffffffff808211156109fe576109fe6109bc565b604051601f8301601f19908116603f01168101908282118183101715610a2657610a266109bc565b81604052838152866020858801011115610a3f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60ff81168114610a6e57600080fd5b50565b60008060008060808587031215610a8757600080fd5b610a90856108dc565b9350602085013567ffffffffffffffff80821115610aad57600080fd5b610ab9888389016109d2565b94506040870135915080821115610acf57600080fd5b50610adc878288016109d2565b9250506060850135610aed81610a5f565b939692955090935050565b600181811c90821680610b0c57607f821691505b602082108103610b2c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610b4457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561067457610674610b4b565b8181038181111561067457610674610b4b565b601f821115610bd157600081815260208120601f850160051c81016020861015610bae5750805b601f850160051c820191505b81811015610bcd57828155600101610bba565b5050505b505050565b815167ffffffffffffffff811115610bf057610bf06109bc565b610c0481610bfe8454610af8565b84610b87565b602080601f831160018114610c395760008415610c215750858301515b600019600386901b1c1916600185901b178555610bcd565b600085815260208120601f198616915b82811015610c6857888601518255948401946001909101908401610c49565b5085821015610c865787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610ca857600080fd5b81516109b581610a5f565b60ff828116828216039081111561067457610674610b4b565b600181815b80851115610d07578160001904821115610ced57610ced610b4b565b80851615610cfa57918102915b93841c9390800290610cd1565b509250929050565b600082610d1e57506001610674565b81610d2b57506000610674565b8160018114610d415760028114610d4b57610d67565b6001915050610674565b60ff841115610d5c57610d5c610b4b565b50506001821b610674565b5060208310610133831016604e8410600b8410161715610d8a575081810a610674565b610d948383610ccc565b8060001904821115610da857610da8610b4b565b029392505050565b60006109b560ff841683610d0f565b808202811582820484141761067457610674610b4b565b600082610df357634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207d6d33aa887a49c0be6ac8296ac2dac010d77fb0163c4d93366f6d3e1058e7e164736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:293:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:85",
                "type": ""
              }
            ],
            "src": "14:277:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13075:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:427:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:85",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:85"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:85"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:85",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:85"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:85"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:85"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:85"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:85",
                    "statements": []
                  },
                  "src": "294:140:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "458:9:85"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "469:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "454:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "454:22:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "478:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "450:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "450:31:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "443:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:42:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "443:42:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "494:62:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "529:6:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "537:2:85",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "525:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "525:15:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "546:2:85",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "542:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "542:7:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "521:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "521:29:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:45:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "553:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:54:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "494:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:85",
                "type": ""
              }
            ],
            "src": "14:548:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "662:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "672:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "684:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "695:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "680:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "672:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "714:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "739:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "732:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "732:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "725:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "725:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "707:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "707:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "631:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "642:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "653:4:85",
                "type": ""
              }
            ],
            "src": "567:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "860:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "870:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "882:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "893:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "870:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "923:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "905:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "905:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "829:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "840:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "851:4:85",
                "type": ""
              }
            ],
            "src": "759:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1038:87:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1048:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1060:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1071:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1056:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1056:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1048:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1090:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1113:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1101:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1101:17:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1083:36:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1007:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1018:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1029:4:85",
                "type": ""
              }
            ],
            "src": "941:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1179:124:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1189:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1211:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1198:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1198:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1189:5:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1281:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1290:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1293:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1283:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1283:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1283:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1240:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1251:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1266:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1271:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1262:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1262:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1275:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1258:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1258:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1247:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1247:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1237:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1237:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1230:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1230:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1227:70:85"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1158:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1169:5:85",
                "type": ""
              }
            ],
            "src": "1130:173:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:167:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1441:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1453:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1443:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1443:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1443:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1416:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1425:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1412:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1412:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1437:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1408:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1405:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1466:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1495:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1476:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1466:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1514:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1541:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1552:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1537:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1537:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1524:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1514:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1353:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1364:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1376:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1384:6:85",
                "type": ""
              }
            ],
            "src": "1308:254:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1666:109:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1676:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1688:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1699:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1684:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1676:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1718:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1733:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:26:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1729:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1729:39:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1711:58:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1635:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1646:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1657:4:85",
                "type": ""
              }
            ],
            "src": "1567:208:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1969:496:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2016:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2025:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2028:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2018:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2018:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1990:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1999:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1986:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1986:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:3:85",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1982:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1979:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2041:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2070:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2051:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2051:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2041:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2089:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2099:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2099:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2089:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2146:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2179:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2190:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2175:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2175:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2156:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2156:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2203:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2236:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2247:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2232:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2232:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2213:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2213:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2203:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2260:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2287:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2298:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2283:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2283:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2270:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2312:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2339:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2350:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2322:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2312:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2364:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2391:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2402:3:85",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2387:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2387:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2374:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2374:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "2364:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2416:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2443:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2454:3:85",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2439:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2439:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2426:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2426:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "2416:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1879:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1890:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1902:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1910:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1918:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1926:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1934:6:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1942:6:85",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "1950:6:85",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "1958:6:85",
                "type": ""
              }
            ],
            "src": "1780:685:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2540:116:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2586:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2595:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2598:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2588:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2588:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2588:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2561:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2570:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2557:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2557:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2582:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2553:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2553:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2550:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2611:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2640:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2621:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2611:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2506:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2517:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2529:6:85",
                "type": ""
              }
            ],
            "src": "2470:186:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2784:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2794:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2806:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2817:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2802:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2802:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2794:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2836:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2851:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2867:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2872:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2863:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2863:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2876:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2859:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2859:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2847:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2829:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2829:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IFeeCurrency_$15797__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2753:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2764:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2775:4:85",
                "type": ""
              }
            ],
            "src": "2661:225:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2992:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3002:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3014:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3025:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3010:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3002:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3044:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3059:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3075:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3080:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3071:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3071:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3084:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3067:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3067:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3055:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3055:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3037:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3037:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3037:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2961:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2972:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2983:4:85",
                "type": ""
              }
            ],
            "src": "2891:203:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3131:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3148:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3155:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3160:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3151:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3151:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3141:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3141:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3141:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3188:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3191:4:85",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3181:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3181:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3181:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3212:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3215:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3205:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3205:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3205:15:85"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3099:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3284:666:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3333:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3342:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3345:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3335:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3335:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3335:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3312:6:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3320:4:85",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3308:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3308:17:85"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3327:3:85"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3304:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3304:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3297:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3294:55:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3358:30:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3381:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3368:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3368:20:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3362:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3397:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3407:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3401:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3448:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3450:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3450:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3450:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3440:2:85"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3444:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3437:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3434:36:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3479:17:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3493:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "3489:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:7:85"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3483:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3505:23:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3525:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3519:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3519:9:85"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3509:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3537:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3559:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3583:2:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3587:4:85",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3579:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3579:13:85"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "3594:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3575:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3575:22:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3599:2:85",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3571:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3571:31:85"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3604:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3567:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3567:40:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3555:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3555:53:85"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3541:10:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3667:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3669:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3669:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3669:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3626:10:85"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3638:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3623:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3623:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3646:10:85"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3658:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3643:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3643:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3620:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3620:46:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3617:72:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3705:2:85",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3709:10:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3698:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:22:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3736:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3744:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3729:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3729:18:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3729:18:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3795:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3804:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3807:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3797:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3797:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3797:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3770:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3778:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3766:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3766:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3783:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3762:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3762:26:85"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3790:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3759:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3759:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3756:55:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3837:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3845:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3833:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3833:17:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3856:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3864:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3852:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3852:17:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3871:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3820:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3820:54:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3820:54:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3898:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3906:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3911:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3890:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3890:26:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3918:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3883:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3883:37:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3883:37:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3929:15:85",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3938:6:85"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "3929:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3258:6:85",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3266:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "3274:5:85",
                "type": ""
              }
            ],
            "src": "3231:719:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3998:71:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4047:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4056:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4059:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4049:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4049:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4049:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4021:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4032:5:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4039:4:85",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4028:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4028:16:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4018:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4018:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4011:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4011:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4008:55:85"
                }
              ]
            },
            "name": "validator_revert_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3987:5:85",
                "type": ""
              }
            ],
            "src": "3955:114:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4213:610:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4260:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4269:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4272:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4262:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4262:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4262:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4234:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4243:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4230:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4230:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4255:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4226:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4226:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4223:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4285:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4314:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4295:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4295:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4285:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4333:46:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4364:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4375:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4360:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4360:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4347:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4347:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4337:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4388:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4398:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4392:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4443:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4452:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4455:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4445:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4445:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4445:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4431:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4439:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4428:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4428:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4425:34:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4468:60:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4500:9:85"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4511:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4496:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4496:22:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4520:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4478:17:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4478:50:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4468:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4537:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4570:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4581:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4566:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4566:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4553:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4553:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "4541:8:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4614:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4623:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4626:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4616:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4616:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4616:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "4600:8:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4610:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4597:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:16:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4594:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4639:62:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4671:9:85"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "4682:8:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4667:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4667:24:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4693:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4649:17:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4649:52:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4639:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4710:45:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4740:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4751:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4736:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4723:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4723:32:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4714:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4787:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4764:22:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4764:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4764:29:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4802:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4812:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4802:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4155:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4166:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4178:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4186:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4194:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4202:6:85",
                "type": ""
              }
            ],
            "src": "4074:749:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4883:325:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4893:22:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4907:1:85",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4910:4:85"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "4903:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4903:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4893:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4924:38:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4954:4:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4960:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4950:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:12:85"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "4928:18:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5001:31:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5003:27:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5017:6:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5025:4:85",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5013:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5013:17:85"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5003:6:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4981:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4974:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4974:26:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4971:61:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5091:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5112:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5119:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5124:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5115:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5115:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5105:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5105:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5105:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5156:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5159:4:85",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5149:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5149:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5149:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5184:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5187:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5177:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5177:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5177:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "5047:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5070:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5078:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5067:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5067:14:85"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5044:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5044:38:85"
                  },
                  "nodeType": "YulIf",
                  "src": "5041:161:85"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4863:4:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4872:6:85",
                "type": ""
              }
            ],
            "src": "4828:380:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5294:103:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5340:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5349:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5352:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5342:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5342:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5342:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5315:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5324:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5311:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5311:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5336:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5307:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5307:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "5304:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5365:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5381:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5375:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5375:16:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5365:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5260:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5271:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5283:6:85",
                "type": ""
              }
            ],
            "src": "5213:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5576:166:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5593:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5604:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5586:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5586:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5586:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5627:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5638:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5623:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5623:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5643:2:85",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5616:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5616:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5666:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5677:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5662:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5662:18:85"
                      },
                      {
                        "hexValue": "4f6e6c7920564d2063616e2063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5682:18:85",
                        "type": "",
                        "value": "Only VM can call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5655:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5655:46:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5655:46:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5710:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5722:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5733:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5718:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5718:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5710:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5553:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5567:4:85",
                "type": ""
              }
            ],
            "src": "5402:340:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5921:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5938:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5949:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5931:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5931:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5931:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5972:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5983:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5968:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5968:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5988:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5961:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5961:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5961:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6011:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6022:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6007:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6007:18:85"
                      },
                      {
                        "hexValue": "5363616c65642064656269742076616c7565206d757374206265203e20302e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6027:33:85",
                        "type": "",
                        "value": "Scaled debit value must be > 0."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6000:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6000:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6000:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6070:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6082:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6093:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6078:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6078:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6070:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7323159da833d5c90bb8ffe80c173507ca32f037d0d06cd6f9733bdee79cb007__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5898:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5912:4:85",
                "type": ""
              }
            ],
            "src": "5747:355:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6236:145:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6246:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6258:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6269:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6254:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6254:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6246:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6288:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6303:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6319:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6324:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6315:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6315:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6328:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6311:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6311:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6299:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6299:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6281:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6281:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6281:51:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6352:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6363:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6348:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6348:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6368:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6341:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6341:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6341:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6197:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6208:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6216:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6227:4:85",
                "type": ""
              }
            ],
            "src": "6107:274:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6418:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6435:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6442:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6447:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6438:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6438:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6428:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6428:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6428:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6475:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6478:4:85",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6468:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6468:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6468:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6499:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6502:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6492:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6492:15:85"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6386:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6566:77:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6576:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6587:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6590:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6583:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6583:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6576:3:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6615:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6617:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6617:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6617:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6607:1:85"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "6610:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6604:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6604:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "6601:36:85"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6549:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6552:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6558:3:85",
                "type": ""
              }
            ],
            "src": "6518:125:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6822:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6839:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6850:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6832:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6832:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6832:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6873:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6884:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6869:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6869:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6889:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6862:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6862:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6912:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6923:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6908:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6908:18:85"
                      },
                      {
                        "hexValue": "43616e6e6f7420637265646974206d6f7265207468616e20646562697465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6928:34:85",
                        "type": "",
                        "value": "Cannot credit more than debited."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6901:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6901:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6901:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6972:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6984:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6995:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6980:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6972:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a35bbd323c4fb3e59cee627945e7a78a4cd03a3657d56d98aa33e3b6d3bf22fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6799:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6813:4:85",
                "type": ""
              }
            ],
            "src": "6648:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7058:79:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7068:17:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7080:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7083:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7076:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7076:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7068:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7109:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7111:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7111:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7111:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "7100:4:85"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7106:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7097:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7097:11:85"
                  },
                  "nodeType": "YulIf",
                  "src": "7094:37:85"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7040:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7043:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7049:4:85",
                "type": ""
              }
            ],
            "src": "7009:128:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7447:456:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7457:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7469:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7480:3:85",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7465:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7465:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7457:4:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7493:29:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7511:3:85",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7516:1:85",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7507:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7507:11:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7520:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7503:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7503:19:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7497:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7538:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7553:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7561:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7549:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7549:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7531:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7531:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7531:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7585:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7596:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7581:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7581:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7605:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7613:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7601:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7601:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7574:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7574:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7574:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7637:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7648:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7633:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7633:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7657:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7665:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7653:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7653:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7626:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7626:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7626:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7689:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7700:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7685:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7685:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7709:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7717:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7705:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7705:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7678:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7678:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7678:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7741:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7752:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7737:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7737:19:85"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7758:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7730:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7730:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7730:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7785:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7796:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7781:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7781:19:85"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "7802:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7774:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7774:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7774:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7829:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7840:3:85",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7825:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7825:19:85"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "7846:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7818:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7818:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7818:35:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7873:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7884:3:85",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7869:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7869:19:85"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "7890:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7862:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7862:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7862:35:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7360:9:85",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "7371:6:85",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "7379:6:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7387:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7395:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7403:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7411:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7419:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7427:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7438:4:85",
                "type": ""
              }
            ],
            "src": "7142:761:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8082:178:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8099:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8110:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8092:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8092:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8092:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8133:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8144:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8129:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8129:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8149:2:85",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8122:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8122:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8122:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8172:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8183:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8168:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8168:18:85"
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8188:30:85",
                        "type": "",
                        "value": "contract already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8161:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8161:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8161:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8228:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8240:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8251:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8236:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8236:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8228:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8059:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8073:4:85",
                "type": ""
              }
            ],
            "src": "7908:352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8321:65:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8338:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8341:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8331:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8331:14:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8331:14:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8354:26:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8372:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8375:4:85",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "8362:9:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8362:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8354:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8304:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8312:4:85",
                "type": ""
              }
            ],
            "src": "8265:121:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8472:464:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8505:425:85",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8519:11:85",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8529:1:85",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "8523:2:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8550:2:85"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "8554:5:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8543:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8543:17:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8543:17:85"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8573:31:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8595:2:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8599:4:85",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "8585:9:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8585:19:85"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "8577:4:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8617:57:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "8640:4:85"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8650:1:85",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "8657:10:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8669:2:85",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8653:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8653:19:85"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "8646:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8646:27:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8636:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8636:38:85"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "8621:11:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8711:23:85",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8713:19:85",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "8728:4:85"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8713:11:85"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "8693:10:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8705:4:85",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "8690:2:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8690:20:85"
                        },
                        "nodeType": "YulIf",
                        "src": "8687:47:85"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8747:41:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "8761:4:85"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8771:1:85",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "8778:3:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8783:2:85",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "8774:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8774:12:85"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "8767:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8767:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8757:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8757:31:85"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "8751:2:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8801:24:85",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "8814:11:85"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "8805:5:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8899:21:85",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "8908:5:85"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8915:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8901:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8901:17:85"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8901:17:85"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "8849:5:85"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "8856:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "8846:2:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8846:13:85"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "8860:26:85",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8862:22:85",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "8875:5:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8882:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8871:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8871:13:85"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "8862:5:85"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "8842:3:85",
                          "statements": []
                        },
                        "src": "8838:82:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "8488:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8493:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8485:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8485:11:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8482:448:85"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8444:5:85",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "8451:3:85",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "8456:10:85",
                "type": ""
              }
            ],
            "src": "8391:545:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9026:81:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9036:65:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "9051:4:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9069:1:85",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "9072:3:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9065:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9065:11:85"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9082:1:85",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "9078:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9078:6:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9061:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9061:24:85"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "9057:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9057:29:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9047:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9047:40:85"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9093:1:85",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "9096:3:85"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9089:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9089:11:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "9044:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9044:57:85"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "9036:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9003:4:85",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "9009:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "9017:4:85",
                "type": ""
              }
            ],
            "src": "8941:166:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9208:1256:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9218:24:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "9238:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9232:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9232:10:85"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "9222:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9285:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "9287:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9287:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9287:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "9257:6:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9265:18:85",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9254:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9254:30:85"
                  },
                  "nodeType": "YulIf",
                  "src": "9251:56:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "9360:4:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "9398:4:85"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "9392:5:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9392:11:85"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "9366:25:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9366:38:85"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "9406:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "9316:43:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9316:97:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9316:97:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9422:18:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9439:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "9426:9:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9449:23:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9468:4:85",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "9453:11:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9481:24:85",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "9494:11:85"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "9481:9:85"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9551:656:85",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "9565:35:85",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "9584:6:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "9596:2:85",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "9592:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9592:7:85"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "9580:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9580:20:85"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "9569:7:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "9613:49:85",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "9657:4:85"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "9627:29:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9627:35:85"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "9617:6:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "9675:10:85",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9684:1:85",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "9679:1:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9762:172:85",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9787:6:85"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "9805:3:85"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "9810:9:85"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "9801:3:85"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9801:19:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "9795:5:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9795:26:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "9780:6:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9780:42:85"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9780:42:85"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9839:24:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "9853:6:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9861:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9849:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9849:14:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9839:6:85"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9880:40:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9897:9:85"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9908:11:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9893:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9893:27:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "9880:9:85"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9709:1:85"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "9712:7:85"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "9706:2:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9706:14:85"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "9721:28:85",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9723:24:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "9732:1:85"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9735:11:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9728:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9728:19:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9723:1:85"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "9702:3:85",
                              "statements": []
                            },
                            "src": "9698:236:85"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9982:166:85",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10000:43:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "10027:3:85"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10032:9:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10023:3:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10023:19:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10017:5:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10017:26:85"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "10004:9:85",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "10067:6:85"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "10079:9:85"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "10106:1:85",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "10109:6:85"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "10102:3:85"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "10102:14:85"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "10118:3:85",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10098:3:85"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10098:24:85"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "10128:1:85",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "10124:3:85"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "10124:6:85"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10094:3:85"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "10094:37:85"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "10090:3:85"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "10090:42:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "10075:3:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10075:58:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "10060:6:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10060:74:85"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10060:74:85"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "9953:7:85"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "9962:6:85"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "9950:2:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9950:19:85"
                            },
                            "nodeType": "YulIf",
                            "src": "9947:201:85"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "10168:4:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10182:1:85",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "10185:6:85"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "10178:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10178:14:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10194:1:85",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10174:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10174:22:85"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "10161:6:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10161:36:85"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10161:36:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "9544:663:85",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9549:1:85",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10224:234:85",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "10238:14:85",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10251:1:85",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "10242:5:85",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10287:67:85",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10305:35:85",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "10324:3:85"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10329:9:85"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10320:3:85"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10320:19:85"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10314:5:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10314:26:85"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "10305:5:85"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "10268:6:85"
                            },
                            "nodeType": "YulIf",
                            "src": "10265:89:85"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "10374:4:85"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "10433:5:85"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "10440:6:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "10380:52:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10380:67:85"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "10367:6:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10367:81:85"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "10367:81:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10216:242:85",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "9524:6:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9532:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9521:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9521:14:85"
                  },
                  "nodeType": "YulSwitch",
                  "src": "9514:944:85"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "9193:4:85",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9199:3:85",
                "type": ""
              }
            ],
            "src": "9112:1352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10548:168:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10594:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10603:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10606:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10596:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10596:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10596:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10569:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10578:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10565:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10565:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10590:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10561:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10561:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "10558:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10619:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10638:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10632:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10632:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10623:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10680:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "10657:22:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10657:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10657:29:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10695:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10705:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10695:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10514:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10525:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10537:6:85",
                "type": ""
              }
            ],
            "src": "10469:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10895:244:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10912:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10923:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10905:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10905:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10905:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10946:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10957:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10942:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10942:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10962:2:85",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10935:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10935:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10935:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10985:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10996:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10981:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10981:18:85"
                      },
                      {
                        "hexValue": "446563696d616c73206f66206164617074656420746f6b656e206d7573742062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11001:34:85",
                        "type": "",
                        "value": "Decimals of adapted token must b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10974:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10974:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10974:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11056:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11067:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11052:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11052:18:85"
                      },
                      {
                        "hexValue": "65203c20657870656374656420646563696d616c732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11072:24:85",
                        "type": "",
                        "value": "e < expected decimals."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11045:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11045:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11045:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11106:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11118:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11129:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11114:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11114:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11106:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_135aa443ed453db3647abc31c5ebf8d7e70b844e8bc25b25469b9140aa4b7c77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10872:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10886:4:85",
                "type": ""
              }
            ],
            "src": "10721:418:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11191:104:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11201:39:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "11217:1:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11220:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11213:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11213:12:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11231:1:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11234:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11227:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11227:12:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11209:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11209:31:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11201:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11267:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11269:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11269:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11269:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "11255:4:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11261:4:85",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11252:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11252:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "11249:40:85"
                }
              ]
            },
            "name": "checked_sub_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11173:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11176:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11182:4:85",
                "type": ""
              }
            ],
            "src": "11144:151:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11364:358:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11374:16:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11389:1:85",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "11378:7:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11399:16:85",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "11408:7:85"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11399:5:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11424:13:85",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "11432:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11424:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11488:228:85",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11533:22:85",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "11535:16:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11535:18:85"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11535:18:85"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11508:4:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "11522:1:85",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "11518:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11518:6:85"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "11526:4:85"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "11514:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11514:17:85"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "11505:2:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11505:27:85"
                        },
                        "nodeType": "YulIf",
                        "src": "11502:53:85"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11594:29:85",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11596:25:85",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "11609:5:85"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "11616:4:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "11605:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11605:16:85"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "11596:5:85"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11575:8:85"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "11585:7:85"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11571:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11571:22:85"
                        },
                        "nodeType": "YulIf",
                        "src": "11568:55:85"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11636:23:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11648:4:85"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11654:4:85"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "11644:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11644:15:85"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11636:4:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11672:34:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "11688:7:85"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11697:8:85"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "11684:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11684:22:85"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "11672:8:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11457:8:85"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11467:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11454:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11454:21:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11476:3:85",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11450:3:85",
                    "statements": []
                  },
                  "src": "11446:270:85"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "11328:5:85",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11335:8:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11348:5:85",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11355:4:85",
                "type": ""
              }
            ],
            "src": "11300:422:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11786:747:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11824:52:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11838:10:85",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11847:1:85",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11838:5:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11861:5:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11806:8:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11799:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11799:16:85"
                  },
                  "nodeType": "YulIf",
                  "src": "11796:80:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11909:52:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11923:10:85",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11932:1:85",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11923:5:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11946:5:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11895:4:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11888:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11888:12:85"
                  },
                  "nodeType": "YulIf",
                  "src": "11885:76:85"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "11997:52:85",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "12011:10:85",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12020:1:85",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12011:5:85"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12034:5:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "11990:59:85",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11995:1:85",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12065:123:85",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12100:22:85",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12102:16:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12102:18:85"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12102:18:85"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12085:8:85"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12095:3:85",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12082:2:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12082:17:85"
                            },
                            "nodeType": "YulIf",
                            "src": "12079:43:85"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12135:25:85",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12148:8:85"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12158:1:85",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12144:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12144:16:85"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12135:5:85"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12173:5:85"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12058:130:85",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12063:1:85",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "11977:4:85"
                  },
                  "nodeType": "YulSwitch",
                  "src": "11970:218:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12286:70:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12300:28:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12313:4:85"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12319:8:85"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "12309:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12309:19:85"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12300:5:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12341:5:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12210:4:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12216:2:85",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12207:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12207:12:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12224:8:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12234:2:85",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12221:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12221:16:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12203:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12203:35:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12247:4:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12253:3:85",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12244:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12244:13:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12262:8:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12272:2:85",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12259:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12259:16:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12240:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12240:36:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12200:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12200:77:85"
                  },
                  "nodeType": "YulIf",
                  "src": "12197:159:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12365:57:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12407:4:85"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12413:8:85"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "12388:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12388:34:85"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "12369:7:85",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "12378:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12467:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12469:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12469:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12469:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "12437:7:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12454:1:85",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12450:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12450:6:85"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "12458:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "12446:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12446:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12434:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12434:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "12431:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12498:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "12511:7:85"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "12520:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12507:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12507:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12498:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11757:4:85",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11763:8:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11776:5:85",
                "type": ""
              }
            ],
            "src": "11727:806:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12606:72:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12616:56:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12646:4:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "12656:8:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12666:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12652:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12652:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "12625:20:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12625:47:85"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12616:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12577:4:85",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12583:8:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12596:5:85",
                "type": ""
              }
            ],
            "src": "12538:140:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12735:116:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12745:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12760:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12763:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12756:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12756:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12745:7:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12823:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12825:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12825:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12825:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12794:1:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12787:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12787:9:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12801:1:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "12808:7:85"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12817:1:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "12804:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12804:15:85"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "12798:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12798:22:85"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "12784:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12784:37:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12777:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12777:45:85"
                  },
                  "nodeType": "YulIf",
                  "src": "12774:71:85"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12714:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12717:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12723:7:85",
                "type": ""
              }
            ],
            "src": "12683:168:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12902:171:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12933:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12954:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12961:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12966:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12957:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12957:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12947:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12947:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12947:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12998:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13001:4:85",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12991:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12991:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12991:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13026:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13029:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13019:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13019:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13019:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12922:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12915:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12915:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "12912:132:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13053:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13062:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13065:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "13058:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13058:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13053:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12887:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12890:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "12896:1:85",
                "type": ""
              }
            ],
            "src": "12856:217:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IFeeCurrency_$15797__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 96))\n        validator_revert_uint8(value)\n        value3 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_952607dfd16d11dfdf90c18f6142a68af14c41694106cb4ca9d22c7c3186d750__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Only VM can call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7323159da833d5c90bb8ffe80c173507ca32f037d0d06cd6f9733bdee79cb007__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Scaled debit value must be > 0.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a35bbd323c4fb3e59cee627945e7a78a4cd03a3657d56d98aa33e3b6d3bf22fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Cannot credit more than debited.\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_rational_0_by_1_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"contract already initialized\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_135aa443ed453db3647abc31c5ebf8d7e70b844e8bc25b25469b9140aa4b7c77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Decimals of adapted token must b\")\n        mstore(add(headStart, 96), \"e < expected decimals.\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "599:5670:50:-:0;;;777:1;752:26;;1031:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1068:4;896:17:59;891:57;;923:11;:18;;-1:-1:-1;;923:18:59;937:4;923:18;;;891:57;842:110;1031:45:50;599:5670;;14:277:85;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:85:o;:::-;599:5670:50;;;;;;",
  "deployedSourceMap": "599:5670:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;783:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;319:23:59;;;;;;;;;;;;732:14:85;;725:22;707:41;;695:2;680:18;319:23:59;567:187:85;4841:108:50;;;:::i;:::-;;;905:25:85;;;893:2;878:18;4841:108:50;759:177:85;5052:84:50;5115:16;;;;5052:84;;;1113:4:85;1101:17;;;1083:36;;1071:2;1056:18;5052:84:50;941:184:85;752:26:50;;;;;;2217:258;;;;;;:::i;:::-;;:::i;:::-;;718:29;;;;;-1:-1:-1;;;;;718:29:50;;;;;;-1:-1:-1;;;;;1729:39:85;;;1711:58;;1699:2;1684:18;718:29:50;1567:208:85;3124:1090:50;;;;;;:::i;:::-;;:::i;4612:126::-;;;;;;:::i;:::-;;:::i;805:20::-;;;:::i;681:32::-;;;;;;;;-1:-1:-1;;;;;681:32:50;;;;;;-1:-1:-1;;;;;2847:32:85;;;2829:51;;2817:2;2802:18;681:32:50;2661:225:85;830:29:50;;;;;;;;;4314:98;4364:7;4394:12;;;;-1:-1:-1;;;;;4394:12:50;4314:98;;1511:531;;;;;;:::i;:::-;;:::i;783:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4841:108::-;4887:7;4909:35;4917:12;;;;;;;;;-1:-1:-1;;;;;4917:12:50;-1:-1:-1;;;;;4917:24:50;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4909:7;:35::i;:::-;4902:42;;4841:108;:::o;2217:258::-;132:10:57;:24;124:53;;;;-1:-1:-1;;;124:53:57;;5604:2:85;124:53:57;;;5586:21:85;5643:2;5623:18;;;5616:30;-1:-1:-1;;;5662:18:85;;;5655:46;5718:18;;124:53:57;;;;;;;;;2290:19:50::1;2312:16;2322:5;2312:9;:16::i;:::-;2290:38;;2356:1;2342:11;:15;2334:59;;;::::0;-1:-1:-1;;;2334:59:50;;5949:2:85;2334:59:50::1;::::0;::::1;5931:21:85::0;5988:2;5968:18;;;5961:30;6027:33;6007:18;;;6000:61;6078:18;;2334:59:50::1;5747:355:85::0;2334:59:50::1;2399:7;:21:::0;;;2426:12:::1;::::0;:44:::1;::::0;-1:-1:-1;;;2426:44:50;;-1:-1:-1;;;;;6299:32:85;;;2426:44:50::1;::::0;::::1;6281:51:85::0;6348:18;;;6341:34;;;2426:12:50::1;::::0;;::::1;::::0;;::::1;::::0;:25:::1;::::0;6254:18:85;;2426:44:50::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2284:191;2217:258:::0;;:::o;3124:1090::-;132:10:57;:24;124:53;;;;-1:-1:-1;;;124:53:57;;5604:2:85;124:53:57;;;5586:21:85;5643:2;5623:18;;;5616:30;-1:-1:-1;;;5662:18:85;;;5655:46;5718:18;;124:53:57;5402:340:85;124:53:57;3403:7:50::1;::::0;3399:142;3528:7:::1;3399:142;3547:20;3570:23;3580:12;3570:9;:23::i;:::-;3547:46;;3599:22;3624:20;3634:9;3624;:20::i;:::-;3599:45;;3650:23;3676:24;3686:13;3676:9;:24::i;:::-;3773:7;::::0;3650:50;;-1:-1:-1;3650:50:50;3722:29:::1;3737:14:::0;3722:12;:29:::1;:::i;:::-;:47;;;;:::i;:::-;:58;;3707:121;;;::::0;-1:-1:-1;;;3707:121:50;;6850:2:85;3707:121:50::1;::::0;::::1;6832:21:85::0;;;6869:18;;;6862:30;6928:34;6908:18;;;6901:62;6980:18;;3707:121:50::1;6648:356:85::0;3707:121:50::1;3835:21;3902:15:::0;3870:29:::1;3885:14:::0;3870:12;:29:::1;:::i;:::-;:47;;;;:::i;:::-;3859:7;;:59;;;;:::i;:::-;3835:83:::0;-1:-1:-1;3929:17:50;;3925:70:::1;;3956:32;3975:13:::0;3956:32;::::1;:::i;:::-;;;3925:70;4000:12;::::0;;:191:::1;::::0;-1:-1:-1;;;4000:191:50;;-1:-1:-1;;;;;7549:15:85;;;4000:191:50::1;::::0;::::1;7531:34:85::0;7601:15;;;7581:18;;;7574:43;7633:18;;;7626:43;;;7705:15;;;7685:18;;;7678:43;7737:19;;;7730:35;;;7781:19;;;7774:35;;;7825:19;;;7818:35;;;;7869:19;;;7862:35;;;4000:12:50::1;::::0;;::::1;::::0;;::::1;::::0;:26:::1;::::0;7465:19:85;;4000:191:50::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4208:1:50::1;4198:7;:11:::0;-1:-1:-1;;;;;;183:1:57::1;3124:1090:50::0;;;;;;;;:::o;4612:126::-;4671:7;4701:12;;:31;;-1:-1:-1;;;4701:31:50;;-1:-1:-1;;;;;2847:32:85;;;4701:31:50;;;2829:51:85;4693:40:50;;4701:12;;;;;:22;;2802:18:85;;4701:31:50;;;;;;;;;;;;;;;;;;;;;;4693:40;4686:47;4612:126;-1:-1:-1;;4612:126:50:o;805:20::-;;;;;;;:::i;1511:531::-;476:11:59;;;;475:12;467:53;;;;-1:-1:-1;;;467:53:59;;8110:2:85;467:53:59;;;8092:21:85;8149:2;8129:18;;;8122:30;8188;8168:18;;;8161:58;8236:18;;467:53:59;7908:352:85;467:53:59;526:11;:18;;-1:-1:-1;;;;;;5212:42:50;;-1:-1:-1;;;;;5212:42:50;;;;540:4:59;5212:42:50;;;1713:4:::1;:12;1720:5:::0;1713:4;:12:::1;:::i;:::-;-1:-1:-1::0;1731:6:50::1;:16;1740:7:::0;1731:6;:16:::1;:::i;:::-;;1753:15;1781:13;-1:-1:-1::0;;;;;1771:33:50::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1753:53;;1839:17;1827:29;;:9;:29;;;1812:114;;;::::0;-1:-1:-1;;;1812:114:50;;10923:2:85;1812:114:50::1;::::0;::::1;10905:21:85::0;10962:2;10942:18;;;10935:30;11001:34;10981:18;;;10974:62;-1:-1:-1;;;11052:18:85;;;11045:52;11114:19;;1812:114:50::1;10721:418:85::0;1812:114:50::1;1964:29;1984:9:::0;1964:17;:29:::1;:::i;:::-;1957:37;::::0;:2:::1;:37;:::i;:::-;1932:15;:63:::0;;-1:-1:-1;;1932:63:50::1;-1:-1:-1::0;;;;;1932:63:50;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2001:16:50::1;:36:::0;;-1:-1:-1;;2001:36:50::1;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;1511:531:50:o;5263:105::-;5348:15;;5318:7;;5340:23;;-1:-1:-1;;;;;5348:15:50;5340:5;:23;:::i;6136:131::-;6247:15;;;6193:7;;-1:-1:-1;;;;;6247:15:50;;;;6216:23;6247:15;6216:5;:23;:::i;:::-;:27;;;;:::i;:::-;6215:47;;;;:::i;14:548:85:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;1130:173::-;1198:20;;-1:-1:-1;;;;;1247:31:85;;1237:42;;1227:70;;1293:1;1290;1283:12;1227:70;1130:173;;;:::o;1308:254::-;1376:6;1384;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;1476:29;1495:9;1476:29;:::i;:::-;1466:39;1552:2;1537:18;;;;1524:32;;-1:-1:-1;;;1308:254:85:o;1780:685::-;1902:6;1910;1918;1926;1934;1942;1950;1958;2011:3;1999:9;1990:7;1986:23;1982:33;1979:53;;;2028:1;2025;2018:12;1979:53;2051:29;2070:9;2051:29;:::i;:::-;2041:39;;2099:38;2133:2;2122:9;2118:18;2099:38;:::i;:::-;2089:48;;2156:38;2190:2;2179:9;2175:18;2156:38;:::i;:::-;2146:48;;2213:38;2247:2;2236:9;2232:18;2213:38;:::i;:::-;1780:685;;;;-1:-1:-1;1780:685:85;;2298:3;2283:19;;2270:33;;2350:3;2335:19;;2322:33;;-1:-1:-1;2402:3:85;2387:19;;2374:33;;-1:-1:-1;2454:3:85;2439:19;;;2426:33;;-1:-1:-1;1780:685:85;-1:-1:-1;;1780:685:85:o;2470:186::-;2529:6;2582:2;2570:9;2561:7;2557:23;2553:32;2550:52;;;2598:1;2595;2588:12;2550:52;2621:29;2640:9;2621:29;:::i;:::-;2611:39;2470:186;-1:-1:-1;;;2470:186:85:o;3099:127::-;3160:10;3155:3;3151:20;3148:1;3141:31;3191:4;3188:1;3181:15;3215:4;3212:1;3205:15;3231:719;3274:5;3327:3;3320:4;3312:6;3308:17;3304:27;3294:55;;3345:1;3342;3335:12;3294:55;3381:6;3368:20;3407:18;3444:2;3440;3437:10;3434:36;;;3450:18;;:::i;:::-;3525:2;3519:9;3493:2;3579:13;;-1:-1:-1;;3575:22:85;;;3599:2;3571:31;3567:40;3555:53;;;3623:18;;;3643:22;;;3620:46;3617:72;;;3669:18;;:::i;:::-;3709:10;3705:2;3698:22;3744:2;3736:6;3729:18;3790:3;3783:4;3778:2;3770:6;3766:15;3762:26;3759:35;3756:55;;;3807:1;3804;3797:12;3756:55;3871:2;3864:4;3856:6;3852:17;3845:4;3837:6;3833:17;3820:54;3918:1;3911:4;3906:2;3898:6;3894:15;3890:26;3883:37;3938:6;3929:15;;;;;;3231:719;;;;:::o;3955:114::-;4039:4;4032:5;4028:16;4021:5;4018:27;4008:55;;4059:1;4056;4049:12;4008:55;3955:114;:::o;4074:749::-;4178:6;4186;4194;4202;4255:3;4243:9;4234:7;4230:23;4226:33;4223:53;;;4272:1;4269;4262:12;4223:53;4295:29;4314:9;4295:29;:::i;:::-;4285:39;;4375:2;4364:9;4360:18;4347:32;4398:18;4439:2;4431:6;4428:14;4425:34;;;4455:1;4452;4445:12;4425:34;4478:50;4520:7;4511:6;4500:9;4496:22;4478:50;:::i;:::-;4468:60;;4581:2;4570:9;4566:18;4553:32;4537:48;;4610:2;4600:8;4597:16;4594:36;;;4626:1;4623;4616:12;4594:36;;4649:52;4693:7;4682:8;4671:9;4667:24;4649:52;:::i;:::-;4639:62;;;4751:2;4740:9;4736:18;4723:32;4764:29;4787:5;4764:29;:::i;:::-;4074:749;;;;-1:-1:-1;4074:749:85;;-1:-1:-1;;4074:749:85:o;4828:380::-;4907:1;4903:12;;;;4950;;;4971:61;;5025:4;5017:6;5013:17;5003:27;;4971:61;5078:2;5070:6;5067:14;5047:18;5044:38;5041:161;;5124:10;5119:3;5115:20;5112:1;5105:31;5159:4;5156:1;5149:15;5187:4;5184:1;5177:15;5041:161;;4828:380;;;:::o;5213:184::-;5283:6;5336:2;5324:9;5315:7;5311:23;5307:32;5304:52;;;5352:1;5349;5342:12;5304:52;-1:-1:-1;5375:16:85;;5213:184;-1:-1:-1;5213:184:85:o;6386:127::-;6447:10;6442:3;6438:20;6435:1;6428:31;6478:4;6475:1;6468:15;6502:4;6499:1;6492:15;6518:125;6583:9;;;6604:10;;;6601:36;;;6617:18;;:::i;7009:128::-;7076:9;;;7097:11;;;7094:37;;;7111:18;;:::i;8391:545::-;8493:2;8488:3;8485:11;8482:448;;;8529:1;8554:5;8550:2;8543:17;8599:4;8595:2;8585:19;8669:2;8657:10;8653:19;8650:1;8646:27;8640:4;8636:38;8705:4;8693:10;8690:20;8687:47;;;-1:-1:-1;8728:4:85;8687:47;8783:2;8778:3;8774:12;8771:1;8767:20;8761:4;8757:31;8747:41;;8838:82;8856:2;8849:5;8846:13;8838:82;;;8901:17;;;8882:1;8871:13;8838:82;;;8842:3;;;8482:448;8391:545;;;:::o;9112:1352::-;9238:3;9232:10;9265:18;9257:6;9254:30;9251:56;;;9287:18;;:::i;:::-;9316:97;9406:6;9366:38;9398:4;9392:11;9366:38;:::i;:::-;9360:4;9316:97;:::i;:::-;9468:4;;9532:2;9521:14;;9549:1;9544:663;;;;10251:1;10268:6;10265:89;;;-1:-1:-1;10320:19:85;;;10314:26;10265:89;-1:-1:-1;;9069:1:85;9065:11;;;9061:24;9057:29;9047:40;9093:1;9089:11;;;9044:57;10367:81;;9514:944;;9544:663;8338:1;8331:14;;;8375:4;8362:18;;-1:-1:-1;;9580:20:85;;;9698:236;9712:7;9709:1;9706:14;9698:236;;;9801:19;;;9795:26;9780:42;;9893:27;;;;9861:1;9849:14;;;;9728:19;;9698:236;;;9702:3;9962:6;9953:7;9950:19;9947:201;;;10023:19;;;10017:26;-1:-1:-1;;10106:1:85;10102:14;;;10118:3;10098:24;10094:37;10090:42;10075:58;10060:74;;9947:201;-1:-1:-1;;;;;10194:1:85;10178:14;;;10174:22;10161:36;;-1:-1:-1;9112:1352:85:o;10469:247::-;10537:6;10590:2;10578:9;10569:7;10565:23;10561:32;10558:52;;;10606:1;10603;10596:12;10558:52;10638:9;10632:16;10657:29;10680:5;10657:29;:::i;11144:151::-;11234:4;11227:12;;;11213;;;11209:31;;11252:14;;11249:40;;;11269:18;;:::i;11300:422::-;11389:1;11432:5;11389:1;11446:270;11467:7;11457:8;11454:21;11446:270;;;11526:4;11522:1;11518:6;11514:17;11508:4;11505:27;11502:53;;;11535:18;;:::i;:::-;11585:7;11575:8;11571:22;11568:55;;;11605:16;;;;11568:55;11684:22;;;;11644:15;;;;11446:270;;;11450:3;11300:422;;;;;:::o;11727:806::-;11776:5;11806:8;11796:80;;-1:-1:-1;11847:1:85;11861:5;;11796:80;11895:4;11885:76;;-1:-1:-1;11932:1:85;11946:5;;11885:76;11977:4;11995:1;11990:59;;;;12063:1;12058:130;;;;11970:218;;11990:59;12020:1;12011:10;;12034:5;;;12058:130;12095:3;12085:8;12082:17;12079:43;;;12102:18;;:::i;:::-;-1:-1:-1;;12158:1:85;12144:16;;12173:5;;11970:218;;12272:2;12262:8;12259:16;12253:3;12247:4;12244:13;12240:36;12234:2;12224:8;12221:16;12216:2;12210:4;12207:12;12203:35;12200:77;12197:159;;;-1:-1:-1;12309:19:85;;;12341:5;;12197:159;12388:34;12413:8;12407:4;12388:34;:::i;:::-;12458:6;12454:1;12450:6;12446:19;12437:7;12434:32;12431:58;;;12469:18;;:::i;:::-;12507:20;;11727:806;-1:-1:-1;;;11727:806:85:o;12538:140::-;12596:5;12625:47;12666:4;12656:8;12652:19;12646:4;12625:47;:::i;12683:168::-;12756:9;;;12787;;12804:15;;;12798:22;;12784:37;12774:71;;12825:18;;:::i;12856:217::-;12896:1;12922;12912:132;;12966:10;12961:3;12957:20;12954:1;12947:31;13001:4;12998:1;12991:15;13029:4;13026:1;13019:15;12912:132;-1:-1:-1;13058:9:85;;12856:217::o",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.8.7 <0.8.20;\n\nimport \"@openzeppelin/contracts8/access/Ownable.sol\";\nimport \"@openzeppelin/contracts8/token/ERC20/IERC20.sol\";\n\nimport \"../../contracts/common/CalledByVm.sol\";\nimport \"../../contracts/common/Initializable.sol\";\nimport \"../../contracts/common/interfaces/ICeloVersionedContract.sol\";\nimport \"../../contracts/common/FixidityLib.sol\";\nimport \"../../contracts/stability/interfaces/ISortedOracles.sol\";\nimport \"./interfaces/IFeeCurrency.sol\";\nimport \"./interfaces/IDecimals.sol\";\nimport \"./interfaces/IFeeCurrencyAdapter.sol\";\n\ncontract FeeCurrencyAdapter is Initializable, CalledByVm, IFeeCurrencyAdapter {\n  IFeeCurrency public adaptedToken;\n\n  uint96 public digitDifference;\n\n  uint256 public debited = 0;\n\n  string public name;\n  string public symbol;\n\n  uint8 public expectedDecimals;\n\n  uint256[44] __gap;\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) Initializable(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param _adaptedToken The address of the adapted token.\n   * @param _name The name of the adapted token.\n   * @param _symbol The symbol of the adapted token.\n   * @param _expectedDecimals The expected number of decimals of the adapted token.\n   * @notice _expectedDecimals must be bigger than _adaptedToken.decimals().\n   */\n  function initialize(\n    address _adaptedToken,\n    string memory _name,\n    string memory _symbol,\n    uint8 _expectedDecimals\n  ) public virtual initializer {\n    _setAdaptedToken(_adaptedToken);\n    name = _name;\n    symbol = _symbol;\n    uint8 _decimals = IDecimals(_adaptedToken).decimals();\n    require(\n      _decimals < _expectedDecimals,\n      \"Decimals of adapted token must be < expected decimals.\"\n    );\n    digitDifference = uint96(10 ** (_expectedDecimals - _decimals));\n    expectedDecimals = _expectedDecimals;\n  }\n\n  /**\n   * Downscales value to the adapted token's native digits and debits it.\n   * @param from from address\n   * @param value Debited value in the adapted digits.\n   */\n  function debitGasFees(address from, uint256 value) external onlyVm {\n    uint256 valueScaled = downscale(value);\n    require(valueScaled > 0, \"Scaled debit value must be > 0.\");\n    debited = valueScaled;\n    adaptedToken.debitGasFees(from, valueScaled);\n  }\n\n  /**\n   * Downscales value to the adapted token's native digits and credits it.\n   * @param refundRecipient The recipient of the refund.\n   * @param tipRecipient The recipient of the tip.\n   * @param _gatewayFeeRecipient The recipient of the gateway fee. Unused.\n   * @param baseFeeRecipient The recipient of the base fee.\n   * @param refundAmount The amount to refund (in adapted token digits).\n   * @param tipAmount The amount to tip (in adapted token digits).\n   * @param _gatewayFeeAmount The amount of the gateway fee (in adapted token digits). Unused.\n   * @param baseFeeAmount The amount of the base fee (in adapted token digits).\n   */\n  function creditGasFees(\n    address refundRecipient,\n    address tipRecipient,\n    address _gatewayFeeRecipient,\n    address baseFeeRecipient,\n    uint256 refundAmount,\n    uint256 tipAmount,\n    uint256 _gatewayFeeAmount,\n    uint256 baseFeeAmount\n  ) external onlyVm {\n    if (debited == 0) {\n      // When eth.estimateGas is called, this function is called but we don't want to credit anything.\n      return;\n    }\n\n    uint256 refundScaled = downscale(refundAmount);\n    uint256 tipTxFeeScaled = downscale(tipAmount);\n    uint256 baseTxFeeScaled = downscale(baseFeeAmount);\n\n    require(\n      refundScaled + tipTxFeeScaled + baseTxFeeScaled <= debited,\n      \"Cannot credit more than debited.\"\n    );\n\n    uint256 roundingError = debited - (refundScaled + tipTxFeeScaled + baseTxFeeScaled);\n\n    if (roundingError > 0) {\n      baseTxFeeScaled += roundingError;\n    }\n    adaptedToken.creditGasFees(\n      refundRecipient,\n      tipRecipient,\n      address(0),\n      baseFeeRecipient,\n      refundScaled,\n      tipTxFeeScaled,\n      0,\n      baseTxFeeScaled\n    );\n\n    debited = 0;\n  }\n\n  /**\n   * @notice Returns adapted token address.\n   * @return The adapted token address.\n   */\n  function getAdaptedToken() external view returns (address) {\n    return address(adaptedToken);\n  }\n\n  /**\n   * @notice Gets the balance of the specified address with correct digits.\n   * @param account The address to query the balance of.\n   * @return The balance of the specified address.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return upscale(adaptedToken.balanceOf(account));\n  }\n\n  /**\n   * @notice Gets the total supply with correct digits.\n   * @return The total supply.\n   */\n  function totalSupply() external view returns (uint256) {\n    return upscale(adaptedToken.totalSupply());\n  }\n\n  /**\n   * @notice Gets the total supply with correct digits.\n   * @return The total supply.\n   */\n  function decimals() external view returns (uint8) {\n    return expectedDecimals;\n  }\n\n  function _setAdaptedToken(address _adaptedToken) internal virtual {\n    adaptedToken = IFeeCurrency(_adaptedToken);\n  }\n\n  function upscale(uint256 value) internal view returns (uint256) {\n    return value * digitDifference;\n  }\n\n  /**\n   * @notice Downscales value to the adapted token's native digits.\n   * @dev Downscale is rounding up in favour of protocol. User possibly can pay a bit more than expected (up to 1 unit of a token).\n   * Example:\n   * USDC has 6 decimals and in such case user can pay up to 0.000001 USDC more than expected.\n   * WBTC (currently not supported by Celo chain as fee currency) has 8 decimals and in such case user can pay up to 0.00000001 WBTC more than expected.\n   * Considering the current price of WBTC, it's less than 0.0005 USD. Even when WBTC price would be 1 mil USD, it's still would be only 0.01 USD.\n   * In general it is a very small amount and it is acceptable to round up in favor of the protocol.\n   * @param value The value to downscale.\n   */\n  function downscale(uint256 value) internal view returns (uint256) {\n    return (value + digitDifference - 1) / digitDifference;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/stability/FeeCurrencyAdapter.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/stability/FeeCurrencyAdapter.sol",
    "exportedSymbols": {
      "CalledByVm": [
        16290
      ],
      "Context": [
        212
      ],
      "FeeCurrencyAdapter": [
        15691
      ],
      "FixidityLib": [
        16955
      ],
      "ICeloVersionedContract": [
        17280
      ],
      "IDecimals": [
        15764
      ],
      "IERC20": [
        190
      ],
      "IFeeCurrency": [
        15797
      ],
      "IFeeCurrencyAdapter": [
        15870
      ],
      "ISortedOracles": [
        19333
      ],
      "Initializable": [
        16991
      ],
      "Ownable": [
        112
      ]
    },
    "id": 15692,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15363,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:50"
      },
      {
        "absolutePath": "@openzeppelin/contracts8/access/Ownable.sol",
        "file": "@openzeppelin/contracts8/access/Ownable.sol",
        "id": 15364,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 113,
        "src": "76:53:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "id": 15365,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 191,
        "src": "130:57:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/CalledByVm.sol",
        "file": "../../contracts/common/CalledByVm.sol",
        "id": 15366,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 16291,
        "src": "189:47:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../../contracts/common/Initializable.sol",
        "id": 15367,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 16992,
        "src": "237:50:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../../contracts/common/interfaces/ICeloVersionedContract.sol",
        "id": 15368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 17281,
        "src": "288:70:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FixidityLib.sol",
        "file": "../../contracts/common/FixidityLib.sol",
        "id": 15369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 16956,
        "src": "359:48:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
        "file": "../../contracts/stability/interfaces/ISortedOracles.sol",
        "id": 15370,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 19334,
        "src": "408:65:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/stability/interfaces/IFeeCurrency.sol",
        "file": "./interfaces/IFeeCurrency.sol",
        "id": 15371,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 15798,
        "src": "474:39:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/stability/interfaces/IDecimals.sol",
        "file": "./interfaces/IDecimals.sol",
        "id": 15372,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 15765,
        "src": "514:36:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/stability/interfaces/IFeeCurrencyAdapter.sol",
        "file": "./interfaces/IFeeCurrencyAdapter.sol",
        "id": 15373,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15692,
        "sourceUnit": 15871,
        "src": "551:46:50",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15374,
              "name": "Initializable",
              "nameLocations": [
                "630:13:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16991,
              "src": "630:13:50"
            },
            "id": 15375,
            "nodeType": "InheritanceSpecifier",
            "src": "630:13:50"
          },
          {
            "baseName": {
              "id": 15376,
              "name": "CalledByVm",
              "nameLocations": [
                "645:10:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16290,
              "src": "645:10:50"
            },
            "id": 15377,
            "nodeType": "InheritanceSpecifier",
            "src": "645:10:50"
          },
          {
            "baseName": {
              "id": 15378,
              "name": "IFeeCurrencyAdapter",
              "nameLocations": [
                "657:19:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15870,
              "src": "657:19:50"
            },
            "id": 15379,
            "nodeType": "InheritanceSpecifier",
            "src": "657:19:50"
          }
        ],
        "canonicalName": "FeeCurrencyAdapter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 15691,
        "linearizedBaseContracts": [
          15691,
          15870,
          16290,
          16991
        ],
        "name": "FeeCurrencyAdapter",
        "nameLocation": "608:18:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "989516db",
            "id": 15382,
            "mutability": "mutable",
            "name": "adaptedToken",
            "nameLocation": "701:12:50",
            "nodeType": "VariableDeclaration",
            "scope": 15691,
            "src": "681:32:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
              "typeString": "contract IFeeCurrency"
            },
            "typeName": {
              "id": 15381,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15380,
                "name": "IFeeCurrency",
                "nameLocations": [
                  "681:12:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15797,
                "src": "681:12:50"
              },
              "referencedDeclaration": 15797,
              "src": "681:12:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                "typeString": "contract IFeeCurrency"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15839
            ],
            "constant": false,
            "functionSelector": "5ee5c82a",
            "id": 15384,
            "mutability": "mutable",
            "name": "digitDifference",
            "nameLocation": "732:15:50",
            "nodeType": "VariableDeclaration",
            "scope": 15691,
            "src": "718:29:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 15383,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "718:6:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15845
            ],
            "constant": false,
            "functionSelector": "3cf03412",
            "id": 15387,
            "mutability": "mutable",
            "name": "debited",
            "nameLocation": "767:7:50",
            "nodeType": "VariableDeclaration",
            "scope": 15691,
            "src": "752:26:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15385,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "752:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 15386,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "777:1:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15851
            ],
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 15389,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "797:4:50",
            "nodeType": "VariableDeclaration",
            "scope": 15691,
            "src": "783:18:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15388,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "783:6:50",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15857
            ],
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 15391,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "819:6:50",
            "nodeType": "VariableDeclaration",
            "scope": 15691,
            "src": "805:20:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 15390,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "805:6:50",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15869
            ],
            "constant": false,
            "functionSelector": "cc23a4a3",
            "id": 15393,
            "mutability": "mutable",
            "name": "expectedDecimals",
            "nameLocation": "843:16:50",
            "nodeType": "VariableDeclaration",
            "scope": 15691,
            "src": "830:29:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 15392,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "830:5:50",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15397,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "876:5:50",
            "nodeType": "VariableDeclaration",
            "scope": 15691,
            "src": "864:17:50",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$44_storage",
              "typeString": "uint256[44]"
            },
            "typeName": {
              "baseType": {
                "id": 15394,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "864:7:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 15396,
              "length": {
                "hexValue": "3434",
                "id": 15395,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "872:2:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_44_by_1",
                  "typeString": "int_const 44"
                },
                "value": "44"
              },
              "nodeType": "ArrayTypeName",
              "src": "864:11:50",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$44_storage_ptr",
                "typeString": "uint256[44]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15406,
              "nodeType": "Block",
              "src": "1074:2:50",
              "statements": []
            },
            "documentation": {
              "id": 15398,
              "nodeType": "StructuredDocumentation",
              "src": "886:142:50",
              "text": " @notice Sets initialized == true on implementation contracts\n @param test Set to true to skip implementation initialization"
            },
            "id": 15407,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15403,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15400,
                    "src": "1068:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 15404,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15402,
                  "name": "Initializable",
                  "nameLocations": [
                    "1054:13:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16991,
                  "src": "1054:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "1054:19:50"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15400,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "1048:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15407,
                  "src": "1043:9:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:11:50"
            },
            "returnParameters": {
              "id": 15405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1074:0:50"
            },
            "scope": 15691,
            "src": "1031:45:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15464,
              "nodeType": "Block",
              "src": "1670:372:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15422,
                        "name": "_adaptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15410,
                        "src": "1693:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15421,
                      "name": "_setAdaptedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15660,
                      "src": "1676:16:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 15423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:31:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15424,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:31:50"
                },
                {
                  "expression": {
                    "id": 15427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15425,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15389,
                      "src": "1713:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15426,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15412,
                      "src": "1720:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1713:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 15428,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:12:50"
                },
                {
                  "expression": {
                    "id": 15431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15429,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15391,
                      "src": "1731:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15430,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15414,
                      "src": "1740:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1731:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 15432,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:16:50"
                },
                {
                  "assignments": [
                    15434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15434,
                      "mutability": "mutable",
                      "name": "_decimals",
                      "nameLocation": "1759:9:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 15464,
                      "src": "1753:15:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 15433,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1753:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15440,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 15436,
                            "name": "_adaptedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15410,
                            "src": "1781:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15435,
                          "name": "IDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15764,
                          "src": "1771:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDecimals_$15764_$",
                            "typeString": "type(contract IDecimals)"
                          }
                        },
                        "id": 15437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1771:24:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDecimals_$15764",
                          "typeString": "contract IDecimals"
                        }
                      },
                      "id": 15438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1796:8:50",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15763,
                      "src": "1771:33:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 15439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1771:35:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1753:53:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 15444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15442,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15434,
                          "src": "1827:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 15443,
                          "name": "_expectedDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15416,
                          "src": "1839:17:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1827:29:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446563696d616c73206f66206164617074656420746f6b656e206d757374206265203c20657870656374656420646563696d616c732e",
                        "id": 15445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1864:56:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_135aa443ed453db3647abc31c5ebf8d7e70b844e8bc25b25469b9140aa4b7c77",
                          "typeString": "literal_string \"Decimals of adapted token must be < expected decimals.\""
                        },
                        "value": "Decimals of adapted token must be < expected decimals."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_135aa443ed453db3647abc31c5ebf8d7e70b844e8bc25b25469b9140aa4b7c77",
                          "typeString": "literal_string \"Decimals of adapted token must be < expected decimals.\""
                        }
                      ],
                      "id": 15441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1812:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1812:114:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15447,
                  "nodeType": "ExpressionStatement",
                  "src": "1812:114:50"
                },
                {
                  "expression": {
                    "id": 15458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15448,
                      "name": "digitDifference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15384,
                      "src": "1932:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 15451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1957:2:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 15454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 15452,
                                  "name": "_expectedDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15416,
                                  "src": "1964:17:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 15453,
                                  "name": "_decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15434,
                                  "src": "1984:9:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1964:29:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 15455,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1963:31:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1957:37:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 15450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1950:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 15449,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "1950:6:50",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 15457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1950:45:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1932:63:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 15459,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:63:50"
                },
                {
                  "expression": {
                    "id": 15462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15460,
                      "name": "expectedDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15393,
                      "src": "2001:16:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15461,
                      "name": "_expectedDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15416,
                      "src": "2020:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2001:36:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 15463,
                  "nodeType": "ExpressionStatement",
                  "src": "2001:36:50"
                }
              ]
            },
            "documentation": {
              "id": 15408,
              "nodeType": "StructuredDocumentation",
              "src": "1080:428:50",
              "text": " @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n @param _adaptedToken The address of the adapted token.\n @param _name The name of the adapted token.\n @param _symbol The symbol of the adapted token.\n @param _expectedDecimals The expected number of decimals of the adapted token.\n @notice _expectedDecimals must be bigger than _adaptedToken.decimals()."
            },
            "functionSelector": "f6d2ee86",
            "id": 15465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15419,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15418,
                  "name": "initializer",
                  "nameLocations": [
                    "1658:11:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16975,
                  "src": "1658:11:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "1658:11:50"
              }
            ],
            "name": "initialize",
            "nameLocation": "1520:10:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15410,
                  "mutability": "mutable",
                  "name": "_adaptedToken",
                  "nameLocation": "1544:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15465,
                  "src": "1536:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15412,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1577:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15465,
                  "src": "1563:19:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15411,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15414,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1602:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15465,
                  "src": "1588:21:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15413,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15416,
                  "mutability": "mutable",
                  "name": "_expectedDecimals",
                  "nameLocation": "1621:17:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15465,
                  "src": "1615:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15415,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:112:50"
            },
            "returnParameters": {
              "id": 15420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1670:0:50"
            },
            "scope": 15691,
            "src": "1511:531:50",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15807
            ],
            "body": {
              "id": 15499,
              "nodeType": "Block",
              "src": "2284:191:50",
              "statements": [
                {
                  "assignments": [
                    15476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15476,
                      "mutability": "mutable",
                      "name": "valueScaled",
                      "nameLocation": "2298:11:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 15499,
                      "src": "2290:19:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15475,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2290:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15480,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15478,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15470,
                        "src": "2322:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15477,
                      "name": "downscale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15690,
                      "src": "2312:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 15479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:16:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2290:38:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15482,
                          "name": "valueScaled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15476,
                          "src": "2342:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2356:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2342:15:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5363616c65642064656269742076616c7565206d757374206265203e20302e",
                        "id": 15485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2359:33:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7323159da833d5c90bb8ffe80c173507ca32f037d0d06cd6f9733bdee79cb007",
                          "typeString": "literal_string \"Scaled debit value must be > 0.\""
                        },
                        "value": "Scaled debit value must be > 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7323159da833d5c90bb8ffe80c173507ca32f037d0d06cd6f9733bdee79cb007",
                          "typeString": "literal_string \"Scaled debit value must be > 0.\""
                        }
                      ],
                      "id": 15481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2334:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:59:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15487,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:59:50"
                },
                {
                  "expression": {
                    "id": 15490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15488,
                      "name": "debited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15387,
                      "src": "2399:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15489,
                      "name": "valueScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15476,
                      "src": "2409:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2399:21:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15491,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15495,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15468,
                        "src": "2452:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15496,
                        "name": "valueScaled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15476,
                        "src": "2458:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15492,
                        "name": "adaptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15382,
                        "src": "2426:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                          "typeString": "contract IFeeCurrency"
                        }
                      },
                      "id": 15494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2439:12:50",
                      "memberName": "debitGasFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15776,
                      "src": "2426:25:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 15497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2426:44:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15498,
                  "nodeType": "ExpressionStatement",
                  "src": "2426:44:50"
                }
              ]
            },
            "documentation": {
              "id": 15466,
              "nodeType": "StructuredDocumentation",
              "src": "2046:168:50",
              "text": " Downscales value to the adapted token's native digits and debits it.\n @param from from address\n @param value Debited value in the adapted digits."
            },
            "functionSelector": "58cf9672",
            "id": 15500,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15473,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15472,
                  "name": "onlyVm",
                  "nameLocations": [
                    "2277:6:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16289,
                  "src": "2277:6:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "2277:6:50"
              }
            ],
            "name": "debitGasFees",
            "nameLocation": "2226:12:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15468,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2247:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15500,
                  "src": "2239:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15470,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2261:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15500,
                  "src": "2253:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:29:50"
            },
            "returnParameters": {
              "id": 15474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2284:0:50"
            },
            "scope": 15691,
            "src": "2217:258:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15827
            ],
            "body": {
              "id": 15597,
              "nodeType": "Block",
              "src": "3393:821:50",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15522,
                      "name": "debited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15387,
                      "src": "3403:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3414:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3403:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15527,
                  "nodeType": "IfStatement",
                  "src": "3399:142:50",
                  "trueBody": {
                    "id": 15526,
                    "nodeType": "Block",
                    "src": "3417:124:50",
                    "statements": [
                      {
                        "functionReturnParameters": 15521,
                        "id": 15525,
                        "nodeType": "Return",
                        "src": "3528:7:50"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    15529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15529,
                      "mutability": "mutable",
                      "name": "refundScaled",
                      "nameLocation": "3555:12:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 15597,
                      "src": "3547:20:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3547:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15533,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15531,
                        "name": "refundAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15511,
                        "src": "3580:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15530,
                      "name": "downscale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15690,
                      "src": "3570:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 15532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3570:23:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3547:46:50"
                },
                {
                  "assignments": [
                    15535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15535,
                      "mutability": "mutable",
                      "name": "tipTxFeeScaled",
                      "nameLocation": "3607:14:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 15597,
                      "src": "3599:22:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15534,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3599:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15539,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15537,
                        "name": "tipAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15513,
                        "src": "3634:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15536,
                      "name": "downscale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15690,
                      "src": "3624:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 15538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:20:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3599:45:50"
                },
                {
                  "assignments": [
                    15541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15541,
                      "mutability": "mutable",
                      "name": "baseTxFeeScaled",
                      "nameLocation": "3658:15:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 15597,
                      "src": "3650:23:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15540,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3650:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15545,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15543,
                        "name": "baseFeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15517,
                        "src": "3686:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15542,
                      "name": "downscale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15690,
                      "src": "3676:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 15544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3676:24:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3650:50:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 15547,
                              "name": "refundScaled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15529,
                              "src": "3722:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 15548,
                              "name": "tipTxFeeScaled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15535,
                              "src": "3737:14:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3722:29:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 15550,
                            "name": "baseTxFeeScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15541,
                            "src": "3754:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3722:47:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 15552,
                          "name": "debited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15387,
                          "src": "3773:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3722:58:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420637265646974206d6f7265207468616e20646562697465642e",
                        "id": 15554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3788:34:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a35bbd323c4fb3e59cee627945e7a78a4cd03a3657d56d98aa33e3b6d3bf22fa",
                          "typeString": "literal_string \"Cannot credit more than debited.\""
                        },
                        "value": "Cannot credit more than debited."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a35bbd323c4fb3e59cee627945e7a78a4cd03a3657d56d98aa33e3b6d3bf22fa",
                          "typeString": "literal_string \"Cannot credit more than debited.\""
                        }
                      ],
                      "id": 15546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3707:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:121:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15556,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:121:50"
                },
                {
                  "assignments": [
                    15558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15558,
                      "mutability": "mutable",
                      "name": "roundingError",
                      "nameLocation": "3843:13:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 15597,
                      "src": "3835:21:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15557,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3835:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15567,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15559,
                      "name": "debited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15387,
                      "src": "3859:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 15560,
                              "name": "refundScaled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15529,
                              "src": "3870:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 15561,
                              "name": "tipTxFeeScaled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15535,
                              "src": "3885:14:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3870:29:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 15563,
                            "name": "baseTxFeeScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15541,
                            "src": "3902:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3870:47:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15565,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3869:49:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3859:59:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3835:83:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15568,
                      "name": "roundingError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15558,
                      "src": "3929:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3945:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3929:17:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15576,
                  "nodeType": "IfStatement",
                  "src": "3925:70:50",
                  "trueBody": {
                    "id": 15575,
                    "nodeType": "Block",
                    "src": "3948:47:50",
                    "statements": [
                      {
                        "expression": {
                          "id": 15573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15571,
                            "name": "baseTxFeeScaled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15541,
                            "src": "3956:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 15572,
                            "name": "roundingError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15558,
                            "src": "3975:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3956:32:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15574,
                        "nodeType": "ExpressionStatement",
                        "src": "3956:32:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15580,
                        "name": "refundRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15503,
                        "src": "4034:15:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15581,
                        "name": "tipRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15505,
                        "src": "4057:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 15584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4085:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 15583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4077:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15582,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4077:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4077:10:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15586,
                        "name": "baseFeeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15509,
                        "src": "4095:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15587,
                        "name": "refundScaled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15529,
                        "src": "4119:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 15588,
                        "name": "tipTxFeeScaled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15535,
                        "src": "4139:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 15589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4161:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 15590,
                        "name": "baseTxFeeScaled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15541,
                        "src": "4170:15:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15577,
                        "name": "adaptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15382,
                        "src": "4000:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                          "typeString": "contract IFeeCurrency"
                        }
                      },
                      "id": 15579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4013:13:50",
                      "memberName": "creditGasFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15796,
                      "src": "4000:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 15591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:191:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15592,
                  "nodeType": "ExpressionStatement",
                  "src": "4000:191:50"
                },
                {
                  "expression": {
                    "id": 15595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15593,
                      "name": "debited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15387,
                      "src": "4198:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 15594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4208:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4198:11:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15596,
                  "nodeType": "ExpressionStatement",
                  "src": "4198:11:50"
                }
              ]
            },
            "documentation": {
              "id": 15501,
              "nodeType": "StructuredDocumentation",
              "src": "2479:642:50",
              "text": " Downscales value to the adapted token's native digits and credits it.\n @param refundRecipient The recipient of the refund.\n @param tipRecipient The recipient of the tip.\n @param _gatewayFeeRecipient The recipient of the gateway fee. Unused.\n @param baseFeeRecipient The recipient of the base fee.\n @param refundAmount The amount to refund (in adapted token digits).\n @param tipAmount The amount to tip (in adapted token digits).\n @param _gatewayFeeAmount The amount of the gateway fee (in adapted token digits). Unused.\n @param baseFeeAmount The amount of the base fee (in adapted token digits)."
            },
            "functionSelector": "6a30b253",
            "id": 15598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 15520,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15519,
                  "name": "onlyVm",
                  "nameLocations": [
                    "3386:6:50"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16289,
                  "src": "3386:6:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "3386:6:50"
              }
            ],
            "name": "creditGasFees",
            "nameLocation": "3133:13:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15503,
                  "mutability": "mutable",
                  "name": "refundRecipient",
                  "nameLocation": "3160:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3152:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15505,
                  "mutability": "mutable",
                  "name": "tipRecipient",
                  "nameLocation": "3189:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3181:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15507,
                  "mutability": "mutable",
                  "name": "_gatewayFeeRecipient",
                  "nameLocation": "3215:20:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3207:28:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3207:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15509,
                  "mutability": "mutable",
                  "name": "baseFeeRecipient",
                  "nameLocation": "3249:16:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3241:24:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15511,
                  "mutability": "mutable",
                  "name": "refundAmount",
                  "nameLocation": "3279:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3271:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3271:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15513,
                  "mutability": "mutable",
                  "name": "tipAmount",
                  "nameLocation": "3305:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3297:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3297:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15515,
                  "mutability": "mutable",
                  "name": "_gatewayFeeAmount",
                  "nameLocation": "3328:17:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3320:25:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15517,
                  "mutability": "mutable",
                  "name": "baseFeeAmount",
                  "nameLocation": "3359:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15598,
                  "src": "3351:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3146:230:50"
            },
            "returnParameters": {
              "id": 15521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3393:0:50"
            },
            "scope": 15691,
            "src": "3124:1090:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15833
            ],
            "body": {
              "id": 15609,
              "nodeType": "Block",
              "src": "4373:39:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15606,
                        "name": "adaptedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15382,
                        "src": "4394:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                          "typeString": "contract IFeeCurrency"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                          "typeString": "contract IFeeCurrency"
                        }
                      ],
                      "id": 15605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4386:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 15604,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4386:7:50",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 15607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4386:21:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 15603,
                  "id": 15608,
                  "nodeType": "Return",
                  "src": "4379:28:50"
                }
              ]
            },
            "documentation": {
              "id": 15599,
              "nodeType": "StructuredDocumentation",
              "src": "4218:93:50",
              "text": " @notice Returns adapted token address.\n @return The adapted token address."
            },
            "functionSelector": "eeee9dc2",
            "id": 15610,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAdaptedToken",
            "nameLocation": "4323:15:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4338:2:50"
            },
            "returnParameters": {
              "id": 15603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15610,
                  "src": "4364:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4364:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4363:9:50"
            },
            "scope": 15691,
            "src": "4314:98:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15625,
              "nodeType": "Block",
              "src": "4680:58:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15621,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15613,
                            "src": "4724:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 15619,
                            "name": "adaptedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15382,
                            "src": "4701:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                              "typeString": "contract IFeeCurrency"
                            }
                          },
                          "id": 15620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4714:9:50",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 147,
                          "src": "4701:22:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 15622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4701:31:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15618,
                      "name": "upscale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15672,
                      "src": "4693:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 15623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4693:40:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15617,
                  "id": 15624,
                  "nodeType": "Return",
                  "src": "4686:47:50"
                }
              ]
            },
            "documentation": {
              "id": 15611,
              "nodeType": "StructuredDocumentation",
              "src": "4416:193:50",
              "text": " @notice Gets the balance of the specified address with correct digits.\n @param account The address to query the balance of.\n @return The balance of the specified address."
            },
            "functionSelector": "70a08231",
            "id": 15626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4621:9:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15613,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4639:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15626,
                  "src": "4631:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4631:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4630:17:50"
            },
            "returnParameters": {
              "id": 15617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15626,
                  "src": "4671:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4671:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4670:9:50"
            },
            "scope": 15691,
            "src": "4612:126:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15638,
              "nodeType": "Block",
              "src": "4896:53:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 15633,
                            "name": "adaptedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15382,
                            "src": "4917:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                              "typeString": "contract IFeeCurrency"
                            }
                          },
                          "id": 15634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4930:11:50",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 139,
                          "src": "4917:24:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 15635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4917:26:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15632,
                      "name": "upscale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15672,
                      "src": "4909:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 15636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4909:35:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15631,
                  "id": 15637,
                  "nodeType": "Return",
                  "src": "4902:42:50"
                }
              ]
            },
            "documentation": {
              "id": 15627,
              "nodeType": "StructuredDocumentation",
              "src": "4742:96:50",
              "text": " @notice Gets the total supply with correct digits.\n @return The total supply."
            },
            "functionSelector": "18160ddd",
            "id": 15639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4850:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4861:2:50"
            },
            "returnParameters": {
              "id": 15631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15630,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15639,
                  "src": "4887:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4886:9:50"
            },
            "scope": 15691,
            "src": "4841:108:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15863
            ],
            "body": {
              "id": 15647,
              "nodeType": "Block",
              "src": "5102:34:50",
              "statements": [
                {
                  "expression": {
                    "id": 15645,
                    "name": "expectedDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15393,
                    "src": "5115:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 15644,
                  "id": 15646,
                  "nodeType": "Return",
                  "src": "5108:23:50"
                }
              ]
            },
            "documentation": {
              "id": 15640,
              "nodeType": "StructuredDocumentation",
              "src": "4953:96:50",
              "text": " @notice Gets the total supply with correct digits.\n @return The total supply."
            },
            "functionSelector": "313ce567",
            "id": 15648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "5061:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5069:2:50"
            },
            "returnParameters": {
              "id": 15644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15643,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15648,
                  "src": "5095:5:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 15642,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "5095:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5094:7:50"
            },
            "scope": 15691,
            "src": "5052:84:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15659,
              "nodeType": "Block",
              "src": "5206:53:50",
              "statements": [
                {
                  "expression": {
                    "id": 15657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15653,
                      "name": "adaptedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "5212:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                        "typeString": "contract IFeeCurrency"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15655,
                          "name": "_adaptedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15650,
                          "src": "5240:13:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 15654,
                        "name": "IFeeCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15797,
                        "src": "5227:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeCurrency_$15797_$",
                          "typeString": "type(contract IFeeCurrency)"
                        }
                      },
                      "id": 15656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5227:27:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                        "typeString": "contract IFeeCurrency"
                      }
                    },
                    "src": "5212:42:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeCurrency_$15797",
                      "typeString": "contract IFeeCurrency"
                    }
                  },
                  "id": 15658,
                  "nodeType": "ExpressionStatement",
                  "src": "5212:42:50"
                }
              ]
            },
            "id": 15660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAdaptedToken",
            "nameLocation": "5149:16:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15650,
                  "mutability": "mutable",
                  "name": "_adaptedToken",
                  "nameLocation": "5174:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15660,
                  "src": "5166:21:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5166:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5165:23:50"
            },
            "returnParameters": {
              "id": 15652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5206:0:50"
            },
            "scope": 15691,
            "src": "5140:119:50",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15671,
              "nodeType": "Block",
              "src": "5327:41:50",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15667,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15662,
                      "src": "5340:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 15668,
                      "name": "digitDifference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15384,
                      "src": "5348:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "5340:23:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15666,
                  "id": 15670,
                  "nodeType": "Return",
                  "src": "5333:30:50"
                }
              ]
            },
            "id": 15672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upscale",
            "nameLocation": "5272:7:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15662,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5288:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15672,
                  "src": "5280:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5280:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5279:15:50"
            },
            "returnParameters": {
              "id": 15666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15665,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15672,
                  "src": "5318:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5318:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5317:9:50"
            },
            "scope": 15691,
            "src": "5263:105:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15689,
              "nodeType": "Block",
              "src": "6202:65:50",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 15680,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15675,
                              "src": "6216:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 15681,
                              "name": "digitDifference",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15384,
                              "src": "6224:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "6216:23:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 15683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6242:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6216:27:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15685,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6215:29:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 15686,
                      "name": "digitDifference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15384,
                      "src": "6247:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "6215:47:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15679,
                  "id": 15688,
                  "nodeType": "Return",
                  "src": "6208:54:50"
                }
              ]
            },
            "documentation": {
              "id": 15673,
              "nodeType": "StructuredDocumentation",
              "src": "5372:761:50",
              "text": " @notice Downscales value to the adapted token's native digits.\n @dev Downscale is rounding up in favour of protocol. User possibly can pay a bit more than expected (up to 1 unit of a token).\n Example:\n USDC has 6 decimals and in such case user can pay up to 0.000001 USDC more than expected.\n WBTC (currently not supported by Celo chain as fee currency) has 8 decimals and in such case user can pay up to 0.00000001 WBTC more than expected.\n Considering the current price of WBTC, it's less than 0.0005 USD. Even when WBTC price would be 1 mil USD, it's still would be only 0.01 USD.\n In general it is a very small amount and it is acceptable to round up in favor of the protocol.\n @param value The value to downscale."
            },
            "id": 15690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "downscale",
            "nameLocation": "6145:9:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15675,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6163:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 15690,
                  "src": "6155:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6155:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6154:15:50"
            },
            "returnParameters": {
              "id": 15679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15690,
                  "src": "6193:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6193:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6192:9:50"
            },
            "scope": 15691,
            "src": "6136:131:50",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 15692,
        "src": "599:5670:50",
        "usedErrors": []
      }
    ],
    "src": "42:6228:50"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.217Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "params": {
          "account": "The address to query the balance of."
        },
        "returns": {
          "_0": "The balance of the specified address."
        }
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)": {
        "params": {
          "_gatewayFeeAmount": "The amount of the gateway fee (in adapted token digits). Unused.",
          "_gatewayFeeRecipient": "The recipient of the gateway fee. Unused.",
          "baseFeeAmount": "The amount of the base fee (in adapted token digits).",
          "baseFeeRecipient": "The recipient of the base fee.",
          "refundAmount": "The amount to refund (in adapted token digits).",
          "refundRecipient": "The recipient of the refund.",
          "tipAmount": "The amount to tip (in adapted token digits).",
          "tipRecipient": "The recipient of the tip."
        }
      },
      "debitGasFees(address,uint256)": {
        "params": {
          "from": "from address",
          "value": "Debited value in the adapted digits."
        }
      },
      "decimals()": {
        "returns": {
          "_0": "The total supply."
        }
      },
      "getAdaptedToken()": {
        "returns": {
          "_0": "The adapted token address."
        }
      },
      "initialize(address,string,string,uint8)": {
        "params": {
          "_adaptedToken": "The address of the adapted token.",
          "_expectedDecimals": "The expected number of decimals of the adapted token.",
          "_name": "The name of the adapted token.",
          "_symbol": "The symbol of the adapted token."
        }
      },
      "totalSupply()": {
        "returns": {
          "_0": "The total supply."
        }
      }
    },
    "stateVariables": {
      "debited": {
        "return": "The amount that is debited after calling debitGasFees() and before creditGasFees().",
        "returns": {
          "_0": "The amount that is debited after calling debitGasFees() and before creditGasFees()."
        }
      },
      "digitDifference": {
        "return": "The multiplier that should be used when upscaling and downscaling. This is the result of 10**(expectedDecimals - getAdaptedToken().decimals()).",
        "returns": {
          "_0": "The multiplier that should be used when upscaling and downscaling. This is the result of 10**(expectedDecimals - getAdaptedToken().decimals())."
        }
      },
      "expectedDecimals": {
        "return": "Same as decimals.",
        "returns": {
          "_0": "Same as decimals."
        }
      },
      "name": {
        "return": "The name of the adapted token.",
        "returns": {
          "_0": "The name of the adapted token."
        }
      },
      "symbol": {
        "return": "The symbol of adapted token.",
        "returns": {
          "_0": "The symbol of adapted token."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "balanceOf(address)": {
        "notice": "Gets the balance of the specified address with correct digits."
      },
      "constructor": {
        "notice": "Sets initialized == true on implementation contracts"
      },
      "creditGasFees(address,address,address,address,uint256,uint256,uint256,uint256)": {
        "notice": "Downscales value to the adapted token's native digits and credits it."
      },
      "debitGasFees(address,uint256)": {
        "notice": "Downscales value to the adapted token's native digits and debits it."
      },
      "decimals()": {
        "notice": "Gets the total supply with correct digits."
      },
      "getAdaptedToken()": {
        "notice": "Returns adapted token address."
      },
      "initialize(address,string,string,uint8)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy._expectedDecimals must be bigger than _adaptedToken.decimals()."
      },
      "totalSupply()": {
        "notice": "Gets the total supply with correct digits."
      }
    },
    "version": 1
  }
}