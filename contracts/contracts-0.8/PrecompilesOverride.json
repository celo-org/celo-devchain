{
  "contractName": "PrecompilesOverride",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof   of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the   account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"returns\":{\"_0\":\"True upon success.\"}},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"returns\":{\"_0\":\"Numerator of the computed quantity (not reduced).\",\"_1\":\"Denominator of the computed quantity (not reduced).\"}},\"getBlockNumberFromHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"returns\":{\"_0\":\"Block number.\"}},\"getEpochNumber()\":{\"returns\":{\"_0\":\"Current epoch number.\"}},\"getEpochNumberOfBlock(uint256)\":{\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"returns\":{\"_0\":\"Epoch number.\"}},\"getEpochSize()\":{\"details\":\"This function will be deprecated in L2.\",\"returns\":{\"_0\":\"The current epoch size in blocks.\"}},\"getParentSealBitmap(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"returns\":{\"_0\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"}},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"returns\":{\"_0\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"}},\"hashHeader(bytes)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"header\":\"RLP encoded header\"},\"returns\":{\"_0\":\"Header hash.\"}},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))This function will be deprecated in L2.\"},\"minQuorumSizeInCurrentSet()\":{\"details\":\"This function will be deprecated in L2.\",\"returns\":{\"_0\":\"Byzantine quorum of validators.\"}},\"numberValidatorsInCurrentSet()\":{\"returns\":{\"_0\":\"Size of the current elected validator set.\"}},\"numberValidatorsInSet(uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"returns\":{\"_0\":\"Size of the validator set.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"returns\":{\"_0\":\"Address of validator at the requested index.\"}},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"returns\":{\"_0\":\"Address of validator signer at the requested index.\"}},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"details\":\"This function will be deprecated in L2.\",\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"returns\":{\"_0\":\"Address of validator signer at the requested index.\"}}},\"title\":\"PrecompilesOverride Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInCurrentSet()\":{\"notice\":\"Gets the size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"validatorAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator address from the current validator set.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator signer address from the current validator set.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator signer address from the validator set at the given block number.\"}},\"notice\":\"This contract allows for a smoother transition from L1 to L2 by abstracting away the usingPrecompile contract, and taking care of the L1 to L2 swtiching logic.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/common/PrecompilesOverride.sol\":\"PrecompilesOverride\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/IsL2Check.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.8.20;\\n\\n/**\\n * @title Based on predeploy returns whether this is L1 or L2.\\n */\\ncontract IsL2Check {\\n  address constant proxyAdminAddress = 0x4200000000000000000000000000000000000018;\\n\\n  /**\\n   * @notice Throws if called on L2.\\n   */\\n  modifier onlyL1() {\\n    allowOnlyL1();\\n    _;\\n  }\\n\\n  /**\\n   * @notice Throws if called on L1.\\n   */\\n  modifier onlyL2() {\\n    if (!isL2()) {\\n      revert(\\\"This method is not supported in L1.\\\");\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice Checks to see if current network is Celo L2.\\n   * @return Whether or not the current network is a Celo L2.\\n   */\\n  function isL2() internal view returns (bool) {\\n    uint32 size;\\n    address _addr = proxyAdminAddress;\\n    assembly {\\n      size := extcodesize(_addr)\\n    }\\n    return (size > 0);\\n  }\\n\\n  /**\\n   * @notice Used to restrict usage of the parent function to L1 execution.\\n   * @dev Reverts if called on a Celo L2 network.\\n   */\\n  function allowOnlyL1() internal view {\\n    if (isL2()) {\\n      revert(\\\"This method is no longer supported in L2.\\\");\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4629a6f2c4364780f5a6a5e2ad5c3675c0a1d3bea35cfd4426eeaebca60cac37\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/PrecompilesOverride.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../../contracts-0.8/common/IsL2Check.sol\\\";\\n\\nimport \\\"./UsingPrecompiles.sol\\\";\\nimport \\\"./UsingRegistry.sol\\\";\\n\\n/**\\n * @title PrecompilesOverride Contract\\n * @notice This contract allows for a smoother transition from L1 to L2\\n * by abstracting away the usingPrecompile contract, and taking care of the L1 to L2 swtiching logic.\\n **/\\ncontract PrecompilesOverride is UsingPrecompiles, UsingRegistry {\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @return Epoch number.\\n   */\\n  function getEpochNumberOfBlock(uint256 blockNumber) public view override returns (uint256) {\\n    if (isL2()) {\\n      return getEpochManager().getEpochNumberOfBlock(blockNumber);\\n    } else {\\n      return epochNumberOfBlock(blockNumber, getEpochSize());\\n    }\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @return Current epoch number.\\n   */\\n  function getEpochNumber() public view override returns (uint256) {\\n    return getEpochNumberOfBlock(block.number);\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator signer at the requested index.\\n   */\\n  function validatorSignerAddressFromCurrentSet(\\n    uint256 index\\n  ) public view override returns (address) {\\n    if (isL2()) {\\n      return getEpochManager().getElectedSignerByIndex(index);\\n    } else {\\n      return super.validatorSignerAddressFromCurrentSet(index);\\n    }\\n  }\\n\\n  /**\\n   * @notice Gets a validator address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator at the requested index.\\n   */\\n  function validatorAddressFromCurrentSet(uint256 index) public view onlyL2 returns (address) {\\n    return getEpochManager().getElectedAccountByIndex(index);\\n  }\\n\\n  /**\\n   * @notice Gets the size of the current elected validator set.\\n   * @return Size of the current elected validator set.\\n   */\\n  function numberValidatorsInCurrentSet() public view override returns (uint256) {\\n    if (isL2()) {\\n      return getEpochManager().numberOfElectedInCurrentSet();\\n    } else {\\n      return super.numberValidatorsInCurrentSet();\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x219e69991be4a578e804082d8dc6afc11f17620963825a2da4bda51b8d6cae15\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/UsingPrecompiles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.8.20;\\n\\n// Note: This is not an exact copy of UsingPrecompiles in the contract's folder, but in solidity 0.8\\nimport \\\"@openzeppelin/contracts8/utils/math/SafeMath.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../common/IsL2Check.sol\\\";\\n\\ncontract UsingPrecompiles is IsL2Check {\\n  using SafeMath for uint256;\\n\\n  address constant TRANSFER = address(0xff - 2);\\n  address constant FRACTION_MUL = address(0xff - 3);\\n  address constant PROOF_OF_POSSESSION = address(0xff - 4);\\n  address constant GET_VALIDATOR = address(0xff - 5);\\n  address constant NUMBER_VALIDATORS = address(0xff - 6);\\n  address constant EPOCH_SIZE = address(0xff - 7);\\n  address constant BLOCK_NUMBER_FROM_HEADER = address(0xff - 8);\\n  address constant HASH_HEADER = address(0xff - 9);\\n  address constant GET_PARENT_SEAL_BITMAP = address(0xff - 10);\\n  address constant GET_VERIFIED_SEAL_BITMAP = address(0xff - 11);\\n  uint256 constant DAY = 86400;\\n\\n  /**\\n   * @notice calculate a * b^x for fractions a, b to `decimals` precision\\n   * @param aNumerator Numerator of first fraction\\n   * @param aDenominator Denominator of first fraction\\n   * @param bNumerator Numerator of exponentiated fraction\\n   * @param bDenominator Denominator of exponentiated fraction\\n   * @param exponent exponent to raise b to\\n   * @param _decimals precision\\n   * @return Numerator of the computed quantity (not reduced).\\n   * @return Denominator of the computed quantity (not reduced).\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function fractionMulExp(\\n    uint256 aNumerator,\\n    uint256 aDenominator,\\n    uint256 bNumerator,\\n    uint256 bDenominator,\\n    uint256 exponent,\\n    uint256 _decimals\\n  ) public view onlyL1 returns (uint256, uint256) {\\n    require(aDenominator != 0 && bDenominator != 0, \\\"a denominator is zero\\\");\\n    uint256 returnNumerator;\\n    uint256 returnDenominator;\\n    bool success;\\n    bytes memory out;\\n    (success, out) = FRACTION_MUL.staticcall(\\n      abi.encodePacked(aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)\\n    );\\n    require(success, \\\"error calling fractionMulExp precompile\\\");\\n    returnNumerator = getUint256FromBytes(out, 0);\\n    returnDenominator = getUint256FromBytes(out, 32);\\n    return (returnNumerator, returnDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the current epoch size in blocks.\\n   * @return The current epoch size in blocks.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochSize() public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = EPOCH_SIZE.staticcall(abi.encodePacked(true));\\n    require(success, \\\"error calling getEpochSize precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @return Epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumberOfBlock(uint256 blockNumber) public view virtual onlyL1 returns (uint256) {\\n    return epochNumberOfBlock(blockNumber, getEpochSize());\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @return Current epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumber() public view virtual onlyL1 returns (uint256) {\\n    return getEpochNumberOfBlock(block.number);\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromCurrentSet(\\n    uint256 index\\n  ) public view virtual onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, uint256(block.number)));\\n    require(success, \\\"error calling validatorSignerAddressFromCurrentSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the validator set at the given block number.\\n   * @param index Index of requested validator in the validator set.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromSet(\\n    uint256 index,\\n    uint256 blockNumber\\n  ) public view virtual onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, blockNumber));\\n    require(success, \\\"error calling validatorSignerAddressFromSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets the size of the current elected validator set.\\n   * @return Size of the current elected validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInCurrentSet() public view virtual onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(uint256(block.number)));\\n    require(success, \\\"error calling numberValidatorsInCurrentSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the size of the validator set that must sign the given block number.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Size of the validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInSet(uint256 blockNumber) public view virtual onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling numberValidatorsInSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Checks a BLS proof of possession.\\n   * @param sender The address signed by the BLS key to generate the proof of possession.\\n   * @param blsKey The BLS public key that the validator is using for consensus, should pass proof\\n   *   of possession. 48 bytes.\\n   * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\\n   *   account address. 96 bytes.\\n   * @return True upon success.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function checkProofOfPossession(\\n    address sender,\\n    bytes memory blsKey,\\n    bytes memory blsPop\\n  ) public view onlyL1 returns (bool) {\\n    bool success;\\n    (success, ) = PROOF_OF_POSSESSION.staticcall(abi.encodePacked(sender, blsKey, blsPop));\\n    return success;\\n  }\\n\\n  /**\\n   * @notice Parses block number out of header.\\n   * @param header RLP encoded header\\n   * @return Block number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getBlockNumberFromHeader(bytes memory header) public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = BLOCK_NUMBER_FROM_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getBlockNumberFromHeader precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Computes hash of header.\\n   * @param header RLP encoded header\\n   * @return Header hash.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function hashHeader(bytes memory header) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = HASH_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling hashHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the parent seal bitmap from the header at the given block number.\\n   * @param blockNumber Block number to retrieve. Must be within 4 epochs of the current number.\\n   * @return Bitmap parent seal with set bits at indices corresponding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getParentSealBitmap(uint256 blockNumber) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_PARENT_SEAL_BITMAP.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling getParentSealBitmap precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Verifies the BLS signature on the header and returns the seal bitmap.\\n   * The validator set used for verification is retrieved based on the parent hash field of the\\n   * header.  If the parent hash is not in the blockchain, verification fails.\\n   * @param header RLP encoded header\\n   * @return Bitmap parent seal with set bits at indices correspoinding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getVerifiedSealBitmapFromHeader(\\n    bytes memory header\\n  ) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VERIFIED_SEAL_BITMAP.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getVerifiedSealBitmapFromHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the minimum number of required signers for a given block number.\\n   * @dev Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSize(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    return numberValidatorsInSet(blockNumber).mul(2).add(2).div(3);\\n  }\\n\\n  /**\\n   * @notice Computes byzantine quorum from current validator set size\\n   * @return Byzantine quorum of validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSizeInCurrentSet() public view onlyL1 returns (uint256) {\\n    return minQuorumSize(block.number);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @param epochSize The epoch size in blocks.\\n   * @return Epoch number.\\n   */\\n  function epochNumberOfBlock(\\n    uint256 blockNumber,\\n    uint256 epochSize\\n  ) internal pure returns (uint256) {\\n    // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\\n    uint256 epochNumber = blockNumber / epochSize;\\n    if (blockNumber % epochSize == 0) {\\n      return epochNumber;\\n    } else {\\n      return epochNumber.add(1);\\n    }\\n  }\\n\\n  /**\\n   * @notice Converts bytes to uint256.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return uint256 data\\n   */\\n  function getUint256FromBytes(bytes memory bs, uint256 start) internal pure returns (uint256) {\\n    return uint256(getBytes32FromBytes(bs, start));\\n  }\\n\\n  /**\\n   * @notice Converts bytes to bytes32.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return bytes32 data\\n   */\\n  function getBytes32FromBytes(bytes memory bs, uint256 start) internal pure returns (bytes32) {\\n    require(bs.length >= start.add(32), \\\"slicing out of range\\\");\\n    bytes32 x;\\n    assembly {\\n      x := mload(add(bs, add(start, 32)))\\n    }\\n    return x;\\n  }\\n}\\n\",\"keccak256\":\"0xc3d623e15765e2ce37dadaefd792a2c272e1a43fa9f90763e5619bcfc82cee0c\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.8.20;\\n\\n// Note: This is not an exact copy of UsingRegistry or UsingRegistryV2 in the contract's folder\\n// because Mento's interfaces still don't support Solidity 0.8\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../../contracts/common/interfaces/IRegistry.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IAccounts.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IEpochManager.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFreezer.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloUnreleasedTreasury.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFeeHandlerSeller.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IEpochManager.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IValidators.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IElection.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../../contracts/stability/interfaces/ISortedOracles.sol\\\";\\n\\nimport \\\"./interfaces/IScoreReader.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n  bytes32 constant MENTOFEEHANDLERSELLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"MentoFeeHandlerSeller\\\"));\\n  bytes32 constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n  bytes32 constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  bytes32 constant SCORE_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"ScoreManager\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  event RegistrySet(address indexed registryAddress);\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelist() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registry.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  // Current version of Mento doesn't support 0.8\\n  function getStableToken() internal view returns (address) {\\n    return registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID);\\n  }\\n\\n  function getMentoFeeHandlerSeller() internal view returns (IFeeHandlerSeller) {\\n    return IFeeHandlerSeller(registry.getAddressForOrDie(MENTOFEEHANDLERSELLER_REGISTRY_ID));\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registry.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(registry.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registry.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n\\n  function getScoreReader() internal view returns (IScoreReader) {\\n    return IScoreReader(registry.getAddressForOrDie(SCORE_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x40f6a3f17d0665b82463f2c2f6837ddaf1a31bcf691c936682338f2664782dde\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/interfaces/IScoreReader.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\ninterface IScoreReader {\\n  function getValidatorScore(address validator) external view returns (uint256);\\n  function getGroupScore(address validator) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xa9276e744a343a3c1eaf68253b7f5ff2325897e18fae20a3265a257a2d0d1036\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFeeHandlerSeller.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeHandlerSeller {\\n  function sell(\\n    address sellTokenAddress,\\n    address buyTokenAddress,\\n    uint256 amount,\\n    uint256 minAmount\\n  ) external returns (uint256);\\n  // in case some funds need to be returned or moved to another contract\\n  function transfer(address token, uint256 amount, address to) external returns (bool);\\n}\\n\",\"keccak256\":\"0x24e5784f088d67578e1ea00a118e0fc2e79cf610fc89d0ca7a3f23bc33a0da4e\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61176c8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806387ee8a0f116100b8578063a91ee0dc1161007c578063a91ee0dc14610268578063df4da4611461027b578063e50e652d14610283578063ec68307214610296578063f2fde38b146102be578063fae8db0a146102d157600080fd5b806387ee8a0f146102215780638a883626146102295780638da5cb5b1461023c5780639a7b3be71461024d5780639b2b592f1461025557600080fd5b80635d180adb116100ff5780635d180adb146101d657806367960e91146101e9578063715018a6146101fc5780637385e5da146102065780637b1039991461020e57600080fd5b806311fb9e841461013c578063123633ea1461016c57806323f0ab651461017f5780633b1eb4bf146101a25780634b2c2f44146101c3575b600080fd5b61014f61014a36600461141b565b6102e4565b6040516001600160a01b0390911681526020015b60405180910390f35b61014f61017a36600461141b565b6103ce565b61019261018d3660046114ec565b610422565b6040519015158152602001610163565b6101b56101b036600461141b565b6104b4565b604051908152602001610163565b6101b56101d1366004611562565b610551565b61014f6101e4366004611597565b610660565b6101b56101f7366004611562565b610765565b610204610847565b005b6101b561085b565b60015461014f906001600160a01b031681565b6101b5610873565b6101b5610237366004611562565b6108fa565b6000546001600160a01b031661014f565b6101b56109f5565b6101b561026336600461141b565b610a00565b6102046102763660046115b9565b610aef565b6101b5610b97565b6101b561029136600461141b565b610c86565b6102a96102a43660046115d6565b610cba565b60408051928352602083019190915201610163565b6102046102cc3660046115b9565b610e3a565b6101b56102df36600461141b565b610eb3565b60006018602160991b013b63ffffffff166103525760405162461bcd60e51b815260206004820152602360248201527f54686973206d6574686f64206973206e6f7420737570706f7274656420696e2060448201526226189760e91b60648201526084015b60405180910390fd5b61035a610fa0565b6001600160a01b0316638657f615836040518263ffffffff1660e01b815260040161038791815260200190565b602060405180830381865afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190611619565b92915050565b60006018602160991b013b63ffffffff1615610419576103ec610fa0565b6001600160a01b0316632ba47274836040518263ffffffff1660e01b815260040161038791815260200190565b6103c882611046565b600061042c61114d565b600060fb6001600160a01b031685858560405160200161044e93929190611666565b60408051601f198184030181529082905261046891611693565b600060405180830381855afa9150503d80600081146104a3576040519150601f19603f3d011682016040523d82523d6000602084013e6104a8565b606091505b50909695505050505050565b60006018602160991b013b63ffffffff1615610540576104d2610fa0565b6001600160a01b0316633b1eb4bf836040518263ffffffff1660e01b81526004016104ff91815260200190565b602060405180830381865afa15801561051c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c8919061169f565b6103c88261054c610b97565b6111bb565b600061055b61114d565b6060600060f46001600160a01b03168460405160200161057b9190611693565b60408051601f198184030181529082905261059591611693565b600060405180830381855afa9150503d80600081146105d0576040519150601f19603f3d011682016040523d82523d6000602084013e6105d5565b606091505b50925090508061064d5760405162461bcd60e51b815260206004820152603860248201527f6572726f722063616c6c696e672067657456657269666965645365616c42697460448201527f6d617046726f6d48656164657220707265636f6d70696c6500000000000000006064820152608401610349565b6106588260006111f5565b949350505050565b600061066a61114d565b604080516020810185905290810183905260609060009060fa90830160408051601f19818403018152908290526106a091611693565b600060405180830381855afa9150503d80600081146106db576040519150601f19603f3d011682016040523d82523d6000602084013e6106e0565b606091505b5092509050806107515760405162461bcd60e51b815260206004820152603660248201527f6572726f722063616c6c696e672076616c696461746f725369676e65724164646044820152757265737346726f6d53657420707265636f6d70696c6560501b6064820152608401610349565b61075c826000611252565b95945050505050565b600061076f61114d565b6060600060f66001600160a01b03168460405160200161078f9190611693565b60408051601f19818403018152908290526107a991611693565b600060405180830381855afa9150503d80600081146107e4576040519150601f19603f3d011682016040523d82523d6000602084013e6107e9565b606091505b50925090508061064d5760405162461bcd60e51b815260206004820152602360248201527f6572726f722063616c6c696e67206861736848656164657220707265636f6d70604482015262696c6560e81b6064820152608401610349565b61084f611265565b61085960006112bf565b565b600061086561114d565b61086e43610c86565b905090565b60006018602160991b013b63ffffffff16156108f257610891610fa0565b6001600160a01b031663639a84d36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e919061169f565b61086e61130f565b600061090461114d565b6060600060f76001600160a01b0316846040516020016109249190611693565b60408051601f198184030181529082905261093e91611693565b600060405180830381855afa9150503d8060008114610979576040519150601f19603f3d011682016040523d82523d6000602084013e61097e565b606091505b5092509050806109ea5760405162461bcd60e51b815260206004820152603160248201527f6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d60448201527048656164657220707265636f6d70696c6560781b6064820152608401610349565b610658826000611252565b600061086e436104b4565b6000610a0a61114d565b6060600060f96001600160a01b031684604051602001610a2c91815260200190565b60408051601f1981840301815290829052610a4691611693565b600060405180830381855afa9150503d8060008114610a81576040519150601f19603f3d011682016040523d82523d6000602084013e610a86565b606091505b5092509050806109ea5760405162461bcd60e51b815260206004820152602e60248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201526d53657420707265636f6d70696c6560901b6064820152608401610349565b610af7611265565b6001600160a01b038116610b4d5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420726567697374657220746865206e756c6c20616464726573736044820152606401610349565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b90600090a250565b6000610ba161114d565b604051600160f81b602082015260609060009060f89060210160408051601f1981840301815290829052610bd491611693565b600060405180830381855afa9150503d8060008114610c0f576040519150601f19603f3d011682016040523d82523d6000602084013e610c14565b606091505b509250905080610c745760405162461bcd60e51b815260206004820152602560248201527f6572726f722063616c6c696e672067657445706f636853697a6520707265636f6044820152646d70696c6560d81b6064820152608401610349565b610c7f826000611252565b9250505090565b6000610c9061114d565b6103c86003610cb46002610cae6002610ca888610a00565b906113f7565b90611403565b9061140f565b600080610cc561114d565b8615801590610cd357508415155b610d175760405162461bcd60e51b8152602060048201526015602482015274612064656e6f6d696e61746f72206973207a65726f60581b6044820152606401610349565b60408051602081018a905290810188905260608181018890526080820187905260a0820186905260c082018590526000918291829160fc9060e00160408051601f1981840301815290829052610d6c91611693565b600060405180830381855afa9150503d8060008114610da7576040519150601f19603f3d011682016040523d82523d6000602084013e610dac565b606091505b50909250905081610e0f5760405162461bcd60e51b815260206004820152602760248201527f6572726f722063616c6c696e67206672616374696f6e4d756c45787020707265604482015266636f6d70696c6560c81b6064820152608401610349565b610e1a816000611252565b9350610e27816020611252565b939c939b50929950505050505050505050565b610e42611265565b6001600160a01b038116610ea75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610349565b610eb0816112bf565b50565b6000610ebd61114d565b6060600060f56001600160a01b031684604051602001610edf91815260200190565b60408051601f1981840301815290829052610ef991611693565b600060405180830381855afa9150503d8060008114610f34576040519150601f19603f3d011682016040523d82523d6000602084013e610f39565b606091505b50925090508061064d5760405162461bcd60e51b815260206004820152602c60248201527f6572726f722063616c6c696e6720676574506172656e745365616c4269746d6160448201526b7020707265636f6d70696c6560a01b6064820152608401610349565b6001546040516b22b837b1b426b0b730b3b2b960a11b60208201526000916001600160a01b03169063dcf0aaed90602c01604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161100591815260200190565b602060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e9190611619565b600061105061114d565b6060600060fa6001600160a01b0316844360405160200161107b929190918252602082015260400190565b60408051601f198184030181529082905261109591611693565b600060405180830381855afa9150503d80600081146110d0576040519150601f19603f3d011682016040523d82523d6000602084013e6110d5565b606091505b5092509050806109ea5760405162461bcd60e51b815260206004820152603d60248201527f6572726f722063616c6c696e672076616c696461746f725369676e657241646460448201527f7265737346726f6d43757272656e7453657420707265636f6d70696c650000006064820152608401610349565b6018602160991b013b63ffffffff16156108595760405162461bcd60e51b815260206004820152602960248201527f54686973206d6574686f64206973206e6f206c6f6e67657220737570706f727460448201526832b21034b71026191760b91b6064820152608401610349565b6000806111c883856116e4565b90506111d483856116f8565b6000036111e25790506103c8565b6111ed816001611403565b9150506103c8565b6000611202826020611403565b835110156112495760405162461bcd60e51b8152602060048201526014602482015273736c6963696e67206f7574206f662072616e676560601b6044820152606401610349565b50016020015190565b600061125e83836111f5565b9392505050565b6000546001600160a01b031633146108595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610349565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061131961114d565b6040805143602082015260609160009160f9910160408051601f198184030181529082905261134791611693565b600060405180830381855afa9150503d8060008114611382576040519150601f19603f3d011682016040523d82523d6000602084013e611387565b606091505b509250905080610c745760405162461bcd60e51b815260206004820152603560248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201527443757272656e7453657420707265636f6d70696c6560581b6064820152608401610349565b600061125e828461170c565b600061125e8284611723565b600061125e82846116e4565b60006020828403121561142d57600080fd5b5035919050565b6001600160a01b0381168114610eb057600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261147057600080fd5b813567ffffffffffffffff8082111561148b5761148b611449565b604051601f8301601f19908116603f011681019082821181831017156114b3576114b3611449565b816040528381528660208588010111156114cc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561150157600080fd5b833561150c81611434565b9250602084013567ffffffffffffffff8082111561152957600080fd5b6115358783880161145f565b9350604086013591508082111561154b57600080fd5b506115588682870161145f565b9150509250925092565b60006020828403121561157457600080fd5b813567ffffffffffffffff81111561158b57600080fd5b6106588482850161145f565b600080604083850312156115aa57600080fd5b50508035926020909101359150565b6000602082840312156115cb57600080fd5b813561125e81611434565b60008060008060008060c087890312156115ef57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60006020828403121561162b57600080fd5b815161125e81611434565b6000815160005b81811015611657576020818501810151868301520161163d565b50600093019283525090919050565b6bffffffffffffffffffffffff198460601b168152600061075c61168d6014840186611636565b84611636565b600061125e8284611636565b6000602082840312156116b157600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826116f3576116f36116b8565b500490565b600082611707576117076116b8565b500690565b80820281158282048414176103c8576103c86116ce565b808201808211156103c8576103c86116ce56fea2646970667358221220d4353c5ff175588aa9aaf388609df53f76b62137d43e12228e23c432fd6317ac64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806387ee8a0f116100b8578063a91ee0dc1161007c578063a91ee0dc14610268578063df4da4611461027b578063e50e652d14610283578063ec68307214610296578063f2fde38b146102be578063fae8db0a146102d157600080fd5b806387ee8a0f146102215780638a883626146102295780638da5cb5b1461023c5780639a7b3be71461024d5780639b2b592f1461025557600080fd5b80635d180adb116100ff5780635d180adb146101d657806367960e91146101e9578063715018a6146101fc5780637385e5da146102065780637b1039991461020e57600080fd5b806311fb9e841461013c578063123633ea1461016c57806323f0ab651461017f5780633b1eb4bf146101a25780634b2c2f44146101c3575b600080fd5b61014f61014a36600461141b565b6102e4565b6040516001600160a01b0390911681526020015b60405180910390f35b61014f61017a36600461141b565b6103ce565b61019261018d3660046114ec565b610422565b6040519015158152602001610163565b6101b56101b036600461141b565b6104b4565b604051908152602001610163565b6101b56101d1366004611562565b610551565b61014f6101e4366004611597565b610660565b6101b56101f7366004611562565b610765565b610204610847565b005b6101b561085b565b60015461014f906001600160a01b031681565b6101b5610873565b6101b5610237366004611562565b6108fa565b6000546001600160a01b031661014f565b6101b56109f5565b6101b561026336600461141b565b610a00565b6102046102763660046115b9565b610aef565b6101b5610b97565b6101b561029136600461141b565b610c86565b6102a96102a43660046115d6565b610cba565b60408051928352602083019190915201610163565b6102046102cc3660046115b9565b610e3a565b6101b56102df36600461141b565b610eb3565b60006018602160991b013b63ffffffff166103525760405162461bcd60e51b815260206004820152602360248201527f54686973206d6574686f64206973206e6f7420737570706f7274656420696e2060448201526226189760e91b60648201526084015b60405180910390fd5b61035a610fa0565b6001600160a01b0316638657f615836040518263ffffffff1660e01b815260040161038791815260200190565b602060405180830381865afa1580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190611619565b92915050565b60006018602160991b013b63ffffffff1615610419576103ec610fa0565b6001600160a01b0316632ba47274836040518263ffffffff1660e01b815260040161038791815260200190565b6103c882611046565b600061042c61114d565b600060fb6001600160a01b031685858560405160200161044e93929190611666565b60408051601f198184030181529082905261046891611693565b600060405180830381855afa9150503d80600081146104a3576040519150601f19603f3d011682016040523d82523d6000602084013e6104a8565b606091505b50909695505050505050565b60006018602160991b013b63ffffffff1615610540576104d2610fa0565b6001600160a01b0316633b1eb4bf836040518263ffffffff1660e01b81526004016104ff91815260200190565b602060405180830381865afa15801561051c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c8919061169f565b6103c88261054c610b97565b6111bb565b600061055b61114d565b6060600060f46001600160a01b03168460405160200161057b9190611693565b60408051601f198184030181529082905261059591611693565b600060405180830381855afa9150503d80600081146105d0576040519150601f19603f3d011682016040523d82523d6000602084013e6105d5565b606091505b50925090508061064d5760405162461bcd60e51b815260206004820152603860248201527f6572726f722063616c6c696e672067657456657269666965645365616c42697460448201527f6d617046726f6d48656164657220707265636f6d70696c6500000000000000006064820152608401610349565b6106588260006111f5565b949350505050565b600061066a61114d565b604080516020810185905290810183905260609060009060fa90830160408051601f19818403018152908290526106a091611693565b600060405180830381855afa9150503d80600081146106db576040519150601f19603f3d011682016040523d82523d6000602084013e6106e0565b606091505b5092509050806107515760405162461bcd60e51b815260206004820152603660248201527f6572726f722063616c6c696e672076616c696461746f725369676e65724164646044820152757265737346726f6d53657420707265636f6d70696c6560501b6064820152608401610349565b61075c826000611252565b95945050505050565b600061076f61114d565b6060600060f66001600160a01b03168460405160200161078f9190611693565b60408051601f19818403018152908290526107a991611693565b600060405180830381855afa9150503d80600081146107e4576040519150601f19603f3d011682016040523d82523d6000602084013e6107e9565b606091505b50925090508061064d5760405162461bcd60e51b815260206004820152602360248201527f6572726f722063616c6c696e67206861736848656164657220707265636f6d70604482015262696c6560e81b6064820152608401610349565b61084f611265565b61085960006112bf565b565b600061086561114d565b61086e43610c86565b905090565b60006018602160991b013b63ffffffff16156108f257610891610fa0565b6001600160a01b031663639a84d36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ce573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e919061169f565b61086e61130f565b600061090461114d565b6060600060f76001600160a01b0316846040516020016109249190611693565b60408051601f198184030181529082905261093e91611693565b600060405180830381855afa9150503d8060008114610979576040519150601f19603f3d011682016040523d82523d6000602084013e61097e565b606091505b5092509050806109ea5760405162461bcd60e51b815260206004820152603160248201527f6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d60448201527048656164657220707265636f6d70696c6560781b6064820152608401610349565b610658826000611252565b600061086e436104b4565b6000610a0a61114d565b6060600060f96001600160a01b031684604051602001610a2c91815260200190565b60408051601f1981840301815290829052610a4691611693565b600060405180830381855afa9150503d8060008114610a81576040519150601f19603f3d011682016040523d82523d6000602084013e610a86565b606091505b5092509050806109ea5760405162461bcd60e51b815260206004820152602e60248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201526d53657420707265636f6d70696c6560901b6064820152608401610349565b610af7611265565b6001600160a01b038116610b4d5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f7420726567697374657220746865206e756c6c20616464726573736044820152606401610349565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b90600090a250565b6000610ba161114d565b604051600160f81b602082015260609060009060f89060210160408051601f1981840301815290829052610bd491611693565b600060405180830381855afa9150503d8060008114610c0f576040519150601f19603f3d011682016040523d82523d6000602084013e610c14565b606091505b509250905080610c745760405162461bcd60e51b815260206004820152602560248201527f6572726f722063616c6c696e672067657445706f636853697a6520707265636f6044820152646d70696c6560d81b6064820152608401610349565b610c7f826000611252565b9250505090565b6000610c9061114d565b6103c86003610cb46002610cae6002610ca888610a00565b906113f7565b90611403565b9061140f565b600080610cc561114d565b8615801590610cd357508415155b610d175760405162461bcd60e51b8152602060048201526015602482015274612064656e6f6d696e61746f72206973207a65726f60581b6044820152606401610349565b60408051602081018a905290810188905260608181018890526080820187905260a0820186905260c082018590526000918291829160fc9060e00160408051601f1981840301815290829052610d6c91611693565b600060405180830381855afa9150503d8060008114610da7576040519150601f19603f3d011682016040523d82523d6000602084013e610dac565b606091505b50909250905081610e0f5760405162461bcd60e51b815260206004820152602760248201527f6572726f722063616c6c696e67206672616374696f6e4d756c45787020707265604482015266636f6d70696c6560c81b6064820152608401610349565b610e1a816000611252565b9350610e27816020611252565b939c939b50929950505050505050505050565b610e42611265565b6001600160a01b038116610ea75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610349565b610eb0816112bf565b50565b6000610ebd61114d565b6060600060f56001600160a01b031684604051602001610edf91815260200190565b60408051601f1981840301815290829052610ef991611693565b600060405180830381855afa9150503d8060008114610f34576040519150601f19603f3d011682016040523d82523d6000602084013e610f39565b606091505b50925090508061064d5760405162461bcd60e51b815260206004820152602c60248201527f6572726f722063616c6c696e6720676574506172656e745365616c4269746d6160448201526b7020707265636f6d70696c6560a01b6064820152608401610349565b6001546040516b22b837b1b426b0b730b3b2b960a11b60208201526000916001600160a01b03169063dcf0aaed90602c01604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161100591815260200190565b602060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086e9190611619565b600061105061114d565b6060600060fa6001600160a01b0316844360405160200161107b929190918252602082015260400190565b60408051601f198184030181529082905261109591611693565b600060405180830381855afa9150503d80600081146110d0576040519150601f19603f3d011682016040523d82523d6000602084013e6110d5565b606091505b5092509050806109ea5760405162461bcd60e51b815260206004820152603d60248201527f6572726f722063616c6c696e672076616c696461746f725369676e657241646460448201527f7265737346726f6d43757272656e7453657420707265636f6d70696c650000006064820152608401610349565b6018602160991b013b63ffffffff16156108595760405162461bcd60e51b815260206004820152602960248201527f54686973206d6574686f64206973206e6f206c6f6e67657220737570706f727460448201526832b21034b71026191760b91b6064820152608401610349565b6000806111c883856116e4565b90506111d483856116f8565b6000036111e25790506103c8565b6111ed816001611403565b9150506103c8565b6000611202826020611403565b835110156112495760405162461bcd60e51b8152602060048201526014602482015273736c6963696e67206f7574206f662072616e676560601b6044820152606401610349565b50016020015190565b600061125e83836111f5565b9392505050565b6000546001600160a01b031633146108595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610349565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061131961114d565b6040805143602082015260609160009160f9910160408051601f198184030181529082905261134791611693565b600060405180830381855afa9150503d8060008114611382576040519150601f19603f3d011682016040523d82523d6000602084013e611387565b606091505b509250905080610c745760405162461bcd60e51b815260206004820152603560248201527f6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e60448201527443757272656e7453657420707265636f6d70696c6560581b6064820152608401610349565b600061125e828461170c565b600061125e8284611723565b600061125e82846116e4565b60006020828403121561142d57600080fd5b5035919050565b6001600160a01b0381168114610eb057600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261147057600080fd5b813567ffffffffffffffff8082111561148b5761148b611449565b604051601f8301601f19908116603f011681019082821181831017156114b3576114b3611449565b816040528381528660208588010111156114cc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561150157600080fd5b833561150c81611434565b9250602084013567ffffffffffffffff8082111561152957600080fd5b6115358783880161145f565b9350604086013591508082111561154b57600080fd5b506115588682870161145f565b9150509250925092565b60006020828403121561157457600080fd5b813567ffffffffffffffff81111561158b57600080fd5b6106588482850161145f565b600080604083850312156115aa57600080fd5b50508035926020909101359150565b6000602082840312156115cb57600080fd5b813561125e81611434565b60008060008060008060c087890312156115ef57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60006020828403121561162b57600080fd5b815161125e81611434565b6000815160005b81811015611657576020818501810151868301520161163d565b50600093019283525090919050565b6bffffffffffffffffffffffff198460601b168152600061075c61168d6014840186611636565b84611636565b600061125e8284611636565b6000602082840312156116b157600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826116f3576116f36116b8565b500490565b600082611707576117076116b8565b500690565b80820281158282048414176103c8576103c86116ce565b808201808211156103c8576103c86116ce56fea2646970667358221220d4353c5ff175588aa9aaf388609df53f76b62137d43e12228e23c432fd6317ac64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14855:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:85",
                "type": ""
              }
            ],
            "src": "14:180:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "383:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "388:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "379:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "379:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "392:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "375:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "375:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:85",
                "type": ""
              }
            ],
            "src": "199:203:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "452:86:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "475:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "486:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "501:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "506:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "497:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "510:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "493:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "493:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "482:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "482:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "472:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "472:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "465:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "462:70:85"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "441:5:85",
                "type": ""
              }
            ],
            "src": "407:131:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "575:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "592:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "599:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "595:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "595:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "585:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "585:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "635:4:85",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "625:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "625:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "656:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "649:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "649:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "649:15:85"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "543:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:666:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "776:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "785:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "788:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "778:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "778:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "778:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "755:6:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "763:4:85",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "751:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "751:17:85"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "770:3:85"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "747:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "747:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "740:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "740:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "737:55:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "801:30:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "824:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "811:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:20:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "805:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "840:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "850:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "844:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "891:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "893:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "893:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "893:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "883:2:85"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "887:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "880:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "880:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "877:36:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "922:17:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "932:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:7:85"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "926:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "948:23:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "968:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "962:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "962:9:85"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "952:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "980:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1002:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1026:2:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1030:4:85",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1022:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1022:13:85"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1037:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1018:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1018:22:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1042:2:85",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1014:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1014:31:85"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1047:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1010:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1010:40:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "998:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:53:85"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "984:10:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1110:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1112:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1112:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1112:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1069:10:85"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1081:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1089:10:85"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1101:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1086:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1086:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1063:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1063:46:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1060:72:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1148:2:85",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1152:10:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1141:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1141:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1141:22:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1179:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1187:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1172:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:18:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1172:18:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1238:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1247:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1250:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1240:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1240:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1240:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1213:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1221:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1209:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1209:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1226:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1205:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1205:26:85"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1233:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1202:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1199:55:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1280:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1288:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1276:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:17:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1299:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1307:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1295:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1295:17:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1314:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1263:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1263:54:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1263:54:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1341:6:85"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1349:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1337:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1337:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1354:4:85",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1333:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1333:26:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1361:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1326:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1326:37:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1326:37:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1372:15:85",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1381:6:85"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1372:5:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "701:6:85",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "709:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "717:5:85",
                "type": ""
              }
            ],
            "src": "675:718:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1520:552:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1566:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1575:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1578:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1568:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1568:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1568:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1541:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1550:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1537:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1537:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1562:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1533:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1533:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1530:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1591:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1617:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1604:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1595:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1661:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1636:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1636:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1636:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1676:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1686:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1676:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1700:46:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1731:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1742:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1727:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1727:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1714:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1704:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1755:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1765:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1759:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1810:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1819:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1822:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1812:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1812:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1812:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1798:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1806:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1795:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1795:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1792:34:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1835:59:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1866:9:85"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1877:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1862:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1862:22:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1886:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "1845:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:49:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1835:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1903:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1919:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1919:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1907:8:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1980:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1989:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1992:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1982:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1982:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1982:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1966:8:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1976:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1963:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:16:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1960:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2005:61:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2036:9:85"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2047:8:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2032:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2032:24:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2058:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2015:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:51:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2005:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptrt_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1470:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1481:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1493:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1501:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1509:6:85",
                "type": ""
              }
            ],
            "src": "1398:674:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2172:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2182:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2194:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2205:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2190:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2182:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2224:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2249:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2242:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2242:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2235:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2235:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2217:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2217:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2141:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2152:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2163:4:85",
                "type": ""
              }
            ],
            "src": "2077:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2370:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2380:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2392:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2403:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2388:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2388:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2380:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2422:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2433:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2415:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2415:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2415:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2339:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2350:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2361:4:85",
                "type": ""
              }
            ],
            "src": "2269:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2530:241:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2576:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2585:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2588:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2578:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2578:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2578:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2551:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2560:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2547:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2547:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2572:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2543:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2540:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2601:37:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2628:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2615:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2615:23:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2605:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2681:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2690:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2693:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2683:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2683:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2683:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2653:6:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2661:18:85",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2650:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:30:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2647:50:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2706:59:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2737:9:85"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2748:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2733:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2733:22:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2757:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "2716:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:49:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2706:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2496:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2507:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2519:6:85",
                "type": ""
              }
            ],
            "src": "2451:320:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2877:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2887:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2899:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2910:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2895:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2895:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2887:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2929:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2940:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2922:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2922:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2922:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2846:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2857:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2868:4:85",
                "type": ""
              }
            ],
            "src": "2776:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3045:161:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3091:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3100:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3103:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3093:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3093:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3093:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3066:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3075:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3062:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3062:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3087:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3058:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3058:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3055:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3116:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3139:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3126:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3126:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3116:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3158:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3185:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3196:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3181:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3181:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3168:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3168:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3158:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3003:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3014:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3026:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3034:6:85",
                "type": ""
              }
            ],
            "src": "2958:248:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3331:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3341:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3353:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3364:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3349:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3341:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3383:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3398:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3414:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3419:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3410:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3410:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3423:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3406:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3406:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3394:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3394:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3376:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3376:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3376:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IRegistry_$17608__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3300:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3311:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3322:4:85",
                "type": ""
              }
            ],
            "src": "3211:222:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3508:177:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3554:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3563:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3566:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3556:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3556:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3556:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3529:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3538:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3525:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3525:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3550:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3521:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3521:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3518:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3579:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3605:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3592:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3583:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3649:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3624:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3624:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3624:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3664:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3674:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3664:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3474:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3485:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3497:6:85",
                "type": ""
              }
            ],
            "src": "3438:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3845:368:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3892:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3901:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3904:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3894:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3894:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3894:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3866:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3875:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3862:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3862:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3887:3:85",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3858:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3858:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3855:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3917:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3940:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3927:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3927:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3917:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3959:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3986:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3997:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3982:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3982:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3969:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3969:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3959:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4010:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4037:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4048:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4033:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4033:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4020:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4020:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4010:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4061:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4088:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4099:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4084:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4084:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4071:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4061:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4112:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4139:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4150:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4135:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4135:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4122:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4122:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4112:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4164:43:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4191:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4202:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4187:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4187:19:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4174:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4174:33:85"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "4164:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3771:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3782:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3794:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3802:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3810:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3818:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3826:6:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3834:6:85",
                "type": ""
              }
            ],
            "src": "3690:523:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4347:119:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4357:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4369:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4380:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4365:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4365:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4357:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4399:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4410:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4392:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4392:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4392:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4437:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4448:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4433:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4433:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4453:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4426:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4426:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4426:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4308:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4319:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4327:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4338:4:85",
                "type": ""
              }
            ],
            "src": "4218:248:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4645:225:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4662:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4673:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4655:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4655:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4655:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4696:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4707:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4692:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4692:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4712:2:85",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4685:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4685:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4685:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4735:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4746:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4731:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4731:18:85"
                      },
                      {
                        "hexValue": "54686973206d6574686f64206973206e6f7420737570706f7274656420696e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4751:34:85",
                        "type": "",
                        "value": "This method is not supported in "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4724:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4724:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4724:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4806:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4817:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4802:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4802:18:85"
                      },
                      {
                        "hexValue": "4c312e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4822:5:85",
                        "type": "",
                        "value": "L1."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4795:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4795:33:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4795:33:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4837:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4849:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4860:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4845:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4845:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4837:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce77717eff8b0d7c6ecf190f14db828402a59c9029d0deafbceed192f68fe306__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4622:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4636:4:85",
                "type": ""
              }
            ],
            "src": "4471:399:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4956:170:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5002:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5011:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5014:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5004:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5004:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5004:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4977:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4986:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4973:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4973:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4998:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4969:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4969:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4966:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5027:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5046:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5040:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5040:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5031:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5090:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5065:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5065:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5065:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5105:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5115:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5105:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4922:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4933:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4945:6:85",
                "type": ""
              }
            ],
            "src": "4875:251:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5180:273:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5190:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5210:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5204:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:12:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5194:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5225:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5234:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5229:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5296:76:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5321:3:85"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5326:1:85"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5317:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5317:11:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "5344:5:85"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5351:1:85"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5340:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5340:13:85"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5355:4:85",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5336:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5336:24:85"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5330:5:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5330:31:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5310:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5310:52:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5310:52:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5255:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5258:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5252:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5252:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5266:21:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5268:17:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5277:1:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5280:4:85",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5273:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5273:12:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5268:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5248:3:85",
                    "statements": []
                  },
                  "src": "5244:128:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5381:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5395:3:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5400:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5391:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5391:16:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5385:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5423:2:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5427:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5416:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5416:13:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5416:13:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5438:9:85",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "5445:2:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5438:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5157:5:85",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5164:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5172:3:85",
                "type": ""
              }
            ],
            "src": "5131:322:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5669:162:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5686:3:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5699:2:85",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5703:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5695:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5695:15:85"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5716:26:85",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "5712:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5712:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5691:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5691:53:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5679:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5679:66:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5679:66:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5754:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5778:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5803:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5815:3:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5820:2:85",
                                "type": "",
                                "value": "20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5811:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5811:12:85"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "5786:16:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5786:38:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "5761:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5761:64:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5754:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5629:3:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5634:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5642:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5650:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5661:3:85",
                "type": ""
              }
            ],
            "src": "5458:373:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5973:52:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5983:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6007:6:85"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6015:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "5990:16:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5990:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5983:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5949:3:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5954:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5965:3:85",
                "type": ""
              }
            ],
            "src": "5836:189:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6111:103:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6157:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6166:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6169:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6159:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6159:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6159:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6132:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6141:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6128:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6128:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6153:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6124:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6124:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "6121:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6182:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6198:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6192:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:16:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6182:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6077:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6088:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6100:6:85",
                "type": ""
              }
            ],
            "src": "6030:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6393:246:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6410:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6421:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6403:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6403:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6403:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6444:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6455:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6440:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6440:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6460:2:85",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6433:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6433:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6483:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6494:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6479:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6479:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672067657456657269666965645365616c426974",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6499:34:85",
                        "type": "",
                        "value": "error calling getVerifiedSealBit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6472:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6472:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6472:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6554:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6565:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6550:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6550:18:85"
                      },
                      {
                        "hexValue": "6d617046726f6d48656164657220707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6570:26:85",
                        "type": "",
                        "value": "mapFromHeader precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6543:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6543:54:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6543:54:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6606:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6618:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6629:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6614:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6614:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6606:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_56189b7fd32d7bffe51f1cba3b0a122d0fd578114f9bbb970c9be1e50aa17714__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6370:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6384:4:85",
                "type": ""
              }
            ],
            "src": "6219:420:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6791:100:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6808:3:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6813:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6801:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6801:19:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6801:19:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6840:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6845:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6836:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6836:12:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6850:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6829:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6829:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6829:28:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6866:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6877:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6882:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6873:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6866:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6759:3:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6764:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6772:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6783:3:85",
                "type": ""
              }
            ],
            "src": "6644:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7070:244:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7087:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7098:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7080:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7080:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7080:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7121:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7132:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7117:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7117:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7137:2:85",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7110:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7110:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7110:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7160:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7171:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7156:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7156:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672076616c696461746f725369676e6572416464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7176:34:85",
                        "type": "",
                        "value": "error calling validatorSignerAdd"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7149:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7149:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7149:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7231:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7242:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7227:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7227:18:85"
                      },
                      {
                        "hexValue": "7265737346726f6d53657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7247:24:85",
                        "type": "",
                        "value": "ressFromSet precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7220:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7220:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7220:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7281:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7293:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7304:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7289:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7289:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7281:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7935951f22369c4587c3039035cb3a1c8f1b4d619fcd3628fe6c1a3359ec8a78__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7047:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7061:4:85",
                "type": ""
              }
            ],
            "src": "6896:418:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7493:225:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7510:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7521:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7503:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7503:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7503:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7544:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7555:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7540:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7540:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7560:2:85",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7533:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7533:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7533:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7583:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7594:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7579:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7579:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206861736848656164657220707265636f6d70",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7599:34:85",
                        "type": "",
                        "value": "error calling hashHeader precomp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7572:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7572:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7572:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7654:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7665:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7650:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7650:18:85"
                      },
                      {
                        "hexValue": "696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7670:5:85",
                        "type": "",
                        "value": "ile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7643:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7643:33:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7643:33:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7685:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7697:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7708:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7693:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7693:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7685:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f231089bc9eca69e7b856c7ee260182a26a7e5150828b66bb54c2df60342a744__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7470:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7484:4:85",
                "type": ""
              }
            ],
            "src": "7319:399:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7897:239:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7914:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7925:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7907:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7907:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7907:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7948:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7959:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7944:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7944:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7964:2:85",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7937:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7937:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7937:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7987:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7998:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7983:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7983:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8003:34:85",
                        "type": "",
                        "value": "error calling getBlockNumberFrom"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7976:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7976:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7976:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8058:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8069:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8054:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8054:18:85"
                      },
                      {
                        "hexValue": "48656164657220707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8074:19:85",
                        "type": "",
                        "value": "Header precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8047:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8047:47:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8047:47:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8103:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8115:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8126:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8111:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8111:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8103:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c87df661c709786f64e40e71e73322865ee74ff0de0b04788546a0aaf938099a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7874:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7888:4:85",
                "type": ""
              }
            ],
            "src": "7723:413:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8260:63:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8277:3:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8282:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8270:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8270:19:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8270:19:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8298:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8309:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8314:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8305:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8305:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8298:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8236:3:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8241:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8252:3:85",
                "type": ""
              }
            ],
            "src": "8141:182:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8502:236:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8519:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8530:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8512:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8512:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8512:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8553:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8564:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8549:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8549:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8569:2:85",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8542:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8542:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8542:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8592:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8603:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8588:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8588:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8608:34:85",
                        "type": "",
                        "value": "error calling numberValidatorsIn"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8581:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8581:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8581:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8663:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8674:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8659:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8659:18:85"
                      },
                      {
                        "hexValue": "53657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8679:16:85",
                        "type": "",
                        "value": "Set precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8652:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8652:44:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8652:44:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8705:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8717:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8728:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8713:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8713:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8705:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_14d0832ccf124a1f4d003ef7e8c127c127252b26b1f5fb00b299ce6c15976140__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8479:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8493:4:85",
                "type": ""
              }
            ],
            "src": "8328:410:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8917:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8934:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8945:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8927:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8927:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8927:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8968:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8979:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8964:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8964:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8984:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8957:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8957:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8957:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9007:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9018:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9003:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9003:18:85"
                      },
                      {
                        "hexValue": "43616e6e6f7420726567697374657220746865206e756c6c2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9023:34:85",
                        "type": "",
                        "value": "Cannot register the null address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8996:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8996:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8996:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9067:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9079:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9090:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9075:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9075:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9067:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8894:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8908:4:85",
                "type": ""
              }
            ],
            "src": "8743:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9217:88:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9234:3:85"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9243:3:85",
                            "type": "",
                            "value": "248"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9262:6:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "9255:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9255:14:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9248:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9248:22:85"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9239:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9239:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9227:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9227:45:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9227:45:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9281:18:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9292:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9297:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9288:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9288:11:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9281:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bool__to_t_bool__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9193:3:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9198:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9209:3:85",
                "type": ""
              }
            ],
            "src": "9104:201:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9484:227:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9501:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9512:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9494:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9494:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9494:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9535:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9546:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9531:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9531:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9551:2:85",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9524:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9524:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9524:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9574:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9585:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9570:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9570:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672067657445706f636853697a6520707265636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9590:34:85",
                        "type": "",
                        "value": "error calling getEpochSize preco"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9563:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9563:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9563:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9645:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9656:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9641:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9641:18:85"
                      },
                      {
                        "hexValue": "6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9661:7:85",
                        "type": "",
                        "value": "mpile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9634:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9634:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9634:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9678:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9690:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9701:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9686:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9686:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9678:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a8d6bdf190a0e574d8eb34a04fdb935afc2bf9b093f7e4f2637fb4ceabf22bbe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9461:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9475:4:85",
                "type": ""
              }
            ],
            "src": "9310:401:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9890:171:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9907:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9918:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9900:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9900:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9900:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9941:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9952:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9937:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9937:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9957:2:85",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9930:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9930:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9930:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9980:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9991:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9976:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9976:18:85"
                      },
                      {
                        "hexValue": "612064656e6f6d696e61746f72206973207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9996:23:85",
                        "type": "",
                        "value": "a denominator is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9969:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9969:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9969:51:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10029:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10041:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10052:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10037:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10037:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10029:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_774f1e8ba4b1c2c5160da82215d6020ee806a9c78d42e2392b54701b956bcc37__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9867:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9881:4:85",
                "type": ""
              }
            ],
            "src": "9716:345:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10325:251:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10342:3:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10347:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10335:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10335:19:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10335:19:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10374:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10379:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10370:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10370:12:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10384:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10363:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10363:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10363:28:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10411:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10416:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10407:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10407:12:85"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10421:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10400:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10400:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10400:28:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10448:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10453:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10444:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10444:12:85"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "10458:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10437:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10437:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10437:28:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10485:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10490:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10481:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10481:13:85"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "10496:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10474:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10474:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10474:29:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "10523:3:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10528:3:85",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10519:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10519:13:85"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "10534:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10512:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10512:29:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10512:29:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10550:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10561:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10566:3:85",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10557:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10557:13:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10550:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10261:3:85",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "10266:6:85",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "10274:6:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10282:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10290:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10298:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10306:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10317:3:85",
                "type": ""
              }
            ],
            "src": "10066:510:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10755:229:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10772:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10783:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10765:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10765:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10765:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10806:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10817:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10802:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10802:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10822:2:85",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10795:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10795:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10795:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10845:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10856:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10841:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10841:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206672616374696f6e4d756c45787020707265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10861:34:85",
                        "type": "",
                        "value": "error calling fractionMulExp pre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10834:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10834:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10834:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10916:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10927:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10912:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10912:18:85"
                      },
                      {
                        "hexValue": "636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10932:9:85",
                        "type": "",
                        "value": "compile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10905:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10905:37:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10905:37:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10951:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10963:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10974:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10959:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10959:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10951:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a69762de9d67a3fadd0f5eb579f0048f356af43c4099a48782845e58130de6be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10732:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10746:4:85",
                "type": ""
              }
            ],
            "src": "10581:403:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11163:228:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11180:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11191:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11173:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11173:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11173:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11214:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11225:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11210:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11210:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11230:2:85",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11203:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11203:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11203:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11253:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11264:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11249:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11249:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11269:34:85",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11242:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11242:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11242:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11324:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11335:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11320:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11320:18:85"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11340:8:85",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11313:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11313:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11313:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11358:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11370:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11381:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11366:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11366:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11358:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11140:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11154:4:85",
                "type": ""
              }
            ],
            "src": "10989:402:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11570:234:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11587:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11598:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11580:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11580:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11580:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11621:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11632:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11617:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11617:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11637:2:85",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11610:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11610:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11610:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11660:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11671:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11656:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11656:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e6720676574506172656e745365616c4269746d61",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11676:34:85",
                        "type": "",
                        "value": "error calling getParentSealBitma"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11649:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11649:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11649:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11731:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11742:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11727:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11727:18:85"
                      },
                      {
                        "hexValue": "7020707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11747:14:85",
                        "type": "",
                        "value": "p precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11720:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11720:42:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11720:42:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11771:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11783:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11794:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11779:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11779:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11771:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c1cbb6616a2f8ce07a426d19cdcbcaa8305d686de3a7391a12e2172a43b08db8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11547:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11561:4:85",
                "type": ""
              }
            ],
            "src": "11396:408:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12001:71:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12018:3:85"
                      },
                      {
                        "hexValue": "45706f63684d616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12023:14:85",
                        "type": "",
                        "value": "EpochManager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12011:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12011:27:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12011:27:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12047:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12058:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12063:2:85",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12054:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12054:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12047:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c713c3df6d14cdf946460395d09af88993ee2b948b1a808161494e32c5f67063__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11985:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11993:3:85",
                "type": ""
              }
            ],
            "src": "11809:263:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12251:251:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12268:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12279:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12261:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12261:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12261:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12302:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12313:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12298:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12298:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12318:2:85",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12291:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12291:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12291:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12341:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12352:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12337:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12337:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e672076616c696461746f725369676e6572416464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12357:34:85",
                        "type": "",
                        "value": "error calling validatorSignerAdd"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12330:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12330:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12330:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12412:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12423:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12408:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12408:18:85"
                      },
                      {
                        "hexValue": "7265737346726f6d43757272656e7453657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12428:31:85",
                        "type": "",
                        "value": "ressFromCurrentSet precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12401:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12401:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12401:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12469:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12481:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12492:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12477:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12477:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12469:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6462a441a9c5f3244f1c9680749f4acdbc975d93926917f87e614a5ca4aa639f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12228:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12242:4:85",
                "type": ""
              }
            ],
            "src": "12077:425:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12681:231:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12698:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12709:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12691:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12691:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12691:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12732:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12743:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12728:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12728:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12748:2:85",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12721:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12721:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12721:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12771:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12782:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12767:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12767:18:85"
                      },
                      {
                        "hexValue": "54686973206d6574686f64206973206e6f206c6f6e67657220737570706f7274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12787:34:85",
                        "type": "",
                        "value": "This method is no longer support"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12760:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12760:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12760:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12842:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12853:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12838:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12838:18:85"
                      },
                      {
                        "hexValue": "656420696e204c322e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12858:11:85",
                        "type": "",
                        "value": "ed in L2."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12831:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12831:39:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12831:39:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12879:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12891:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12902:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12887:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12887:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12879:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6b58fe460f24176f3213b61028eeed65350ffc7614db8ee67f6cecd2e8cd9d28__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12658:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12672:4:85",
                "type": ""
              }
            ],
            "src": "12507:405:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12949:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12966:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12973:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12978:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12969:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12969:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12959:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12959:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12959:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13006:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13009:4:85",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12999:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12999:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12999:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13030:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13033:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13023:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13023:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13023:15:85"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "12917:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13081:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13098:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13105:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13110:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13101:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13101:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13091:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13091:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13091:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13138:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13141:4:85",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13131:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13131:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13131:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13162:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13165:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13155:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13155:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13155:15:85"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13049:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13227:74:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13250:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "13252:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13252:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13252:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13247:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13240:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13240:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "13237:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13281:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13290:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13293:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "13286:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13286:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13281:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13212:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13215:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13221:1:85",
                "type": ""
              }
            ],
            "src": "13181:120:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13344:74:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13367:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "13369:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13369:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13369:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13364:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13357:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13357:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "13354:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13398:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13407:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13410:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "13403:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13403:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "13398:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13329:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13332:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13338:1:85",
                "type": ""
              }
            ],
            "src": "13306:112:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13597:170:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13614:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13625:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13607:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13607:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13607:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13648:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13659:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13644:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13644:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13664:2:85",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13637:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13637:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13637:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13687:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13698:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13683:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13683:18:85"
                      },
                      {
                        "hexValue": "736c6963696e67206f7574206f662072616e6765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13703:22:85",
                        "type": "",
                        "value": "slicing out of range"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13676:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13676:50:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13676:50:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13735:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13747:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13758:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13743:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13743:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13735:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_294d2bd5b6fb7e8eb608d7ff076f4babdc08155a7a6671f4f35801fb90c8bda4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13574:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13588:4:85",
                "type": ""
              }
            ],
            "src": "13423:344:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13946:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13963:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13974:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13956:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13956:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13956:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13997:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14008:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13993:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13993:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14013:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13986:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13986:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13986:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14036:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14047:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14032:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14032:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14052:34:85",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14025:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14025:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14025:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14096:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14108:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14119:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14104:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14104:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14096:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13923:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13937:4:85",
                "type": ""
              }
            ],
            "src": "13772:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14307:243:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14324:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14335:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14317:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14317:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14317:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14358:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14369:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14354:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14354:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14374:2:85",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14347:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14347:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14347:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14397:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14408:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14393:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14393:18:85"
                      },
                      {
                        "hexValue": "6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14413:34:85",
                        "type": "",
                        "value": "error calling numberValidatorsIn"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14386:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14386:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14386:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14468:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14479:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14464:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14464:18:85"
                      },
                      {
                        "hexValue": "43757272656e7453657420707265636f6d70696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14484:23:85",
                        "type": "",
                        "value": "CurrentSet precompile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14457:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14457:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14457:51:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14517:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14529:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14540:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14525:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14525:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14517:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6496ea69494c489b267f6f8d019e01d5a0bff78cb1bd0f0be3199909d3ef9d57__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14284:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14298:4:85",
                "type": ""
              }
            ],
            "src": "14133:417:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14607:116:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14617:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14632:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14635:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14628:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14628:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14617:7:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14695:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14697:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14697:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14697:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14666:1:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14659:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14659:9:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "14673:1:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "14680:7:85"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14689:1:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "14676:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14676:15:85"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "14670:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14670:22:85"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "14656:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14656:37:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14649:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14649:45:85"
                  },
                  "nodeType": "YulIf",
                  "src": "14646:71:85"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14586:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14589:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14595:7:85",
                "type": ""
              }
            ],
            "src": "14555:168:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14776:77:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14786:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14797:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14800:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14793:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14793:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14786:3:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14825:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14827:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14827:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14827:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14817:1:85"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "14820:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14814:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14814:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "14811:36:85"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14759:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14762:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14768:3:85",
                "type": ""
              }
            ],
            "src": "14728:125:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IRegistry_$17608__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ce77717eff8b0d7c6ecf190f14db828402a59c9029d0deafbceed192f68fe306__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"This method is not supported in \")\n        mstore(add(headStart, 96), \"L1.\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := abi_encode_bytes(value2, abi_encode_bytes(value1, add(pos, 20)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_bytes(value0, pos)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_56189b7fd32d7bffe51f1cba3b0a122d0fd578114f9bbb970c9be1e50aa17714__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"error calling getVerifiedSealBit\")\n        mstore(add(headStart, 96), \"mapFromHeader precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256__to_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_t_stringliteral_7935951f22369c4587c3039035cb3a1c8f1b4d619fcd3628fe6c1a3359ec8a78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"error calling validatorSignerAdd\")\n        mstore(add(headStart, 96), \"ressFromSet precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f231089bc9eca69e7b856c7ee260182a26a7e5150828b66bb54c2df60342a744__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"error calling hashHeader precomp\")\n        mstore(add(headStart, 96), \"ile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c87df661c709786f64e40e71e73322865ee74ff0de0b04788546a0aaf938099a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"error calling getBlockNumberFrom\")\n        mstore(add(headStart, 96), \"Header precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_stringliteral_14d0832ccf124a1f4d003ef7e8c127c127252b26b1f5fb00b299ce6c15976140__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"error calling numberValidatorsIn\")\n        mstore(add(headStart, 96), \"Set precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b421fd6a276ccb4cd9aa78e3abb2c3737827239503a8378bfb1b144b3eb6c5b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Cannot register the null address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bool__to_t_bool__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, shl(248, iszero(iszero(value0))))\n        end := add(pos, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_a8d6bdf190a0e574d8eb34a04fdb935afc2bf9b093f7e4f2637fb4ceabf22bbe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"error calling getEpochSize preco\")\n        mstore(add(headStart, 96), \"mpile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_774f1e8ba4b1c2c5160da82215d6020ee806a9c78d42e2392b54701b956bcc37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"a denominator is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), value3)\n        mstore(add(pos, 128), value4)\n        mstore(add(pos, 160), value5)\n        end := add(pos, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_a69762de9d67a3fadd0f5eb579f0048f356af43c4099a48782845e58130de6be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"error calling fractionMulExp pre\")\n        mstore(add(headStart, 96), \"compile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c1cbb6616a2f8ce07a426d19cdcbcaa8305d686de3a7391a12e2172a43b08db8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"error calling getParentSealBitma\")\n        mstore(add(headStart, 96), \"p precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c713c3df6d14cdf946460395d09af88993ee2b948b1a808161494e32c5f67063__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"EpochManager\")\n        end := add(pos, 12)\n    }\n    function abi_encode_tuple_t_stringliteral_6462a441a9c5f3244f1c9680749f4acdbc975d93926917f87e614a5ca4aa639f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"error calling validatorSignerAdd\")\n        mstore(add(headStart, 96), \"ressFromCurrentSet precompile\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6b58fe460f24176f3213b61028eeed65350ffc7614db8ee67f6cecd2e8cd9d28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"This method is no longer support\")\n        mstore(add(headStart, 96), \"ed in L2.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_294d2bd5b6fb7e8eb608d7ff076f4babdc08155a7a6671f4f35801fb90c8bda4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"slicing out of range\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6496ea69494c489b267f6f8d019e01d5a0bff78cb1bd0f0be3199909d3ef9d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"error calling numberValidatorsIn\")\n        mstore(add(headStart, 96), \"CurrentSet precompile\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "485:1958:13:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:2;936:18:0;:32::i;:::-;485:1958:13;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;485:1958:13:-;;;;;;;",
  "deployedSourceMap": "485:1958:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:159;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:85;;;345:51;;333:2;318:18;1911:159:13;;;;;;;;1421:277;;;;;;:::i;:::-;;:::i;6525:275:17:-;;;;;;:::i;:::-;;:::i;:::-;;;2242:14:85;;2235:22;2217:41;;2205:2;2190:18;6525:275:17;2077:187:85;713:262:13;;;;;;:::i;:::-;;:::i;:::-;;;2415:25:85;;;2403:2;2388:18;713:262:13;2269:177:85;8905:358:17;;;;;;:::i;:::-;;:::i;4499:400::-;;;;;;:::i;:::-;;:::i;7483:295::-;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;:::-;;9837:119:17;;;:::i;3794:25:18:-;;;;;-1:-1:-1;;;;;3794:25:18;;;2207:234:13;;;:::i;6979:336:17:-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1076:118:13;;;:::i;5693:336:17:-;;;;;;:::i;:::-;;:::i;4398:230:18:-;;;;;;:::i;:::-;;:::i;2527:277:17:-;;;:::i;9501:154::-;;;;;;:::i;:::-;;:::i;1589:770::-;;;;;;:::i;:::-;;:::i;:::-;;;;4392:25:85;;;4448:2;4433:18;;4426:34;;;;4365:18;1589:770:17;4218:248:85;2074:198:0;;;;;;:::i;:::-;;:::i;8119:329:17:-;;;;;;:::i;:::-;;:::i;1911:159:13:-;1994:7;-1:-1:-1;;;;;782:18:11;819:8;;430:73;;451:45;;-1:-1:-1;;;451:45:11;;4673:2:85;451:45:11;;;4655:21:85;4712:2;4692:18;;;4685:30;4751:34;4731:18;;;4724:62;-1:-1:-1;;;4802:18:85;;;4795:33;4845:19;;451:45:11;;;;;;;;430:73;2016:17:13::1;:15;:17::i;:::-;-1:-1:-1::0;;;;;2016:42:13::1;;2059:5;2016:49;;;;;;;;;;;;;2415:25:85::0;;2403:2;2388:18;;2269:177;2016:49:13::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2009:56:::0;1911:159;-1:-1:-1;;1911:159:13:o;1421:277::-;1520:7;-1:-1:-1;;;;;782:18:11;819:8;;;1535:159:13;;1562:17;:15;:17::i;:::-;-1:-1:-1;;;;;1562:41:13;;1604:5;1562:48;;;;;;;;;;;;;2415:25:85;;2403:2;2388:18;;2269:177;1535:159:13;1638:49;1681:5;1638:42;:49::i;6525:275:17:-;6659:4;328:13:11;:11;:13::i;:::-;6671:12:17::1;565:8;-1:-1:-1::0;;;;;6703:30:17::1;6751:6;6759;6767;6734:40;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;6734:40:17;;::::1;::::0;;;;;;;6703:72:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;6689:86:17;;6525:275;-1:-1:-1;;;;;;6525:275:17:o;713:262:13:-;795:7;-1:-1:-1;;;;;782:18:11;819:8;;;810:161:13;;837:17;:15;:17::i;:::-;-1:-1:-1;;;;;837:39:13;;877:11;837:52;;;;;;;;;;;;;2415:25:85;;2403:2;2388:18;;2269:177;837:52:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;810:161::-;917:47;936:11;949:14;:12;:14::i;:::-;917:18;:47::i;8905:358:17:-;9003:7;328:13:11;:11;:13::i;:::-;9018:16:17::1;9040:12;974:9;-1:-1:-1::0;;;;;9075:35:17::1;9128:6;9111:24;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;9111:24:17;;::::1;::::0;;;;;;;9075:61:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;9058:78:17;-1:-1:-1;9058:78:17;-1:-1:-1;9058:78:17;9142:76:::1;;;::::0;-1:-1:-1;;;9142:76:17;;6421:2:85;9142:76:17::1;::::0;::::1;6403:21:85::0;6460:2;6440:18;;;6433:30;6499:34;6479:18;;;6472:62;6570:26;6550:18;;;6543:54;6614:19;;9142:76:17::1;6219:420:85::0;9142:76:17::1;9231:27;9251:3;9256:1;9231:19;:27::i;:::-;9224:34:::0;8905:358;-1:-1:-1;;;;8905:358:17:o;4499:400::-;4622:7;328:13:11;:11;:13::i;:::-;4719:36:17::1;::::0;;::::1;::::0;::::1;6801:19:85::0;;;6836:12;;;6829:28;;;4637:16:17::1;::::0;4659:12:::1;::::0;619:8:::1;::::0;6873:12:85;;4719:36:17::1;::::0;;-1:-1:-1;;4719:36:17;;::::1;::::0;;;;;;;4694:62:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;4677:79:17;-1:-1:-1;4677:79:17;-1:-1:-1;4677:79:17;4762:74:::1;;;::::0;-1:-1:-1;;;4762:74:17;;7098:2:85;4762:74:17::1;::::0;::::1;7080:21:85::0;7137:2;7117:18;;;7110:30;7176:34;7156:18;;;7149:62;-1:-1:-1;;;7227:18:85;;;7220:52;7289:19;;4762:74:17::1;6896:418:85::0;4762:74:17::1;4865:27;4885:3;4890:1;4865:19;:27::i;:::-;4842:52:::0;4499:400;-1:-1:-1;;;;;4499:400:17:o;7483:295::-;7552:7;328:13:11;:11;:13::i;:::-;7567:16:17::1;7589:12;845:8;-1:-1:-1::0;;;;;7624:22:17::1;7664:6;7647:24;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;7647:24:17;;::::1;::::0;;;;;;;7624:48:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;7607:65:17;-1:-1:-1;7607:65:17;-1:-1:-1;7607:65:17;7678:55:::1;;;::::0;-1:-1:-1;;;7678:55:17;;7521:2:85;7678:55:17::1;::::0;::::1;7503:21:85::0;7560:2;7540:18;;;7533:30;7599:34;7579:18;;;7572:62;-1:-1:-1;;;7650:18:85;;;7643:33;7693:19;;7678:55:17::1;7319:399:85::0;1824:101:0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;9837:119:17:-;9902:7;328:13:11;:11;:13::i;:::-;9924:27:17::1;9938:12;9924:13;:27::i;:::-;9917:34;;9837:119:::0;:::o;2207:234:13:-;2277:7;-1:-1:-1;;;;;782:18:11;819:8;;;2292:145:13;;2319:17;:15;:17::i;:::-;-1:-1:-1;;;;;2319:45:13;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2292:145::-;2394:36;:34;:36::i;6979:336:17:-;7062:7;328:13:11;:11;:13::i;:::-;7077:16:17::1;7099:12;793:8;-1:-1:-1::0;;;;;7134:35:17::1;7187:6;7170:24;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;7170:24:17;;::::1;::::0;;;;;;;7134:61:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;7117:78:17;-1:-1:-1;7117:78:17;-1:-1:-1;7117:78:17;7201:69:::1;;;::::0;-1:-1:-1;;;7201:69:17;;7925:2:85;7201:69:17::1;::::0;::::1;7907:21:85::0;7964:2;7944:18;;;7937:30;8003:34;7983:18;;;7976:62;-1:-1:-1;;;8054:18:85;;;8047:47;8111:19;;7201:69:17::1;7723:413:85::0;7201:69:17::1;7283:27;7303:3;7308:1;7283:19;:27::i;1076:118:13:-:0;1132:7;1154:35;1176:12;1154:21;:35::i;5693:336:17:-;5781:7;328:13:11;:11;:13::i;:::-;5796:16:17::1;5818:12;677:8;-1:-1:-1::0;;;;;5853:28:17::1;5899:11;5882:29;;;;;;8270:19:85::0;;8314:2;8305:12;;8141:182;5882:29:17::1;;::::0;;-1:-1:-1;;5882:29:17;;::::1;::::0;;;;;;;5853:59:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;5836:76:17;-1:-1:-1;5836:76:17;-1:-1:-1;5836:76:17;5918:66:::1;;;::::0;-1:-1:-1;;;5918:66:17;;8530:2:85;5918:66:17::1;::::0;::::1;8512:21:85::0;8569:2;8549:18;;;8542:30;8608:34;8588:18;;;8581:62;-1:-1:-1;;;8659:18:85;;;8652:44;8713:19;;5918:66:17::1;8328:410:85::0;4398:230:18;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;4475:29:18;::::1;4467:74;;;::::0;-1:-1:-1;;;4467:74:18;;8945:2:85;4467:74:18::1;::::0;::::1;8927:21:85::0;;;8964:18;;;8957:30;9023:34;9003:18;;;8996:62;9075:18;;4467:74:18::1;8743:356:85::0;4467:74:18::1;4547:8;:37:::0;;-1:-1:-1;;;;;;4547:37:18::1;-1:-1:-1::0;;;;;4547:37:18;::::1;::::0;;::::1;::::0;;;4595:28:::1;::::0;::::1;::::0;-1:-1:-1;;4595:28:18::1;4398:230:::0;:::o;2527:277:17:-;2579:7;328:13:11;:11;:13::i;:::-;2673:22:17::1;::::0;-1:-1:-1;;;2673:22:17::1;::::0;::::1;9227:45:85::0;2594:16:17::1;::::0;2616:12:::1;::::0;728:8:::1;::::0;9288:11:85;;2673:22:17::1;::::0;;-1:-1:-1;;2673:22:17;;::::1;::::0;;;;;;;2651:45:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;2634:62:17;-1:-1:-1;2634:62:17;-1:-1:-1;2634:62:17;2702:57:::1;;;::::0;-1:-1:-1;;;2702:57:17;;9512:2:85;2702:57:17::1;::::0;::::1;9494:21:85::0;9551:2;9531:18;;;9524:30;9590:34;9570:18;;;9563:62;-1:-1:-1;;;9641:18:85;;;9634:35;9686:19;;2702:57:17::1;9310:401:85::0;2702:57:17::1;2772:27;2792:3;2797:1;2772:19;:27::i;:::-;2765:34;;;;2527:277:::0;:::o;9501:154::-;9573:7;328:13:11;:11;:13::i;:::-;9595:55:17::1;9648:1;9595:48;9641:1;9595:41;9634:1;9595:34;9617:11;9595:21;:34::i;:::-;:38:::0;::::1;:41::i;:::-;:45:::0;::::1;:48::i;:::-;:52:::0;::::1;:55::i;1589:770::-:0;1790:7;1799;328:13:11;:11;:13::i;:::-;1822:17:17;;;::::1;::::0;:38:::1;;-1:-1:-1::0;1843:17:17;;::::1;1822:38;1814:72;;;::::0;-1:-1:-1;;;1814:72:17;;9918:2:85;1814:72:17::1;::::0;::::1;9900:21:85::0;9957:2;9937:18;;;9930:30;-1:-1:-1;;;9976:18:85;;;9969:51;10037:18;;1814:72:17::1;9716:345:85::0;1814:72:17::1;2040:89;::::0;;::::1;::::0;::::1;10335:19:85::0;;;10370:12;;;10363:28;;;1970:16:17::1;10407:12:85::0;;;10400:28;;;10444:12;;;10437:28;;;10481:13;;;10474:29;;;10519:13;;;10512:29;;;1892:23:17::1;::::0;;;;;505:8:::1;::::0;10557:13:85;;2040:89:17::1;::::0;;-1:-1:-1;;2040:89:17;;::::1;::::0;;;;;;;2009:126:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1992:143:17;;-1:-1:-1;1992:143:17;-1:-1:-1;1992:143:17;2141:59:::1;;;::::0;-1:-1:-1;;;2141:59:17;;10783:2:85;2141:59:17::1;::::0;::::1;10765:21:85::0;10822:2;10802:18;;;10795:30;10861:34;10841:18;;;10834:62;-1:-1:-1;;;10912:18:85;;;10905:37;10959:19;;2141:59:17::1;10581:403:85::0;2141:59:17::1;2224:27;2244:3;2249:1;2224:19;:27::i;:::-;2206:45;;2277:28;2297:3;2302:2;2277:19;:28::i;:::-;2319:15:::0;;;;-1:-1:-1;1589:770:17;;-1:-1:-1;;;;;;;;;;1589:770:17:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;11191:2:85;2154:73:0::1;::::0;::::1;11173:21:85::0;11230:2;11210:18;;;11203:30;11269:34;11249:18;;;11242:62;-1:-1:-1;;;11320:18:85;;;11313:36;11366:19;;2154:73:0::1;10989:402:85::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;8119:329:17:-;8197:7;328:13:11;:11;:13::i;:::-;8212:16:17::1;8234:12;908:9;-1:-1:-1::0;;;;;8269:33:17::1;8320:11;8303:29;;;;;;8270:19:85::0;;8314:2;8305:12;;8141:182;8303:29:17::1;;::::0;;-1:-1:-1;;8303:29:17;;::::1;::::0;;;;;;;8269:64:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;8252:81:17;-1:-1:-1;8252:81:17;-1:-1:-1;8252:81:17;8339:64:::1;;;::::0;-1:-1:-1;;;8339:64:17;;11598:2:85;8339:64:17::1;::::0;::::1;11580:21:85::0;11637:2;11617:18;;;11610:30;11676:34;11656:18;;;11649:62;-1:-1:-1;;;11727:18:85;;;11720:42;11779:19;;8339:64:17::1;11396:408:85::0;6979:152:18;7071:8;;3627:32;;-1:-1:-1;;;3627:32:18;;;12011:27:85;7029:13:18;;-1:-1:-1;;;;;7071:8:18;;:27;;12054:12:85;;3627:32:18;;;;;;;;;;;;3617:43;;;;;;7071:54;;;;;;;;;;;;;2415:25:85;;2403:2;2388:18;;2269:177;7071:54:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3732:399:17:-;3837:7;328:13:11;:11;:13::i;:::-;3852:16:17::1;3874:12;619:8;-1:-1:-1::0;;;;;3909:24:17::1;3951:5;3966:12;3934:46;;;;;;;;6801:19:85::0;;;6845:2;6836:12;;6829:28;6882:2;6873:12;;6644:247;3934:46:17::1;;::::0;;-1:-1:-1;;3934:46:17;;::::1;::::0;;;;;;;3909:72:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;3892:89:17;-1:-1:-1;3892:89:17;-1:-1:-1;3892:89:17;3987:81:::1;;;::::0;-1:-1:-1;;;3987:81:17;;12279:2:85;3987:81:17::1;::::0;::::1;12261:21:85::0;12318:2;12298:18;;;12291:30;12357:34;12337:18;;;12330:62;12428:31;12408:18;;;12401:59;12477:19;;3987:81:17::1;12077:425:85::0;975:125:11;-1:-1:-1;;;;;782:18:11;819:8;;;1018:78;;1038:51;;-1:-1:-1;;;1038:51:11;;12709:2:85;1038:51:11;;;12691:21:85;12748:2;12728:18;;;12721:30;12787:34;12767:18;;;12760:62;-1:-1:-1;;;12838:18:85;;;12831:39;12887:19;;1038:51:11;12507:405:85;10168:377:17;10271:7;;10399:23;10413:9;10399:11;:23;:::i;:::-;10377:45;-1:-1:-1;10432:23:17;10446:9;10432:11;:23;:::i;:::-;10459:1;10432:28;10428:113;;10477:11;-1:-1:-1;10470:18:17;;10428:113;10516:18;:11;10532:1;10516:15;:18::i;:::-;10509:25;;;;;11015:255;11099:7;11135:13;:5;11145:2;11135:9;:13::i;:::-;11122:2;:9;:26;;11114:59;;;;-1:-1:-1;;;11114:59:17;;13625:2:85;11114:59:17;;;13607:21:85;13664:2;13644:18;;;13637:30;-1:-1:-1;;;13683:18:85;;;13676:50;13743:18;;11114:59:17;13423:344:85;11114:59:17;-1:-1:-1;11222:23:17;11241:2;11222:23;11216:30;;11015:255::o;10705:150::-;10789:7;10819:30;10839:2;10843:5;10819:19;:30::i;:::-;10811:39;10705:150;-1:-1:-1;;;10705:150:17:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;13974:2:85;1414:68:0;;;13956:21:85;;;13993:18;;;13986:30;14052:34;14032:18;;;14025:62;14104:18;;1414:68:0;13772:356:85;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;5086:341:17:-;5162:7;328:13:11;:11;:13::i;:::-;5263:39:17::1;::::0;;5288:12:::1;5263:39;::::0;::::1;8270:19:85::0;5177:16:17::1;::::0;5199:12:::1;::::0;677:8:::1;::::0;8305:12:85;5263:39:17::1;::::0;;-1:-1:-1;;5263:39:17;;::::1;::::0;;;;;;;5234:69:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;5217:86:17;-1:-1:-1;5217:86:17;-1:-1:-1;5217:86:17;5309:73:::1;;;::::0;-1:-1:-1;;;5309:73:17;;14335:2:85;5309:73:17::1;::::0;::::1;14317:21:85::0;14374:2;14354:18;;;14347:30;14413:34;14393:18;;;14386:62;-1:-1:-1;;;14464:18:85;;;14457:51;14525:19;;5309:73:17::1;14133:417:85::0;3465:96:5;3523:7;3549:5;3553:1;3549;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;14:180:85:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:85;;14:180;-1:-1:-1;14:180:85:o;407:131::-;-1:-1:-1;;;;;482:31:85;;472:42;;462:70;;528:1;525;518:12;543:127;604:10;599:3;595:20;592:1;585:31;635:4;632:1;625:15;659:4;656:1;649:15;675:718;717:5;770:3;763:4;755:6;751:17;747:27;737:55;;788:1;785;778:12;737:55;824:6;811:20;850:18;887:2;883;880:10;877:36;;;893:18;;:::i;:::-;968:2;962:9;936:2;1022:13;;-1:-1:-1;;1018:22:85;;;1042:2;1014:31;1010:40;998:53;;;1066:18;;;1086:22;;;1063:46;1060:72;;;1112:18;;:::i;:::-;1152:10;1148:2;1141:22;1187:2;1179:6;1172:18;1233:3;1226:4;1221:2;1213:6;1209:15;1205:26;1202:35;1199:55;;;1250:1;1247;1240:12;1199:55;1314:2;1307:4;1299:6;1295:17;1288:4;1280:6;1276:17;1263:54;1361:1;1354:4;1349:2;1341:6;1337:15;1333:26;1326:37;1381:6;1372:15;;;;;;675:718;;;;:::o;1398:674::-;1493:6;1501;1509;1562:2;1550:9;1541:7;1537:23;1533:32;1530:52;;;1578:1;1575;1568:12;1530:52;1617:9;1604:23;1636:31;1661:5;1636:31;:::i;:::-;1686:5;-1:-1:-1;1742:2:85;1727:18;;1714:32;1765:18;1795:14;;;1792:34;;;1822:1;1819;1812:12;1792:34;1845:49;1886:7;1877:6;1866:9;1862:22;1845:49;:::i;:::-;1835:59;;1947:2;1936:9;1932:18;1919:32;1903:48;;1976:2;1966:8;1963:16;1960:36;;;1992:1;1989;1982:12;1960:36;;2015:51;2058:7;2047:8;2036:9;2032:24;2015:51;:::i;:::-;2005:61;;;1398:674;;;;;:::o;2451:320::-;2519:6;2572:2;2560:9;2551:7;2547:23;2543:32;2540:52;;;2588:1;2585;2578:12;2540:52;2628:9;2615:23;2661:18;2653:6;2650:30;2647:50;;;2693:1;2690;2683:12;2647:50;2716:49;2757:7;2748:6;2737:9;2733:22;2716:49;:::i;2958:248::-;3026:6;3034;3087:2;3075:9;3066:7;3062:23;3058:32;3055:52;;;3103:1;3100;3093:12;3055:52;-1:-1:-1;;3126:23:85;;;3196:2;3181:18;;;3168:32;;-1:-1:-1;2958:248:85:o;3438:247::-;3497:6;3550:2;3538:9;3529:7;3525:23;3521:32;3518:52;;;3566:1;3563;3556:12;3518:52;3605:9;3592:23;3624:31;3649:5;3624:31;:::i;3690:523::-;3794:6;3802;3810;3818;3826;3834;3887:3;3875:9;3866:7;3862:23;3858:33;3855:53;;;3904:1;3901;3894:12;3855:53;-1:-1:-1;;3927:23:85;;;3997:2;3982:18;;3969:32;;-1:-1:-1;4048:2:85;4033:18;;4020:32;;4099:2;4084:18;;4071:32;;-1:-1:-1;4150:3:85;4135:19;;4122:33;;-1:-1:-1;4202:3:85;4187:19;4174:33;;-1:-1:-1;3690:523:85;-1:-1:-1;3690:523:85:o;4875:251::-;4945:6;4998:2;4986:9;4977:7;4973:23;4969:32;4966:52;;;5014:1;5011;5004:12;4966:52;5046:9;5040:16;5065:31;5090:5;5065:31;:::i;5131:322::-;5172:3;5210:5;5204:12;5234:1;5244:128;5258:6;5255:1;5252:13;5244:128;;;5355:4;5340:13;;;5336:24;;5330:31;5317:11;;;5310:52;5273:12;5244:128;;;-1:-1:-1;5427:1:85;5391:16;;5416:13;;;-1:-1:-1;5391:16:85;;5131:322;-1:-1:-1;5131:322:85:o;5458:373::-;5716:26;5712:31;5703:6;5699:2;5695:15;5691:53;5686:3;5679:66;5661:3;5761:64;5786:38;5820:2;5815:3;5811:12;5803:6;5786:38;:::i;:::-;5778:6;5761:64;:::i;5836:189::-;5965:3;5990:29;6015:3;6007:6;5990:29;:::i;6030:184::-;6100:6;6153:2;6141:9;6132:7;6128:23;6124:32;6121:52;;;6169:1;6166;6159:12;6121:52;-1:-1:-1;6192:16:85;;6030:184;-1:-1:-1;6030:184:85:o;12917:127::-;12978:10;12973:3;12969:20;12966:1;12959:31;13009:4;13006:1;12999:15;13033:4;13030:1;13023:15;13049:127;13110:10;13105:3;13101:20;13098:1;13091:31;13141:4;13138:1;13131:15;13165:4;13162:1;13155:15;13181:120;13221:1;13247;13237:35;;13252:18;;:::i;:::-;-1:-1:-1;13286:9:85;;13181:120::o;13306:112::-;13338:1;13364;13354:35;;13369:18;;:::i;:::-;-1:-1:-1;13403:9:85;;13306:112::o;14555:168::-;14628:9;;;14659;;14676:15;;;14670:22;;14656:37;14646:71;;14697:18;;:::i;14728:125::-;14793:9;;;14814:10;;;14811:36;;;14827:18;;:::i",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.8.7 <0.8.20;\n\nimport \"../../contracts/common/interfaces/ICeloVersionedContract.sol\";\nimport \"../../contracts-0.8/common/IsL2Check.sol\";\n\nimport \"./UsingPrecompiles.sol\";\nimport \"./UsingRegistry.sol\";\n\n/**\n * @title PrecompilesOverride Contract\n * @notice This contract allows for a smoother transition from L1 to L2\n * by abstracting away the usingPrecompile contract, and taking care of the L1 to L2 swtiching logic.\n **/\ncontract PrecompilesOverride is UsingPrecompiles, UsingRegistry {\n  /**\n   * @notice Returns the epoch number at a block.\n   * @param blockNumber Block number where epoch number is calculated.\n   * @return Epoch number.\n   */\n  function getEpochNumberOfBlock(uint256 blockNumber) public view override returns (uint256) {\n    if (isL2()) {\n      return getEpochManager().getEpochNumberOfBlock(blockNumber);\n    } else {\n      return epochNumberOfBlock(blockNumber, getEpochSize());\n    }\n  }\n\n  /**\n   * @notice Returns the epoch number at a block.\n   * @return Current epoch number.\n   */\n  function getEpochNumber() public view override returns (uint256) {\n    return getEpochNumberOfBlock(block.number);\n  }\n\n  /**\n   * @notice Gets a validator signer address from the current validator set.\n   * @param index Index of requested validator in the validator set.\n   * @return Address of validator signer at the requested index.\n   */\n  function validatorSignerAddressFromCurrentSet(\n    uint256 index\n  ) public view override returns (address) {\n    if (isL2()) {\n      return getEpochManager().getElectedSignerByIndex(index);\n    } else {\n      return super.validatorSignerAddressFromCurrentSet(index);\n    }\n  }\n\n  /**\n   * @notice Gets a validator address from the current validator set.\n   * @param index Index of requested validator in the validator set.\n   * @return Address of validator at the requested index.\n   */\n  function validatorAddressFromCurrentSet(uint256 index) public view onlyL2 returns (address) {\n    return getEpochManager().getElectedAccountByIndex(index);\n  }\n\n  /**\n   * @notice Gets the size of the current elected validator set.\n   * @return Size of the current elected validator set.\n   */\n  function numberValidatorsInCurrentSet() public view override returns (uint256) {\n    if (isL2()) {\n      return getEpochManager().numberOfElectedInCurrentSet();\n    } else {\n      return super.numberValidatorsInCurrentSet();\n    }\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/common/PrecompilesOverride.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/common/PrecompilesOverride.sol",
    "exportedSymbols": {
      "Context": [
        212
      ],
      "IAccounts": [
        17249
      ],
      "ICeloUnreleasedTreasury": [
        17265
      ],
      "ICeloVersionedContract": [
        17280
      ],
      "IERC20": [
        190
      ],
      "IElection": [
        18056
      ],
      "IEpochManager": [
        17462
      ],
      "IEpochRewards": [
        18121
      ],
      "IFeeCurrencyWhitelist": [
        17488
      ],
      "IFeeHandlerSeller": [
        17515
      ],
      "IFreezer": [
        17535
      ],
      "IGovernance": [
        18193
      ],
      "ILockedCelo": [
        18336
      ],
      "ILockedGold": [
        18472
      ],
      "IRegistry": [
        17608
      ],
      "IScoreReader": [
        7470
      ],
      "ISortedOracles": [
        19333
      ],
      "IValidators": [
        18940
      ],
      "IsL2Check": [
        4661
      ],
      "Ownable": [
        112
      ],
      "PrecompilesOverride": [
        5021
      ],
      "SafeMath": [
        1471
      ],
      "UsingPrecompiles": [
        6197
      ],
      "UsingRegistry": [
        6725
      ]
    },
    "id": 5022,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4906,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:13"
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../../contracts/common/interfaces/ICeloVersionedContract.sol",
        "id": 4907,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5022,
        "sourceUnit": 17281,
        "src": "76:70:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/IsL2Check.sol",
        "file": "../../contracts-0.8/common/IsL2Check.sol",
        "id": 4908,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5022,
        "sourceUnit": 4662,
        "src": "147:50:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/UsingPrecompiles.sol",
        "file": "./UsingPrecompiles.sol",
        "id": 4909,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5022,
        "sourceUnit": 6198,
        "src": "199:32:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/UsingRegistry.sol",
        "file": "./UsingRegistry.sol",
        "id": 4910,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5022,
        "sourceUnit": 6726,
        "src": "232:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4912,
              "name": "UsingPrecompiles",
              "nameLocations": [
                "517:16:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6197,
              "src": "517:16:13"
            },
            "id": 4913,
            "nodeType": "InheritanceSpecifier",
            "src": "517:16:13"
          },
          {
            "baseName": {
              "id": 4914,
              "name": "UsingRegistry",
              "nameLocations": [
                "535:13:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6725,
              "src": "535:13:13"
            },
            "id": 4915,
            "nodeType": "InheritanceSpecifier",
            "src": "535:13:13"
          }
        ],
        "canonicalName": "PrecompilesOverride",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4911,
          "nodeType": "StructuredDocumentation",
          "src": "263:221:13",
          "text": " @title PrecompilesOverride Contract\n @notice This contract allows for a smoother transition from L1 to L2\n by abstracting away the usingPrecompile contract, and taking care of the L1 to L2 swtiching logic.*"
        },
        "fullyImplemented": true,
        "id": 5021,
        "linearizedBaseContracts": [
          5021,
          6725,
          112,
          212,
          6197,
          4661
        ],
        "name": "PrecompilesOverride",
        "nameLocation": "494:19:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              5698
            ],
            "body": {
              "id": 4941,
              "nodeType": "Block",
              "src": "804:171:13",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4924,
                      "name": "isL2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4647,
                      "src": "814:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "814:6:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4939,
                    "nodeType": "Block",
                    "src": "902:69:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4934,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4918,
                              "src": "936:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4935,
                                "name": "getEpochSize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5681,
                                "src": "949:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 4936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "949:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4933,
                            "name": "epochNumberOfBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6149,
                            "src": "917:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "917:47:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4923,
                        "id": 4938,
                        "nodeType": "Return",
                        "src": "910:54:13"
                      }
                    ]
                  },
                  "id": 4940,
                  "nodeType": "IfStatement",
                  "src": "810:161:13",
                  "trueBody": {
                    "id": 4932,
                    "nodeType": "Block",
                    "src": "822:74:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4929,
                              "name": "blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4918,
                              "src": "877:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4926,
                                "name": "getEpochManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6710,
                                "src": "837:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEpochManager_$17462_$",
                                  "typeString": "function () view returns (contract IEpochManager)"
                                }
                              },
                              "id": 4927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "837:17:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEpochManager_$17462",
                                "typeString": "contract IEpochManager"
                              }
                            },
                            "id": 4928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "855:21:13",
                            "memberName": "getEpochNumberOfBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17368,
                            "src": "837:39:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 4930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "837:52:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4923,
                        "id": 4931,
                        "nodeType": "Return",
                        "src": "830:59:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4916,
              "nodeType": "StructuredDocumentation",
              "src": "553:157:13",
              "text": " @notice Returns the epoch number at a block.\n @param blockNumber Block number where epoch number is calculated.\n @return Epoch number."
            },
            "functionSelector": "3b1eb4bf",
            "id": 4942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpochNumberOfBlock",
            "nameLocation": "722:21:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4920,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "777:8:13"
            },
            "parameters": {
              "id": 4919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4918,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "752:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4942,
                  "src": "744:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "743:21:13"
            },
            "returnParameters": {
              "id": 4923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4922,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4942,
                  "src": "795:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "794:9:13"
            },
            "scope": 5021,
            "src": "713:262:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5712
            ],
            "body": {
              "id": 4954,
              "nodeType": "Block",
              "src": "1141:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4950,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "1176:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1182:6:13",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "1176:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4949,
                      "name": "getEpochNumberOfBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4942
                      ],
                      "referencedDeclaration": 4942,
                      "src": "1154:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 4952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4948,
                  "id": 4953,
                  "nodeType": "Return",
                  "src": "1147:42:13"
                }
              ]
            },
            "documentation": {
              "id": 4943,
              "nodeType": "StructuredDocumentation",
              "src": "979:94:13",
              "text": " @notice Returns the epoch number at a block.\n @return Current epoch number."
            },
            "functionSelector": "9a7b3be7",
            "id": 4955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpochNumber",
            "nameLocation": "1085:14:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1114:8:13"
            },
            "parameters": {
              "id": 4944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1099:2:13"
            },
            "returnParameters": {
              "id": 4948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4955,
                  "src": "1132:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:9:13"
            },
            "scope": 5021,
            "src": "1076:118:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5762
            ],
            "body": {
              "id": 4980,
              "nodeType": "Block",
              "src": "1529:169:13",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4964,
                      "name": "isL2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4647,
                      "src": "1539:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 4965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1539:6:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4978,
                    "nodeType": "Block",
                    "src": "1623:71:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4975,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4958,
                              "src": "1681:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4973,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1638:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_PrecompilesOverride_$5021_$",
                                "typeString": "type(contract super PrecompilesOverride)"
                              }
                            },
                            "id": 4974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1644:36:13",
                            "memberName": "validatorSignerAddressFromCurrentSet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5762,
                            "src": "1638:42:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 4976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1638:49:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 4963,
                        "id": 4977,
                        "nodeType": "Return",
                        "src": "1631:56:13"
                      }
                    ]
                  },
                  "id": 4979,
                  "nodeType": "IfStatement",
                  "src": "1535:159:13",
                  "trueBody": {
                    "id": 4972,
                    "nodeType": "Block",
                    "src": "1547:70:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4969,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4958,
                              "src": "1604:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4966,
                                "name": "getEpochManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6710,
                                "src": "1562:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEpochManager_$17462_$",
                                  "typeString": "function () view returns (contract IEpochManager)"
                                }
                              },
                              "id": 4967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1562:17:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEpochManager_$17462",
                                "typeString": "contract IEpochManager"
                              }
                            },
                            "id": 4968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1580:23:13",
                            "memberName": "getElectedSignerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17404,
                            "src": "1562:41:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 4970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1562:48:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 4963,
                        "id": 4971,
                        "nodeType": "Return",
                        "src": "1555:55:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4956,
              "nodeType": "StructuredDocumentation",
              "src": "1198:220:13",
              "text": " @notice Gets a validator signer address from the current validator set.\n @param index Index of requested validator in the validator set.\n @return Address of validator signer at the requested index."
            },
            "functionSelector": "123633ea",
            "id": 4981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatorSignerAddressFromCurrentSet",
            "nameLocation": "1430:36:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1502:8:13"
            },
            "parameters": {
              "id": 4959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4958,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1480:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4981,
                  "src": "1472:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1472:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1466:23:13"
            },
            "returnParameters": {
              "id": 4963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4981,
                  "src": "1520:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:13"
            },
            "scope": 5021,
            "src": "1421:277:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4997,
              "nodeType": "Block",
              "src": "2003:67:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4994,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4984,
                        "src": "2059:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4991,
                          "name": "getEpochManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6710,
                          "src": "2016:15:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEpochManager_$17462_$",
                            "typeString": "function () view returns (contract IEpochManager)"
                          }
                        },
                        "id": 4992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2016:17:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEpochManager_$17462",
                          "typeString": "contract IEpochManager"
                        }
                      },
                      "id": 4993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2034:24:13",
                      "memberName": "getElectedAccountByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17391,
                      "src": "2016:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 4995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4990,
                  "id": 4996,
                  "nodeType": "Return",
                  "src": "2009:56:13"
                }
              ]
            },
            "documentation": {
              "id": 4982,
              "nodeType": "StructuredDocumentation",
              "src": "1702:206:13",
              "text": " @notice Gets a validator address from the current validator set.\n @param index Index of requested validator in the validator set.\n @return Address of validator at the requested index."
            },
            "functionSelector": "11fb9e84",
            "id": 4998,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4987,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4986,
                  "name": "onlyL2",
                  "nameLocations": [
                    "1978:6:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4627,
                  "src": "1978:6:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1978:6:13"
              }
            ],
            "name": "validatorAddressFromCurrentSet",
            "nameLocation": "1920:30:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4984,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1959:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 4998,
                  "src": "1951:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1951:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1950:15:13"
            },
            "returnParameters": {
              "id": 4990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4998,
                  "src": "1994:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:9:13"
            },
            "scope": 5021,
            "src": "1911:159:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5851
            ],
            "body": {
              "id": 5019,
              "nodeType": "Block",
              "src": "2286:155:13",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5005,
                      "name": "isL2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4647,
                      "src": "2296:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 5006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2296:6:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5017,
                    "nodeType": "Block",
                    "src": "2379:58:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 5013,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "2394:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_PrecompilesOverride_$5021_$",
                                "typeString": "type(contract super PrecompilesOverride)"
                              }
                            },
                            "id": 5014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2400:28:13",
                            "memberName": "numberValidatorsInCurrentSet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5851,
                            "src": "2394:34:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 5015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2394:36:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5004,
                        "id": 5016,
                        "nodeType": "Return",
                        "src": "2387:43:13"
                      }
                    ]
                  },
                  "id": 5018,
                  "nodeType": "IfStatement",
                  "src": "2292:145:13",
                  "trueBody": {
                    "id": 5012,
                    "nodeType": "Block",
                    "src": "2304:69:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 5007,
                                "name": "getEpochManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6710,
                                "src": "2319:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEpochManager_$17462_$",
                                  "typeString": "function () view returns (contract IEpochManager)"
                                }
                              },
                              "id": 5008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2319:17:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEpochManager_$17462",
                                "typeString": "contract IEpochManager"
                              }
                            },
                            "id": 5009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2337:27:13",
                            "memberName": "numberOfElectedInCurrentSet",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17378,
                            "src": "2319:45:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 5010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2319:47:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5004,
                        "id": 5011,
                        "nodeType": "Return",
                        "src": "2312:54:13"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4999,
              "nodeType": "StructuredDocumentation",
              "src": "2074:130:13",
              "text": " @notice Gets the size of the current elected validator set.\n @return Size of the current elected validator set."
            },
            "functionSelector": "87ee8a0f",
            "id": 5020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberValidatorsInCurrentSet",
            "nameLocation": "2216:28:13",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5001,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2259:8:13"
            },
            "parameters": {
              "id": 5000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2244:2:13"
            },
            "returnParameters": {
              "id": 5004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5020,
                  "src": "2277:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2277:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2276:9:13"
            },
            "scope": 5021,
            "src": "2207:234:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5022,
        "src": "485:1958:13",
        "usedErrors": []
      }
    ],
    "src": "42:2402:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.145Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof   of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the   account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "returns": {
          "_0": "True upon success."
        }
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "returns": {
          "_0": "Numerator of the computed quantity (not reduced).",
          "_1": "Denominator of the computed quantity (not reduced)."
        }
      },
      "getBlockNumberFromHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "returns": {
          "_0": "Block number."
        }
      },
      "getEpochNumber()": {
        "returns": {
          "_0": "Current epoch number."
        }
      },
      "getEpochNumberOfBlock(uint256)": {
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "returns": {
          "_0": "Epoch number."
        }
      },
      "getEpochSize()": {
        "details": "This function will be deprecated in L2.",
        "returns": {
          "_0": "The current epoch size in blocks."
        }
      },
      "getParentSealBitmap(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "returns": {
          "_0": "Bitmap parent seal with set bits at indices corresponding to signing validators."
        }
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "returns": {
          "_0": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
        }
      },
      "hashHeader(bytes)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "header": "RLP encoded header"
        },
        "returns": {
          "_0": "Header hash."
        }
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))This function will be deprecated in L2."
      },
      "minQuorumSizeInCurrentSet()": {
        "details": "This function will be deprecated in L2.",
        "returns": {
          "_0": "Byzantine quorum of validators."
        }
      },
      "numberValidatorsInCurrentSet()": {
        "returns": {
          "_0": "Size of the current elected validator set."
        }
      },
      "numberValidatorsInSet(uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "returns": {
          "_0": "Size of the validator set."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "returns": {
          "_0": "Address of validator at the requested index."
        }
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "returns": {
          "_0": "Address of validator signer at the requested index."
        }
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "details": "This function will be deprecated in L2.",
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "returns": {
          "_0": "Address of validator signer at the requested index."
        }
      }
    },
    "title": "PrecompilesOverride Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInCurrentSet()": {
        "notice": "Gets the size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "validatorAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator address from the current validator set."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator signer address from the current validator set."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator signer address from the validator set at the given block number."
      }
    },
    "notice": "This contract allows for a smoother transition from L1 to L2 by abstracting away the usingPrecompile contract, and taking care of the L1 to L2 swtiching logic.*",
    "version": 1
  }
}