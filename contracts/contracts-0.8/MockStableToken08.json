{
  "contractName": "MockStableToken08",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inflationFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newInflationFactor",
          "type": "uint256"
        }
      ],
      "name": "setInflationFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "units",
          "type": "uint256"
        }
      ],
      "name": "unitsToValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "valueToUnits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inflationFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newInflationFactor\",\"type\":\"uint256\"}],\"name\":\"setInflationFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"units\",\"type\":\"uint256\"}],\"name\":\"unitsToValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"valueToUnits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"A mock StableToken for testing.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/stability/test/MockStableToken.sol\":\"MockStableToken08\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"project:/contracts-0.8/stability/test/MockStableToken.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.9.0;\\n// solhint-disable no-unused-vars\\n\\nimport \\\"@openzeppelin/contracts8/utils/math/SafeMath.sol\\\";\\n\\nimport \\\"../../../contracts/common/FixidityLib.sol\\\";\\n\\n/**\\n * @title A mock StableToken for testing.\\n */\\ncontract MockStableToken08 {\\n  using FixidityLib for FixidityLib.Fraction;\\n  using SafeMath for uint256;\\n\\n  uint8 public constant decimals = 18;\\n  uint256 public _totalSupply;\\n  FixidityLib.Fraction public inflationFactor;\\n\\n  // Stored as units. Value can be found using unitsToValue().\\n  mapping(address => uint256) public balances;\\n\\n  constructor() {\\n    setInflationFactor(FixidityLib.fixed1().unwrap());\\n  }\\n\\n  function setTotalSupply(uint256 value) external {\\n    _totalSupply = value;\\n  }\\n\\n  function mint(address to, uint256 value) external returns (bool) {\\n    require(to != address(0), \\\"0 is a reserved address\\\");\\n    balances[to] = balances[to].add(valueToUnits(value));\\n    _totalSupply = _totalSupply.add(value);\\n    return true;\\n  }\\n\\n  function burn(uint256 value) external returns (bool) {\\n    balances[msg.sender] = balances[msg.sender].sub(valueToUnits(value));\\n    _totalSupply = _totalSupply.sub(value);\\n    return true;\\n  }\\n\\n  function transfer(address to, uint256 value) external returns (bool) {\\n    return _transfer(msg.sender, to, value);\\n  }\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool) {\\n    return _transfer(from, to, value);\\n  }\\n\\n  function totalSupply() external view returns (uint256) {\\n    return _totalSupply;\\n  }\\n\\n  function setInflationFactor(uint256 newInflationFactor) public {\\n    inflationFactor = FixidityLib.wrap(newInflationFactor);\\n  }\\n\\n  function balanceOf(address account) public view returns (uint256) {\\n    return unitsToValue(balances[account]);\\n  }\\n\\n  function unitsToValue(uint256 units) public view returns (uint256) {\\n    return FixidityLib.newFixed(units).divide(inflationFactor).fromFixed();\\n  }\\n\\n  function valueToUnits(uint256 value) public view returns (uint256) {\\n    return inflationFactor.multiply(FixidityLib.newFixed(value)).fromFixed();\\n  }\\n\\n  function _transfer(address from, address to, uint256 value) internal returns (bool) {\\n    uint256 balanceValue = balanceOf(from);\\n    if (balanceValue < value) {\\n      return false;\\n    }\\n    uint256 units = valueToUnits(value);\\n    balances[from] = balances[from].sub(units);\\n    balances[to] = balances[to].add(units);\\n    return true;\\n  }\\n}\\n\",\"keccak256\":\"0x3e32a7dc81f79c490396f74de1e50b23ec97d3e6c1e540ef1a943414c8626bea\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/FixidityLib.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n  struct Fraction {\\n    uint256 value;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n  /**\\n   * @notice Number of positions that the comma is shifted to the right.\\n   */\\n  function digits() internal pure returns (uint8) {\\n    return 24;\\n  }\\n\\n  /**\\n   * @notice This is 1 in the fixed point units used in this library.\\n   * @dev Test fixed1() equals 10^digits()\\n   * Hardcoded to 24 digits.\\n   */\\n  function fixed1() internal pure returns (Fraction memory) {\\n    return Fraction(FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n   * struct.\\n   * @param x Number that already represents a 24-decimal fraction.\\n   * @return A Fraction struct with contents x.\\n   */\\n  function wrap(uint256 x) internal pure returns (Fraction memory) {\\n    return Fraction(x);\\n  }\\n\\n  /**\\n   * @notice Unwraps the uint256 inside of a Fraction struct.\\n   */\\n  function unwrap(Fraction memory x) internal pure returns (uint256) {\\n    return x.value;\\n  }\\n\\n  /**\\n   * @notice The amount of decimals lost on each multiplication operand.\\n   * @dev Test mulPrecision() equals sqrt(fixed1)\\n   */\\n  function mulPrecision() internal pure returns (uint256) {\\n    return 1000000000000;\\n  }\\n\\n  /**\\n   * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n   * @dev\\n   * Test maxNewFixed() equals maxUint256() / fixed1()\\n   */\\n  function maxNewFixed() internal pure returns (uint256) {\\n    return 115792089237316195423570985008687907853269984665640564;\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 to fixed point Fraction\\n   * @dev Test newFixed(0) returns 0\\n   * Test newFixed(1) returns fixed1()\\n   * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n   * Test newFixed(maxNewFixed()+1) fails\\n   */\\n  function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n    require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n    return Fraction(x * FIXED1_UINT);\\n  }\\n\\n  /**\\n   * @notice Converts a uint256 in the fixed point representation of this\\n   * library to a non decimal. All decimal digits will be truncated.\\n   */\\n  function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n    return x.value / FIXED1_UINT;\\n  }\\n\\n  /**\\n   * @notice Converts two uint256 representing a fraction to fixed point units,\\n   * equivalent to multiplying dividend and divisor by 10^digits().\\n   * @param numerator numerator must be <= maxNewFixed()\\n   * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n   * @dev\\n   * Test newFixedFraction(1,0) fails\\n   * Test newFixedFraction(0,1) returns 0\\n   * Test newFixedFraction(1,1) returns fixed1()\\n   * Test newFixedFraction(1,fixed1()) returns 1\\n   */\\n  function newFixedFraction(\\n    uint256 numerator,\\n    uint256 denominator\\n  ) internal pure returns (Fraction memory) {\\n    Fraction memory convertedNumerator = newFixed(numerator);\\n    Fraction memory convertedDenominator = newFixed(denominator);\\n    return divide(convertedNumerator, convertedDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the integer part of a fixed point number.\\n   * @dev\\n   * Test integer(0) returns 0\\n   * Test integer(fixed1()) returns fixed1()\\n   * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n   */\\n  function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice Returns the fractional part of a fixed point number.\\n   * In the case of a negative number the fractional is also negative.\\n   * @dev\\n   * Test fractional(0) returns 0\\n   * Test fractional(fixed1()) returns 0\\n   * Test fractional(fixed1()-1) returns 10^24-1\\n   */\\n  function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n    return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x+y.\\n   * @dev The maximum value that can be safely used as an addition operator is defined as\\n   * maxFixedAdd = maxUint256()-1 / 2, or\\n   * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n   * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n   * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n   */\\n  function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    uint256 z = x.value + y.value;\\n    require(z >= x.value, \\\"add overflow detected\\\");\\n    return Fraction(z);\\n  }\\n\\n  /**\\n   * @notice x-y.\\n   * @dev\\n   * Test subtract(6, 10) fails\\n   */\\n  function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n    return Fraction(x.value - y.value);\\n  }\\n\\n  /**\\n   * @notice x*y. If any of the operators is higher than the max multiplier value it\\n   * might overflow.\\n   * @dev The maximum value that can be safely used as a multiplication operator\\n   * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n   * or 340282366920938463463374607431768211455999999999999\\n   * Test multiply(0,0) returns 0\\n   * Test multiply(maxFixedMul,0) returns 0\\n   * Test multiply(0,maxFixedMul) returns 0\\n   * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n   * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n   * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n   */\\n  function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    if (x.value == 0 || y.value == 0) return Fraction(0);\\n    if (y.value == FIXED1_UINT) return x;\\n    if (x.value == FIXED1_UINT) return y;\\n\\n    // Separate into integer and fractional parts\\n    // x = x1 + x2, y = y1 + y2\\n    uint256 x1 = integer(x).value / FIXED1_UINT;\\n    uint256 x2 = fractional(x).value;\\n    uint256 y1 = integer(y).value / FIXED1_UINT;\\n    uint256 y2 = fractional(y).value;\\n\\n    // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n    uint256 x1y1 = x1 * y1;\\n    if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n    // x1y1 needs to be multiplied back by fixed1\\n    // solium-disable-next-line mixedcase\\n    uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n    if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n    x1y1 = fixed_x1y1;\\n\\n    uint256 x2y1 = x2 * y1;\\n    if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n    uint256 x1y2 = x1 * y2;\\n    if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n    x2 = x2 / mulPrecision();\\n    y2 = y2 / mulPrecision();\\n    uint256 x2y2 = x2 * y2;\\n    if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n    // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n    Fraction memory result = Fraction(x1y1);\\n    result = add(result, Fraction(x2y1)); // Add checks for overflow\\n    result = add(result, Fraction(x1y2)); // Add checks for overflow\\n    result = add(result, Fraction(x2y2)); // Add checks for overflow\\n    return result;\\n  }\\n\\n  /**\\n   * @notice 1/x\\n   * @dev\\n   * Test reciprocal(0) fails\\n   * Test reciprocal(fixed1()) returns fixed1()\\n   * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n   * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n   * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n   */\\n  function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n    require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n    return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n  }\\n\\n  /**\\n   * @notice x/y. If the dividend is higher than the max dividend value, it\\n   * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n   * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n   * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n   * This yields the value 115792089237316195423570985008687907853269984665640564.\\n   * Test maxNewFixed equals maxUint256()/fixed1()\\n   * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n   * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n   * Test divide(fixed1(),0) fails\\n   * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n   * Test divide(maxNewFixed+1,1) throws\\n   */\\n  function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n    require(y.value != 0, \\\"can't divide by 0\\\");\\n    uint256 X = x.value * FIXED1_UINT;\\n    require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n    return Fraction(X / y.value);\\n  }\\n\\n  /**\\n   * @notice x > y\\n   */\\n  function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value > y.value;\\n  }\\n\\n  /**\\n   * @notice x >= y\\n   */\\n  function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value >= y.value;\\n  }\\n\\n  /**\\n   * @notice x < y\\n   */\\n  function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value < y.value;\\n  }\\n\\n  /**\\n   * @notice x <= y\\n   */\\n  function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value <= y.value;\\n  }\\n\\n  /**\\n   * @notice x == y\\n   */\\n  function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n    return x.value == y.value;\\n  }\\n\\n  /**\\n   * @notice x <= 1\\n   */\\n  function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n    return lte(x, fixed1());\\n  }\\n}\\n\",\"keccak256\":\"0x546944b106cf70ad6f793e71dffd41733bec3e03ca820a3d08213fc795c042b0\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061006661004661004260408051602080820183526000909152815190810190915269d3c21bcecceda1000000815290565b5190565b604080516020808201835260009091528151908101909152819052600155565b610c37806100756000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c578063a9059cbb11610066578063a9059cbb146101ec578063af31f587146101ff578063e4a063c314610212578063f7ea7a3d1461021c57600080fd5b806340c10f19146101b357806342966c68146101c657806370a08231146101d957600080fd5b806323b872dd116100c857806323b872dd1461014d57806327e235e314610170578063313ce567146101905780633eaaf86b146101aa57600080fd5b806312c6c099146100ef57806315ccf5981461011557806318160ddd14610145575b600080fd5b6101026100fd366004610ad6565b61022f565b6040519081526020015b60405180910390f35b610143610123366004610ad6565b604080516020808201835260009091528151908101909152819052600155565b005b600054610102565b61016061015b366004610b0b565b610261565b604051901515815260200161010c565b61010261017e366004610b47565b60026020526000908152604090205481565b610198601281565b60405160ff909116815260200161010c565b61010260005481565b6101606101c1366004610b62565b610278565b6101606101d4366004610ad6565b610333565b6101026101e7366004610b47565b610380565b6101606101fa366004610b62565b6103a2565b61010261020d366004610ad6565b6103af565b6001546101029081565b61014361022a366004610ad6565b600055565b600061025b610256610240846103d9565b6040805160208101909152600154815290610497565b610806565b92915050565b600061026e848484610820565b90505b9392505050565b60006001600160a01b0383166102d55760405162461bcd60e51b815260206004820152601760248201527f302069732061207265736572766564206164647265737300000000000000000060448201526064015b60405180910390fd5b6103006102e18361022f565b6001600160a01b038516600090815260026020526040902054906108c6565b6001600160a01b0384166000908152600260205260408120919091555461032790836108c6565b60005550600192915050565b60006103576103418361022f565b33600090815260026020526040902054906108d2565b336000908152600260205260408120919091555461037590836108d2565b600055506001919050565b6001600160a01b03811660009081526002602052604081205461025b906103af565b6000610271338484610820565b6040805160208101909152600154815260009061025b90610256906103d3856103d9565b906108de565b6040805160208101909152600081527601357c299a88ea76a58924d52ce4f26a85af186c2b9e7482111561046e5760405162461bcd60e51b815260206004820152603660248201527f63616e277420637265617465206669786964697479206e756d626572206c6172604482015275676572207468616e206d61784e65774669786564282960501b60648201526084016102cc565b604051806020016040528069d3c21bcecceda10000008461048f9190610ba2565b905292915050565b604080516020810190915260008152825115806104b357508151155b156104cd575060408051602081019091526000815261025b565b815169d3c21bcecceda0ffffff19016104e757508161025b565b825169d3c21bcecceda0ffffff190161050157508061025b565b600069d3c21bcecceda1000000610517856109cc565b516105229190610bb9565b9050600061052f85610a0b565b519050600069d3c21bcecceda1000000610548866109cc565b516105539190610bb9565b9050600061056086610a0b565b519050600061056f8386610ba2565b905084156105c857826105828683610bb9565b146105c85760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c5e4c4819195d1958dd195960521b60448201526064016102cc565b60006105de69d3c21bcecceda100000083610ba2565b905081156106485769d3c21bcecceda10000006105fb8383610bb9565b146106485760405162461bcd60e51b815260206004820152601f60248201527f6f766572666c6f772078317931202a206669786564312064657465637465640060448201526064016102cc565b90508060006106578587610ba2565b905085156106b0578461066a8783610bb9565b146106b05760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c9e4c4819195d1958dd195960521b60448201526064016102cc565b60006106bc8589610ba2565b9050871561071557846106cf8983610bb9565b146107155760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c5e4c8819195d1958dd195960521b60448201526064016102cc565b61072464e8d4a5100088610bb9565b965061073564e8d4a5100086610bb9565b945060006107438689610ba2565b9050871561079c57856107568983610bb9565b1461079c5760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c9e4c8819195d1958dd195960521b60448201526064016102cc565b60408051602080820183528782528251908101909252848252906107c1908290610a56565b90506107db81604051806020016040528086815250610a56565b90506107f581604051806020016040528085815250610a56565b9d9c50505050505050505050505050565b805160009061025b9069d3c21bcecceda100000090610bb9565b60008061082c85610380565b905082811015610840576000915050610271565b600061084b8461022f565b6001600160a01b03871660009081526002602052604090205490915061087190826108d2565b6001600160a01b0380881660009081526002602052604080822093909355908716815220546108a090826108c6565b6001600160a01b0386166000908152600260205260409020555060019150509392505050565b60006102718284610bdb565b60006102718284610bee565b60408051602081019091526000815281516000036109325760405162461bcd60e51b8152602060048201526011602482015270063616e277420646976696465206279203607c1b60448201526064016102cc565b825160009061094c9069d3c21bcecceda100000090610ba2565b845190915061096569d3c21bcecceda100000083610bb9565b146109a75760405162461bcd60e51b81526020600482015260126024820152716f766572666c6f772061742064697669646560701b60448201526064016102cc565b60405180602001604052808460000151836109c29190610bb9565b9052949350505050565b604080516020810190915260008152604051806020016040528069d3c21bcecceda1000000808560000151610a019190610bb9565b61048f9190610ba2565b604080516020810190915260008152604051806020016040528069d3c21bcecceda1000000808560000151610a409190610bb9565b610a4a9190610ba2565b845161048f9190610bee565b60408051602081019091526000815281518351600091610a7591610bdb565b8451909150811015610ac15760405162461bcd60e51b8152602060048201526015602482015274185919081bdd995c999b1bddc819195d1958dd1959605a1b60448201526064016102cc565b60408051602081019091529081529392505050565b600060208284031215610ae857600080fd5b5035919050565b80356001600160a01b0381168114610b0657600080fd5b919050565b600080600060608486031215610b2057600080fd5b610b2984610aef565b9250610b3760208501610aef565b9150604084013590509250925092565b600060208284031215610b5957600080fd5b61027182610aef565b60008060408385031215610b7557600080fd5b610b7e83610aef565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761025b5761025b610b8c565b600082610bd657634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561025b5761025b610b8c565b8181038181111561025b5761025b610b8c56fea26469706673582212208821bbe423d8c31396fa38527d1592e85016b733bf12afb9091395118673966864736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c578063a9059cbb11610066578063a9059cbb146101ec578063af31f587146101ff578063e4a063c314610212578063f7ea7a3d1461021c57600080fd5b806340c10f19146101b357806342966c68146101c657806370a08231146101d957600080fd5b806323b872dd116100c857806323b872dd1461014d57806327e235e314610170578063313ce567146101905780633eaaf86b146101aa57600080fd5b806312c6c099146100ef57806315ccf5981461011557806318160ddd14610145575b600080fd5b6101026100fd366004610ad6565b61022f565b6040519081526020015b60405180910390f35b610143610123366004610ad6565b604080516020808201835260009091528151908101909152819052600155565b005b600054610102565b61016061015b366004610b0b565b610261565b604051901515815260200161010c565b61010261017e366004610b47565b60026020526000908152604090205481565b610198601281565b60405160ff909116815260200161010c565b61010260005481565b6101606101c1366004610b62565b610278565b6101606101d4366004610ad6565b610333565b6101026101e7366004610b47565b610380565b6101606101fa366004610b62565b6103a2565b61010261020d366004610ad6565b6103af565b6001546101029081565b61014361022a366004610ad6565b600055565b600061025b610256610240846103d9565b6040805160208101909152600154815290610497565b610806565b92915050565b600061026e848484610820565b90505b9392505050565b60006001600160a01b0383166102d55760405162461bcd60e51b815260206004820152601760248201527f302069732061207265736572766564206164647265737300000000000000000060448201526064015b60405180910390fd5b6103006102e18361022f565b6001600160a01b038516600090815260026020526040902054906108c6565b6001600160a01b0384166000908152600260205260408120919091555461032790836108c6565b60005550600192915050565b60006103576103418361022f565b33600090815260026020526040902054906108d2565b336000908152600260205260408120919091555461037590836108d2565b600055506001919050565b6001600160a01b03811660009081526002602052604081205461025b906103af565b6000610271338484610820565b6040805160208101909152600154815260009061025b90610256906103d3856103d9565b906108de565b6040805160208101909152600081527601357c299a88ea76a58924d52ce4f26a85af186c2b9e7482111561046e5760405162461bcd60e51b815260206004820152603660248201527f63616e277420637265617465206669786964697479206e756d626572206c6172604482015275676572207468616e206d61784e65774669786564282960501b60648201526084016102cc565b604051806020016040528069d3c21bcecceda10000008461048f9190610ba2565b905292915050565b604080516020810190915260008152825115806104b357508151155b156104cd575060408051602081019091526000815261025b565b815169d3c21bcecceda0ffffff19016104e757508161025b565b825169d3c21bcecceda0ffffff190161050157508061025b565b600069d3c21bcecceda1000000610517856109cc565b516105229190610bb9565b9050600061052f85610a0b565b519050600069d3c21bcecceda1000000610548866109cc565b516105539190610bb9565b9050600061056086610a0b565b519050600061056f8386610ba2565b905084156105c857826105828683610bb9565b146105c85760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c5e4c4819195d1958dd195960521b60448201526064016102cc565b60006105de69d3c21bcecceda100000083610ba2565b905081156106485769d3c21bcecceda10000006105fb8383610bb9565b146106485760405162461bcd60e51b815260206004820152601f60248201527f6f766572666c6f772078317931202a206669786564312064657465637465640060448201526064016102cc565b90508060006106578587610ba2565b905085156106b0578461066a8783610bb9565b146106b05760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c9e4c4819195d1958dd195960521b60448201526064016102cc565b60006106bc8589610ba2565b9050871561071557846106cf8983610bb9565b146107155760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c5e4c8819195d1958dd195960521b60448201526064016102cc565b61072464e8d4a5100088610bb9565b965061073564e8d4a5100086610bb9565b945060006107438689610ba2565b9050871561079c57856107568983610bb9565b1461079c5760405162461bcd60e51b81526020600482015260166024820152751bdd995c999b1bddc81e0c9e4c8819195d1958dd195960521b60448201526064016102cc565b60408051602080820183528782528251908101909252848252906107c1908290610a56565b90506107db81604051806020016040528086815250610a56565b90506107f581604051806020016040528085815250610a56565b9d9c50505050505050505050505050565b805160009061025b9069d3c21bcecceda100000090610bb9565b60008061082c85610380565b905082811015610840576000915050610271565b600061084b8461022f565b6001600160a01b03871660009081526002602052604090205490915061087190826108d2565b6001600160a01b0380881660009081526002602052604080822093909355908716815220546108a090826108c6565b6001600160a01b0386166000908152600260205260409020555060019150509392505050565b60006102718284610bdb565b60006102718284610bee565b60408051602081019091526000815281516000036109325760405162461bcd60e51b8152602060048201526011602482015270063616e277420646976696465206279203607c1b60448201526064016102cc565b825160009061094c9069d3c21bcecceda100000090610ba2565b845190915061096569d3c21bcecceda100000083610bb9565b146109a75760405162461bcd60e51b81526020600482015260126024820152716f766572666c6f772061742064697669646560701b60448201526064016102cc565b60405180602001604052808460000151836109c29190610bb9565b9052949350505050565b604080516020810190915260008152604051806020016040528069d3c21bcecceda1000000808560000151610a019190610bb9565b61048f9190610ba2565b604080516020810190915260008152604051806020016040528069d3c21bcecceda1000000808560000151610a409190610bb9565b610a4a9190610ba2565b845161048f9190610bee565b60408051602081019091526000815281518351600091610a7591610bdb565b8451909150811015610ac15760405162461bcd60e51b8152602060048201526015602482015274185919081bdd995c999b1bddc819195d1958dd1959605a1b60448201526064016102cc565b60408051602081019091529081529392505050565b600060208284031215610ae857600080fd5b5035919050565b80356001600160a01b0381168114610b0657600080fd5b919050565b600080600060608486031215610b2057600080fd5b610b2984610aef565b9250610b3760208501610aef565b9150604084013590509250925092565b600060208284031215610b5957600080fd5b61027182610aef565b60008060408385031215610b7557600080fd5b610b7e83610aef565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761025b5761025b610b8c565b600082610bd657634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561025b5761025b610b8c565b8181038181111561025b5761025b610b8c56fea26469706673582212208821bbe423d8c31396fa38527d1592e85016b733bf12afb9091395118673966864736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6092:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:85",
                "type": ""
              }
            ],
            "src": "14:180:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "363:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:85",
                "type": ""
              }
            ],
            "src": "199:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "430:124:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "440:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "462:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "449:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "449:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "440:5:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "532:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "541:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "544:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "534:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "534:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "534:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "491:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "502:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "517:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "522:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "513:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "513:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "526:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "509:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "509:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "498:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "498:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "488:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "488:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "481:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "478:70:85"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "409:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "420:5:85",
                "type": ""
              }
            ],
            "src": "381:173:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "663:224:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "709:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "718:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "721:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "711:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "711:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "711:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "684:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "693:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "680:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "680:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "705:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "676:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "676:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "673:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "734:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "763:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "744:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "744:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "734:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "782:48:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "815:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "826:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "811:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "811:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "792:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "792:38:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "782:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "839:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "866:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "877:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "862:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "862:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "849:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "849:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "839:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "613:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "624:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "636:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "644:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "652:6:85",
                "type": ""
              }
            ],
            "src": "559:328:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "987:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "997:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1009:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1020:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1005:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1005:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "997:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1039:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1064:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1057:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1057:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1050:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1050:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1032:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1032:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "956:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "967:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "978:4:85",
                "type": ""
              }
            ],
            "src": "892:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1154:116:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1200:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1209:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1212:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1202:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1202:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1202:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1175:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1196:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1167:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1167:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1164:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1225:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1254:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1235:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1235:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1225:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1120:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1131:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1143:6:85",
                "type": ""
              }
            ],
            "src": "1084:186:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1372:87:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1382:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1394:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1405:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1390:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1382:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1424:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1439:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1447:4:85",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1435:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1435:17:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1417:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1417:36:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1341:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1352:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1363:4:85",
                "type": ""
              }
            ],
            "src": "1275:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1551:167:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1597:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1606:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1609:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1599:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1599:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1599:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1572:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1581:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1568:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1568:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1593:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1564:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1564:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1561:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1622:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1651:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1632:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1632:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1622:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1670:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1697:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1708:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1693:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1693:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1680:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1680:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1670:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1509:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1520:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1532:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1540:6:85",
                "type": ""
              }
            ],
            "src": "1464:254:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1897:173:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1914:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1925:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1907:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1907:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1907:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1948:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1959:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1944:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1944:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1964:2:85",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1937:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1937:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1937:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1987:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1998:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1983:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1983:18:85"
                      },
                      {
                        "hexValue": "3020697320612072657365727665642061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2003:25:85",
                        "type": "",
                        "value": "0 is a reserved address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1976:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1976:53:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1976:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2038:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2050:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2046:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2046:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2038:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_878e7ba3f3409c291a727d099ef15162972b4804c774d0c483b902d05a3f971a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1874:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1888:4:85",
                "type": ""
              }
            ],
            "src": "1723:347:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2249:244:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2266:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2277:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2259:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2259:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2300:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2311:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2296:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2296:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2316:2:85",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2289:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2289:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2289:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2339:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2350:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2335:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2335:18:85"
                      },
                      {
                        "hexValue": "63616e277420637265617465206669786964697479206e756d626572206c6172",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2355:34:85",
                        "type": "",
                        "value": "can't create fixidity number lar"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2328:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2328:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2328:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2410:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2421:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2406:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2406:18:85"
                      },
                      {
                        "hexValue": "676572207468616e206d61784e657746697865642829",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2426:24:85",
                        "type": "",
                        "value": "ger than maxNewFixed()"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2399:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2399:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2399:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2460:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2472:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2483:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2468:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2468:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2460:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2226:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2240:4:85",
                "type": ""
              }
            ],
            "src": "2075:418:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2530:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2547:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2554:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2559:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2550:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2550:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2540:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2540:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2540:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2587:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2590:4:85",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2580:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2580:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2611:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2614:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2604:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2604:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2604:15:85"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2498:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2682:116:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2692:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2707:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2710:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2703:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2692:7:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2770:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2772:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2772:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2772:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2741:1:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2734:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2734:9:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2748:1:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "2755:7:85"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2764:1:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2751:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2751:15:85"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2745:2:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2745:22:85"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2731:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2731:37:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2724:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2724:45:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2721:71:85"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2661:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2664:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2670:7:85",
                "type": ""
              }
            ],
            "src": "2630:168:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2849:171:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2880:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2901:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2908:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2913:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2904:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2904:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2894:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2894:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2894:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2945:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2948:4:85",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2938:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2938:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2938:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2973:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2976:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2966:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2966:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2966:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2869:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2862:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2862:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2859:132:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3000:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3009:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3012:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3005:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3005:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3000:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2834:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2837:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2843:1:85",
                "type": ""
              }
            ],
            "src": "2803:217:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3199:172:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3216:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3209:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3209:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3209:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3250:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3261:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3246:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3246:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:2:85",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3239:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3239:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3239:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3289:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3300:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3285:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3285:18:85"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317931206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3305:24:85",
                        "type": "",
                        "value": "overflow x1y1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3278:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3278:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3278:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3339:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3351:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3362:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3347:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3347:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3339:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3176:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3190:4:85",
                "type": ""
              }
            ],
            "src": "3025:346:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3550:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3567:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3578:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3560:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3560:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3601:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3612:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3597:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3597:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3617:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3590:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3590:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3640:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3651:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3636:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3636:18:85"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317931202a20666978656431206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3656:33:85",
                        "type": "",
                        "value": "overflow x1y1 * fixed1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3629:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3629:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3629:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3699:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3711:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3722:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3707:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3699:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3527:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3541:4:85",
                "type": ""
              }
            ],
            "src": "3376:355:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3910:172:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3927:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3938:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3920:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3920:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3920:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3961:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3972:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3957:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3957:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3977:2:85",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3950:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3950:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3950:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4000:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4011:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3996:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3996:18:85"
                      },
                      {
                        "hexValue": "6f766572666c6f772078327931206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4016:24:85",
                        "type": "",
                        "value": "overflow x2y1 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3989:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3989:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3989:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4050:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4062:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4073:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4058:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4058:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4050:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3887:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3901:4:85",
                "type": ""
              }
            ],
            "src": "3736:346:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4261:172:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4278:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4289:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4271:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4271:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4312:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4323:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4308:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4308:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4328:2:85",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4301:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4301:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4301:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4351:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4362:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4347:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4347:18:85"
                      },
                      {
                        "hexValue": "6f766572666c6f772078317932206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4367:24:85",
                        "type": "",
                        "value": "overflow x1y2 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4340:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4340:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4340:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4401:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4413:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4424:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4409:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4409:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4401:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4238:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4252:4:85",
                "type": ""
              }
            ],
            "src": "4087:346:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4612:172:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4629:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4640:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4622:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4622:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4622:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4663:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4674:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4659:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4659:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4679:2:85",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4652:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4652:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4652:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4702:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4713:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4698:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4698:18:85"
                      },
                      {
                        "hexValue": "6f766572666c6f772078327932206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4718:24:85",
                        "type": "",
                        "value": "overflow x2y2 detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4691:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4691:52:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4691:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4752:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4764:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4775:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4760:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4760:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4752:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4603:4:85",
                "type": ""
              }
            ],
            "src": "4438:346:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4837:77:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4847:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4858:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4861:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4854:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4854:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4847:3:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4886:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4888:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4888:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4888:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4878:1:85"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "4881:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4875:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4875:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4872:36:85"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4820:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4823:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4829:3:85",
                "type": ""
              }
            ],
            "src": "4789:125:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4968:79:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4978:17:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4990:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4993:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4986:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4986:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4978:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5019:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5021:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5021:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5021:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "5010:4:85"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5016:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5007:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:11:85"
                  },
                  "nodeType": "YulIf",
                  "src": "5004:37:85"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4950:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4953:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4959:4:85",
                "type": ""
              }
            ],
            "src": "4919:128:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5226:167:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5243:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5254:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5236:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5236:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5236:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5277:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5288:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5273:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5273:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5293:2:85",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5266:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5266:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5266:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5316:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5327:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5312:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5312:18:85"
                      },
                      {
                        "hexValue": "63616e2774206469766964652062792030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5332:19:85",
                        "type": "",
                        "value": "can't divide by 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5305:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5305:47:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5305:47:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5361:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5373:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5369:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5361:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5203:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5217:4:85",
                "type": ""
              }
            ],
            "src": "5052:341:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5572:168:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5589:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5600:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5582:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5582:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5582:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5623:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5634:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5619:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5619:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5639:2:85",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5612:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5612:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5612:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5662:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5673:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5658:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:18:85"
                      },
                      {
                        "hexValue": "6f766572666c6f7720617420646976696465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5678:20:85",
                        "type": "",
                        "value": "overflow at divide"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5651:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5651:48:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5651:48:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5708:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5720:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5731:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5716:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5716:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5708:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5549:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5563:4:85",
                "type": ""
              }
            ],
            "src": "5398:342:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5919:171:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5936:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5947:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5929:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5929:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5929:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5970:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5981:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5966:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5966:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5986:2:85",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5959:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5959:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5959:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6009:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6020:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6005:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6005:18:85"
                      },
                      {
                        "hexValue": "616464206f766572666c6f77206465746563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6025:23:85",
                        "type": "",
                        "value": "add overflow detected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5998:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5998:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5998:51:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6058:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6070:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6081:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6066:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6066:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6058:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5896:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5910:4:85",
                "type": ""
              }
            ],
            "src": "5745:345:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_878e7ba3f3409c291a727d099ef15162972b4804c774d0c483b902d05a3f971a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"0 is a reserved address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_592143e78f2c6dc3bbe5dd3dc8545640983a585659065fe88d523a4bca0bb535__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"can't create fixidity number lar\")\n        mstore(add(headStart, 96), \"ger than maxNewFixed()\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_08c2c7829891f31a58a3b891760427262b5b3ee94befd0c6eee5d8d9f82fb381__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"overflow x1y1 detected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d96960379c16e8468891ad17ca2621cab4771278df9373527845f3f6a3b4f52d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"overflow x1y1 * fixed1 detected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee5fdc3cc202a4e97d42a18abb6b74559ff48ee1cdea0f75c2216fd419ff5bee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"overflow x2y1 detected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9cef4a5a3aaad4ff1b6c02bfe38ce8803855cabe0954c363e7c63adac3a7f3d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"overflow x1y2 detected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_38611d20154e6cfee3b030675e538584e26d94d376147e11656ce521a20e1c97__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"overflow x2y2 detected\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_444fef91477c6a4b43c9c52c0111f2514856c1d7321d747a88d09f670bb1d6ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"can't divide by 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7eb0e6f925e8cd9026275f1c9c94e3d1e59b3301833fba8004c9da34d1eff12f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"overflow at divide\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cd070dd71146298b61a12aec695a33369db718b8b6d024c7f7e11725cdf3fc14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"add overflow detected\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "272:2193:56:-:0;;;609:74;;;;;;;;;-1:-1:-1;629:49:56;648:29;:20;272:2193;;;;;;;;;-1:-1:-1;272:2193:56;;;1301:21:58;;;;;;;;889:25;1301:21;;;1230:97;648:20:56;1804:7:58;;1724:92;648:29:56;272:2193;;;;;;;;;-1:-1:-1;272:2193:56;;;1630:11:58;;;;;;;;;;;1634:15:56;:54;1565:128;629:49;272:2193;;;;;;",
  "deployedSourceMap": "272:2193:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:150;;;;;;:::i;:::-;;:::i;:::-;;;345:25:85;;;333:2;318:18;1968:150:56;;;;;;;;1565:128;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;1630:11:58;;;;;;;;;;;1634:15:56;:54;1565:128;;;1476:85;1522:7;1544:12;1476:85;;1341:131;;;;;;:::i;:::-;;:::i;:::-;;;1057:14:85;;1050:22;1032:41;;1020:2;1005:18;1341:131:56;892:187:85;561:43:56;;;;;;:::i;:::-;;;;;;;;;;;;;;380:35;;413:2;380:35;;;;;1447:4:85;1435:17;;;1417:36;;1405:2;1390:18;380:35:56;1275:184:85;419:27:56;;;;;;770:247;;;;;;:::i;:::-;;:::i;1021:193::-;;;;;;:::i;:::-;;:::i;1697:115::-;;;;;;:::i;:::-;;:::i;1218:119::-;;;;;;:::i;:::-;;:::i;1816:148::-;;;;;;:::i;:::-;;:::i;450:43::-;;;;;;;687:79;;;;;;:::i;:::-;741:12;:20;687:79;1968:150;2026:7;2048:65;:53;2073:27;2094:5;2073:20;:27::i;:::-;2048:24;;;;;;;;;:15;:24;;;;;:53::i;:::-;:63;:65::i;:::-;2041:72;1968:150;-1:-1:-1;;1968:150:56:o;1341:131::-;1422:4;1441:26;1451:4;1457:2;1461:5;1441:9;:26::i;:::-;1434:33;;1341:131;;;;;;:::o;770:247::-;829:4;-1:-1:-1;;;;;849:16:56;;841:52;;;;-1:-1:-1;;;841:52:56;;1925:2:85;841:52:56;;;1907:21:85;1964:2;1944:18;;;1937:30;2003:25;1983:18;;;1976:53;2046:18;;841:52:56;;;;;;;;;914:37;931:19;944:5;931:12;:19::i;:::-;-1:-1:-1;;;;;914:12:56;;;;;;:8;:12;;;;;;;:16;:37::i;:::-;-1:-1:-1;;;;;899:12:56;;;;;;:8;:12;;;;;:52;;;;972:12;:23;;989:5;972:16;:23::i;:::-;957:12;:38;-1:-1:-1;1008:4:56;770:247;;;;:::o;1021:193::-;1068:4;1103:45;1128:19;1141:5;1128:12;:19::i;:::-;1112:10;1103:20;;;;:8;:20;;;;;;;:24;:45::i;:::-;1089:10;1080:20;;;;:8;:20;;;;;:68;;;;1169:12;:23;;1186:5;1169:16;:23::i;:::-;1154:12;:38;-1:-1:-1;1205:4:56;;1021:193;-1:-1:-1;1021:193:56:o;1697:115::-;-1:-1:-1;;;;;1789:17:56;;1754:7;1789:17;;;:8;:17;;;;;;1776:31;;:12;:31::i;1218:119::-;1281:4;1300:32;1310:10;1322:2;1326:5;1300:9;:32::i;1816:148::-;1896:51;;;;;;;;;1931:15;1896:51;;;1874:7;;1896:63;;:51;;:27;1917:5;1896:20;:27::i;:::-;:34;;:51::i;2597:203:58:-;-1:-1:-1;;;;;;;;;;;;2281:54:58;2680:1;:18;;2672:85;;;;-1:-1:-1;;;2672:85:58;;2277:2:85;2672:85:58;;;2259:21:85;2316:2;2296:18;;;2289:30;2355:34;2335:18;;;2328:62;-1:-1:-1;;;2406:18:85;;;2399:52;2468:19;;2672:85:58;2075:418:85;2672:85:58;2770:25;;;;;;;;889;2779:1;:15;;;;:::i;:::-;2770:25;;2763:32;2597:203;-1:-1:-1;;2597:203:58:o;6254:1636::-;-1:-1:-1;;;;;;;;;;;;6360:7:58;;:12;;:28;;-1:-1:-1;6376:7:58;;:12;6360:28;6356:52;;;-1:-1:-1;6397:11:58;;;;;;;;;-1:-1:-1;6397:11:58;;6390:18;;6356:52;6418:7;;-1:-1:-1;;6418:22:58;6414:36;;-1:-1:-1;6449:1:58;6442:8;;6414:36;6460:7;;-1:-1:-1;;6460:22:58;6456:36;;-1:-1:-1;6491:1:58;6484:8;;6456:36;6581:10;889:25;6594:10;6602:1;6594:7;:10::i;:::-;:16;:30;;;;:::i;:::-;6581:43;;6630:10;6643:13;6654:1;6643:10;:13::i;:::-;:19;;-1:-1:-1;6643:19:58;889:25;6681:10;6689:1;6681:7;:10::i;:::-;:16;:30;;;;:::i;:::-;6668:43;;6717:10;6730:13;6741:1;6730:10;:13::i;:::-;:19;;-1:-1:-1;6730:19:58;6848:7;6853:2;6848;:7;:::i;:::-;6833:22;-1:-1:-1;6865:7:58;;6861:63;;6895:2;6882:9;6889:2;6882:4;:9;:::i;:::-;:15;6874:50;;;;-1:-1:-1;;;6874:50:58;;3227:2:85;6874:50:58;;;3209:21:85;3266:2;3246:18;;;3239:30;-1:-1:-1;;;3285:18:85;;;3278:52;3347:18;;6874:50:58;3025:346:85;6874:50:58;7023:18;7044;889:25;7044:4;:18;:::i;:::-;7023:39;-1:-1:-1;7072:9:58;;7068:91;;889:25;7091:17;7104:4;7091:10;:17;:::i;:::-;:32;7083:76;;;;-1:-1:-1;;;7083:76:58;;3578:2:85;7083:76:58;;;3560:21:85;3617:2;3597:18;;;3590:30;3656:33;3636:18;;;3629:61;3707:18;;7083:76:58;3376:355:85;7083:76:58;7172:10;-1:-1:-1;7172:10:58;7189:12;7204:7;7209:2;7204;:7;:::i;:::-;7189:22;-1:-1:-1;7221:7:58;;7217:63;;7251:2;7238:9;7245:2;7238:4;:9;:::i;:::-;:15;7230:50;;;;-1:-1:-1;;;7230:50:58;;3938:2:85;7230:50:58;;;3920:21:85;3977:2;3957:18;;;3950:30;-1:-1:-1;;;3996:18:85;;;3989:52;4058:18;;7230:50:58;3736:346:85;7230:50:58;7287:12;7302:7;7307:2;7302;:7;:::i;:::-;7287:22;-1:-1:-1;7319:7:58;;7315:63;;7349:2;7336:9;7343:2;7336:4;:9;:::i;:::-;:15;7328:50;;;;-1:-1:-1;;;7328:50:58;;4289:2:85;7328:50:58;;;4271:21:85;4328:2;4308:18;;;4301:30;-1:-1:-1;;;4347:18:85;;;4340:52;4409:18;;7328:50:58;4087:346:85;7328:50:58;7390:19;2024:13;7390:2;:19;:::i;:::-;7385:24;-1:-1:-1;7420:19:58;2024:13;7420:2;:19;:::i;:::-;7415:24;-1:-1:-1;7445:12:58;7460:7;7415:24;7460:2;:7;:::i;:::-;7445:22;-1:-1:-1;7477:7:58;;7473:63;;7507:2;7494:9;7501:2;7494:4;:9;:::i;:::-;:15;7486:50;;;;-1:-1:-1;;;7486:50:58;;4640:2:85;7486:50:58;;;4622:21:85;4679:2;4659:18;;;4652:30;-1:-1:-1;;;4698:18:85;;;4691:52;4760:18;;7486:50:58;4438:346:85;7486:50:58;7645:14;;;;;;;;;;;;7686;;;;;;;;;;;7645;7674:27;;7645:14;;7674:3;:27::i;:::-;7665:36;;7743:27;7747:6;7755:14;;;;;;;;7764:4;7755:14;;;7743:3;:27::i;:::-;7734:36;;7812:27;7816:6;7824:14;;;;;;;;7833:4;7824:14;;;7812:3;:27::i;:::-;7803:36;6254:1636;-1:-1:-1;;;;;;;;;;;;;6254:1636:58:o;2959:109::-;3042:7;;3020;;3042:21;;889:25;;3042:21;:::i;2122:341:56:-;2200:4;2212:20;2235:15;2245:4;2235:9;:15::i;:::-;2212:38;;2275:5;2260:12;:20;2256:53;;;2297:5;2290:12;;;;;2256:53;2314:13;2330:19;2343:5;2330:12;:19::i;:::-;-1:-1:-1;;;;;2372:14:56;;;;;;:8;:14;;;;;;2314:35;;-1:-1:-1;2372:25:56;;2314:35;2372:18;:25::i;:::-;-1:-1:-1;;;;;2355:14:56;;;;;;;:8;:14;;;;;;:42;;;;2418:12;;;;;;;:23;;2435:5;2418:16;:23::i;:::-;-1:-1:-1;;;;;2403:12:56;;;;;;:8;:12;;;;;:38;-1:-1:-1;2454:4:56;;-1:-1:-1;;2122:341:56;;;;;:::o;2755:96:5:-;2813:7;2839:5;2843:1;2839;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;9228:283:58:-;-1:-1:-1;;;;;;;;;;;;9336:7:58;;;:12;9328:42;;;;-1:-1:-1;;;9328:42:58;;5254:2:85;9328:42:58;;;5236:21:85;5293:2;5273:18;;;5266:30;-1:-1:-1;;;5312:18:85;;;5305:47;5369:18;;9328:42:58;5052:341:85;9328:42:58;9388:7;;9376:9;;9388:21;;889:25;;9388:21;:::i;:::-;9442:7;;9376:33;;-1:-1:-1;9423:15:58;889:25;9376:33;9423:15;:::i;:::-;:26;9415:57;;;;-1:-1:-1;;;9415:57:58;;5600:2:85;9415:57:58;;;5582:21:85;5639:2;5619:18;;;5612:30;-1:-1:-1;;;5658:18:85;;;5651:48;5716:18;;9415:57:58;5398:342:85;9415:57:58;9485:21;;;;;;;;9498:1;:7;;;9494:1;:11;;;;:::i;:::-;9485:21;;9478:28;9228:283;-1:-1:-1;;;;9228:283:58:o;4116:159::-;-1:-1:-1;;;;;;;;;;;;4205:47:58;;;;;;;;889:25;;4215:1;:7;;;:21;;;;:::i;:::-;4214:37;;;;:::i;4562:172::-;-1:-1:-1;;;;;;;;;;;;4654:57:58;;;;;;;;889:25;;4674:1;:7;;;:21;;;;:::i;:::-;4673:37;;;;:::i;:::-;4663:7;;:47;;;;:::i;5106:207::-;-1:-1:-1;;;;;;;;;;;;5225:7:58;;5215;;5203:9;;5215:17;;;:::i;:::-;5251:7;;5203:29;;-1:-1:-1;5246:12:58;;;5238:46;;;;-1:-1:-1;;;5238:46:58;;5947:2:85;5238:46:58;;;5929:21:85;5986:2;5966:18;;;5959:30;-1:-1:-1;;;6005:18:85;;;5998:51;6066:18;;5238:46:58;5745:345:85;5238:46:58;5297:11;;;;;;;;;;;;;5106:207;-1:-1:-1;;;5106:207:58:o;14:180:85:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:85;;14:180;-1:-1:-1;14:180:85:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:85;;488:42;;478:70;;544:1;541;534:12;478:70;381:173;;;:::o;559:328::-;636:6;644;652;705:2;693:9;684:7;680:23;676:32;673:52;;;721:1;718;711:12;673:52;744:29;763:9;744:29;:::i;:::-;734:39;;792:38;826:2;815:9;811:18;792:38;:::i;:::-;782:48;;877:2;866:9;862:18;849:32;839:42;;559:328;;;;;:::o;1084:186::-;1143:6;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1235:29;1254:9;1235:29;:::i;1464:254::-;1532:6;1540;1593:2;1581:9;1572:7;1568:23;1564:32;1561:52;;;1609:1;1606;1599:12;1561:52;1632:29;1651:9;1632:29;:::i;:::-;1622:39;1708:2;1693:18;;;;1680:32;;-1:-1:-1;;;1464:254:85:o;2498:127::-;2559:10;2554:3;2550:20;2547:1;2540:31;2590:4;2587:1;2580:15;2614:4;2611:1;2604:15;2630:168;2703:9;;;2734;;2751:15;;;2745:22;;2731:37;2721:71;;2772:18;;:::i;2803:217::-;2843:1;2869;2859:132;;2913:10;2908:3;2904:20;2901:1;2894:31;2948:4;2945:1;2938:15;2976:4;2973:1;2966:15;2859:132;-1:-1:-1;3005:9:85;;2803:217::o;4789:125::-;4854:9;;;4875:10;;;4872:36;;;4888:18;;:::i;4919:128::-;4986:9;;;5007:11;;;5004:37;;;5021:18;;:::i",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.8.0 <0.9.0;\n// solhint-disable no-unused-vars\n\nimport \"@openzeppelin/contracts8/utils/math/SafeMath.sol\";\n\nimport \"../../../contracts/common/FixidityLib.sol\";\n\n/**\n * @title A mock StableToken for testing.\n */\ncontract MockStableToken08 {\n  using FixidityLib for FixidityLib.Fraction;\n  using SafeMath for uint256;\n\n  uint8 public constant decimals = 18;\n  uint256 public _totalSupply;\n  FixidityLib.Fraction public inflationFactor;\n\n  // Stored as units. Value can be found using unitsToValue().\n  mapping(address => uint256) public balances;\n\n  constructor() {\n    setInflationFactor(FixidityLib.fixed1().unwrap());\n  }\n\n  function setTotalSupply(uint256 value) external {\n    _totalSupply = value;\n  }\n\n  function mint(address to, uint256 value) external returns (bool) {\n    require(to != address(0), \"0 is a reserved address\");\n    balances[to] = balances[to].add(valueToUnits(value));\n    _totalSupply = _totalSupply.add(value);\n    return true;\n  }\n\n  function burn(uint256 value) external returns (bool) {\n    balances[msg.sender] = balances[msg.sender].sub(valueToUnits(value));\n    _totalSupply = _totalSupply.sub(value);\n    return true;\n  }\n\n  function transfer(address to, uint256 value) external returns (bool) {\n    return _transfer(msg.sender, to, value);\n  }\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool) {\n    return _transfer(from, to, value);\n  }\n\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  function setInflationFactor(uint256 newInflationFactor) public {\n    inflationFactor = FixidityLib.wrap(newInflationFactor);\n  }\n\n  function balanceOf(address account) public view returns (uint256) {\n    return unitsToValue(balances[account]);\n  }\n\n  function unitsToValue(uint256 units) public view returns (uint256) {\n    return FixidityLib.newFixed(units).divide(inflationFactor).fromFixed();\n  }\n\n  function valueToUnits(uint256 value) public view returns (uint256) {\n    return inflationFactor.multiply(FixidityLib.newFixed(value)).fromFixed();\n  }\n\n  function _transfer(address from, address to, uint256 value) internal returns (bool) {\n    uint256 balanceValue = balanceOf(from);\n    if (balanceValue < value) {\n      return false;\n    }\n    uint256 units = valueToUnits(value);\n    balances[from] = balances[from].sub(units);\n    balances[to] = balances[to].add(units);\n    return true;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/stability/test/MockStableToken.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/stability/test/MockStableToken.sol",
    "exportedSymbols": {
      "FixidityLib": [
        16955
      ],
      "MockStableToken08": [
        16272
      ],
      "SafeMath": [
        1471
      ]
    },
    "id": 16273,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15992,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:31:56"
      },
      {
        "absolutePath": "@openzeppelin/contracts8/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts8/utils/math/SafeMath.sol",
        "id": 15993,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16273,
        "sourceUnit": 1472,
        "src": "109:58:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/FixidityLib.sol",
        "file": "../../../contracts/common/FixidityLib.sol",
        "id": 15994,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16273,
        "sourceUnit": 16956,
        "src": "169:51:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockStableToken08",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15995,
          "nodeType": "StructuredDocumentation",
          "src": "222:49:56",
          "text": " @title A mock StableToken for testing."
        },
        "fullyImplemented": true,
        "id": 16272,
        "linearizedBaseContracts": [
          16272
        ],
        "name": "MockStableToken08",
        "nameLocation": "281:17:56",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 15999,
            "libraryName": {
              "id": 15996,
              "name": "FixidityLib",
              "nameLocations": [
                "309:11:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16955,
              "src": "309:11:56"
            },
            "nodeType": "UsingForDirective",
            "src": "303:43:56",
            "typeName": {
              "id": 15998,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15997,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "325:11:56",
                  "337:8:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16296,
                "src": "325:20:56"
              },
              "referencedDeclaration": 16296,
              "src": "325:20:56",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$16296_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "global": false,
            "id": 16002,
            "libraryName": {
              "id": 16000,
              "name": "SafeMath",
              "nameLocations": [
                "355:8:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1471,
              "src": "355:8:56"
            },
            "nodeType": "UsingForDirective",
            "src": "349:27:56",
            "typeName": {
              "id": 16001,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "368:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 16005,
            "mutability": "constant",
            "name": "decimals",
            "nameLocation": "402:8:56",
            "nodeType": "VariableDeclaration",
            "scope": 16272,
            "src": "380:35:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 16003,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "380:5:56",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 16004,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:2:56",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3eaaf86b",
            "id": 16007,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "434:12:56",
            "nodeType": "VariableDeclaration",
            "scope": 16272,
            "src": "419:27:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16006,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e4a063c3",
            "id": 16010,
            "mutability": "mutable",
            "name": "inflationFactor",
            "nameLocation": "478:15:56",
            "nodeType": "VariableDeclaration",
            "scope": 16272,
            "src": "450:43:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$16296_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "id": 16009,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16008,
                "name": "FixidityLib.Fraction",
                "nameLocations": [
                  "450:11:56",
                  "462:8:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16296,
                "src": "450:20:56"
              },
              "referencedDeclaration": 16296,
              "src": "450:20:56",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$16296_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 16014,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "596:8:56",
            "nodeType": "VariableDeclaration",
            "scope": 16272,
            "src": "561:43:56",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16013,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 16011,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "569:7:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "561:27:56",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 16012,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "580:7:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 16025,
              "nodeType": "Block",
              "src": "623:60:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 16018,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16955,
                                "src": "648:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$16955_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 16019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "660:6:56",
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16320,
                              "src": "648:18:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$16296_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 16020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "648:20:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$16296_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 16021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "669:6:56",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16347,
                          "src": "648:27:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$16296_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Fraction_$16296_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                          }
                        },
                        "id": 16022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "648:29:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16017,
                      "name": "setInflationFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16166,
                      "src": "629:18:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 16023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:49:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16024,
                  "nodeType": "ExpressionStatement",
                  "src": "629:49:56"
                }
              ]
            },
            "id": 16026,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:2:56"
            },
            "returnParameters": {
              "id": 16016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:0:56"
            },
            "scope": 16272,
            "src": "609:74:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16035,
              "nodeType": "Block",
              "src": "735:31:56",
              "statements": [
                {
                  "expression": {
                    "id": 16033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16031,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16007,
                      "src": "741:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 16032,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16028,
                      "src": "756:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "741:20:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16034,
                  "nodeType": "ExpressionStatement",
                  "src": "741:20:56"
                }
              ]
            },
            "functionSelector": "f7ea7a3d",
            "id": 16036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalSupply",
            "nameLocation": "696:14:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16028,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "719:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16036,
                  "src": "711:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:15:56"
            },
            "returnParameters": {
              "id": 16030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:0:56"
            },
            "scope": 16272,
            "src": "687:79:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16077,
              "nodeType": "Block",
              "src": "835:182:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 16046,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16038,
                          "src": "849:2:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 16049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "863:1:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "855:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16047,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "855:7:56",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 16050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "855:10:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "849:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "3020697320612072657365727665642061646472657373",
                        "id": 16052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "867:25:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_878e7ba3f3409c291a727d099ef15162972b4804c774d0c483b902d05a3f971a",
                          "typeString": "literal_string \"0 is a reserved address\""
                        },
                        "value": "0 is a reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_878e7ba3f3409c291a727d099ef15162972b4804c774d0c483b902d05a3f971a",
                          "typeString": "literal_string \"0 is a reserved address\""
                        }
                      ],
                      "id": 16045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "841:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:52:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16054,
                  "nodeType": "ExpressionStatement",
                  "src": "841:52:56"
                },
                {
                  "expression": {
                    "id": 16066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16055,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16014,
                        "src": "899:8:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16057,
                      "indexExpression": {
                        "id": 16056,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16038,
                        "src": "908:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "899:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 16063,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16040,
                              "src": "944:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16062,
                            "name": "valueToUnits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16216,
                            "src": "931:12:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 16064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:19:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 16058,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16014,
                            "src": "914:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 16060,
                          "indexExpression": {
                            "id": 16059,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16038,
                            "src": "923:2:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "914:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "927:3:56",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1335,
                        "src": "914:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "914:37:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "899:52:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16067,
                  "nodeType": "ExpressionStatement",
                  "src": "899:52:56"
                },
                {
                  "expression": {
                    "id": 16073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16068,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16007,
                      "src": "957:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16071,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16040,
                          "src": "989:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 16069,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16007,
                          "src": "972:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "985:3:56",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1335,
                        "src": "972:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:23:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "957:38:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16074,
                  "nodeType": "ExpressionStatement",
                  "src": "957:38:56"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 16075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1008:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16044,
                  "id": 16076,
                  "nodeType": "Return",
                  "src": "1001:11:56"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 16078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "779:4:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16038,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "792:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16078,
                  "src": "784:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16040,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "804:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16078,
                  "src": "796:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:27:56"
            },
            "returnParameters": {
              "id": 16044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16078,
                  "src": "829:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16042,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "828:6:56"
            },
            "scope": 16272,
            "src": "770:247:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16109,
              "nodeType": "Block",
              "src": "1074:140:56",
              "statements": [
                {
                  "expression": {
                    "id": 16098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16085,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16014,
                        "src": "1080:8:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16088,
                      "indexExpression": {
                        "expression": {
                          "id": 16086,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1089:3:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1093:6:56",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1089:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1080:20:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 16095,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16080,
                              "src": "1141:5:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 16094,
                            "name": "valueToUnits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16216,
                            "src": "1128:12:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 16096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1128:19:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 16089,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16014,
                            "src": "1103:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 16092,
                          "indexExpression": {
                            "expression": {
                              "id": 16090,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1112:3:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 16091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1116:6:56",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1112:10:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1103:20:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1124:3:56",
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1350,
                        "src": "1103:24:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1103:45:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1080:68:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16099,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:68:56"
                },
                {
                  "expression": {
                    "id": 16105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16100,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16007,
                      "src": "1154:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16103,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16080,
                          "src": "1186:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 16101,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16007,
                          "src": "1169:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1182:3:56",
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1350,
                        "src": "1169:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1169:23:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1154:38:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16106,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:38:56"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 16107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1205:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16084,
                  "id": 16108,
                  "nodeType": "Return",
                  "src": "1198:11:56"
                }
              ]
            },
            "functionSelector": "42966c68",
            "id": 16110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1030:4:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16080,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1043:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16110,
                  "src": "1035:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:15:56"
            },
            "returnParameters": {
              "id": 16084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16110,
                  "src": "1068:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16082,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1067:6:56"
            },
            "scope": 16272,
            "src": "1021:193:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16126,
              "nodeType": "Block",
              "src": "1287:50:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1310:3:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1314:6:56",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1310:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16122,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16112,
                        "src": "1322:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16123,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16114,
                        "src": "1326:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16119,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16271,
                      "src": "1300:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 16124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1300:32:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16118,
                  "id": 16125,
                  "nodeType": "Return",
                  "src": "1293:39:56"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 16127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1227:8:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16112,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1244:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16127,
                  "src": "1236:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16114,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1256:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16127,
                  "src": "1248:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1235:27:56"
            },
            "returnParameters": {
              "id": 16118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16127,
                  "src": "1281:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1280:6:56"
            },
            "scope": 16272,
            "src": "1218:119:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16144,
              "nodeType": "Block",
              "src": "1428:44:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16139,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16129,
                        "src": "1451:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16140,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16131,
                        "src": "1457:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16141,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16133,
                        "src": "1461:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16138,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16271,
                      "src": "1441:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 16142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16137,
                  "id": 16143,
                  "nodeType": "Return",
                  "src": "1434:33:56"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 16145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1350:12:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16129,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1371:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16145,
                  "src": "1363:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16131,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1385:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16145,
                  "src": "1377:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16133,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1397:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16145,
                  "src": "1389:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1362:41:56"
            },
            "returnParameters": {
              "id": 16137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16145,
                  "src": "1422:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1421:6:56"
            },
            "scope": 16272,
            "src": "1341:131:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16152,
              "nodeType": "Block",
              "src": "1531:30:56",
              "statements": [
                {
                  "expression": {
                    "id": 16150,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16007,
                    "src": "1544:12:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16149,
                  "id": 16151,
                  "nodeType": "Return",
                  "src": "1537:19:56"
                }
              ]
            },
            "functionSelector": "18160ddd",
            "id": 16153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1485:11:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1496:2:56"
            },
            "returnParameters": {
              "id": 16149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16153,
                  "src": "1522:7:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:9:56"
            },
            "scope": 16272,
            "src": "1476:85:56",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16165,
              "nodeType": "Block",
              "src": "1628:65:56",
              "statements": [
                {
                  "expression": {
                    "id": 16163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16158,
                      "name": "inflationFactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16010,
                      "src": "1634:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$16296_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16161,
                          "name": "newInflationFactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16155,
                          "src": "1669:18:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 16159,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16955,
                          "src": "1652:11:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$16955_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 16160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1664:4:56",
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16334,
                        "src": "1652:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$16296_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 16162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1652:36:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$16296_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "1634:54:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$16296_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 16164,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:54:56"
                }
              ]
            },
            "functionSelector": "15ccf598",
            "id": 16166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInflationFactor",
            "nameLocation": "1574:18:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16155,
                  "mutability": "mutable",
                  "name": "newInflationFactor",
                  "nameLocation": "1601:18:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16166,
                  "src": "1593:26:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:28:56"
            },
            "returnParameters": {
              "id": 16157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1628:0:56"
            },
            "scope": 16272,
            "src": "1565:128:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16179,
              "nodeType": "Block",
              "src": "1763:49:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 16174,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16014,
                          "src": "1789:8:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 16176,
                        "indexExpression": {
                          "id": 16175,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16168,
                          "src": "1798:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1789:17:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16173,
                      "name": "unitsToValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16198,
                      "src": "1776:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 16177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:31:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16172,
                  "id": 16178,
                  "nodeType": "Return",
                  "src": "1769:38:56"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 16180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1706:9:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16168,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1724:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16180,
                  "src": "1716:15:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1715:17:56"
            },
            "returnParameters": {
              "id": 16172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16180,
                  "src": "1754:7:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:9:56"
            },
            "scope": 16272,
            "src": "1697:115:56",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16197,
              "nodeType": "Block",
              "src": "1883:81:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 16192,
                            "name": "inflationFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16010,
                            "src": "1931:15:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$16296_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$16296_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 16189,
                                "name": "units",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16182,
                                "src": "1917:5:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 16187,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16955,
                                "src": "1896:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$16955_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 16188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1908:8:56",
                              "memberName": "newFixed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16389,
                              "src": "1896:20:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$16296_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 16190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1896:27:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$16296_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 16191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1924:6:56",
                          "memberName": "divide",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16843,
                          "src": "1896:34:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$16296_memory_ptr_$_t_struct$_Fraction_$16296_memory_ptr_$returns$_t_struct$_Fraction_$16296_memory_ptr_$attached_to$_t_struct$_Fraction_$16296_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 16193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1896:51:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$16296_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 16194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1948:9:56",
                      "memberName": "fromFixed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16404,
                      "src": "1896:61:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$16296_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Fraction_$16296_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 16195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:63:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16186,
                  "id": 16196,
                  "nodeType": "Return",
                  "src": "1889:70:56"
                }
              ]
            },
            "functionSelector": "af31f587",
            "id": 16198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unitsToValue",
            "nameLocation": "1825:12:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16182,
                  "mutability": "mutable",
                  "name": "units",
                  "nameLocation": "1846:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16198,
                  "src": "1838:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1838:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1837:15:56"
            },
            "returnParameters": {
              "id": 16186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16198,
                  "src": "1874:7:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16184,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1873:9:56"
            },
            "scope": 16272,
            "src": "1816:148:56",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16215,
              "nodeType": "Block",
              "src": "2035:83:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 16209,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16200,
                                "src": "2094:5:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 16207,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16955,
                                "src": "2073:11:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$16955_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 16208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2085:8:56",
                              "memberName": "newFixed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16389,
                              "src": "2073:20:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$16296_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 16210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2073:27:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$16296_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$16296_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "id": 16205,
                            "name": "inflationFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16010,
                            "src": "2048:15:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$16296_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          },
                          "id": 16206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2064:8:56",
                          "memberName": "multiply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16768,
                          "src": "2048:24:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$16296_memory_ptr_$_t_struct$_Fraction_$16296_memory_ptr_$returns$_t_struct$_Fraction_$16296_memory_ptr_$attached_to$_t_struct$_Fraction_$16296_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 16211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2048:53:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$16296_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 16212,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2102:9:56",
                      "memberName": "fromFixed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16404,
                      "src": "2048:63:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$16296_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Fraction_$16296_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 16213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:65:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16204,
                  "id": 16214,
                  "nodeType": "Return",
                  "src": "2041:72:56"
                }
              ]
            },
            "functionSelector": "12c6c099",
            "id": 16216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "valueToUnits",
            "nameLocation": "1977:12:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16200,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1998:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16216,
                  "src": "1990:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:15:56"
            },
            "returnParameters": {
              "id": 16204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16216,
                  "src": "2026:7:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:9:56"
            },
            "scope": 16272,
            "src": "1968:150:56",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16270,
              "nodeType": "Block",
              "src": "2206:257:56",
              "statements": [
                {
                  "assignments": [
                    16228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16228,
                      "mutability": "mutable",
                      "name": "balanceValue",
                      "nameLocation": "2220:12:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 16270,
                      "src": "2212:20:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16227,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2212:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16232,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16230,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16218,
                        "src": "2245:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16229,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16180,
                      "src": "2235:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 16231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:15:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2212:38:56"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16233,
                      "name": "balanceValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16228,
                      "src": "2260:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 16234,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16222,
                      "src": "2275:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2260:20:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16239,
                  "nodeType": "IfStatement",
                  "src": "2256:53:56",
                  "trueBody": {
                    "id": 16238,
                    "nodeType": "Block",
                    "src": "2282:27:56",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 16236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2297:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 16226,
                        "id": 16237,
                        "nodeType": "Return",
                        "src": "2290:12:56"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    16241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16241,
                      "mutability": "mutable",
                      "name": "units",
                      "nameLocation": "2322:5:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 16270,
                      "src": "2314:13:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16240,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2314:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16245,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16243,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16222,
                        "src": "2343:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16242,
                      "name": "valueToUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16216,
                      "src": "2330:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 16244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2330:19:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2314:35:56"
                },
                {
                  "expression": {
                    "id": 16255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16246,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16014,
                        "src": "2355:8:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16248,
                      "indexExpression": {
                        "id": 16247,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16218,
                        "src": "2364:4:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2355:14:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16253,
                          "name": "units",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16241,
                          "src": "2391:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 16249,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16014,
                            "src": "2372:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 16251,
                          "indexExpression": {
                            "id": 16250,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16218,
                            "src": "2381:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2372:14:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2387:3:56",
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1350,
                        "src": "2372:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2372:25:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2355:42:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16256,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:42:56"
                },
                {
                  "expression": {
                    "id": 16266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16257,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16014,
                        "src": "2403:8:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 16259,
                      "indexExpression": {
                        "id": 16258,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16220,
                        "src": "2412:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2403:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16264,
                          "name": "units",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16241,
                          "src": "2435:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 16260,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16014,
                            "src": "2418:8:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 16262,
                          "indexExpression": {
                            "id": 16261,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16220,
                            "src": "2427:2:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2418:12:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2431:3:56",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1335,
                        "src": "2418:16:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2418:23:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2403:38:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16267,
                  "nodeType": "ExpressionStatement",
                  "src": "2403:38:56"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 16268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2454:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 16226,
                  "id": 16269,
                  "nodeType": "Return",
                  "src": "2447:11:56"
                }
              ]
            },
            "id": 16271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "2131:9:56",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16218,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2149:4:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16271,
                  "src": "2141:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16220,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2163:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16271,
                  "src": "2155:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16222,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2175:5:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 16271,
                  "src": "2167:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2140:41:56"
            },
            "returnParameters": {
              "id": 16226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16271,
                  "src": "2200:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2199:6:56"
            },
            "scope": 16272,
            "src": "2122:341:56",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 16273,
        "src": "272:2193:56",
        "usedErrors": []
      }
    ],
    "src": "42:2424:56"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.225Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "A mock StableToken for testing.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}