{
  "contractName": "UsingRegistryV2NoMento",
  "abi": [
    {
      "inputs": [],
      "name": "registryContract",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"registryContract\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/common/UsingRegistryV2NoMento.sol\":\"UsingRegistryV2NoMento\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/UsingRegistryV2NoMento.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.0 <0.8.20;\\n\\n// Note: This is not an exact copy of UsingRegistry or UsingRegistryV2 in the contract's folder\\n// because Mento's interfaces still don't support Solidity 0.8\\n\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts8/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IScoreReader.sol\\\";\\n\\nimport \\\"../../contracts/common/interfaces/IAccounts.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IEpochManager.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IFreezer.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IRegistry.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloUnreleasedTreasury.sol\\\";\\n\\nimport \\\"../../contracts/governance/interfaces/IElection.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../../contracts/governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../../contracts/identity/interfaces/IRandom.sol\\\";\\nimport \\\"../../contracts/identity/interfaces/IAttestations.sol\\\";\\nimport \\\"../../contracts/identity/interfaces/IFederatedAttestations.sol\\\";\\n\\n// import \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\n// import \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\n// import \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../../contracts/stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistryV2NoMento {\\n  address internal constant registryAddress = 0x000000000000000000000000000000000000ce10;\\n  IRegistry public constant registryContract = IRegistry(registryAddress);\\n\\n  bytes32 internal constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 internal constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 internal constant DOWNTIME_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 internal constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 internal constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 internal constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 internal constant EXCHANGE_EURO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"ExchangeEUR\\\"));\\n  bytes32 internal constant EXCHANGE_REAL_REGISTRY_ID = keccak256(abi.encodePacked(\\\"ExchangeBRL\\\"));\\n\\n  bytes32 internal constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 internal constant FEDERATED_ATTESTATIONS_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FederatedAttestations\\\"));\\n  bytes32 internal constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 internal constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 internal constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 internal constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 internal constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 internal constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 internal constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 internal constant SORTED_ORACLES_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 internal constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 internal constant STABLE_EURO_TOKEN_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"StableTokenEUR\\\"));\\n  bytes32 internal constant STABLE_REAL_TOKEN_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"StableTokenBRL\\\"));\\n  bytes32 internal constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n  bytes32 internal constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n\\n  bytes32 internal constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 internal constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 internal constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 internal constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 internal constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  bytes32 internal constant SCORE_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"ScoreManager\\\"));\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(\\n      registryContract.getAddressForOrDie(identifierHash) == msg.sender,\\n      \\\"only registered contract\\\"\\n    );\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registryContract.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registryContract.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registryContract.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registryContract.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  // function getExchange() internal view returns (IExchange) {\\n  //   return IExchange(registryContract.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  // }\\n\\n  // function getExchangeDollar() internal view returns (IExchange) {\\n  //   return getExchange();\\n  // }\\n\\n  // function getExchangeEuro() internal view returns (IExchange) {\\n  //   return IExchange(registryContract.getAddressForOrDie(EXCHANGE_EURO_REGISTRY_ID));\\n  // }\\n\\n  // function getExchangeREAL() internal view returns (IExchange) {\\n  //   return IExchange(registryContract.getAddressForOrDie(EXCHANGE_REAL_REGISTRY_ID));\\n  // }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return\\n      IFeeCurrencyWhitelist(\\n        registryContract.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID)\\n      );\\n  }\\n\\n  function getFederatedAttestations() internal view returns (IFederatedAttestations) {\\n    return\\n      IFederatedAttestations(\\n        registryContract.getAddressForOrDie(FEDERATED_ATTESTATIONS_REGISTRY_ID)\\n      );\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registryContract.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registryContract.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registryContract.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registryContract.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registryContract.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registryContract.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registryContract.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  // function getReserve() internal view returns (IReserve) {\\n  //   return IReserve(registryContract.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  // }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registryContract.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  // function getStableToken() internal view returns (IStableToken) {\\n  //   return IStableToken(registryContract.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  // }\\n\\n  // function getStableDollarToken() internal view returns (IStableToken) {\\n  //   return getStableToken();\\n  // }\\n\\n  // function getStableEuroToken() internal view returns (IStableToken) {\\n  //   return IStableToken(registryContract.getAddressForOrDie(STABLE_EURO_TOKEN_REGISTRY_ID));\\n  // }\\n\\n  // function getStableRealToken() internal view returns (IStableToken) {\\n  //   return IStableToken(registryContract.getAddressForOrDie(STABLE_REAL_TOKEN_REGISTRY_ID));\\n  // }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registryContract.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(\\n        registryContract.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID)\\n      );\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registryContract.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registryContract.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n\\n  function getScoreReader() internal view returns (IScoreReader) {\\n    return IScoreReader(registryContract.getAddressForOrDie(SCORE_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x480af9ba0d3b55674832f04cf5ff9e1636cd4de0bf9b0a6c80259443ae007d01\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts-0.8/common/interfaces/IScoreReader.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\ninterface IScoreReader {\\n  function getValidatorScore(address validator) external view returns (uint256);\\n  function getGroupScore(address validator) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xa9276e744a343a3c1eaf68253b7f5ff2325897e18fae20a3265a257a2d0d1036\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(\\n    bytes32[] calldata\\n  ) external view returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(\\n    bytes32,\\n    address,\\n    address\\n  ) external view returns (uint8, uint32, address);\\n  function getCompletableAttestations(\\n    bytes32,\\n    address\\n  ) external view returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(\\n    bytes32,\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32\\n  ) external view returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n}\\n\",\"keccak256\":\"0x6afd5f303e153798b15448e0206ed5e645b6e2f2e46762cb17c5b665e256cdb2\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/identity/interfaces/IFederatedAttestations.sol\":{\"content\":\"pragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFederatedAttestations {\\n  function registerAttestationAsIssuer(\\n    bytes32 identifier,\\n    address account,\\n    uint64 issuedOn\\n  ) external;\\n  function registerAttestation(\\n    bytes32 identifier,\\n    address issuer,\\n    address account,\\n    address signer,\\n    uint64 issuedOn,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external;\\n  function revokeAttestation(bytes32 identifier, address issuer, address account) external;\\n  function batchRevokeAttestations(\\n    address issuer,\\n    bytes32[] calldata identifiers,\\n    address[] calldata accounts\\n  ) external;\\n\\n  // view functions\\n  function lookupAttestations(\\n    bytes32 identifier,\\n    address[] calldata trustedIssuers\\n  )\\n    external\\n    view\\n    returns (\\n      uint256[] memory,\\n      address[] memory,\\n      address[] memory,\\n      uint64[] memory,\\n      uint64[] memory\\n    );\\n  function lookupIdentifiers(\\n    address account,\\n    address[] calldata trustedIssuers\\n  ) external view returns (uint256[] memory, bytes32[] memory);\\n  function validateAttestationSig(\\n    bytes32 identifier,\\n    address issuer,\\n    address account,\\n    address signer,\\n    uint64 issuedOn,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) external view;\\n  function getUniqueAttestationHash(\\n    bytes32 identifier,\\n    address issuer,\\n    address account,\\n    address signer,\\n    uint64 issuedOn\\n  ) external pure returns (bytes32);\\n}\\n\",\"keccak256\":\"0x0e0c46c3a187afbaaf1f7d27d0e7e0870cc3f7e5b46143a5ae38ab08ce4efac7\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060878061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806328c1f99b14602d575b600080fd5b603561ce1081565b6040516001600160a01b03909116815260200160405180910390f3fea264697066735822122036089b1e80738b6226b058760f65065c837b2da1e30d02dbb4023ec71f43422064736f6c63430008130033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806328c1f99b14602d575b600080fd5b603561ce1081565b6040516001600160a01b03909116815260200160405180910390f3fea264697066735822122036089b1e80738b6226b058760f65065c837b2da1e30d02dbb4023ec71f43422064736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:238:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "134:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "144:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "156:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "167:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "152:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "152:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "144:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "186:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "201:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "217:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "222:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "213:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "213:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "226:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "209:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "209:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "197:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "197:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "179:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "179:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IRegistry_$17608__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "103:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "114:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "125:4:85",
                "type": ""
              }
            ],
            "src": "14:222:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IRegistry_$17608__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1625:7941:19:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1625:7941:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1751:71;;1705:42;1751:71;;;;;-1:-1:-1;;;;;197:32:85;;;179:51;;167:2;152:18;1751:71:19;;;;;;",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.8.0 <0.8.20;\n\n// Note: This is not an exact copy of UsingRegistry or UsingRegistryV2 in the contract's folder\n// because Mento's interfaces still don't support Solidity 0.8\n\nimport \"@openzeppelin/contracts8/access/Ownable.sol\";\nimport \"@openzeppelin/contracts8/token/ERC20/IERC20.sol\";\n\nimport \"./interfaces/IScoreReader.sol\";\n\nimport \"../../contracts/common/interfaces/IAccounts.sol\";\nimport \"../../contracts/common/interfaces/IEpochManager.sol\";\nimport \"../../contracts/common/interfaces/IFeeCurrencyWhitelist.sol\";\nimport \"../../contracts/common/interfaces/IFreezer.sol\";\nimport \"../../contracts/common/interfaces/IRegistry.sol\";\nimport \"../../contracts/common/interfaces/ICeloUnreleasedTreasury.sol\";\n\nimport \"../../contracts/governance/interfaces/IElection.sol\";\nimport \"../../contracts/governance/interfaces/IEpochRewards.sol\";\nimport \"../../contracts/governance/interfaces/IGovernance.sol\";\nimport \"../../contracts/governance/interfaces/ILockedGold.sol\";\nimport \"../../contracts/governance/interfaces/ILockedCelo.sol\";\nimport \"../../contracts/governance/interfaces/IValidators.sol\";\n\nimport \"../../contracts/identity/interfaces/IRandom.sol\";\nimport \"../../contracts/identity/interfaces/IAttestations.sol\";\nimport \"../../contracts/identity/interfaces/IFederatedAttestations.sol\";\n\n// import \"../../lib/mento-core/contracts/interfaces/IExchange.sol\";\n// import \"../../lib/mento-core/contracts/interfaces/IReserve.sol\";\n// import \"../../lib/mento-core/contracts/interfaces/IStableToken.sol\";\nimport \"../../contracts/stability/interfaces/ISortedOracles.sol\";\n\ncontract UsingRegistryV2NoMento {\n  address internal constant registryAddress = 0x000000000000000000000000000000000000ce10;\n  IRegistry public constant registryContract = IRegistry(registryAddress);\n\n  bytes32 internal constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\"Accounts\"));\n  bytes32 internal constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\"Attestations\"));\n  bytes32 internal constant DOWNTIME_SLASHER_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"DowntimeSlasher\"));\n  bytes32 internal constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"DoubleSigningSlasher\"));\n  bytes32 internal constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\"Election\"));\n  bytes32 internal constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\"Exchange\"));\n  bytes32 internal constant EXCHANGE_EURO_REGISTRY_ID = keccak256(abi.encodePacked(\"ExchangeEUR\"));\n  bytes32 internal constant EXCHANGE_REAL_REGISTRY_ID = keccak256(abi.encodePacked(\"ExchangeBRL\"));\n\n  bytes32 internal constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"FeeCurrencyWhitelist\"));\n  bytes32 internal constant FEDERATED_ATTESTATIONS_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"FederatedAttestations\"));\n  bytes32 internal constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\"Freezer\"));\n  bytes32 internal constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\"GoldToken\"));\n  bytes32 internal constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\"Governance\"));\n  bytes32 internal constant GOVERNANCE_SLASHER_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"GovernanceSlasher\"));\n  bytes32 internal constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\"LockedGold\"));\n  bytes32 internal constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\"Reserve\"));\n  bytes32 internal constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\"Random\"));\n  bytes32 internal constant SORTED_ORACLES_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"SortedOracles\"));\n  bytes32 internal constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\"StableToken\"));\n  bytes32 internal constant STABLE_EURO_TOKEN_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"StableTokenEUR\"));\n  bytes32 internal constant STABLE_REAL_TOKEN_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"StableTokenBRL\"));\n  bytes32 internal constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\"Validators\"));\n  bytes32 internal constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"CeloUnreleasedTreasury\"));\n\n  bytes32 internal constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\"CeloToken\"));\n  bytes32 internal constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\"LockedCelo\"));\n  bytes32 internal constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\"EpochRewards\"));\n  bytes32 internal constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\n    keccak256(abi.encodePacked(\"EpochManagerEnabler\"));\n  bytes32 internal constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\"EpochManager\"));\n  bytes32 internal constant SCORE_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\"ScoreManager\"));\n\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\n    require(\n      registryContract.getAddressForOrDie(identifierHash) == msg.sender,\n      \"only registered contract\"\n    );\n    _;\n  }\n\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\n    require(registryContract.isOneOf(identifierHashes, msg.sender), \"only registered contracts\");\n    _;\n  }\n\n  function getAccounts() internal view returns (IAccounts) {\n    return IAccounts(registryContract.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\n  }\n\n  function getAttestations() internal view returns (IAttestations) {\n    return IAttestations(registryContract.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\n  }\n\n  function getElection() internal view returns (IElection) {\n    return IElection(registryContract.getAddressForOrDie(ELECTION_REGISTRY_ID));\n  }\n\n  // function getExchange() internal view returns (IExchange) {\n  //   return IExchange(registryContract.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\n  // }\n\n  // function getExchangeDollar() internal view returns (IExchange) {\n  //   return getExchange();\n  // }\n\n  // function getExchangeEuro() internal view returns (IExchange) {\n  //   return IExchange(registryContract.getAddressForOrDie(EXCHANGE_EURO_REGISTRY_ID));\n  // }\n\n  // function getExchangeREAL() internal view returns (IExchange) {\n  //   return IExchange(registryContract.getAddressForOrDie(EXCHANGE_REAL_REGISTRY_ID));\n  // }\n\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\n    return\n      IFeeCurrencyWhitelist(\n        registryContract.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID)\n      );\n  }\n\n  function getFederatedAttestations() internal view returns (IFederatedAttestations) {\n    return\n      IFederatedAttestations(\n        registryContract.getAddressForOrDie(FEDERATED_ATTESTATIONS_REGISTRY_ID)\n      );\n  }\n\n  function getFreezer() internal view returns (IFreezer) {\n    return IFreezer(registryContract.getAddressForOrDie(FREEZER_REGISTRY_ID));\n  }\n\n  function getGoldToken() internal view returns (IERC20) {\n    return IERC20(registryContract.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\n  }\n\n  function getCeloToken() internal view returns (IERC20) {\n    return IERC20(registryContract.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\n  }\n\n  function getGovernance() internal view returns (IGovernance) {\n    return IGovernance(registryContract.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\n  }\n\n  function getLockedGold() internal view returns (ILockedGold) {\n    return ILockedGold(registryContract.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\n  }\n\n  function getLockedCelo() internal view returns (ILockedCelo) {\n    return ILockedCelo(registryContract.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\n  }\n\n  function getRandom() internal view returns (IRandom) {\n    return IRandom(registryContract.getAddressForOrDie(RANDOM_REGISTRY_ID));\n  }\n\n  // function getReserve() internal view returns (IReserve) {\n  //   return IReserve(registryContract.getAddressForOrDie(RESERVE_REGISTRY_ID));\n  // }\n\n  function getSortedOracles() internal view returns (ISortedOracles) {\n    return ISortedOracles(registryContract.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\n  }\n\n  // function getStableToken() internal view returns (IStableToken) {\n  //   return IStableToken(registryContract.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\n  // }\n\n  // function getStableDollarToken() internal view returns (IStableToken) {\n  //   return getStableToken();\n  // }\n\n  // function getStableEuroToken() internal view returns (IStableToken) {\n  //   return IStableToken(registryContract.getAddressForOrDie(STABLE_EURO_TOKEN_REGISTRY_ID));\n  // }\n\n  // function getStableRealToken() internal view returns (IStableToken) {\n  //   return IStableToken(registryContract.getAddressForOrDie(STABLE_REAL_TOKEN_REGISTRY_ID));\n  // }\n\n  function getValidators() internal view returns (IValidators) {\n    return IValidators(registryContract.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\n  }\n\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\n    return\n      ICeloUnreleasedTreasury(\n        registryContract.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID)\n      );\n  }\n\n  function getEpochRewards() internal view returns (IEpochRewards) {\n    return IEpochRewards(registryContract.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\n  }\n\n  function getEpochManager() internal view returns (IEpochManager) {\n    return IEpochManager(registryContract.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\n  }\n\n  function getScoreReader() internal view returns (IScoreReader) {\n    return IScoreReader(registryContract.getAddressForOrDie(SCORE_MANAGER_REGISTRY_ID));\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/common/UsingRegistryV2NoMento.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/common/UsingRegistryV2NoMento.sol",
    "exportedSymbols": {
      "Context": [
        212
      ],
      "IAccounts": [
        17249
      ],
      "IAttestations": [
        19106
      ],
      "ICeloUnreleasedTreasury": [
        17265
      ],
      "IERC20": [
        190
      ],
      "IElection": [
        18056
      ],
      "IEpochManager": [
        17462
      ],
      "IEpochRewards": [
        18121
      ],
      "IFederatedAttestations": [
        19228
      ],
      "IFeeCurrencyWhitelist": [
        17488
      ],
      "IFreezer": [
        17535
      ],
      "IGovernance": [
        18193
      ],
      "ILockedCelo": [
        18336
      ],
      "ILockedGold": [
        18472
      ],
      "IRandom": [
        19257
      ],
      "IRegistry": [
        17608
      ],
      "IScoreReader": [
        7470
      ],
      "ISortedOracles": [
        19333
      ],
      "IValidators": [
        18940
      ],
      "Ownable": [
        112
      ],
      "UsingRegistryV2NoMento": [
        7274
      ]
    },
    "id": 7275,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6727,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:19"
      },
      {
        "absolutePath": "@openzeppelin/contracts8/access/Ownable.sol",
        "file": "@openzeppelin/contracts8/access/Ownable.sol",
        "id": 6728,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 113,
        "src": "236:53:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts8/token/ERC20/IERC20.sol",
        "id": 6729,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 191,
        "src": "290:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts-0.8/common/interfaces/IScoreReader.sol",
        "file": "./interfaces/IScoreReader.sol",
        "id": 6730,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 7471,
        "src": "349:39:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IAccounts.sol",
        "file": "../../contracts/common/interfaces/IAccounts.sol",
        "id": 6731,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 17250,
        "src": "390:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IEpochManager.sol",
        "file": "../../contracts/common/interfaces/IEpochManager.sol",
        "id": 6732,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 17463,
        "src": "448:61:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol",
        "file": "../../contracts/common/interfaces/IFeeCurrencyWhitelist.sol",
        "id": 6733,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 17489,
        "src": "510:69:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IFreezer.sol",
        "file": "../../contracts/common/interfaces/IFreezer.sol",
        "id": 6734,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 17536,
        "src": "580:56:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IRegistry.sol",
        "file": "../../contracts/common/interfaces/IRegistry.sol",
        "id": 6735,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 17609,
        "src": "637:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol",
        "file": "../../contracts/common/interfaces/ICeloUnreleasedTreasury.sol",
        "id": 6736,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 17266,
        "src": "695:71:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/IElection.sol",
        "file": "../../contracts/governance/interfaces/IElection.sol",
        "id": 6737,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 18057,
        "src": "768:61:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/IEpochRewards.sol",
        "file": "../../contracts/governance/interfaces/IEpochRewards.sol",
        "id": 6738,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 18122,
        "src": "830:65:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/IGovernance.sol",
        "file": "../../contracts/governance/interfaces/IGovernance.sol",
        "id": 6739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 18194,
        "src": "896:63:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/ILockedGold.sol",
        "file": "../../contracts/governance/interfaces/ILockedGold.sol",
        "id": 6740,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 18473,
        "src": "960:63:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/ILockedCelo.sol",
        "file": "../../contracts/governance/interfaces/ILockedCelo.sol",
        "id": 6741,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 18337,
        "src": "1024:63:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/interfaces/IValidators.sol",
        "file": "../../contracts/governance/interfaces/IValidators.sol",
        "id": 6742,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 18941,
        "src": "1088:63:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/identity/interfaces/IRandom.sol",
        "file": "../../contracts/identity/interfaces/IRandom.sol",
        "id": 6743,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 19258,
        "src": "1153:57:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/identity/interfaces/IAttestations.sol",
        "file": "../../contracts/identity/interfaces/IAttestations.sol",
        "id": 6744,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 19107,
        "src": "1211:63:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/identity/interfaces/IFederatedAttestations.sol",
        "file": "../../contracts/identity/interfaces/IFederatedAttestations.sol",
        "id": 6745,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 19229,
        "src": "1275:72:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/stability/interfaces/ISortedOracles.sol",
        "file": "../../contracts/stability/interfaces/ISortedOracles.sol",
        "id": 6746,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7275,
        "sourceUnit": 19334,
        "src": "1558:65:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "UsingRegistryV2NoMento",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7274,
        "linearizedBaseContracts": [
          7274
        ],
        "name": "UsingRegistryV2NoMento",
        "nameLocation": "1634:22:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 6749,
            "mutability": "constant",
            "name": "registryAddress",
            "nameLocation": "1687:15:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "1661:86:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6747,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1661:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303063653130",
              "id": 6748,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1705:42:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x000000000000000000000000000000000000ce10"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "functionSelector": "28c1f99b",
            "id": 6755,
            "mutability": "constant",
            "name": "registryContract",
            "nameLocation": "1777:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "1751:71:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRegistry_$17608",
              "typeString": "contract IRegistry"
            },
            "typeName": {
              "id": 6751,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6750,
                "name": "IRegistry",
                "nameLocations": [
                  "1751:9:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17608,
                "src": "1751:9:19"
              },
              "referencedDeclaration": 17608,
              "src": "1751:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistry_$17608",
                "typeString": "contract IRegistry"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 6753,
                  "name": "registryAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6749,
                  "src": "1806:15:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 6752,
                "name": "IRegistry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 17608,
                "src": "1796:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IRegistry_$17608_$",
                  "typeString": "type(contract IRegistry)"
                }
              },
              "id": 6754,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1796:26:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistry_$17608",
                "typeString": "contract IRegistry"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 6763,
            "mutability": "constant",
            "name": "ACCOUNTS_REGISTRY_ID",
            "nameLocation": "1853:20:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "1827:88:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6756,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1827:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4163636f756e7473",
                      "id": 6760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1903:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_065b3511e672769036815d78dd1d8a43df1e790e38323f22c4aed211e85ea281",
                        "typeString": "literal_string \"Accounts\""
                      },
                      "value": "Accounts"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_065b3511e672769036815d78dd1d8a43df1e790e38323f22c4aed211e85ea281",
                        "typeString": "literal_string \"Accounts\""
                      }
                    ],
                    "expression": {
                      "id": 6758,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "1886:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1890:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "1886:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6761,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1886:28:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6757,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1876:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6762,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1876:39:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6771,
            "mutability": "constant",
            "name": "ATTESTATIONS_REGISTRY_ID",
            "nameLocation": "1945:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "1919:96:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6764,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1919:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4174746573746174696f6e73",
                      "id": 6768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1999:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e8a6bc619fd947af7cb3f971bf8c11a6681a56f819e04344ce5ada7a926ae983",
                        "typeString": "literal_string \"Attestations\""
                      },
                      "value": "Attestations"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_e8a6bc619fd947af7cb3f971bf8c11a6681a56f819e04344ce5ada7a926ae983",
                        "typeString": "literal_string \"Attestations\""
                      }
                    ],
                    "expression": {
                      "id": 6766,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "1982:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1986:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "1982:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6769,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1982:32:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6765,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "1972:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6770,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1972:43:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6779,
            "mutability": "constant",
            "name": "DOWNTIME_SLASHER_REGISTRY_ID",
            "nameLocation": "2045:28:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2019:107:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6772,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2019:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "446f776e74696d65536c6173686572",
                      "id": 6776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2107:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_f85a8831772b00f60d09cf91c6167852af544ccf577454fa9a7f1277b735491d",
                        "typeString": "literal_string \"DowntimeSlasher\""
                      },
                      "value": "DowntimeSlasher"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_f85a8831772b00f60d09cf91c6167852af544ccf577454fa9a7f1277b735491d",
                        "typeString": "literal_string \"DowntimeSlasher\""
                      }
                    ],
                    "expression": {
                      "id": 6774,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2090:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2094:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2090:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6777,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2090:35:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6773,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2080:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6778,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2080:46:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6787,
            "mutability": "constant",
            "name": "DOUBLE_SIGNING_SLASHER_REGISTRY_ID",
            "nameLocation": "2156:34:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2130:118:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6780,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2130:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "446f75626c655369676e696e67536c6173686572",
                      "id": 6784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2224:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d4c6fa7b845999fadc6b2d61b758ebce59acf3c4975a3ba44c3863a6ca385b21",
                        "typeString": "literal_string \"DoubleSigningSlasher\""
                      },
                      "value": "DoubleSigningSlasher"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_d4c6fa7b845999fadc6b2d61b758ebce59acf3c4975a3ba44c3863a6ca385b21",
                        "typeString": "literal_string \"DoubleSigningSlasher\""
                      }
                    ],
                    "expression": {
                      "id": 6782,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2207:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2211:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2207:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6785,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2207:40:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6781,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2197:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6786,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2197:51:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6795,
            "mutability": "constant",
            "name": "ELECTION_REGISTRY_ID",
            "nameLocation": "2278:20:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2252:88:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6788,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2252:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "456c656374696f6e",
                      "id": 6792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2328:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_235a6f54090e9b94aa4e585a699c4375a2ff8f572c68114d138f0ed121527849",
                        "typeString": "literal_string \"Election\""
                      },
                      "value": "Election"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_235a6f54090e9b94aa4e585a699c4375a2ff8f572c68114d138f0ed121527849",
                        "typeString": "literal_string \"Election\""
                      }
                    ],
                    "expression": {
                      "id": 6790,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2311:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2315:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2311:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6793,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2311:28:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6789,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2301:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6794,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2301:39:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6803,
            "mutability": "constant",
            "name": "EXCHANGE_REGISTRY_ID",
            "nameLocation": "2370:20:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2344:88:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6796,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2344:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "45786368616e6765",
                      "id": 6800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2420:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ddd112a261429abc594f5771eb08d7fa47bff456b2e5f1a47907b78573e33d96",
                        "typeString": "literal_string \"Exchange\""
                      },
                      "value": "Exchange"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_ddd112a261429abc594f5771eb08d7fa47bff456b2e5f1a47907b78573e33d96",
                        "typeString": "literal_string \"Exchange\""
                      }
                    ],
                    "expression": {
                      "id": 6798,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2403:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2407:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2403:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6801,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2403:28:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6797,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2393:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6802,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2393:39:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6811,
            "mutability": "constant",
            "name": "EXCHANGE_EURO_REGISTRY_ID",
            "nameLocation": "2462:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2436:96:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6804,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2436:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "45786368616e6765455552",
                      "id": 6808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2517:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ec9430f559dcce86affd707bcc9fd6dfd7935b4cb934e078882caa95ebf975d6",
                        "typeString": "literal_string \"ExchangeEUR\""
                      },
                      "value": "ExchangeEUR"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_ec9430f559dcce86affd707bcc9fd6dfd7935b4cb934e078882caa95ebf975d6",
                        "typeString": "literal_string \"ExchangeEUR\""
                      }
                    ],
                    "expression": {
                      "id": 6806,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2500:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2504:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2500:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6809,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2500:31:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6805,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2490:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6810,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2490:42:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6819,
            "mutability": "constant",
            "name": "EXCHANGE_REAL_REGISTRY_ID",
            "nameLocation": "2562:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2536:96:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6812,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2536:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "45786368616e676542524c",
                      "id": 6816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2617:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7386e44333632cbd69f7999c8c7f817bce2896aad7a06c770db8aa8f3971ea67",
                        "typeString": "literal_string \"ExchangeBRL\""
                      },
                      "value": "ExchangeBRL"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_7386e44333632cbd69f7999c8c7f817bce2896aad7a06c770db8aa8f3971ea67",
                        "typeString": "literal_string \"ExchangeBRL\""
                      }
                    ],
                    "expression": {
                      "id": 6814,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2600:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2604:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2600:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6817,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2600:31:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6813,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2590:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6818,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2590:42:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6827,
            "mutability": "constant",
            "name": "FEE_CURRENCY_WHITELIST_REGISTRY_ID",
            "nameLocation": "2663:34:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2637:118:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6820,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2637:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "46656543757272656e637957686974656c697374",
                      "id": 6824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2731:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8f897d9543fdc9082789208180c3e3d11f7473aaef3e249ab0020ea0c761c1b6",
                        "typeString": "literal_string \"FeeCurrencyWhitelist\""
                      },
                      "value": "FeeCurrencyWhitelist"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_8f897d9543fdc9082789208180c3e3d11f7473aaef3e249ab0020ea0c761c1b6",
                        "typeString": "literal_string \"FeeCurrencyWhitelist\""
                      }
                    ],
                    "expression": {
                      "id": 6822,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2714:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2718:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2714:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6825,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2714:40:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6821,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2704:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6826,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2704:51:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6835,
            "mutability": "constant",
            "name": "FEDERATED_ATTESTATIONS_REGISTRY_ID",
            "nameLocation": "2785:34:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2759:119:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6828,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2759:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4665646572617465644174746573746174696f6e73",
                      "id": 6832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2853:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_96f361fc4a5274cd642d269ced6f361149b691a1e8bf7016d8bdfe6cae9adc75",
                        "typeString": "literal_string \"FederatedAttestations\""
                      },
                      "value": "FederatedAttestations"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_96f361fc4a5274cd642d269ced6f361149b691a1e8bf7016d8bdfe6cae9adc75",
                        "typeString": "literal_string \"FederatedAttestations\""
                      }
                    ],
                    "expression": {
                      "id": 6830,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2836:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2840:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2836:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6833,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2836:41:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6829,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2826:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6834,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2826:52:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6843,
            "mutability": "constant",
            "name": "FREEZER_REGISTRY_ID",
            "nameLocation": "2908:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2882:86:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6836,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2882:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "467265657a6572",
                      "id": 6840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2957:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_24e33447c847c15e68fca3f15a635d2d4d83cb99d7befc9068c4a148521fccf4",
                        "typeString": "literal_string \"Freezer\""
                      },
                      "value": "Freezer"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_24e33447c847c15e68fca3f15a635d2d4d83cb99d7befc9068c4a148521fccf4",
                        "typeString": "literal_string \"Freezer\""
                      }
                    ],
                    "expression": {
                      "id": 6838,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "2940:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2944:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "2940:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6841,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "2940:27:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6837,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "2930:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6842,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2930:38:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6851,
            "mutability": "constant",
            "name": "GOLD_TOKEN_REGISTRY_ID",
            "nameLocation": "2998:22:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "2972:91:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6844,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2972:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "476f6c64546f6b656e",
                      "id": 6848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3050:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
                        "typeString": "literal_string \"GoldToken\""
                      },
                      "value": "GoldToken"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_d7e89ade8430819f08bf97a087285824af3351ee12d72a2d132b0c6c0687bfaf",
                        "typeString": "literal_string \"GoldToken\""
                      }
                    ],
                    "expression": {
                      "id": 6846,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3033:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3037:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3033:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6849,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3033:29:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6845,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3023:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6850,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3023:40:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6859,
            "mutability": "constant",
            "name": "GOVERNANCE_REGISTRY_ID",
            "nameLocation": "3093:22:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3067:92:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6852,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3067:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "476f7665726e616e6365",
                      "id": 6856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3145:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_9409903de1e6fd852dfc61c9dacb48196c48535b60e25abf92acc92dd689078d",
                        "typeString": "literal_string \"Governance\""
                      },
                      "value": "Governance"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_9409903de1e6fd852dfc61c9dacb48196c48535b60e25abf92acc92dd689078d",
                        "typeString": "literal_string \"Governance\""
                      }
                    ],
                    "expression": {
                      "id": 6854,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3128:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3132:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3128:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6857,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3128:30:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6853,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3118:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6858,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3118:41:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6867,
            "mutability": "constant",
            "name": "GOVERNANCE_SLASHER_REGISTRY_ID",
            "nameLocation": "3189:30:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3163:111:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6860,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3163:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "476f7665726e616e6365536c6173686572",
                      "id": 6864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3253:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_49399c1f1c39c8fa6ef22452af2bd0f965b694cb662347489bd8de38891eacd2",
                        "typeString": "literal_string \"GovernanceSlasher\""
                      },
                      "value": "GovernanceSlasher"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_49399c1f1c39c8fa6ef22452af2bd0f965b694cb662347489bd8de38891eacd2",
                        "typeString": "literal_string \"GovernanceSlasher\""
                      }
                    ],
                    "expression": {
                      "id": 6862,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3236:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3240:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3236:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6865,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3236:37:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6861,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3226:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6866,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3226:48:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6875,
            "mutability": "constant",
            "name": "LOCKED_GOLD_REGISTRY_ID",
            "nameLocation": "3304:23:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3278:93:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6868,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3278:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4c6f636b6564476f6c64",
                      "id": 6872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3357:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_3d744b38c539f9c7aabe18c37da0535bb6322568ef752e312c624287c915ee69",
                        "typeString": "literal_string \"LockedGold\""
                      },
                      "value": "LockedGold"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_3d744b38c539f9c7aabe18c37da0535bb6322568ef752e312c624287c915ee69",
                        "typeString": "literal_string \"LockedGold\""
                      }
                    ],
                    "expression": {
                      "id": 6870,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3340:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3344:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3340:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6873,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3340:30:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6869,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3330:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6874,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3330:41:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6883,
            "mutability": "constant",
            "name": "RESERVE_REGISTRY_ID",
            "nameLocation": "3401:19:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3375:86:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6876,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3375:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "52657365727665",
                      "id": 6880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3450:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                        "typeString": "literal_string \"Reserve\""
                      },
                      "value": "Reserve"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_aab74a77d8ce26d227789a153a9097d216f9d5859be6b3918f997a8823e92984",
                        "typeString": "literal_string \"Reserve\""
                      }
                    ],
                    "expression": {
                      "id": 6878,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3433:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3437:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3433:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6881,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3433:27:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6877,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3423:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6882,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3423:38:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6891,
            "mutability": "constant",
            "name": "RANDOM_REGISTRY_ID",
            "nameLocation": "3491:18:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3465:84:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6884,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3465:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "52616e646f6d",
                      "id": 6888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3539:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02dfe2d0485b616b61db1800f30f4a14b26754b328fa09ba4ec73ee7276766cc",
                        "typeString": "literal_string \"Random\""
                      },
                      "value": "Random"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_02dfe2d0485b616b61db1800f30f4a14b26754b328fa09ba4ec73ee7276766cc",
                        "typeString": "literal_string \"Random\""
                      }
                    ],
                    "expression": {
                      "id": 6886,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3522:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3526:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3522:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6889,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3522:26:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6885,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3512:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6890,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3512:37:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6899,
            "mutability": "constant",
            "name": "SORTED_ORACLES_REGISTRY_ID",
            "nameLocation": "3579:26:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3553:103:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6892,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3553:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "536f727465644f7261636c6573",
                      "id": 6896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3639:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
                        "typeString": "literal_string \"SortedOracles\""
                      },
                      "value": "SortedOracles"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_ab7ca110ac6f740fa4bdcd667652ab6f883b80daaedaf0cb53396dc5d5be6f2c",
                        "typeString": "literal_string \"SortedOracles\""
                      }
                    ],
                    "expression": {
                      "id": 6894,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3622:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3626:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3622:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6897,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3622:33:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6893,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3612:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6898,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3612:44:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6907,
            "mutability": "constant",
            "name": "STABLE_TOKEN_REGISTRY_ID",
            "nameLocation": "3686:24:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3660:95:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6900,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3660:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "537461626c65546f6b656e",
                      "id": 6904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3740:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a676d30f91cbc454bebc9ca2df3e4a03df04d387728c3c700f40e4f04bdb298f",
                        "typeString": "literal_string \"StableToken\""
                      },
                      "value": "StableToken"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a676d30f91cbc454bebc9ca2df3e4a03df04d387728c3c700f40e4f04bdb298f",
                        "typeString": "literal_string \"StableToken\""
                      }
                    ],
                    "expression": {
                      "id": 6902,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3723:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3727:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3723:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6905,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3723:31:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6901,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3713:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6906,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3713:42:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6915,
            "mutability": "constant",
            "name": "STABLE_EURO_TOKEN_REGISTRY_ID",
            "nameLocation": "3785:29:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3759:107:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6908,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3759:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "537461626c65546f6b656e455552",
                      "id": 6912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3848:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_ba09d3b884f7ffde0d6ccf76b09a67b85b038ef7b5e84259d77bb6048901c3b7",
                        "typeString": "literal_string \"StableTokenEUR\""
                      },
                      "value": "StableTokenEUR"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_ba09d3b884f7ffde0d6ccf76b09a67b85b038ef7b5e84259d77bb6048901c3b7",
                        "typeString": "literal_string \"StableTokenEUR\""
                      }
                    ],
                    "expression": {
                      "id": 6910,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3831:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3835:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3831:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6913,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3831:34:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6909,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3821:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6914,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3821:45:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6923,
            "mutability": "constant",
            "name": "STABLE_REAL_TOKEN_REGISTRY_ID",
            "nameLocation": "3896:29:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3870:107:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6916,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3870:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "537461626c65546f6b656e42524c",
                      "id": 6920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3959:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_fdd0763d8fdc34f73049f0b915cd0c219a2e646176bf3f674fdbfe06f58990ea",
                        "typeString": "literal_string \"StableTokenBRL\""
                      },
                      "value": "StableTokenBRL"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_fdd0763d8fdc34f73049f0b915cd0c219a2e646176bf3f674fdbfe06f58990ea",
                        "typeString": "literal_string \"StableTokenBRL\""
                      }
                    ],
                    "expression": {
                      "id": 6918,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "3942:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "3946:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "3942:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6921,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "3942:34:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6917,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "3932:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6922,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3932:45:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6931,
            "mutability": "constant",
            "name": "VALIDATORS_REGISTRY_ID",
            "nameLocation": "4007:22:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "3981:92:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6924,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3981:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "56616c696461746f7273",
                      "id": 6928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4059:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_49dc7107d41d3c01a9f941a7d9a9f9177349b5521aeb56861470e42cf05da2ee",
                        "typeString": "literal_string \"Validators\""
                      },
                      "value": "Validators"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_49dc7107d41d3c01a9f941a7d9a9f9177349b5521aeb56861470e42cf05da2ee",
                        "typeString": "literal_string \"Validators\""
                      }
                    ],
                    "expression": {
                      "id": 6926,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4042:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4046:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4042:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6929,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4042:30:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6925,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4032:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6930,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4032:41:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6939,
            "mutability": "constant",
            "name": "CELO_UNRELEASED_TREASURY_REGISTRY_ID",
            "nameLocation": "4103:36:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "4077:122:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6932,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4077:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "43656c6f556e72656c65617365645472656173757279",
                      "id": 6936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4173:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_672ead60557093ef9b6a918571e24b10f2ec24e57cb02a74e9c26ef69a02f090",
                        "typeString": "literal_string \"CeloUnreleasedTreasury\""
                      },
                      "value": "CeloUnreleasedTreasury"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_672ead60557093ef9b6a918571e24b10f2ec24e57cb02a74e9c26ef69a02f090",
                        "typeString": "literal_string \"CeloUnreleasedTreasury\""
                      }
                    ],
                    "expression": {
                      "id": 6934,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4156:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4160:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4156:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6937,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4156:42:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6933,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4146:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6938,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4146:53:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6947,
            "mutability": "constant",
            "name": "CELO_TOKEN_REGISTRY_ID",
            "nameLocation": "4230:22:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "4204:91:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6940,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4204:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "43656c6f546f6b656e",
                      "id": 6944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4282:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a3bf392f34150f84db7aaff1f18e6e51f7e38850760f779b6db33e8f4e043d3d",
                        "typeString": "literal_string \"CeloToken\""
                      },
                      "value": "CeloToken"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a3bf392f34150f84db7aaff1f18e6e51f7e38850760f779b6db33e8f4e043d3d",
                        "typeString": "literal_string \"CeloToken\""
                      }
                    ],
                    "expression": {
                      "id": 6942,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4265:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4269:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4265:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6945,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4265:29:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6941,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4255:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6946,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4255:40:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6955,
            "mutability": "constant",
            "name": "LOCKED_CELO_REGISTRY_ID",
            "nameLocation": "4325:23:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "4299:93:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6948,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4299:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "4c6f636b656443656c6f",
                      "id": 6952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4378:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a058fa308f8c3a8d8501ac5fcd5729e5135c941a06d8ec08701c9909ebd7cbba",
                        "typeString": "literal_string \"LockedCelo\""
                      },
                      "value": "LockedCelo"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a058fa308f8c3a8d8501ac5fcd5729e5135c941a06d8ec08701c9909ebd7cbba",
                        "typeString": "literal_string \"LockedCelo\""
                      }
                    ],
                    "expression": {
                      "id": 6950,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4361:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4365:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4361:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6953,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4361:30:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6949,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4351:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6954,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4351:41:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6963,
            "mutability": "constant",
            "name": "EPOCH_REWARDS_REGISTRY_ID",
            "nameLocation": "4422:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "4396:97:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6956,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4396:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "45706f636852657761726473",
                      "id": 6960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4477:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b33c3d77234979a288baf651b42d19d8483d5af3e328f9f1fae2bef7b11acd25",
                        "typeString": "literal_string \"EpochRewards\""
                      },
                      "value": "EpochRewards"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_b33c3d77234979a288baf651b42d19d8483d5af3e328f9f1fae2bef7b11acd25",
                        "typeString": "literal_string \"EpochRewards\""
                      }
                    ],
                    "expression": {
                      "id": 6958,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4460:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4464:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4460:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6961,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4460:32:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6957,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4450:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6962,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4450:43:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6971,
            "mutability": "constant",
            "name": "EPOCH_MANAGER_ENABLER_REGISTRY_ID",
            "nameLocation": "4523:33:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "4497:116:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6964,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4497:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "45706f63684d616e61676572456e61626c6572",
                      "id": 6968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4590:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6c86b157cc34c33a89bad93bdd7299294e192173e0dc838a134493a3b2f6c7f1",
                        "typeString": "literal_string \"EpochManagerEnabler\""
                      },
                      "value": "EpochManagerEnabler"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_6c86b157cc34c33a89bad93bdd7299294e192173e0dc838a134493a3b2f6c7f1",
                        "typeString": "literal_string \"EpochManagerEnabler\""
                      }
                    ],
                    "expression": {
                      "id": 6966,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4573:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4577:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4573:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6969,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4573:39:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6965,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4563:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6970,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4563:50:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6979,
            "mutability": "constant",
            "name": "EPOCH_MANAGER_REGISTRY_ID",
            "nameLocation": "4643:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "4617:97:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6972,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4617:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "45706f63684d616e61676572",
                      "id": 6976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4698:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c713c3df6d14cdf946460395d09af88993ee2b948b1a808161494e32c5f67063",
                        "typeString": "literal_string \"EpochManager\""
                      },
                      "value": "EpochManager"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_c713c3df6d14cdf946460395d09af88993ee2b948b1a808161494e32c5f67063",
                        "typeString": "literal_string \"EpochManager\""
                      }
                    ],
                    "expression": {
                      "id": 6974,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4681:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4685:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4681:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6977,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4681:32:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6973,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4671:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6978,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4671:43:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6987,
            "mutability": "constant",
            "name": "SCORE_MANAGER_REGISTRY_ID",
            "nameLocation": "4744:25:19",
            "nodeType": "VariableDeclaration",
            "scope": 7274,
            "src": "4718:97:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6980,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4718:7:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "53636f72654d616e61676572",
                      "id": 6984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4799:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1c829115aa24447d7c5bd62cbbe47d99e7df3c2046ab989cc12459f7509bdf59",
                        "typeString": "literal_string \"ScoreManager\""
                      },
                      "value": "ScoreManager"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_1c829115aa24447d7c5bd62cbbe47d99e7df3c2046ab989cc12459f7509bdf59",
                        "typeString": "literal_string \"ScoreManager\""
                      }
                    ],
                    "expression": {
                      "id": 6982,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "4782:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 6983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "4786:12:19",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "4782:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 6985,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "4782:32:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 6981,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "4772:9:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6986,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4772:43:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7003,
              "nodeType": "Block",
              "src": "4876:138:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 6994,
                              "name": "identifierHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6989,
                              "src": "4933:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 6992,
                              "name": "registryContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6755,
                              "src": "4897:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$17608",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 6993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4914:18:19",
                            "memberName": "getAddressForOrDie",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17576,
                            "src": "4897:35:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 6995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4897:51:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6996,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4952:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4956:6:19",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4952:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4897:65:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207265676973746572656420636f6e7472616374",
                        "id": 6999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4970:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8a3ca1ac35c866c5d1d4090c493b1cdc5fe7c2961819599deb3b7f84b349d87",
                          "typeString": "literal_string \"only registered contract\""
                        },
                        "value": "only registered contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8a3ca1ac35c866c5d1d4090c493b1cdc5fe7c2961819599deb3b7f84b349d87",
                          "typeString": "literal_string \"only registered contract\""
                        }
                      ],
                      "id": 6991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4882:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4882:120:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7001,
                  "nodeType": "ExpressionStatement",
                  "src": "4882:120:19"
                },
                {
                  "id": 7002,
                  "nodeType": "PlaceholderStatement",
                  "src": "5008:1:19"
                }
              ]
            },
            "id": 7004,
            "name": "onlyRegisteredContract",
            "nameLocation": "4829:22:19",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6989,
                  "mutability": "mutable",
                  "name": "identifierHash",
                  "nameLocation": "4860:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7004,
                  "src": "4852:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6988,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4852:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4851:24:19"
            },
            "src": "4820:194:19",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7020,
              "nodeType": "Block",
              "src": "5086:110:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7012,
                            "name": "identifierHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7007,
                            "src": "5125:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 7013,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5143:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5147:6:19",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5143:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7010,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "5100:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5117:7:19",
                          "memberName": "isOneOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17607,
                          "src": "5100:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,address) view external returns (bool)"
                          }
                        },
                        "id": 7015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5100:54:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207265676973746572656420636f6e747261637473",
                        "id": 7016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5156:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3fbc6a6ec7e7814ad3528928c8a113993c342fa8755d6274433479a8ad1c6d7",
                          "typeString": "literal_string \"only registered contracts\""
                        },
                        "value": "only registered contracts"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3fbc6a6ec7e7814ad3528928c8a113993c342fa8755d6274433479a8ad1c6d7",
                          "typeString": "literal_string \"only registered contracts\""
                        }
                      ],
                      "id": 7009,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5092:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5092:92:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7018,
                  "nodeType": "ExpressionStatement",
                  "src": "5092:92:19"
                },
                {
                  "id": 7019,
                  "nodeType": "PlaceholderStatement",
                  "src": "5190:1:19"
                }
              ]
            },
            "id": 7021,
            "name": "onlyRegisteredContracts",
            "nameLocation": "5027:23:19",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7007,
                  "mutability": "mutable",
                  "name": "identifierHashes",
                  "nameLocation": "5068:16:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 7021,
                  "src": "5051:33:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7005,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5051:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 7006,
                    "nodeType": "ArrayTypeName",
                    "src": "5051:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5050:35:19"
            },
            "src": "5018:178:19",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7034,
              "nodeType": "Block",
              "src": "5257:86:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7030,
                            "name": "ACCOUNTS_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6763,
                            "src": "5316:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7028,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "5280:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5297:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "5280:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5280:57:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7027,
                      "name": "IAccounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17249,
                      "src": "5270:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAccounts_$17249_$",
                        "typeString": "type(contract IAccounts)"
                      }
                    },
                    "id": 7032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5270:68:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccounts_$17249",
                      "typeString": "contract IAccounts"
                    }
                  },
                  "functionReturnParameters": 7026,
                  "id": 7033,
                  "nodeType": "Return",
                  "src": "5263:75:19"
                }
              ]
            },
            "id": 7035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAccounts",
            "nameLocation": "5209:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5220:2:19"
            },
            "returnParameters": {
              "id": 7026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7035,
                  "src": "5246:9:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAccounts_$17249",
                    "typeString": "contract IAccounts"
                  },
                  "typeName": {
                    "id": 7024,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7023,
                      "name": "IAccounts",
                      "nameLocations": [
                        "5246:9:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17249,
                      "src": "5246:9:19"
                    },
                    "referencedDeclaration": 17249,
                    "src": "5246:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccounts_$17249",
                      "typeString": "contract IAccounts"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5245:11:19"
            },
            "scope": 7274,
            "src": "5200:143:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7048,
              "nodeType": "Block",
              "src": "5412:94:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7044,
                            "name": "ATTESTATIONS_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6771,
                            "src": "5475:24:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7042,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "5439:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5456:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "5439:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5439:61:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7041,
                      "name": "IAttestations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19106,
                      "src": "5425:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAttestations_$19106_$",
                        "typeString": "type(contract IAttestations)"
                      }
                    },
                    "id": 7046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5425:76:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAttestations_$19106",
                      "typeString": "contract IAttestations"
                    }
                  },
                  "functionReturnParameters": 7040,
                  "id": 7047,
                  "nodeType": "Return",
                  "src": "5418:83:19"
                }
              ]
            },
            "id": 7049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAttestations",
            "nameLocation": "5356:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5371:2:19"
            },
            "returnParameters": {
              "id": 7040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7049,
                  "src": "5397:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAttestations_$19106",
                    "typeString": "contract IAttestations"
                  },
                  "typeName": {
                    "id": 7038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7037,
                      "name": "IAttestations",
                      "nameLocations": [
                        "5397:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19106,
                      "src": "5397:13:19"
                    },
                    "referencedDeclaration": 19106,
                    "src": "5397:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAttestations_$19106",
                      "typeString": "contract IAttestations"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5396:15:19"
            },
            "scope": 7274,
            "src": "5347:159:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7062,
              "nodeType": "Block",
              "src": "5567:86:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7058,
                            "name": "ELECTION_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6795,
                            "src": "5626:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7056,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "5590:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5607:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "5590:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5590:57:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7055,
                      "name": "IElection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18056,
                      "src": "5580:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IElection_$18056_$",
                        "typeString": "type(contract IElection)"
                      }
                    },
                    "id": 7060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:68:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IElection_$18056",
                      "typeString": "contract IElection"
                    }
                  },
                  "functionReturnParameters": 7054,
                  "id": 7061,
                  "nodeType": "Return",
                  "src": "5573:75:19"
                }
              ]
            },
            "id": 7063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getElection",
            "nameLocation": "5519:11:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5530:2:19"
            },
            "returnParameters": {
              "id": 7054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7063,
                  "src": "5556:9:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IElection_$18056",
                    "typeString": "contract IElection"
                  },
                  "typeName": {
                    "id": 7052,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7051,
                      "name": "IElection",
                      "nameLocations": [
                        "5556:9:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18056,
                      "src": "5556:9:19"
                    },
                    "referencedDeclaration": 18056,
                    "src": "5556:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IElection_$18056",
                      "typeString": "contract IElection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5555:11:19"
            },
            "scope": 7274,
            "src": "5510:143:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7076,
              "nodeType": "Block",
              "src": "6339:134:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7072,
                            "name": "FEE_CURRENCY_WHITELIST_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6827,
                            "src": "6425:34:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7070,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "6389:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6406:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "6389:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6389:71:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7069,
                      "name": "IFeeCurrencyWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17488,
                      "src": "6358:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFeeCurrencyWhitelist_$17488_$",
                        "typeString": "type(contract IFeeCurrencyWhitelist)"
                      }
                    },
                    "id": 7074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6358:110:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeCurrencyWhitelist_$17488",
                      "typeString": "contract IFeeCurrencyWhitelist"
                    }
                  },
                  "functionReturnParameters": 7068,
                  "id": 7075,
                  "nodeType": "Return",
                  "src": "6345:123:19"
                }
              ]
            },
            "id": 7077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFeeCurrencyWhitelistRegistry",
            "nameLocation": "6259:31:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6290:2:19"
            },
            "returnParameters": {
              "id": 7068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7077,
                  "src": "6316:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFeeCurrencyWhitelist_$17488",
                    "typeString": "contract IFeeCurrencyWhitelist"
                  },
                  "typeName": {
                    "id": 7066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7065,
                      "name": "IFeeCurrencyWhitelist",
                      "nameLocations": [
                        "6316:21:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17488,
                      "src": "6316:21:19"
                    },
                    "referencedDeclaration": 17488,
                    "src": "6316:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeCurrencyWhitelist_$17488",
                      "typeString": "contract IFeeCurrencyWhitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6315:23:19"
            },
            "scope": 7274,
            "src": "6250:223:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7090,
              "nodeType": "Block",
              "src": "6560:135:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7086,
                            "name": "FEDERATED_ATTESTATIONS_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6835,
                            "src": "6647:34:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7084,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "6611:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6628:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "6611:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6611:71:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7083,
                      "name": "IFederatedAttestations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19228,
                      "src": "6579:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFederatedAttestations_$19228_$",
                        "typeString": "type(contract IFederatedAttestations)"
                      }
                    },
                    "id": 7088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6579:111:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFederatedAttestations_$19228",
                      "typeString": "contract IFederatedAttestations"
                    }
                  },
                  "functionReturnParameters": 7082,
                  "id": 7089,
                  "nodeType": "Return",
                  "src": "6566:124:19"
                }
              ]
            },
            "id": 7091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFederatedAttestations",
            "nameLocation": "6486:24:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6510:2:19"
            },
            "returnParameters": {
              "id": 7082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7081,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7091,
                  "src": "6536:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFederatedAttestations_$19228",
                    "typeString": "contract IFederatedAttestations"
                  },
                  "typeName": {
                    "id": 7080,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7079,
                      "name": "IFederatedAttestations",
                      "nameLocations": [
                        "6536:22:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19228,
                      "src": "6536:22:19"
                    },
                    "referencedDeclaration": 19228,
                    "src": "6536:22:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFederatedAttestations_$19228",
                      "typeString": "contract IFederatedAttestations"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6535:24:19"
            },
            "scope": 7274,
            "src": "6477:218:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7104,
              "nodeType": "Block",
              "src": "6754:84:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7100,
                            "name": "FREEZER_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6843,
                            "src": "6812:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7098,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "6776:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6793:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "6776:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6776:56:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7097,
                      "name": "IFreezer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17535,
                      "src": "6767:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFreezer_$17535_$",
                        "typeString": "type(contract IFreezer)"
                      }
                    },
                    "id": 7102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6767:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFreezer_$17535",
                      "typeString": "contract IFreezer"
                    }
                  },
                  "functionReturnParameters": 7096,
                  "id": 7103,
                  "nodeType": "Return",
                  "src": "6760:73:19"
                }
              ]
            },
            "id": 7105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFreezer",
            "nameLocation": "6708:10:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6718:2:19"
            },
            "returnParameters": {
              "id": 7096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7105,
                  "src": "6744:8:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFreezer_$17535",
                    "typeString": "contract IFreezer"
                  },
                  "typeName": {
                    "id": 7094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7093,
                      "name": "IFreezer",
                      "nameLocations": [
                        "6744:8:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17535,
                      "src": "6744:8:19"
                    },
                    "referencedDeclaration": 17535,
                    "src": "6744:8:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFreezer_$17535",
                      "typeString": "contract IFreezer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6743:10:19"
            },
            "scope": 7274,
            "src": "6699:139:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7118,
              "nodeType": "Block",
              "src": "6897:85:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7114,
                            "name": "GOLD_TOKEN_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6851,
                            "src": "6953:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7112,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "6917:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6934:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "6917:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6917:59:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7111,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "6910:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 7116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6910:67:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$190",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 7110,
                  "id": 7117,
                  "nodeType": "Return",
                  "src": "6903:74:19"
                }
              ]
            },
            "id": 7119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGoldToken",
            "nameLocation": "6851:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6863:2:19"
            },
            "returnParameters": {
              "id": 7110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7119,
                  "src": "6889:6:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$190",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 7108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7107,
                      "name": "IERC20",
                      "nameLocations": [
                        "6889:6:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 190,
                      "src": "6889:6:19"
                    },
                    "referencedDeclaration": 190,
                    "src": "6889:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$190",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6888:8:19"
            },
            "scope": 7274,
            "src": "6842:140:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7132,
              "nodeType": "Block",
              "src": "7041:85:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7128,
                            "name": "CELO_TOKEN_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6947,
                            "src": "7097:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7126,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "7061:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7078:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "7061:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7061:59:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7125,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "7054:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 7130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7054:67:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$190",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 7124,
                  "id": 7131,
                  "nodeType": "Return",
                  "src": "7047:74:19"
                }
              ]
            },
            "id": 7133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCeloToken",
            "nameLocation": "6995:12:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7007:2:19"
            },
            "returnParameters": {
              "id": 7124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7133,
                  "src": "7033:6:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$190",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 7122,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7121,
                      "name": "IERC20",
                      "nameLocations": [
                        "7033:6:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 190,
                      "src": "7033:6:19"
                    },
                    "referencedDeclaration": 190,
                    "src": "7033:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$190",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7032:8:19"
            },
            "scope": 7274,
            "src": "6986:140:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7146,
              "nodeType": "Block",
              "src": "7191:90:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7142,
                            "name": "GOVERNANCE_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6859,
                            "src": "7252:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7140,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "7216:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7233:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "7216:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7216:59:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7139,
                      "name": "IGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18193,
                      "src": "7204:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IGovernance_$18193_$",
                        "typeString": "type(contract IGovernance)"
                      }
                    },
                    "id": 7144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7204:72:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGovernance_$18193",
                      "typeString": "contract IGovernance"
                    }
                  },
                  "functionReturnParameters": 7138,
                  "id": 7145,
                  "nodeType": "Return",
                  "src": "7197:79:19"
                }
              ]
            },
            "id": 7147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGovernance",
            "nameLocation": "7139:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7152:2:19"
            },
            "returnParameters": {
              "id": 7138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7147,
                  "src": "7178:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IGovernance_$18193",
                    "typeString": "contract IGovernance"
                  },
                  "typeName": {
                    "id": 7136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7135,
                      "name": "IGovernance",
                      "nameLocations": [
                        "7178:11:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18193,
                      "src": "7178:11:19"
                    },
                    "referencedDeclaration": 18193,
                    "src": "7178:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IGovernance_$18193",
                      "typeString": "contract IGovernance"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7177:13:19"
            },
            "scope": 7274,
            "src": "7130:151:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7160,
              "nodeType": "Block",
              "src": "7346:91:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7156,
                            "name": "LOCKED_GOLD_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6875,
                            "src": "7407:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7154,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "7371:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7388:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "7371:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7371:60:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7153,
                      "name": "ILockedGold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18472,
                      "src": "7359:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ILockedGold_$18472_$",
                        "typeString": "type(contract ILockedGold)"
                      }
                    },
                    "id": 7158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7359:73:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILockedGold_$18472",
                      "typeString": "contract ILockedGold"
                    }
                  },
                  "functionReturnParameters": 7152,
                  "id": 7159,
                  "nodeType": "Return",
                  "src": "7352:80:19"
                }
              ]
            },
            "id": 7161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLockedGold",
            "nameLocation": "7294:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7307:2:19"
            },
            "returnParameters": {
              "id": 7152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7161,
                  "src": "7333:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILockedGold_$18472",
                    "typeString": "contract ILockedGold"
                  },
                  "typeName": {
                    "id": 7150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7149,
                      "name": "ILockedGold",
                      "nameLocations": [
                        "7333:11:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18472,
                      "src": "7333:11:19"
                    },
                    "referencedDeclaration": 18472,
                    "src": "7333:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILockedGold_$18472",
                      "typeString": "contract ILockedGold"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7332:13:19"
            },
            "scope": 7274,
            "src": "7285:152:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7174,
              "nodeType": "Block",
              "src": "7502:91:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7170,
                            "name": "LOCKED_CELO_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6955,
                            "src": "7563:23:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7168,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "7527:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7544:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "7527:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7527:60:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7167,
                      "name": "ILockedCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18336,
                      "src": "7515:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ILockedCelo_$18336_$",
                        "typeString": "type(contract ILockedCelo)"
                      }
                    },
                    "id": 7172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7515:73:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILockedCelo_$18336",
                      "typeString": "contract ILockedCelo"
                    }
                  },
                  "functionReturnParameters": 7166,
                  "id": 7173,
                  "nodeType": "Return",
                  "src": "7508:80:19"
                }
              ]
            },
            "id": 7175,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLockedCelo",
            "nameLocation": "7450:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7463:2:19"
            },
            "returnParameters": {
              "id": 7166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7165,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7175,
                  "src": "7489:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILockedCelo_$18336",
                    "typeString": "contract ILockedCelo"
                  },
                  "typeName": {
                    "id": 7164,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7163,
                      "name": "ILockedCelo",
                      "nameLocations": [
                        "7489:11:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18336,
                      "src": "7489:11:19"
                    },
                    "referencedDeclaration": 18336,
                    "src": "7489:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILockedCelo_$18336",
                      "typeString": "contract ILockedCelo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7488:13:19"
            },
            "scope": 7274,
            "src": "7441:152:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7188,
              "nodeType": "Block",
              "src": "7650:82:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7184,
                            "name": "RANDOM_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6891,
                            "src": "7707:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7182,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "7671:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7688:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "7671:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7671:55:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7181,
                      "name": "IRandom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19257,
                      "src": "7663:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IRandom_$19257_$",
                        "typeString": "type(contract IRandom)"
                      }
                    },
                    "id": 7186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7663:64:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRandom_$19257",
                      "typeString": "contract IRandom"
                    }
                  },
                  "functionReturnParameters": 7180,
                  "id": 7187,
                  "nodeType": "Return",
                  "src": "7656:71:19"
                }
              ]
            },
            "id": 7189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandom",
            "nameLocation": "7606:9:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7615:2:19"
            },
            "returnParameters": {
              "id": 7180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7189,
                  "src": "7641:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRandom_$19257",
                    "typeString": "contract IRandom"
                  },
                  "typeName": {
                    "id": 7178,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7177,
                      "name": "IRandom",
                      "nameLocations": [
                        "7641:7:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19257,
                      "src": "7641:7:19"
                    },
                    "referencedDeclaration": 19257,
                    "src": "7641:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRandom_$19257",
                      "typeString": "contract IRandom"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7640:9:19"
            },
            "scope": 7274,
            "src": "7597:135:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7202,
              "nodeType": "Block",
              "src": "7955:97:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7198,
                            "name": "SORTED_ORACLES_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6899,
                            "src": "8019:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7196,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "7983:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8000:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "7983:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7983:63:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7195,
                      "name": "ISortedOracles",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19333,
                      "src": "7968:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISortedOracles_$19333_$",
                        "typeString": "type(contract ISortedOracles)"
                      }
                    },
                    "id": 7200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7968:79:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISortedOracles_$19333",
                      "typeString": "contract ISortedOracles"
                    }
                  },
                  "functionReturnParameters": 7194,
                  "id": 7201,
                  "nodeType": "Return",
                  "src": "7961:86:19"
                }
              ]
            },
            "id": 7203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSortedOracles",
            "nameLocation": "7897:16:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7913:2:19"
            },
            "returnParameters": {
              "id": 7194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7203,
                  "src": "7939:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISortedOracles_$19333",
                    "typeString": "contract ISortedOracles"
                  },
                  "typeName": {
                    "id": 7192,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7191,
                      "name": "ISortedOracles",
                      "nameLocations": [
                        "7939:14:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19333,
                      "src": "7939:14:19"
                    },
                    "referencedDeclaration": 19333,
                    "src": "7939:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISortedOracles_$19333",
                      "typeString": "contract ISortedOracles"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7938:16:19"
            },
            "scope": 7274,
            "src": "7888:164:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7216,
              "nodeType": "Block",
              "src": "8758:90:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7212,
                            "name": "VALIDATORS_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6931,
                            "src": "8819:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7210,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "8783:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8800:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "8783:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8783:59:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7209,
                      "name": "IValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18940,
                      "src": "8771:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IValidators_$18940_$",
                        "typeString": "type(contract IValidators)"
                      }
                    },
                    "id": 7214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8771:72:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValidators_$18940",
                      "typeString": "contract IValidators"
                    }
                  },
                  "functionReturnParameters": 7208,
                  "id": 7215,
                  "nodeType": "Return",
                  "src": "8764:79:19"
                }
              ]
            },
            "id": 7217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidators",
            "nameLocation": "8706:13:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8719:2:19"
            },
            "returnParameters": {
              "id": 7208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7217,
                  "src": "8745:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IValidators_$18940",
                    "typeString": "contract IValidators"
                  },
                  "typeName": {
                    "id": 7206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7205,
                      "name": "IValidators",
                      "nameLocations": [
                        "8745:11:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18940,
                      "src": "8745:11:19"
                    },
                    "referencedDeclaration": 18940,
                    "src": "8745:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IValidators_$18940",
                      "typeString": "contract IValidators"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8744:13:19"
            },
            "scope": 7274,
            "src": "8697:151:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7230,
              "nodeType": "Block",
              "src": "8937:138:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7226,
                            "name": "CELO_UNRELEASED_TREASURY_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6939,
                            "src": "9025:36:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7224,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "8989:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9006:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "8989:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8989:73:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7223,
                      "name": "ICeloUnreleasedTreasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17265,
                      "src": "8956:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ICeloUnreleasedTreasury_$17265_$",
                        "typeString": "type(contract ICeloUnreleasedTreasury)"
                      }
                    },
                    "id": 7228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8956:114:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICeloUnreleasedTreasury_$17265",
                      "typeString": "contract ICeloUnreleasedTreasury"
                    }
                  },
                  "functionReturnParameters": 7222,
                  "id": 7229,
                  "nodeType": "Return",
                  "src": "8943:127:19"
                }
              ]
            },
            "id": 7231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCeloUnreleasedTreasury",
            "nameLocation": "8861:25:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8886:2:19"
            },
            "returnParameters": {
              "id": 7222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7231,
                  "src": "8912:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICeloUnreleasedTreasury_$17265",
                    "typeString": "contract ICeloUnreleasedTreasury"
                  },
                  "typeName": {
                    "id": 7220,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7219,
                      "name": "ICeloUnreleasedTreasury",
                      "nameLocations": [
                        "8912:23:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17265,
                      "src": "8912:23:19"
                    },
                    "referencedDeclaration": 17265,
                    "src": "8912:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICeloUnreleasedTreasury_$17265",
                      "typeString": "contract ICeloUnreleasedTreasury"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8911:25:19"
            },
            "scope": 7274,
            "src": "8852:223:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7244,
              "nodeType": "Block",
              "src": "9144:95:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7240,
                            "name": "EPOCH_REWARDS_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6963,
                            "src": "9207:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7238,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "9171:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9188:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "9171:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9171:62:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7237,
                      "name": "IEpochRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18121,
                      "src": "9157:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IEpochRewards_$18121_$",
                        "typeString": "type(contract IEpochRewards)"
                      }
                    },
                    "id": 7242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9157:77:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEpochRewards_$18121",
                      "typeString": "contract IEpochRewards"
                    }
                  },
                  "functionReturnParameters": 7236,
                  "id": 7243,
                  "nodeType": "Return",
                  "src": "9150:84:19"
                }
              ]
            },
            "id": 7245,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpochRewards",
            "nameLocation": "9088:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9103:2:19"
            },
            "returnParameters": {
              "id": 7236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7245,
                  "src": "9129:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEpochRewards_$18121",
                    "typeString": "contract IEpochRewards"
                  },
                  "typeName": {
                    "id": 7234,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7233,
                      "name": "IEpochRewards",
                      "nameLocations": [
                        "9129:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 18121,
                      "src": "9129:13:19"
                    },
                    "referencedDeclaration": 18121,
                    "src": "9129:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEpochRewards_$18121",
                      "typeString": "contract IEpochRewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9128:15:19"
            },
            "scope": 7274,
            "src": "9079:160:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7258,
              "nodeType": "Block",
              "src": "9308:95:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7254,
                            "name": "EPOCH_MANAGER_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6979,
                            "src": "9371:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7252,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "9335:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9352:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "9335:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9335:62:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7251,
                      "name": "IEpochManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17462,
                      "src": "9321:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IEpochManager_$17462_$",
                        "typeString": "type(contract IEpochManager)"
                      }
                    },
                    "id": 7256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9321:77:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEpochManager_$17462",
                      "typeString": "contract IEpochManager"
                    }
                  },
                  "functionReturnParameters": 7250,
                  "id": 7257,
                  "nodeType": "Return",
                  "src": "9314:84:19"
                }
              ]
            },
            "id": 7259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpochManager",
            "nameLocation": "9252:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9267:2:19"
            },
            "returnParameters": {
              "id": 7250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7259,
                  "src": "9293:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEpochManager_$17462",
                    "typeString": "contract IEpochManager"
                  },
                  "typeName": {
                    "id": 7248,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7247,
                      "name": "IEpochManager",
                      "nameLocations": [
                        "9293:13:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 17462,
                      "src": "9293:13:19"
                    },
                    "referencedDeclaration": 17462,
                    "src": "9293:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEpochManager_$17462",
                      "typeString": "contract IEpochManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9292:15:19"
            },
            "scope": 7274,
            "src": "9243:160:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7272,
              "nodeType": "Block",
              "src": "9470:94:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7268,
                            "name": "SCORE_MANAGER_REGISTRY_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6987,
                            "src": "9532:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 7266,
                            "name": "registryContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6755,
                            "src": "9496:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistry_$17608",
                              "typeString": "contract IRegistry"
                            }
                          },
                          "id": 7267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9513:18:19",
                          "memberName": "getAddressForOrDie",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17576,
                          "src": "9496:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 7269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9496:62:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7265,
                      "name": "IScoreReader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7470,
                      "src": "9483:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IScoreReader_$7470_$",
                        "typeString": "type(contract IScoreReader)"
                      }
                    },
                    "id": 7270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9483:76:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IScoreReader_$7470",
                      "typeString": "contract IScoreReader"
                    }
                  },
                  "functionReturnParameters": 7264,
                  "id": 7271,
                  "nodeType": "Return",
                  "src": "9476:83:19"
                }
              ]
            },
            "id": 7273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getScoreReader",
            "nameLocation": "9416:14:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9430:2:19"
            },
            "returnParameters": {
              "id": 7264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7263,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7273,
                  "src": "9456:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IScoreReader_$7470",
                    "typeString": "contract IScoreReader"
                  },
                  "typeName": {
                    "id": 7262,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 7261,
                      "name": "IScoreReader",
                      "nameLocations": [
                        "9456:12:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7470,
                      "src": "9456:12:19"
                    },
                    "referencedDeclaration": 7470,
                    "src": "9456:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IScoreReader_$7470",
                      "typeString": "contract IScoreReader"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9455:14:19"
            },
            "scope": 7274,
            "src": "9407:157:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 7275,
        "src": "1625:7941:19",
        "usedErrors": []
      }
    ],
    "src": "42:9525:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.160Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}