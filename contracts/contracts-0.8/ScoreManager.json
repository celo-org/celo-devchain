{
  "contractName": "ScoreManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "group",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "name": "GroupScoreSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "scoreManagerSetter",
          "type": "address"
        }
      ],
      "name": "ScoreManagerSetterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "name": "ValidatorScoreSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ZERO_SCORE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "groupScores",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validatorScores",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "group",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "name": "setGroupScore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "score",
          "type": "uint256"
        }
      ],
      "name": "setValidatorScore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_scoreManagerSetter",
          "type": "address"
        }
      ],
      "name": "setScoreManagerSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "group",
          "type": "address"
        }
      ],
      "name": "getGroupScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "getValidatorScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getScoreManagerSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"GroupScoreSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"scoreManagerSetter\",\"type\":\"address\"}],\"name\":\"ScoreManagerSetterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"ValidatorScoreSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ZERO_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"getGroupScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScoreManagerSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"getValidatorScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"groupScores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"setGroupScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scoreManagerSetter\",\"type\":\"address\"}],\"name\":\"setScoreManagerSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"setValidatorScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validatorScores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"getGroupScore(address)\":{\"params\":{\"group\":\"The address of the group of interest.\"}},\"getValidatorScore(address)\":{\"params\":{\"validator\":\"The address of the validator of interest.\"}},\"getVersionNumber()\":{\"returns\":{\"_0\":\"Storage version of the contract.\",\"_1\":\"Major version of the contract.\",\"_2\":\"Minor version of the contract.\",\"_3\":\"Patch version of the contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setGroupScore(address,uint256)\":{\"details\":\"Set value to `ZERO_SCORE` to set score to zero.\",\"params\":{\"group\":\"The address of the group whose score will be updated.\",\"score\":\"The new score of the group to be updated.\"}},\"setScoreManagerSetter(address)\":{\"params\":{\"_scoreManagerSetter\":\"Address of whitelisted score setter.\"}},\"setValidatorScore(address,uint256)\":{\"details\":\"Set value to `ZERO_SCORE` to set score to zero.\",\"params\":{\"score\":\"The new score of the validator to be updated.\",\"validator\":\"The address of the validator whose score will be updated.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ScoreManager contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Sets initialized == true on implementation contracts\"},\"getGroupScore(address)\":{\"notice\":\"Returns the score of the specified group.\"},\"getScoreManagerSetter()\":{\"notice\":\"Returns the address of the whitelisted score setter.\"},\"getValidatorScore(address)\":{\"notice\":\"Returns the score of the specified validator.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize()\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"setGroupScore(address,uint256)\":{\"notice\":\"Sets the group score for a specified group.\"},\"setScoreManagerSetter(address)\":{\"notice\":\"Sets the whitelisted address allowed to set validator and group scores.\"},\"setValidatorScore(address,uint256)\":{\"notice\":\"Sets the score for a specified validator.\"}},\"notice\":\"This contract updates the score of validators and validator groups on L2. This replaces the previous method of calculating scores based on validator uptime with a governable score.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts-0.8/common/ScoreManager.sol\":\"ScoreManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts8/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts8/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"project:/contracts-0.8/common/ScoreManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.8.7 <0.8.20;\\n\\nimport \\\"../../contracts/common/Initializable.sol\\\";\\nimport \\\"../../contracts/common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"@openzeppelin/contracts8/access/Ownable.sol\\\";\\n\\nimport \\\"../../contracts/common/interfaces/IScoreManagerGovernance.sol\\\";\\nimport \\\"../../contracts/common/interfaces/IScoreManager.sol\\\";\\n\\n/**\\n * @title ScoreManager contract\\n * @notice This contract updates the score of validators and validator groups on L2.\\n * This replaces the previous method of calculating scores based on validator uptime\\n * with a governable score.\\n */\\ncontract ScoreManager is\\n  Initializable,\\n  Ownable,\\n  IScoreManager,\\n  IScoreManagerGovernance,\\n  ICeloVersionedContract\\n{\\n  struct Score {\\n    uint256 score;\\n    bool exists;\\n  }\\n\\n  uint256 private constant FIXED1_UINT = 1e24;\\n  uint256 public constant ZERO_SCORE = FIXED1_UINT + 1;\\n\\n  mapping(address => uint256) public groupScores;\\n  mapping(address => uint256) public validatorScores;\\n  address private scoreManagerSetter;\\n\\n  event GroupScoreSet(address indexed group, uint256 score);\\n  event ValidatorScoreSet(address indexed validator, uint256 score);\\n  event ScoreManagerSetterSet(address indexed scoreManagerSetter);\\n\\n  /**\\n   * @notice Reverts if msg.sender is not authorized to update score.\\n   */\\n  modifier onlyAuthorizedToUpdateScore() {\\n    require(\\n      msg.sender == owner() || scoreManagerSetter == msg.sender,\\n      \\\"Sender not authorized to update score\\\"\\n    );\\n    _;\\n  }\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   */\\n  function initialize() external initializer {\\n    _transferOwnership(msg.sender);\\n  }\\n\\n  /**\\n   * @notice Sets the group score for a specified group.\\n   * @param group The address of the group whose score will be updated.\\n   * @param score The new score of the group to be updated.\\n   * @dev Set value to `ZERO_SCORE` to set score to zero.\\n   */\\n  function setGroupScore(address group, uint256 score) external onlyAuthorizedToUpdateScore {\\n    groupScores[group] = checkScore(score);\\n    emit GroupScoreSet(group, score);\\n  }\\n\\n  /**\\n   * @notice Sets the score for a specified validator.\\n   * @param validator The address of the validator whose score will be updated.\\n   * @param score The new score of the validator to be updated.\\n   * @dev Set value to `ZERO_SCORE` to set score to zero.\\n   */\\n  function setValidatorScore(\\n    address validator,\\n    uint256 score\\n  ) external onlyAuthorizedToUpdateScore {\\n    validatorScores[validator] = checkScore(score);\\n    emit ValidatorScoreSet(validator, score);\\n  }\\n\\n  /**\\n   * @notice Sets the whitelisted address allowed to set validator and group scores.\\n   * @param _scoreManagerSetter Address of whitelisted score setter.\\n   */\\n  function setScoreManagerSetter(address _scoreManagerSetter) external onlyOwner {\\n    scoreManagerSetter = _scoreManagerSetter;\\n    emit ScoreManagerSetterSet(_scoreManagerSetter);\\n  }\\n\\n  /**\\n   * @notice Returns the score of the specified group.\\n   * @param group The address of the group of interest.\\n   */\\n  function getGroupScore(address group) external view returns (uint256) {\\n    return getScore(groupScores[group]);\\n  }\\n\\n  /**\\n   * @notice Returns the score of the specified validator.\\n   * @param validator The address of the validator of interest.\\n   */\\n  function getValidatorScore(address validator) external view returns (uint256) {\\n    return getScore(validatorScores[validator]);\\n  }\\n\\n  /**\\n   * @notice Returns the address of the whitelisted score setter.\\n   */\\n  function getScoreManagerSetter() external view returns (address) {\\n    return scoreManagerSetter;\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 1, 0, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the actual score based on the input value.\\n   * @param score The value from `validatorScores` or `groupScores` mappings.\\n   * @dev To set the score to 100% by default when the contract is first initialized\\n   * or when new groups or validators are added, the default score of 0 returns 1e24.\\n   * To encode a score value of 0 we use the magic number ZERO_SCORE = (1e24)+1.\\n   */\\n  function getScore(uint256 score) internal pure returns (uint256) {\\n    if (score == 0) {\\n      return FIXED1_UINT;\\n    } else if (score == ZERO_SCORE) {\\n      return 0;\\n    }\\n    return score;\\n  }\\n\\n  /**\\n   * @notice Checks if the score is valid and returns the score.\\n   * @param score The score to be checked.\\n   */\\n  function checkScore(uint256 score) internal pure returns (uint256) {\\n    if (score == 0) {\\n      return ZERO_SCORE;\\n    }\\n\\n    require(score <= FIXED1_UINT, \\\"Score must be less than or equal to 1e24.\\\");\\n    return score;\\n  }\\n}\\n\",\"keccak256\":\"0xbbaa2f3a238a62ad6a72486170a5d2fbd88c6dbaf45b4d3f843aa17ba228d2b4\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IScoreManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IScoreManager {\\n  function getValidatorScore(address validator) external view returns (uint256);\\n  function getGroupScore(address validator) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4c647ccb70a1d98e51188ce616af133aaa130baecb096435229c5bd59585cba5\",\"license\":\"LGPL-3.0-only\"},\"project:/contracts/common/interfaces/IScoreManagerGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n// import \\\"./IScoreManager.sol\\\";\\n// TODO make import when everything is ported to Solidity 0.8\\n\\ninterface IScoreManagerGovernance {\\n  function setGroupScore(address group, uint256 score) external;\\n  function setValidatorScore(address validator, uint256 score) external;\\n  function setScoreManagerSetter(address) external;\\n  function getScoreManagerSetter() external view returns (address);\\n}\\n\",\"keccak256\":\"0x9f9e0aafde24dad09daa3f30c3bed96da3feb8e0ea993750b100c24981c73560\",\"license\":\"LGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516108db3803806108db83398101604081905261002f916100ac565b8080610043576000805460ff191660011790555b5061004d33610053565b506100d5565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000602082840312156100be57600080fd5b815180151581146100ce57600080fd5b9392505050565b6107f7806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80638da5cb5b11610097578063e5079ddc11610066578063e5079ddc146101f0578063e612fab514610203578063f2fde38b14610223578063f5a9f94a1461023657600080fd5b80638da5cb5b1461018f578063c40c8d06146101b9578063ddfebf96146101cc578063e33e59d4146101dd57600080fd5b806354255be0116100d357806354255be01461014457806361df2a451461016a578063715018a61461017f5780638129fc1c1461018757600080fd5b80627ddf48146100f9578063158ef93e1461011457806321c082aa14610131575b600080fd5b610101610256565b6040519081526020015b60405180910390f35b6000546101219060ff1681565b604051901515815260200161010b565b61010161013f36600461070f565b61026e565b60018060008060408051948552602085019390935291830152606082015260800161010b565b61017d61017836600461070f565b610296565b005b61017d6102e8565b61017d6102fc565b60005461010090046001600160a01b03165b6040516001600160a01b03909116815260200161010b565b61017d6101c7366004610731565b61036a565b6003546001600160a01b03166101a1565b61017d6101eb366004610731565b610424565b6101016101fe36600461070f565b6104d2565b61010161021136600461070f565b60016020526000908152604090205481565b61017d61023136600461070f565b6104f4565b61010161024436600461070f565b60026020526000908152604090205481565b61026b69d3c21bcecceda1000000600161075b565b81565b6001600160a01b0381166000908152600160205260408120546102909061056d565b92915050565b61029e6105af565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f32828b94a29931495ac9e8b4fa1cbe7ab0801e751dabe58f16bccd65dee74a9990600090a250565b6102f06105af565b6102fa600061060f565b565b60005460ff16156103545760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a65640000000060448201526064015b60405180910390fd5b6000805460ff191660011790556102fa3361060f565b60005461010090046001600160a01b03166001600160a01b0316336001600160a01b031614806103a457506003546001600160a01b031633145b6103c05760405162461bcd60e51b815260040161034b9061077c565b6103c981610668565b6001600160a01b038316600081815260016020526040908190209290925590517fc8c2849c9c4276f0047a5b47a07fe4fa90d9ca9abcfe223b096b3c1e180fafb0906104189084815260200190565b60405180910390a25050565b60005461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061045e57506003546001600160a01b031633145b61047a5760405162461bcd60e51b815260040161034b9061077c565b61048381610668565b6001600160a01b038316600081815260026020526040908190209290925590517f0df00ce445711e31bba70de9ebb21e955b83927413ba5d01dfbbed0b773a4765906104189084815260200190565b6001600160a01b0381166000908152600260205260408120546102909061056d565b6104fc6105af565b6001600160a01b0381166105615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034b565b61056a8161060f565b50565b600081600003610588575069d3c21bcecceda1000000919050565b61059d69d3c21bcecceda1000000600161075b565b82036105ab57506000919050565b5090565b6000546001600160a01b036101009091041633146102fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034b565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000816000036106875761029069d3c21bcecceda1000000600161075b565b69d3c21bcecceda10000008211156105ab5760405162461bcd60e51b815260206004820152602960248201527f53636f7265206d757374206265206c657373207468616e206f7220657175616c604482015268103a379018b2991a1760b91b606482015260840161034b565b80356001600160a01b038116811461070a57600080fd5b919050565b60006020828403121561072157600080fd5b61072a826106f3565b9392505050565b6000806040838503121561074457600080fd5b61074d836106f3565b946020939093013593505050565b8082018082111561029057634e487b7160e01b600052601160045260246000fd5b60208082526025908201527f53656e646572206e6f7420617574686f72697a656420746f207570646174652060408201526473636f726560d81b60608201526080019056fea2646970667358221220d331e4796af41fdb73cc4a8611d01d98d8f2a7fcaf39683bbc7d5413e0b55bcf64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f45760003560e01c80638da5cb5b11610097578063e5079ddc11610066578063e5079ddc146101f0578063e612fab514610203578063f2fde38b14610223578063f5a9f94a1461023657600080fd5b80638da5cb5b1461018f578063c40c8d06146101b9578063ddfebf96146101cc578063e33e59d4146101dd57600080fd5b806354255be0116100d357806354255be01461014457806361df2a451461016a578063715018a61461017f5780638129fc1c1461018757600080fd5b80627ddf48146100f9578063158ef93e1461011457806321c082aa14610131575b600080fd5b610101610256565b6040519081526020015b60405180910390f35b6000546101219060ff1681565b604051901515815260200161010b565b61010161013f36600461070f565b61026e565b60018060008060408051948552602085019390935291830152606082015260800161010b565b61017d61017836600461070f565b610296565b005b61017d6102e8565b61017d6102fc565b60005461010090046001600160a01b03165b6040516001600160a01b03909116815260200161010b565b61017d6101c7366004610731565b61036a565b6003546001600160a01b03166101a1565b61017d6101eb366004610731565b610424565b6101016101fe36600461070f565b6104d2565b61010161021136600461070f565b60016020526000908152604090205481565b61017d61023136600461070f565b6104f4565b61010161024436600461070f565b60026020526000908152604090205481565b61026b69d3c21bcecceda1000000600161075b565b81565b6001600160a01b0381166000908152600160205260408120546102909061056d565b92915050565b61029e6105af565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f32828b94a29931495ac9e8b4fa1cbe7ab0801e751dabe58f16bccd65dee74a9990600090a250565b6102f06105af565b6102fa600061060f565b565b60005460ff16156103545760405162461bcd60e51b815260206004820152601c60248201527f636f6e747261637420616c726561647920696e697469616c697a65640000000060448201526064015b60405180910390fd5b6000805460ff191660011790556102fa3361060f565b60005461010090046001600160a01b03166001600160a01b0316336001600160a01b031614806103a457506003546001600160a01b031633145b6103c05760405162461bcd60e51b815260040161034b9061077c565b6103c981610668565b6001600160a01b038316600081815260016020526040908190209290925590517fc8c2849c9c4276f0047a5b47a07fe4fa90d9ca9abcfe223b096b3c1e180fafb0906104189084815260200190565b60405180910390a25050565b60005461010090046001600160a01b03166001600160a01b0316336001600160a01b0316148061045e57506003546001600160a01b031633145b61047a5760405162461bcd60e51b815260040161034b9061077c565b61048381610668565b6001600160a01b038316600081815260026020526040908190209290925590517f0df00ce445711e31bba70de9ebb21e955b83927413ba5d01dfbbed0b773a4765906104189084815260200190565b6001600160a01b0381166000908152600260205260408120546102909061056d565b6104fc6105af565b6001600160a01b0381166105615760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034b565b61056a8161060f565b50565b600081600003610588575069d3c21bcecceda1000000919050565b61059d69d3c21bcecceda1000000600161075b565b82036105ab57506000919050565b5090565b6000546001600160a01b036101009091041633146102fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034b565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6000816000036106875761029069d3c21bcecceda1000000600161075b565b69d3c21bcecceda10000008211156105ab5760405162461bcd60e51b815260206004820152602960248201527f53636f7265206d757374206265206c657373207468616e206f7220657175616c604482015268103a379018b2991a1760b91b606482015260840161034b565b80356001600160a01b038116811461070a57600080fd5b919050565b60006020828403121561072157600080fd5b61072a826106f3565b9392505050565b6000806040838503121561074457600080fd5b61074d836106f3565b946020939093013593505050565b8082018082111561029057634e487b7160e01b600052601160045260246000fd5b60208082526025908201527f53656e646572206e6f7420617574686f72697a656420746f207570646174652060408201526473636f726560d81b60608201526080019056fea2646970667358221220d331e4796af41fdb73cc4a8611d01d98d8f2a7fcaf39683bbc7d5413e0b55bcf64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:293:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:85",
                "type": ""
              }
            ],
            "src": "14:277:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3785:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:85",
                "type": ""
              }
            ],
            "src": "14:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "291:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "301:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "313:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "309:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "309:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "301:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "343:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "368:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "361:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "361:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "354:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "354:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "336:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "336:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "260:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "271:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "282:4:85",
                "type": ""
              }
            ],
            "src": "196:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "437:124:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "447:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "469:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "456:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:20:85"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "447:5:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "539:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "548:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "551:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "541:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "541:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "541:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "498:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "509:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "524:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "529:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "520:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "520:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "533:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "516:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "516:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "505:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "505:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "495:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "495:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "488:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "485:70:85"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "416:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "427:5:85",
                "type": ""
              }
            ],
            "src": "388:173:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "636:116:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "682:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "691:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "694:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "684:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "684:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "684:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "657:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "666:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "653:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "653:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "678:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "649:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "649:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "646:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "707:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "736:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "717:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "707:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "602:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "613:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "625:6:85",
                "type": ""
              }
            ],
            "src": "566:186:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "942:206:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "952:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "964:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "975:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "960:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "952:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "995:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1006:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "988:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "988:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "988:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1033:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1044:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1029:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1029:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1049:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1022:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1022:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1022:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:18:85"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1092:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1065:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1065:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1065:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1119:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1130:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1115:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:18:85"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1135:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1108:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1108:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "887:9:85",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "898:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "906:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "914:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "922:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "933:4:85",
                "type": ""
              }
            ],
            "src": "757:391:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1254:102:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1264:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1276:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1287:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1272:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1264:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1306:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1321:6:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1337:3:85",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1342:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1333:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1333:11:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1346:1:85",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1329:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1329:19:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1317:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1317:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1299:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1299:51:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1299:51:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1223:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1234:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1245:4:85",
                "type": ""
              }
            ],
            "src": "1153:203:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1448:167:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1494:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1503:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1506:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1496:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1496:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1496:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1469:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1478:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1465:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1465:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1490:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1461:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1461:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1458:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1519:39:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1548:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1529:18:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:29:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1519:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1567:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1594:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1605:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1590:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1590:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1577:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1567:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1406:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1417:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1429:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1437:6:85",
                "type": ""
              }
            ],
            "src": "1361:254:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1668:174:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1678:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1689:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1692:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1685:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1685:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1678:3:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1725:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1746:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1753:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1758:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1749:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1749:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1739:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1739:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1739:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1790:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1793:4:85",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1783:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1783:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1783:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1818:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1821:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1811:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1811:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1811:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1709:1:85"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "1712:3:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1706:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1706:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1703:133:85"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1651:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1654:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "1660:3:85",
                "type": ""
              }
            ],
            "src": "1620:222:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2021:178:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2038:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2049:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2031:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2031:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2031:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2072:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2083:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2068:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2068:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2088:2:85",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2061:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2061:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2111:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2122:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2107:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2107:18:85"
                      },
                      {
                        "hexValue": "636f6e747261637420616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2127:30:85",
                        "type": "",
                        "value": "contract already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2100:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:58:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2100:58:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2167:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2179:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2190:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2175:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2175:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2167:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1998:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2012:4:85",
                "type": ""
              }
            ],
            "src": "1847:352:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2378:227:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2395:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2406:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2388:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2388:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2388:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2429:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2440:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2425:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2445:2:85",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2418:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2468:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2479:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2464:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2464:18:85"
                      },
                      {
                        "hexValue": "53656e646572206e6f7420617574686f72697a656420746f2075706461746520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2484:34:85",
                        "type": "",
                        "value": "Sender not authorized to update "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2457:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2457:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2457:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2539:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2550:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2535:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2535:18:85"
                      },
                      {
                        "hexValue": "73636f7265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2555:7:85",
                        "type": "",
                        "value": "score"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2528:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2528:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2528:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2572:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2584:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2595:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2580:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2580:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2572:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_26d2865a23f375130f8eec58003a894becf7565a8a00c02a19e119cfe0644ee1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2355:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2369:4:85",
                "type": ""
              }
            ],
            "src": "2204:401:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2784:228:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2801:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2812:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2794:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2794:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2835:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2846:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2831:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2831:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2851:2:85",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2824:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2824:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2874:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2885:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2870:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2870:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2890:34:85",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2863:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2863:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2863:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2945:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2956:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2941:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2941:18:85"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2961:8:85",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2934:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2934:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2934:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2979:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2991:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3002:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2987:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2979:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2761:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2775:4:85",
                "type": ""
              }
            ],
            "src": "2610:402:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3191:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3208:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3219:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3201:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3201:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3201:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3242:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3253:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3238:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3238:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3258:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3231:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3231:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3281:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3292:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3277:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3277:18:85"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3297:34:85",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3270:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3270:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3270:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3341:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3353:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3364:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3349:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3349:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3341:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3168:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3182:4:85",
                "type": ""
              }
            ],
            "src": "3017:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3552:231:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3569:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3562:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3562:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3562:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3603:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3599:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3619:2:85",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3642:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3653:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3638:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3638:18:85"
                      },
                      {
                        "hexValue": "53636f7265206d757374206265206c657373207468616e206f7220657175616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3658:34:85",
                        "type": "",
                        "value": "Score must be less than or equal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3631:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3631:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3631:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3713:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3724:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3709:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3709:18:85"
                      },
                      {
                        "hexValue": "20746f20316532342e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3729:11:85",
                        "type": "",
                        "value": " to 1e24."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:39:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3702:39:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3750:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3762:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3773:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3758:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3758:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3750:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63e2f052ceca9590100694dc5d20ca440dc7f8395e288859982d5b0b11b99eed__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3529:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3543:4:85",
                "type": ""
              }
            ],
            "src": "3378:405:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0eaa08b63d5ee9e058835eb2dc7a36f8bcf5c2ea6d8d745d8265f9e4063fd134__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"contract already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_26d2865a23f375130f8eec58003a894becf7565a8a00c02a19e119cfe0644ee1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Sender not authorized to update \")\n        mstore(add(headStart, 96), \"score\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_63e2f052ceca9590100694dc5d20ca440dc7f8395e288859982d5b0b11b99eed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Score must be less than or equal\")\n        mstore(add(headStart, 96), \" to 1e24.\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "626:4609:16:-:0;;;1668:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1705:4;896:17:59;891:57;;923:11;:18;;-1:-1:-1;;923:18:59;937:4;923:18;;;891:57;-1:-1:-1;936:32:0;719:10:2;936:18:0;:32::i;:::-;1668:45:16;626:4609;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;14:277:85:-;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:85:o;:::-;626:4609:16;;;;;;",
  "deployedSourceMap": "626:4609:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:52;;;:::i;:::-;;;160:25:85;;;148:2;133:18;857:52:16;;;;;;;;319:23:59;;;;;;;;;;;;361:14:85;;354:22;336:41;;324:2;309:18;319:23:59;196:187:85;3315:116:16;;;;;;:::i;:::-;;:::i;4162:117::-;4263:1;;4213:7;;4162:117;;;988:25:85;;;1044:2;1029:18;;1022:34;;;;1072:18;;;1065:34;1130:2;1115:18;;1108:34;975:3;960:19;4162:117:16;757:391:85;3005:183:16;;;;;;:::i;:::-;;:::i;:::-;;1824:101:0;;;:::i;1825:84:16:-;;;:::i;1201:85:0:-;1247:7;1273:6;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;1317:32:85;;;1299:51;;1287:2;1272:18;1201:85:0;1153:203:85;2172:177:16;;;;;;:::i;:::-;;:::i;3784:101::-;3862:18;;-1:-1:-1;;;;;3862:18:16;3784:101;;2622:213;;;;;;:::i;:::-;;:::i;3570:132::-;;;;;;:::i;:::-;;:::i;914:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2074:198:0;;;;;;:::i;:::-;;:::i;964:50:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;857:52;894:15;849:4;908:1;894:15;:::i;:::-;857:52;:::o;3315:116::-;-1:-1:-1;;;;;3407:18:16;;3376:7;3407:18;;;:11;:18;;;;;;3398:28;;:8;:28::i;:::-;3391:35;3315:116;-1:-1:-1;;3315:116:16:o;3005:183::-;1094:13:0;:11;:13::i;:::-;3090:18:16::1;:40:::0;;-1:-1:-1;;;;;;3090:40:16::1;-1:-1:-1::0;;;;;3090:40:16;::::1;::::0;;::::1;::::0;;;3141:42:::1;::::0;::::1;::::0;-1:-1:-1;;3141:42:16::1;3005:183:::0;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1825:84:16:-;476:11:59;;;;475:12;467:53;;;;-1:-1:-1;;;467:53:59;;2049:2:85;467:53:59;;;2031:21:85;2088:2;2068:18;;;2061:30;2127;2107:18;;;2100:58;2175:18;;467:53:59;;;;;;;;;526:11;:18;;-1:-1:-1;;526:18:59;540:4;526:18;;;1874:30:16::1;1893:10;1874:18;:30::i;2172:177::-:0;1247:7:0;1273:6;;;;-1:-1:-1;;;;;1273:6:0;-1:-1:-1;;;;;1397:21:16;:10;-1:-1:-1;;;;;1397:21:16;;:57;;;-1:-1:-1;1422:18:16;;-1:-1:-1;;;;;1422:18:16;1444:10;1422:32;1397:57;1382:125;;;;-1:-1:-1;;;1382:125:16;;;;;;;:::i;:::-;2289:17:::1;2300:5;2289:10;:17::i;:::-;-1:-1:-1::0;;;;;2268:18:16;::::1;;::::0;;;:11:::1;:18;::::0;;;;;;:38;;;;2317:27;;::::1;::::0;::::1;::::0;2338:5;160:25:85;;148:2;133:18;;14:177;2317:27:16::1;;;;;;;;2172:177:::0;;:::o;2622:213::-;1247:7:0;1273:6;;;;-1:-1:-1;;;;;1273:6:0;-1:-1:-1;;;;;1397:21:16;:10;-1:-1:-1;;;;;1397:21:16;;:57;;;-1:-1:-1;1422:18:16;;-1:-1:-1;;;;;1422:18:16;1444:10;1422:32;1397:57;1382:125;;;;-1:-1:-1;;;1382:125:16;;;;;;;:::i;:::-;2767:17:::1;2778:5;2767:10;:17::i;:::-;-1:-1:-1::0;;;;;2738:26:16;::::1;;::::0;;;:15:::1;:26;::::0;;;;;;:46;;;;2795:35;;::::1;::::0;::::1;::::0;2824:5;160:25:85;;148:2;133:18;;14:177;3570:132:16;-1:-1:-1;;;;;3670:26:16;;3639:7;3670:26;;;:15;:26;;;;;;3661:36;;:8;:36::i;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;2812:2:85;2154:73:0::1;::::0;::::1;2794:21:85::0;2851:2;2831:18;;;2824:30;2890:34;2870:18;;;2863:62;-1:-1:-1;;;2941:18:85;;;2934:36;2987:19;;2154:73:0::1;2610:402:85::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4689:196:16:-;4745:7;4764:5;4773:1;4764:10;4760:103;;-1:-1:-1;849:4:16;;4689:196;-1:-1:-1;4689:196:16:o;4760:103::-;894:15;849:4;908:1;894:15;:::i;:::-;4819:5;:19;4815:48;;-1:-1:-1;4855:1:16;;4689:196;-1:-1:-1;4689:196:16:o;4815:48::-;-1:-1:-1;4875:5:16;4689:196::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;;;;;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;3219:2:85;1414:68:0;;;3201:21:85;;;3238:18;;;3231:30;3297:34;3277:18;;;3270:62;3349:18;;1414:68:0;3017:356:85;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;5009:224:16:-;5067:7;5086:5;5095:1;5086:10;5082:48;;894:15;849:4;908:1;894:15;:::i;5082:48::-;849:4;5144:5;:20;;5136:74;;;;-1:-1:-1;;;5136:74:16;;3580:2:85;5136:74:16;;;3562:21:85;3619:2;3599:18;;;3592:30;3658:34;3638:18;;;3631:62;-1:-1:-1;;;3709:18:85;;;3702:39;3758:19;;5136:74:16;3378:405:85;388:173;456:20;;-1:-1:-1;;;;;505:31:85;;495:42;;485:70;;551:1;548;541:12;485:70;388:173;;;:::o;566:186::-;625:6;678:2;666:9;657:7;653:23;649:32;646:52;;;694:1;691;684:12;646:52;717:29;736:9;717:29;:::i;:::-;707:39;566:186;-1:-1:-1;;;566:186:85:o;1361:254::-;1429:6;1437;1490:2;1478:9;1469:7;1465:23;1461:32;1458:52;;;1506:1;1503;1496:12;1458:52;1529:29;1548:9;1529:29;:::i;:::-;1519:39;1605:2;1590:18;;;;1577:32;;-1:-1:-1;;;1361:254:85:o;1620:222::-;1685:9;;;1706:10;;;1703:133;;;1758:10;1753:3;1749:20;1746:1;1739:31;1793:4;1790:1;1783:15;1821:4;1818:1;1811:15;2204:401;2406:2;2388:21;;;2445:2;2425:18;;;2418:30;2484:34;2479:2;2464:18;;2457:62;-1:-1:-1;;;2550:2:85;2535:18;;2528:35;2595:3;2580:19;;2204:401::o",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity >=0.8.7 <0.8.20;\n\nimport \"../../contracts/common/Initializable.sol\";\nimport \"../../contracts/common/interfaces/ICeloVersionedContract.sol\";\nimport \"@openzeppelin/contracts8/access/Ownable.sol\";\n\nimport \"../../contracts/common/interfaces/IScoreManagerGovernance.sol\";\nimport \"../../contracts/common/interfaces/IScoreManager.sol\";\n\n/**\n * @title ScoreManager contract\n * @notice This contract updates the score of validators and validator groups on L2.\n * This replaces the previous method of calculating scores based on validator uptime\n * with a governable score.\n */\ncontract ScoreManager is\n  Initializable,\n  Ownable,\n  IScoreManager,\n  IScoreManagerGovernance,\n  ICeloVersionedContract\n{\n  struct Score {\n    uint256 score;\n    bool exists;\n  }\n\n  uint256 private constant FIXED1_UINT = 1e24;\n  uint256 public constant ZERO_SCORE = FIXED1_UINT + 1;\n\n  mapping(address => uint256) public groupScores;\n  mapping(address => uint256) public validatorScores;\n  address private scoreManagerSetter;\n\n  event GroupScoreSet(address indexed group, uint256 score);\n  event ValidatorScoreSet(address indexed validator, uint256 score);\n  event ScoreManagerSetterSet(address indexed scoreManagerSetter);\n\n  /**\n   * @notice Reverts if msg.sender is not authorized to update score.\n   */\n  modifier onlyAuthorizedToUpdateScore() {\n    require(\n      msg.sender == owner() || scoreManagerSetter == msg.sender,\n      \"Sender not authorized to update score\"\n    );\n    _;\n  }\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) Initializable(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   */\n  function initialize() external initializer {\n    _transferOwnership(msg.sender);\n  }\n\n  /**\n   * @notice Sets the group score for a specified group.\n   * @param group The address of the group whose score will be updated.\n   * @param score The new score of the group to be updated.\n   * @dev Set value to `ZERO_SCORE` to set score to zero.\n   */\n  function setGroupScore(address group, uint256 score) external onlyAuthorizedToUpdateScore {\n    groupScores[group] = checkScore(score);\n    emit GroupScoreSet(group, score);\n  }\n\n  /**\n   * @notice Sets the score for a specified validator.\n   * @param validator The address of the validator whose score will be updated.\n   * @param score The new score of the validator to be updated.\n   * @dev Set value to `ZERO_SCORE` to set score to zero.\n   */\n  function setValidatorScore(\n    address validator,\n    uint256 score\n  ) external onlyAuthorizedToUpdateScore {\n    validatorScores[validator] = checkScore(score);\n    emit ValidatorScoreSet(validator, score);\n  }\n\n  /**\n   * @notice Sets the whitelisted address allowed to set validator and group scores.\n   * @param _scoreManagerSetter Address of whitelisted score setter.\n   */\n  function setScoreManagerSetter(address _scoreManagerSetter) external onlyOwner {\n    scoreManagerSetter = _scoreManagerSetter;\n    emit ScoreManagerSetterSet(_scoreManagerSetter);\n  }\n\n  /**\n   * @notice Returns the score of the specified group.\n   * @param group The address of the group of interest.\n   */\n  function getGroupScore(address group) external view returns (uint256) {\n    return getScore(groupScores[group]);\n  }\n\n  /**\n   * @notice Returns the score of the specified validator.\n   * @param validator The address of the validator of interest.\n   */\n  function getValidatorScore(address validator) external view returns (uint256) {\n    return getScore(validatorScores[validator]);\n  }\n\n  /**\n   * @notice Returns the address of the whitelisted score setter.\n   */\n  function getScoreManagerSetter() external view returns (address) {\n    return scoreManagerSetter;\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 1, 0, 0);\n  }\n\n  /**\n   * @notice Returns the actual score based on the input value.\n   * @param score The value from `validatorScores` or `groupScores` mappings.\n   * @dev To set the score to 100% by default when the contract is first initialized\n   * or when new groups or validators are added, the default score of 0 returns 1e24.\n   * To encode a score value of 0 we use the magic number ZERO_SCORE = (1e24)+1.\n   */\n  function getScore(uint256 score) internal pure returns (uint256) {\n    if (score == 0) {\n      return FIXED1_UINT;\n    } else if (score == ZERO_SCORE) {\n      return 0;\n    }\n    return score;\n  }\n\n  /**\n   * @notice Checks if the score is valid and returns the score.\n   * @param score The score to be checked.\n   */\n  function checkScore(uint256 score) internal pure returns (uint256) {\n    if (score == 0) {\n      return ZERO_SCORE;\n    }\n\n    require(score <= FIXED1_UINT, \"Score must be less than or equal to 1e24.\");\n    return score;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts-0.8/common/ScoreManager.sol",
  "ast": {
    "absolutePath": "project:/contracts-0.8/common/ScoreManager.sol",
    "exportedSymbols": {
      "Context": [
        212
      ],
      "ICeloVersionedContract": [
        17280
      ],
      "IScoreManager": [
        17631
      ],
      "IScoreManagerGovernance": [
        17658
      ],
      "Initializable": [
        16991
      ],
      "Ownable": [
        112
      ],
      "ScoreManager": [
        5465
      ]
    },
    "id": 5466,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5195,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".7",
          "<",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:32:16"
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../../contracts/common/Initializable.sol",
        "id": 5196,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5466,
        "sourceUnit": 16992,
        "src": "76:50:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../../contracts/common/interfaces/ICeloVersionedContract.sol",
        "id": 5197,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5466,
        "sourceUnit": 17281,
        "src": "127:70:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts8/access/Ownable.sol",
        "file": "@openzeppelin/contracts8/access/Ownable.sol",
        "id": 5198,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5466,
        "sourceUnit": 113,
        "src": "198:53:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IScoreManagerGovernance.sol",
        "file": "../../contracts/common/interfaces/IScoreManagerGovernance.sol",
        "id": 5199,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5466,
        "sourceUnit": 17659,
        "src": "253:71:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IScoreManager.sol",
        "file": "../../contracts/common/interfaces/IScoreManager.sol",
        "id": 5200,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5466,
        "sourceUnit": 17632,
        "src": "325:61:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5202,
              "name": "Initializable",
              "nameLocations": [
                "653:13:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16991,
              "src": "653:13:16"
            },
            "id": 5203,
            "nodeType": "InheritanceSpecifier",
            "src": "653:13:16"
          },
          {
            "baseName": {
              "id": 5204,
              "name": "Ownable",
              "nameLocations": [
                "670:7:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "670:7:16"
            },
            "id": 5205,
            "nodeType": "InheritanceSpecifier",
            "src": "670:7:16"
          },
          {
            "baseName": {
              "id": 5206,
              "name": "IScoreManager",
              "nameLocations": [
                "681:13:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17631,
              "src": "681:13:16"
            },
            "id": 5207,
            "nodeType": "InheritanceSpecifier",
            "src": "681:13:16"
          },
          {
            "baseName": {
              "id": 5208,
              "name": "IScoreManagerGovernance",
              "nameLocations": [
                "698:23:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17658,
              "src": "698:23:16"
            },
            "id": 5209,
            "nodeType": "InheritanceSpecifier",
            "src": "698:23:16"
          },
          {
            "baseName": {
              "id": 5210,
              "name": "ICeloVersionedContract",
              "nameLocations": [
                "725:22:16"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17280,
              "src": "725:22:16"
            },
            "id": 5211,
            "nodeType": "InheritanceSpecifier",
            "src": "725:22:16"
          }
        ],
        "canonicalName": "ScoreManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5201,
          "nodeType": "StructuredDocumentation",
          "src": "388:237:16",
          "text": " @title ScoreManager contract\n @notice This contract updates the score of validators and validator groups on L2.\n This replaces the previous method of calculating scores based on validator uptime\n with a governable score."
        },
        "fullyImplemented": true,
        "id": 5465,
        "linearizedBaseContracts": [
          5465,
          17280,
          17658,
          17631,
          112,
          212,
          16991
        ],
        "name": "ScoreManager",
        "nameLocation": "635:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ScoreManager.Score",
            "id": 5216,
            "members": [
              {
                "constant": false,
                "id": 5213,
                "mutability": "mutable",
                "name": "score",
                "nameLocation": "779:5:16",
                "nodeType": "VariableDeclaration",
                "scope": 5216,
                "src": "771:13:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5212,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "771:7:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5215,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "795:6:16",
                "nodeType": "VariableDeclaration",
                "scope": 5216,
                "src": "790:11:16",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 5214,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "790:4:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Score",
            "nameLocation": "759:5:16",
            "nodeType": "StructDefinition",
            "scope": 5465,
            "src": "752:54:16",
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 5219,
            "mutability": "constant",
            "name": "FIXED1_UINT",
            "nameLocation": "835:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 5465,
            "src": "810:43:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5217,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653234",
              "id": 5218,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "849:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000000"
              },
              "value": "1e24"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "functionSelector": "007ddf48",
            "id": 5224,
            "mutability": "constant",
            "name": "ZERO_SCORE",
            "nameLocation": "881:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 5465,
            "src": "857:52:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5220,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "857:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 5223,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "id": 5221,
                "name": "FIXED1_UINT",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 5219,
                "src": "894:11:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "hexValue": "31",
                "id": 5222,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "908:1:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "894:15:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e612fab5",
            "id": 5228,
            "mutability": "mutable",
            "name": "groupScores",
            "nameLocation": "949:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 5465,
            "src": "914:46:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5227,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5225,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "922:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "914:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 5226,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "933:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5a9f94a",
            "id": 5232,
            "mutability": "mutable",
            "name": "validatorScores",
            "nameLocation": "999:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 5465,
            "src": "964:50:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5231,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5229,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "972:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "964:27:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 5230,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "983:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5234,
            "mutability": "mutable",
            "name": "scoreManagerSetter",
            "nameLocation": "1034:18:16",
            "nodeType": "VariableDeclaration",
            "scope": 5465,
            "src": "1018:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5233,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1018:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "c8c2849c9c4276f0047a5b47a07fe4fa90d9ca9abcfe223b096b3c1e180fafb0",
            "id": 5240,
            "name": "GroupScoreSet",
            "nameLocation": "1063:13:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5236,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "group",
                  "nameLocation": "1093:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5240,
                  "src": "1077:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5238,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "score",
                  "nameLocation": "1108:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5240,
                  "src": "1100:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:38:16"
            },
            "src": "1057:58:16"
          },
          {
            "anonymous": false,
            "eventSelector": "0df00ce445711e31bba70de9ebb21e955b83927413ba5d01dfbbed0b773a4765",
            "id": 5246,
            "name": "ValidatorScoreSet",
            "nameLocation": "1124:17:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5242,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "1158:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5246,
                  "src": "1142:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5244,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "score",
                  "nameLocation": "1177:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5246,
                  "src": "1169:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:42:16"
            },
            "src": "1118:66:16"
          },
          {
            "anonymous": false,
            "eventSelector": "32828b94a29931495ac9e8b4fa1cbe7ab0801e751dabe58f16bccd65dee74a99",
            "id": 5250,
            "name": "ScoreManagerSetterSet",
            "nameLocation": "1193:21:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5248,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scoreManagerSetter",
                  "nameLocation": "1231:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5250,
                  "src": "1215:34:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:36:16"
            },
            "src": "1187:64:16"
          },
          {
            "body": {
              "id": 5268,
              "nodeType": "Block",
              "src": "1376:143:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5254,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1397:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1401:6:16",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1397:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5256,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "1411:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1411:7:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1397:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5259,
                            "name": "scoreManagerSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5234,
                            "src": "1422:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 5260,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1444:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1448:6:16",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1444:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1422:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1397:57:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e646572206e6f7420617574686f72697a656420746f207570646174652073636f7265",
                        "id": 5264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:39:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26d2865a23f375130f8eec58003a894becf7565a8a00c02a19e119cfe0644ee1",
                          "typeString": "literal_string \"Sender not authorized to update score\""
                        },
                        "value": "Sender not authorized to update score"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26d2865a23f375130f8eec58003a894becf7565a8a00c02a19e119cfe0644ee1",
                          "typeString": "literal_string \"Sender not authorized to update score\""
                        }
                      ],
                      "id": 5253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1382:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:125:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5266,
                  "nodeType": "ExpressionStatement",
                  "src": "1382:125:16"
                },
                {
                  "id": 5267,
                  "nodeType": "PlaceholderStatement",
                  "src": "1513:1:16"
                }
              ]
            },
            "documentation": {
              "id": 5251,
              "nodeType": "StructuredDocumentation",
              "src": "1255:79:16",
              "text": " @notice Reverts if msg.sender is not authorized to update score."
            },
            "id": 5269,
            "name": "onlyAuthorizedToUpdateScore",
            "nameLocation": "1346:27:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:2:16"
            },
            "src": "1337:182:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5278,
              "nodeType": "Block",
              "src": "1711:2:16",
              "statements": []
            },
            "documentation": {
              "id": 5270,
              "nodeType": "StructuredDocumentation",
              "src": "1523:142:16",
              "text": " @notice Sets initialized == true on implementation contracts\n @param test Set to true to skip implementation initialization"
            },
            "id": 5279,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5275,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5272,
                    "src": "1705:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 5276,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5274,
                  "name": "Initializable",
                  "nameLocations": [
                    "1691:13:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16991,
                  "src": "1691:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1691:19:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5272,
                  "mutability": "mutable",
                  "name": "test",
                  "nameLocation": "1685:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5279,
                  "src": "1680:9:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5271,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:11:16"
            },
            "returnParameters": {
              "id": 5277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1711:0:16"
            },
            "scope": 5465,
            "src": "1668:45:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5290,
              "nodeType": "Block",
              "src": "1868:41:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1893:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1897:6:16",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1893:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5285,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "1874:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5289,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:30:16"
                }
              ]
            },
            "documentation": {
              "id": 5280,
              "nodeType": "StructuredDocumentation",
              "src": "1717:105:16",
              "text": " @notice Used in place of the constructor to allow the contract to be upgradable via proxy."
            },
            "functionSelector": "8129fc1c",
            "id": 5291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5283,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5282,
                  "name": "initializer",
                  "nameLocations": [
                    "1856:11:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 16975,
                  "src": "1856:11:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1856:11:16"
              }
            ],
            "name": "initialize",
            "nameLocation": "1834:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1844:2:16"
            },
            "returnParameters": {
              "id": 5284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:0:16"
            },
            "scope": 5465,
            "src": "1825:84:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17640
            ],
            "body": {
              "id": 5314,
              "nodeType": "Block",
              "src": "2262:87:16",
              "statements": [
                {
                  "expression": {
                    "id": 5307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5301,
                        "name": "groupScores",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5228,
                        "src": "2268:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5303,
                      "indexExpression": {
                        "id": 5302,
                        "name": "group",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5294,
                        "src": "2280:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2268:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5305,
                          "name": "score",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5296,
                          "src": "2300:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5304,
                        "name": "checkScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5464,
                        "src": "2289:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2289:17:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2268:38:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5308,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:38:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5310,
                        "name": "group",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5294,
                        "src": "2331:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5311,
                        "name": "score",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5296,
                        "src": "2338:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5309,
                      "name": "GroupScoreSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5240,
                      "src": "2317:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:27:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5313,
                  "nodeType": "EmitStatement",
                  "src": "2312:32:16"
                }
              ]
            },
            "documentation": {
              "id": 5292,
              "nodeType": "StructuredDocumentation",
              "src": "1913:256:16",
              "text": " @notice Sets the group score for a specified group.\n @param group The address of the group whose score will be updated.\n @param score The new score of the group to be updated.\n @dev Set value to `ZERO_SCORE` to set score to zero."
            },
            "functionSelector": "c40c8d06",
            "id": 5315,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5298,
                  "name": "onlyAuthorizedToUpdateScore",
                  "nameLocations": [
                    "2234:27:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5269,
                  "src": "2234:27:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2234:27:16"
              }
            ],
            "name": "setGroupScore",
            "nameLocation": "2181:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5294,
                  "mutability": "mutable",
                  "name": "group",
                  "nameLocation": "2203:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5315,
                  "src": "2195:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5296,
                  "mutability": "mutable",
                  "name": "score",
                  "nameLocation": "2218:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5315,
                  "src": "2210:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2194:30:16"
            },
            "returnParameters": {
              "id": 5300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:16"
            },
            "scope": 5465,
            "src": "2172:177:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17647
            ],
            "body": {
              "id": 5338,
              "nodeType": "Block",
              "src": "2732:103:16",
              "statements": [
                {
                  "expression": {
                    "id": 5331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5325,
                        "name": "validatorScores",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5232,
                        "src": "2738:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5327,
                      "indexExpression": {
                        "id": 5326,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5318,
                        "src": "2754:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2738:26:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5329,
                          "name": "score",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5320,
                          "src": "2778:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 5328,
                        "name": "checkScore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5464,
                        "src": "2767:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2767:17:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2738:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5332,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:46:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5334,
                        "name": "validator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5318,
                        "src": "2813:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5335,
                        "name": "score",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5320,
                        "src": "2824:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5333,
                      "name": "ValidatorScoreSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5246,
                      "src": "2795:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 5336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5337,
                  "nodeType": "EmitStatement",
                  "src": "2790:40:16"
                }
              ]
            },
            "documentation": {
              "id": 5316,
              "nodeType": "StructuredDocumentation",
              "src": "2353:266:16",
              "text": " @notice Sets the score for a specified validator.\n @param validator The address of the validator whose score will be updated.\n @param score The new score of the validator to be updated.\n @dev Set value to `ZERO_SCORE` to set score to zero."
            },
            "functionSelector": "e33e59d4",
            "id": 5339,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5323,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5322,
                  "name": "onlyAuthorizedToUpdateScore",
                  "nameLocations": [
                    "2704:27:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5269,
                  "src": "2704:27:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2704:27:16"
              }
            ],
            "name": "setValidatorScore",
            "nameLocation": "2631:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5318,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2662:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5339,
                  "src": "2654:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5320,
                  "mutability": "mutable",
                  "name": "score",
                  "nameLocation": "2685:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5339,
                  "src": "2677:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2648:46:16"
            },
            "returnParameters": {
              "id": 5324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2732:0:16"
            },
            "scope": 5465,
            "src": "2622:213:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17652
            ],
            "body": {
              "id": 5355,
              "nodeType": "Block",
              "src": "3084:104:16",
              "statements": [
                {
                  "expression": {
                    "id": 5349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5347,
                      "name": "scoreManagerSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5234,
                      "src": "3090:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5348,
                      "name": "_scoreManagerSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5342,
                      "src": "3111:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3090:40:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5350,
                  "nodeType": "ExpressionStatement",
                  "src": "3090:40:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5352,
                        "name": "_scoreManagerSetter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5342,
                        "src": "3163:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5351,
                      "name": "ScoreManagerSetterSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5250,
                      "src": "3141:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3141:42:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5354,
                  "nodeType": "EmitStatement",
                  "src": "3136:47:16"
                }
              ]
            },
            "documentation": {
              "id": 5340,
              "nodeType": "StructuredDocumentation",
              "src": "2839:163:16",
              "text": " @notice Sets the whitelisted address allowed to set validator and group scores.\n @param _scoreManagerSetter Address of whitelisted score setter."
            },
            "functionSelector": "61df2a45",
            "id": 5356,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5344,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3074:9:16"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3074:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3074:9:16"
              }
            ],
            "name": "setScoreManagerSetter",
            "nameLocation": "3014:21:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5342,
                  "mutability": "mutable",
                  "name": "_scoreManagerSetter",
                  "nameLocation": "3044:19:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5356,
                  "src": "3036:27:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3035:29:16"
            },
            "returnParameters": {
              "id": 5346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3084:0:16"
            },
            "scope": 5465,
            "src": "3005:183:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17630
            ],
            "body": {
              "id": 5370,
              "nodeType": "Block",
              "src": "3385:46:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 5365,
                          "name": "groupScores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5228,
                          "src": "3407:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 5367,
                        "indexExpression": {
                          "id": 5366,
                          "name": "group",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5359,
                          "src": "3419:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3407:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5364,
                      "name": "getScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5439,
                      "src": "3398:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:28:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5363,
                  "id": 5369,
                  "nodeType": "Return",
                  "src": "3391:35:16"
                }
              ]
            },
            "documentation": {
              "id": 5357,
              "nodeType": "StructuredDocumentation",
              "src": "3192:120:16",
              "text": " @notice Returns the score of the specified group.\n @param group The address of the group of interest."
            },
            "functionSelector": "21c082aa",
            "id": 5371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGroupScore",
            "nameLocation": "3324:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5359,
                  "mutability": "mutable",
                  "name": "group",
                  "nameLocation": "3346:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5371,
                  "src": "3338:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:15:16"
            },
            "returnParameters": {
              "id": 5363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5371,
                  "src": "3376:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:9:16"
            },
            "scope": 5465,
            "src": "3315:116:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17623
            ],
            "body": {
              "id": 5385,
              "nodeType": "Block",
              "src": "3648:54:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 5380,
                          "name": "validatorScores",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5232,
                          "src": "3670:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 5382,
                        "indexExpression": {
                          "id": 5381,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5374,
                          "src": "3686:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3670:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5379,
                      "name": "getScore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5439,
                      "src": "3661:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:36:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5378,
                  "id": 5384,
                  "nodeType": "Return",
                  "src": "3654:43:16"
                }
              ]
            },
            "documentation": {
              "id": 5372,
              "nodeType": "StructuredDocumentation",
              "src": "3435:132:16",
              "text": " @notice Returns the score of the specified validator.\n @param validator The address of the validator of interest."
            },
            "functionSelector": "e5079ddc",
            "id": 5386,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorScore",
            "nameLocation": "3579:17:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5374,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "3605:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5386,
                  "src": "3597:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3597:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3596:19:16"
            },
            "returnParameters": {
              "id": 5378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5386,
                  "src": "3639:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5376,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3639:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3638:9:16"
            },
            "scope": 5465,
            "src": "3570:132:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17657
            ],
            "body": {
              "id": 5394,
              "nodeType": "Block",
              "src": "3849:36:16",
              "statements": [
                {
                  "expression": {
                    "id": 5392,
                    "name": "scoreManagerSetter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5234,
                    "src": "3862:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5391,
                  "id": 5393,
                  "nodeType": "Return",
                  "src": "3855:25:16"
                }
              ]
            },
            "documentation": {
              "id": 5387,
              "nodeType": "StructuredDocumentation",
              "src": "3706:75:16",
              "text": " @notice Returns the address of the whitelisted score setter."
            },
            "functionSelector": "ddfebf96",
            "id": 5395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getScoreManagerSetter",
            "nameLocation": "3793:21:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3814:2:16"
            },
            "returnParameters": {
              "id": 5391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5390,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5395,
                  "src": "3840:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5389,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3840:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3839:9:16"
            },
            "scope": 5465,
            "src": "3784:101:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17279
            ],
            "body": {
              "id": 5413,
              "nodeType": "Block",
              "src": "4249:30:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "31",
                        "id": 5407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4263:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 5408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4266:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "30",
                        "id": 5409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4269:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 5410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4272:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 5411,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4262:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 5406,
                  "id": 5412,
                  "nodeType": "Return",
                  "src": "4255:19:16"
                }
              ]
            },
            "documentation": {
              "id": 5396,
              "nodeType": "StructuredDocumentation",
              "src": "3889:270:16",
              "text": " @notice Returns the storage, major, minor, and patch version of the contract.\n @return Storage version of the contract.\n @return Major version of the contract.\n @return Minor version of the contract.\n @return Patch version of the contract."
            },
            "functionSelector": "54255be0",
            "id": 5414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nameLocation": "4171:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4187:2:16"
            },
            "returnParameters": {
              "id": 5406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5414,
                  "src": "4213:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4213:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5414,
                  "src": "4222:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4222:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5403,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5414,
                  "src": "4231:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4231:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5405,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5414,
                  "src": "4240:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4240:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4212:36:16"
            },
            "scope": 5465,
            "src": "4162:117:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5438,
              "nodeType": "Block",
              "src": "4754:131:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5422,
                      "name": "score",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5417,
                      "src": "4764:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4773:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4764:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5428,
                        "name": "score",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5417,
                        "src": "4819:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 5429,
                        "name": "ZERO_SCORE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5224,
                        "src": "4828:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4819:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 5434,
                    "nodeType": "IfStatement",
                    "src": "4815:48:16",
                    "trueBody": {
                      "id": 5433,
                      "nodeType": "Block",
                      "src": "4840:23:16",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "30",
                            "id": 5431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4855:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 5421,
                          "id": 5432,
                          "nodeType": "Return",
                          "src": "4848:8:16"
                        }
                      ]
                    }
                  },
                  "id": 5435,
                  "nodeType": "IfStatement",
                  "src": "4760:103:16",
                  "trueBody": {
                    "id": 5427,
                    "nodeType": "Block",
                    "src": "4776:33:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 5425,
                          "name": "FIXED1_UINT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "4791:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5421,
                        "id": 5426,
                        "nodeType": "Return",
                        "src": "4784:18:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5436,
                    "name": "score",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5417,
                    "src": "4875:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5421,
                  "id": 5437,
                  "nodeType": "Return",
                  "src": "4868:12:16"
                }
              ]
            },
            "documentation": {
              "id": 5415,
              "nodeType": "StructuredDocumentation",
              "src": "4283:403:16",
              "text": " @notice Returns the actual score based on the input value.\n @param score The value from `validatorScores` or `groupScores` mappings.\n @dev To set the score to 100% by default when the contract is first initialized\n or when new groups or validators are added, the default score of 0 returns 1e24.\n To encode a score value of 0 we use the magic number ZERO_SCORE = (1e24)+1."
            },
            "id": 5439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getScore",
            "nameLocation": "4698:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5417,
                  "mutability": "mutable",
                  "name": "score",
                  "nameLocation": "4715:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "4707:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4707:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4706:15:16"
            },
            "returnParameters": {
              "id": 5421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5420,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5439,
                  "src": "4745:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4745:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4744:9:16"
            },
            "scope": 5465,
            "src": "4689:196:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5463,
              "nodeType": "Block",
              "src": "5076:157:16",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5447,
                      "name": "score",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5442,
                      "src": "5086:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5095:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5086:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5453,
                  "nodeType": "IfStatement",
                  "src": "5082:48:16",
                  "trueBody": {
                    "id": 5452,
                    "nodeType": "Block",
                    "src": "5098:32:16",
                    "statements": [
                      {
                        "expression": {
                          "id": 5450,
                          "name": "ZERO_SCORE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5224,
                          "src": "5113:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5446,
                        "id": 5451,
                        "nodeType": "Return",
                        "src": "5106:17:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5455,
                          "name": "score",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5442,
                          "src": "5144:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 5456,
                          "name": "FIXED1_UINT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "5153:11:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5144:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53636f7265206d757374206265206c657373207468616e206f7220657175616c20746f20316532342e",
                        "id": 5458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5166:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63e2f052ceca9590100694dc5d20ca440dc7f8395e288859982d5b0b11b99eed",
                          "typeString": "literal_string \"Score must be less than or equal to 1e24.\""
                        },
                        "value": "Score must be less than or equal to 1e24."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63e2f052ceca9590100694dc5d20ca440dc7f8395e288859982d5b0b11b99eed",
                          "typeString": "literal_string \"Score must be less than or equal to 1e24.\""
                        }
                      ],
                      "id": 5454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5136:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:74:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5460,
                  "nodeType": "ExpressionStatement",
                  "src": "5136:74:16"
                },
                {
                  "expression": {
                    "id": 5461,
                    "name": "score",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5442,
                    "src": "5223:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5446,
                  "id": 5462,
                  "nodeType": "Return",
                  "src": "5216:12:16"
                }
              ]
            },
            "documentation": {
              "id": 5440,
              "nodeType": "StructuredDocumentation",
              "src": "4889:117:16",
              "text": " @notice Checks if the score is valid and returns the score.\n @param score The score to be checked."
            },
            "id": 5464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkScore",
            "nameLocation": "5018:10:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5442,
                  "mutability": "mutable",
                  "name": "score",
                  "nameLocation": "5037:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 5464,
                  "src": "5029:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5441,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:15:16"
            },
            "returnParameters": {
              "id": 5446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5464,
                  "src": "5067:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5066:9:16"
            },
            "scope": 5465,
            "src": "5009:224:16",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 5466,
        "src": "626:4609:16",
        "usedErrors": []
      }
    ],
    "src": "42:5194:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:34.152Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "getGroupScore(address)": {
        "params": {
          "group": "The address of the group of interest."
        }
      },
      "getValidatorScore(address)": {
        "params": {
          "validator": "The address of the validator of interest."
        }
      },
      "getVersionNumber()": {
        "returns": {
          "_0": "Storage version of the contract.",
          "_1": "Major version of the contract.",
          "_2": "Minor version of the contract.",
          "_3": "Patch version of the contract."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setGroupScore(address,uint256)": {
        "details": "Set value to `ZERO_SCORE` to set score to zero.",
        "params": {
          "group": "The address of the group whose score will be updated.",
          "score": "The new score of the group to be updated."
        }
      },
      "setScoreManagerSetter(address)": {
        "params": {
          "_scoreManagerSetter": "Address of whitelisted score setter."
        }
      },
      "setValidatorScore(address,uint256)": {
        "details": "Set value to `ZERO_SCORE` to set score to zero.",
        "params": {
          "score": "The new score of the validator to be updated.",
          "validator": "The address of the validator whose score will be updated."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ScoreManager contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Sets initialized == true on implementation contracts"
      },
      "getGroupScore(address)": {
        "notice": "Returns the score of the specified group."
      },
      "getScoreManagerSetter()": {
        "notice": "Returns the address of the whitelisted score setter."
      },
      "getValidatorScore(address)": {
        "notice": "Returns the score of the specified validator."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize()": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "setGroupScore(address,uint256)": {
        "notice": "Sets the group score for a specified group."
      },
      "setScoreManagerSetter(address)": {
        "notice": "Sets the whitelisted address allowed to set validator and group scores."
      },
      "setValidatorScore(address,uint256)": {
        "notice": "Sets the score for a specified validator."
      }
    },
    "notice": "This contract updates the score of validators and validator groups on L2. This replaces the previous method of calculating scores based on validator uptime with a governable score.",
    "version": 1
  }
}