{
  "contractName": "GrandaMento",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ApproverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ExchangeProposalApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ExchangeProposalCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchanger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        }
      ],
      "name": "ExchangeProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ExchangeProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxApprovalExchangeRateChange",
          "type": "uint256"
        }
      ],
      "name": "MaxApprovalExchangeRateChangeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spread",
          "type": "uint256"
        }
      ],
      "name": "SpreadSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minExchangeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxExchangeAmount",
          "type": "uint256"
        }
      ],
      "name": "StableTokenExchangeLimitsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vetoPeriodSeconds",
          "type": "uint256"
        }
      ],
      "name": "VetoPeriodSecondsSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeProposalIdsSuperset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "approver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "exchangeProposals",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "exchanger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stableToken",
          "type": "address"
        },
        {
          "internalType": "enum GrandaMento.ExchangeProposalState",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "celoStableTokenExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vetoPeriodSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "approvalTimestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxApprovalExchangeRateChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "spread",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "stableTokenExchangeLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minExchangeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxExchangeAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vetoPeriodSeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_approver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxApprovalExchangeRateChange",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_spread",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vetoPeriodSeconds",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        }
      ],
      "name": "createExchangeProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "approveExchangeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancelExchangeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeExchangeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "celoStableTokenExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        }
      ],
      "name": "getBuyAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeFromActiveProposalIdsSuperset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        }
      ],
      "name": "getStableTokenExchangeLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newApprover",
          "type": "address"
        }
      ],
      "name": "setApprover",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxApprovalExchangeRateChange",
          "type": "uint256"
        }
      ],
      "name": "setMaxApprovalExchangeRateChange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSpread",
          "type": "uint256"
        }
      ],
      "name": "setSpread",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "minExchangeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxExchangeAmount",
          "type": "uint256"
        }
      ],
      "name": "setStableTokenExchangeLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVetoPeriodSeconds",
          "type": "uint256"
        }
      ],
      "name": "setVetoPeriodSeconds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ApproverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ExchangeProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ExchangeProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exchanger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"}],\"name\":\"ExchangeProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ExchangeProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxApprovalExchangeRateChange\",\"type\":\"uint256\"}],\"name\":\"MaxApprovalExchangeRateChangeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spread\",\"type\":\"uint256\"}],\"name\":\"SpreadSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minExchangeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxExchangeAmount\",\"type\":\"uint256\"}],\"name\":\"StableTokenExchangeLimitsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vetoPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"VetoPeriodSecondsSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeProposalIdsSuperset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"approveExchangeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"approver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancelExchangeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"}],\"name\":\"createExchangeProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exchangeProposals\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"exchanger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableToken\",\"type\":\"address\"},{\"internalType\":\"enum GrandaMento.ExchangeProposalState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"celoStableTokenExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vetoPeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"approvalTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeExchangeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"celoStableTokenExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"}],\"name\":\"getBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"}],\"name\":\"getStableTokenExchangeLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_approver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxApprovalExchangeRateChange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_spread\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vetoPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxApprovalExchangeRateChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeFromActiveProposalIdsSuperset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newApprover\",\"type\":\"address\"}],\"name\":\"setApprover\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxApprovalExchangeRateChange\",\"type\":\"uint256\"}],\"name\":\"setMaxApprovalExchangeRateChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSpread\",\"type\":\"uint256\"}],\"name\":\"setSpread\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minExchangeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxExchangeAmount\",\"type\":\"uint256\"}],\"name\":\"setStableTokenExchangeLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVetoPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"setVetoPeriodSeconds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spread\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"stableTokenExchangeLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minExchangeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxExchangeAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vetoPeriodSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approveExchangeProposal(uint256)\":{\"details\":\"Sender must be the approver. Exchange proposal must be in the Proposed state.\",\"params\":{\"proposalId\":\"The identifier of the proposal to approve.\"}},\"cancelExchangeProposal(uint256)\":{\"details\":\"Only callable by the exchanger if the proposal is in the Proposed state or the owner if the proposal is in the Approved state.\",\"params\":{\"proposalId\":\"The identifier of the proposal to cancel.\"}},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization.\"}},\"createExchangeProposal(string,uint256,bool)\":{\"details\":\"Stable token value amounts are used for the sellAmount, not unit amounts.\",\"params\":{\"sellAmount\":\"The amount of the sell token being sold.\",\"sellCelo\":\"Whether CELO is being sold.\",\"stableTokenRegistryId\":\"The string registry ID for the stable token involved in the exchange.\"},\"return\":\"The proposal identifier for the newly created exchange proposal.\"},\"executeExchangeProposal(uint256)\":{\"details\":\"Callable by anyone. Reverts if the proposal is not in the Approved state or proposal.vetoPeriodSeconds has not elapsed since approval.\",\"params\":{\"proposalId\":\"The identifier of the proposal to execute.\"}},\"getActiveProposalIds()\":{\"details\":\"Elements with a proposal ID of 0 should be filtered out by the consumer.\",\"return\":\"An array of active exchange proposals IDs.\"},\"getBuyAmount(uint256,uint256,bool)\":{\"details\":\"Stable token value amounts are used for the sellAmount, not unit amounts. Assumes both CELO and the stable token have 18 decimals.\",\"params\":{\"celoStableTokenExchangeRate\":\"The unwrapped fraction exchange rate of CELO quoted in the stable token.\",\"sellAmount\":\"The amount of the sell token being sold.\",\"sellCelo\":\"Whether CELO is being sold.\"},\"return\":\"The amount of the asset being bought.\"},\"getStableTokenExchangeLimits(string)\":{\"details\":\"Reverts if there is no explicit exchange limit for the stable token.\",\"params\":{\"stableTokenRegistryId\":\"The string registry ID for the stable token.\"},\"return\":\"Minimum exchange amount.Maximum exchange amount.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"params\":{\"_approver\":\"The approver that has the ability to approve exchange proposals.\",\"_maxApprovalExchangeRateChange\":\"The maximum allowed change in CELO price between an exchange proposal's creation and approval.\",\"_registry\":\"The address of the registry.\",\"_spread\":\"The spread charged on exchanges.\",\"_vetoPeriodSeconds\":\"The length of the veto period in seconds.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromActiveProposalIdsSuperset(uint256)\":{\"details\":\"Anyone can call. Reverts if the exchange proposal is active.\",\"params\":{\"index\":\"The index of the proposal ID to remove from activeProposalIdsSuperset.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApprover(address)\":{\"details\":\"Sender must be owner. New approver is allowed to be address(0).\",\"params\":{\"newApprover\":\"The new value for the approver.\"}},\"setMaxApprovalExchangeRateChange(uint256)\":{\"details\":\"Sender must be owner.\",\"params\":{\"newMaxApprovalExchangeRateChange\":\"The new value for maxApprovalExchangeRateChange to be wrapped.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setSpread(uint256)\":{\"details\":\"Sender must be owner.\",\"params\":{\"newSpread\":\"The new value for the spread to be wrapped. Must be <= fixed 1.\"}},\"setStableTokenExchangeLimits(string,uint256,uint256)\":{\"details\":\"Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new exchange proposals for the token.\",\"params\":{\"maxExchangeAmount\":\"The new maximum exchange amount for the stable token.\",\"minExchangeAmount\":\"The new minimum exchange amount for the stable token.\",\"stableTokenRegistryId\":\"The registry ID string for the stable token to set limits for.\"}},\"setVetoPeriodSeconds(uint256)\":{\"details\":\"Sender must be owner.\",\"params\":{\"newVetoPeriodSeconds\":\"The new value for the veto period in seconds.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Facilitates large exchanges between CELO stable tokens.\"},\"userdoc\":{\"methods\":{\"approveExchangeProposal(uint256)\":{\"notice\":\"Approves an existing exchange proposal.\"},\"cancelExchangeProposal(uint256)\":{\"notice\":\"Cancels an exchange proposal.\"},\"constructor\":\"Sets initialized == true on implementation contracts.\",\"createExchangeProposal(string,uint256,bool)\":{\"notice\":\"Creates a new exchange proposal and deposits the tokens being sold.\"},\"executeExchangeProposal(uint256)\":{\"notice\":\"Executes an exchange proposal that's been approved and not vetoed.\"},\"getActiveProposalIds()\":{\"notice\":\"Gets the proposal identifiers of exchange proposals in the Proposed or Approved state. Returns a version of activeProposalIdsSuperset with inactive proposal IDs set as 0.\"},\"getBuyAmount(uint256,uint256,bool)\":{\"notice\":\"Using the oracle price, charges the spread and calculates the amount of the asset being bought.\"},\"getStableTokenExchangeLimits(string)\":{\"notice\":\"Gets the minimum and maximum amount of a stable token that can be involved in a single exchange.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"removeFromActiveProposalIdsSuperset(uint256)\":{\"notice\":\"Removes the proposal ID found at the provided index of activeProposalIdsSuperset if the exchange proposal is not active.\"},\"setApprover(address)\":{\"notice\":\"Sets the approver.\"},\"setMaxApprovalExchangeRateChange(uint256)\":{\"notice\":\"Sets the maximum allowed change in the CELO/stable token price when an exchange proposal is being approved relative to the price when the proposal was created.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setSpread(uint256)\":{\"notice\":\"Sets the spread.\"},\"setStableTokenExchangeLimits(string,uint256,uint256)\":{\"notice\":\"Sets the minimum and maximum amount of the stable token an exchange can involve.\"},\"setVetoPeriodSeconds(uint256)\":{\"notice\":\"Sets the veto period in seconds.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/lib/mento-core/contracts/GrandaMento.sol\":\"GrandaMento\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"project:/lib/mento-core/contracts/GrandaMento.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\n\\nimport \\\"./common/FixidityLib.sol\\\";\\nimport \\\"./common/Initializable.sol\\\";\\nimport \\\"./common/UsingRegistry.sol\\\";\\nimport \\\"./common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"./common/ReentrancyGuard.sol\\\";\\nimport \\\"./interfaces/IStableToken.sol\\\";\\n\\n/**\\n * @title Facilitates large exchanges between CELO stable tokens.\\n */\\ncontract GrandaMento is ICeloVersionedContract, Ownable, Initializable, UsingRegistry, ReentrancyGuard {\\n  using FixidityLib for FixidityLib.Fraction;\\n  using SafeMath for uint256;\\n\\n  // Emitted when a new exchange proposal is created.\\n  event ExchangeProposalCreated(\\n    uint256 indexed proposalId,\\n    address indexed exchanger,\\n    string stableTokenRegistryId,\\n    uint256 sellAmount,\\n    uint256 buyAmount,\\n    bool sellCelo\\n  );\\n\\n  // Emitted when an exchange proposal is approved by the approver.\\n  event ExchangeProposalApproved(uint256 indexed proposalId);\\n\\n  // Emitted when an exchange proposal is cancelled.\\n  event ExchangeProposalCancelled(uint256 indexed proposalId);\\n\\n  // Emitted when an exchange proposal is executed.\\n  event ExchangeProposalExecuted(uint256 indexed proposalId);\\n\\n  // Emitted when the approver is set.\\n  event ApproverSet(address approver);\\n\\n  // Emitted when maxApprovalExchangeRateChange is set.\\n  event MaxApprovalExchangeRateChangeSet(uint256 maxApprovalExchangeRateChange);\\n\\n  // Emitted when the spread is set.\\n  event SpreadSet(uint256 spread);\\n\\n  // Emitted when the veto period in seconds is set.\\n  event VetoPeriodSecondsSet(uint256 vetoPeriodSeconds);\\n\\n  // Emitted when the exchange limits for a stable token are set.\\n  event StableTokenExchangeLimitsSet(string stableTokenRegistryId, uint256 minExchangeAmount, uint256 maxExchangeAmount);\\n\\n  enum ExchangeProposalState {\\n    None,\\n    Proposed,\\n    Approved,\\n    Executed,\\n    Cancelled\\n  }\\n\\n  struct ExchangeLimits {\\n    // The minimum amount of an asset that can be exchanged in a single proposal.\\n    uint256 minExchangeAmount;\\n    // The maximum amount of an asset that can be exchanged in a single proposal.\\n    uint256 maxExchangeAmount;\\n  }\\n\\n  struct ExchangeProposal {\\n    // The exchanger/proposer of the exchange proposal.\\n    address payable exchanger;\\n    // The stable token involved in this proposal. This is stored rather than\\n    // the stable token's registry ID in case the contract address is changed\\n    // after a proposal is created, which could affect refunding or burning the\\n    // stable token.\\n    address stableToken;\\n    // The state of the exchange proposal.\\n    ExchangeProposalState state;\\n    // Whether the exchanger is selling CELO and buying stableToken.\\n    bool sellCelo;\\n    // The amount of the sell token being sold. If a stable token is being sold,\\n    // the amount of stable token in \\\"units\\\" is stored rather than the \\\"value.\\\"\\n    // This is because stable tokens may experience demurrage/inflation, where\\n    // the amount of stable token \\\"units\\\" doesn't change with time, but the \\\"value\\\"\\n    // does. This is important to ensure the correct inflation-adjusted amount\\n    // of the stable token is transferred out of this contract when a deposit is\\n    // refunded or an exchange selling the stable token is executed.\\n    // See StableToken.sol for more details on what \\\"units\\\" vs \\\"values\\\" are.\\n    uint256 sellAmount;\\n    // The amount of the buy token being bought. For stable tokens, this is\\n    // kept track of as the value, not units.\\n    uint256 buyAmount;\\n    // The price of CELO quoted in stableToken at the time of the exchange proposal\\n    // creation. This is the price used to calculate the buyAmount. Used for a\\n    // safety check when an approval is being made that the price isn't wildly\\n    // different. Recalculating buyAmount is not sufficient because if a stable token\\n    // is being sold that has demurrage enabled, the original value when the stable\\n    // tokens were deposited cannot be calculated.\\n    uint256 celoStableTokenExchangeRate;\\n    // The veto period in seconds at the time the proposal was created. This is kept\\n    // track of on a per-proposal basis to lock-in the veto period for a proposal so\\n    // that changes to the contract's vetoPeriodSeconds do not affect existing\\n    // proposals.\\n    uint256 vetoPeriodSeconds;\\n    // The timestamp (`block.timestamp`) at which the exchange proposal was approved\\n    // in seconds. If the exchange proposal has not ever been approved, is 0.\\n    uint256 approvalTimestamp;\\n  }\\n\\n  // The address with the authority to approve exchange proposals.\\n  address public approver;\\n\\n  // The maximum allowed change in the CELO/stable token price when an exchange proposal\\n  // is being approved relative to the rate when the exchange proposal was created.\\n  FixidityLib.Fraction public maxApprovalExchangeRateChange;\\n\\n  // The percent fee imposed upon an exchange execution.\\n  FixidityLib.Fraction public spread;\\n\\n  // The period in seconds after an approval during which an exchange proposal can be vetoed.\\n  uint256 public vetoPeriodSeconds;\\n\\n  // The minimum and maximum amount of the stable token that can be minted or\\n  // burned in a single exchange. Indexed by the stable token registry identifier string.\\n  mapping(string => ExchangeLimits) public stableTokenExchangeLimits;\\n\\n  // State for all exchange proposals. Indexed by the exchange proposal ID.\\n  mapping(uint256 => ExchangeProposal) public exchangeProposals;\\n\\n  // An array containing a superset of the IDs of exchange proposals that are currently\\n  // in the Proposed or Approved state. Intended to allow easy viewing of all active\\n  // exchange proposals. It's possible for a proposal ID in this array to no longer be\\n  // active, so filtering is required to find the true set of active proposal IDs.\\n  // A superset is kept because exchange proposal vetoes, intended to be done\\n  // by Governance, effectively go through a multi-day timelock. If the veto\\n  // call was required to provide the index in an array of activeProposalIds to\\n  // remove corresponding to the vetoed exchange proposal, the timelock could result\\n  // in the provided index being stale by the time the veto would be executed.\\n  // Alternative approaches exist, like maintaining a linkedlist of active proposal\\n  // IDs, but this approach was chosen for its low implementation complexity.\\n  uint256[] public activeProposalIdsSuperset;\\n\\n  // Number of exchange proposals that have ever been created. Used for assigning\\n  // an exchange proposal ID to a new proposal.\\n  uint256 public exchangeProposalCount;\\n\\n  /**\\n   * @notice Reverts if the sender is not the approver.\\n   */\\n  modifier onlyApprover() {\\n    require(msg.sender == approver, \\\"Sender must be approver\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts.\\n   * @param test Set to true to skip implementation initialization.\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber()\\n    external\\n    pure\\n    returns (\\n      uint256,\\n      uint256,\\n      uint256,\\n      uint256\\n    )\\n  {\\n    return (1, 1, 0, 1);\\n  }\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param _registry The address of the registry.\\n   * @param _approver The approver that has the ability to approve exchange proposals.\\n   * @param _maxApprovalExchangeRateChange The maximum allowed change in CELO price\\n   * between an exchange proposal's creation and approval.\\n   * @param _spread The spread charged on exchanges.\\n   * @param _vetoPeriodSeconds The length of the veto period in seconds.\\n   */\\n  function initialize(\\n    address _registry,\\n    address _approver,\\n    uint256 _maxApprovalExchangeRateChange,\\n    uint256 _spread,\\n    uint256 _vetoPeriodSeconds\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(_registry);\\n    setApprover(_approver);\\n    setMaxApprovalExchangeRateChange(_maxApprovalExchangeRateChange);\\n    setSpread(_spread);\\n    setVetoPeriodSeconds(_vetoPeriodSeconds);\\n  }\\n\\n  /**\\n   * @notice Creates a new exchange proposal and deposits the tokens being sold.\\n   * @dev Stable token value amounts are used for the sellAmount, not unit amounts.\\n   * @param stableTokenRegistryId The string registry ID for the stable token\\n   * involved in the exchange.\\n   * @param sellAmount The amount of the sell token being sold.\\n   * @param sellCelo Whether CELO is being sold.\\n   * @return The proposal identifier for the newly created exchange proposal.\\n   */\\n  function createExchangeProposal(\\n    string calldata stableTokenRegistryId,\\n    uint256 sellAmount,\\n    bool sellCelo\\n  ) external nonReentrant returns (uint256) {\\n    address stableToken = registry.getAddressForStringOrDie(stableTokenRegistryId);\\n\\n    // Gets the price of CELO quoted in stableToken.\\n    uint256 celoStableTokenExchangeRate = getOracleExchangeRate(stableToken).unwrap();\\n\\n    // Using the current oracle exchange rate, calculate what the buy amount is.\\n    // This takes the spread into consideration.\\n    uint256 buyAmount = getBuyAmount(celoStableTokenExchangeRate, sellAmount, sellCelo);\\n\\n    // Create new scope to prevent a stack too deep error.\\n    {\\n      // Get the minimum and maximum amount of stable token than can be involved\\n      // in the exchange. This reverts if exchange limits for the stable token have\\n      // not been set.\\n      (uint256 minExchangeAmount, uint256 maxExchangeAmount) = getStableTokenExchangeLimits(stableTokenRegistryId);\\n      // Ensure that the amount of stableToken being bought or sold is within\\n      // the configurable exchange limits.\\n      uint256 stableTokenExchangeAmount = sellCelo ? buyAmount : sellAmount;\\n      require(\\n        stableTokenExchangeAmount <= maxExchangeAmount && stableTokenExchangeAmount >= minExchangeAmount,\\n        \\\"Stable token exchange amount not within limits\\\"\\n      );\\n    }\\n\\n    // Deposit the assets being sold.\\n    IERC20 sellToken = sellCelo ? getGoldToken() : IERC20(stableToken);\\n    require(sellToken.transferFrom(msg.sender, address(this), sellAmount), \\\"Transfer in of sell token failed\\\");\\n\\n    // Record the proposal.\\n    // Add 1 to the running proposal count, and use the updated proposal count as\\n    // the proposal ID. Proposal IDs intentionally start at 1.\\n    exchangeProposalCount = exchangeProposalCount.add(1);\\n    // For stable tokens, the amount is stored in units to deal with demurrage.\\n    uint256 storedSellAmount = sellCelo ? sellAmount : IStableToken(stableToken).valueToUnits(sellAmount);\\n    exchangeProposals[exchangeProposalCount] = ExchangeProposal({\\n      exchanger: msg.sender,\\n      stableToken: stableToken,\\n      state: ExchangeProposalState.Proposed,\\n      sellCelo: sellCelo,\\n      sellAmount: storedSellAmount,\\n      buyAmount: buyAmount,\\n      celoStableTokenExchangeRate: celoStableTokenExchangeRate,\\n      vetoPeriodSeconds: vetoPeriodSeconds,\\n      approvalTimestamp: 0 // initial value when not approved yet\\n    });\\n    // StableToken.unitsToValue (called within getSellTokenAndSellAmount) can\\n    // overflow for very large StableToken amounts. Call it here as a sanity\\n    // check, so that the overflow happens here, blocking proposal creation\\n    // rather than when attempting to execute the proposal, which would lock\\n    // funds in this contract.\\n    getSellTokenAndSellAmount(exchangeProposals[exchangeProposalCount]);\\n    // Push it into the array of active proposals.\\n    activeProposalIdsSuperset.push(exchangeProposalCount);\\n    // Even if stable tokens are being sold, the sellAmount emitted is the \\\"value.\\\"\\n    emit ExchangeProposalCreated(exchangeProposalCount, msg.sender, stableTokenRegistryId, sellAmount, buyAmount, sellCelo);\\n    return exchangeProposalCount;\\n  }\\n\\n  /**\\n   * @notice Approves an existing exchange proposal.\\n   * @dev Sender must be the approver. Exchange proposal must be in the Proposed state.\\n   * @param proposalId The identifier of the proposal to approve.\\n   */\\n  function approveExchangeProposal(uint256 proposalId) external nonReentrant onlyApprover {\\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\\n    // Ensure the proposal is in the Proposed state.\\n    require(proposal.state == ExchangeProposalState.Proposed, \\\"Proposal must be in Proposed state\\\");\\n    // Ensure the change in the current price of CELO quoted in the stable token\\n    // relative to the value when the proposal was created is within the allowed limit.\\n    FixidityLib.Fraction memory currentRate = getOracleExchangeRate(proposal.stableToken);\\n    FixidityLib.Fraction memory proposalRate = FixidityLib.wrap(proposal.celoStableTokenExchangeRate);\\n    (FixidityLib.Fraction memory lesserRate, FixidityLib.Fraction memory greaterRate) = currentRate.lt(proposalRate)\\n      ? (currentRate, proposalRate)\\n      : (proposalRate, currentRate);\\n    FixidityLib.Fraction memory rateChange = greaterRate.subtract(lesserRate).divide(proposalRate);\\n    require(rateChange.lte(maxApprovalExchangeRateChange), \\\"CELO exchange rate is too different from the proposed price\\\");\\n\\n    // Set the time the approval occurred and change the state.\\n    proposal.approvalTimestamp = block.timestamp;\\n    proposal.state = ExchangeProposalState.Approved;\\n    emit ExchangeProposalApproved(proposalId);\\n  }\\n\\n  /**\\n   * @notice Cancels an exchange proposal.\\n   * @dev Only callable by the exchanger if the proposal is in the Proposed state\\n   * or the owner if the proposal is in the Approved state.\\n   * @param proposalId The identifier of the proposal to cancel.\\n   */\\n  function cancelExchangeProposal(uint256 proposalId) external nonReentrant {\\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\\n    // Require the appropriate state and sender.\\n    // This will also revert if a proposalId is given that does not correspond\\n    // to a previously created exchange proposal.\\n    if (proposal.state == ExchangeProposalState.Proposed) {\\n      require(proposal.exchanger == msg.sender, \\\"Sender must be exchanger\\\");\\n    } else if (proposal.state == ExchangeProposalState.Approved) {\\n      require(isOwner(), \\\"Sender must be owner\\\");\\n    } else {\\n      revert(\\\"Proposal must be in Proposed or Approved state\\\");\\n    }\\n    // Mark the proposal as cancelled. Do so prior to refunding as a measure against reentrancy.\\n    proposal.state = ExchangeProposalState.Cancelled;\\n    // Get the token and amount that will be refunded to the proposer.\\n    (IERC20 refundToken, uint256 refundAmount) = getSellTokenAndSellAmount(proposal);\\n    // Finally, transfer out the deposited funds.\\n    require(refundToken.transfer(proposal.exchanger, refundAmount), \\\"Transfer out of refund token failed\\\");\\n    emit ExchangeProposalCancelled(proposalId);\\n  }\\n\\n  /**\\n   * @notice Executes an exchange proposal that's been approved and not vetoed.\\n   * @dev Callable by anyone. Reverts if the proposal is not in the Approved state\\n   * or proposal.vetoPeriodSeconds has not elapsed since approval.\\n   * @param proposalId The identifier of the proposal to execute.\\n   */\\n  function executeExchangeProposal(uint256 proposalId) external nonReentrant {\\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\\n    // Require that the proposal is in the Approved state.\\n    require(proposal.state == ExchangeProposalState.Approved, \\\"Proposal must be in Approved state\\\");\\n    // Require that the veto period has elapsed since the approval time.\\n    require(proposal.approvalTimestamp.add(proposal.vetoPeriodSeconds) <= block.timestamp, \\\"Veto period not elapsed\\\");\\n    // Mark the proposal as executed. Do so prior to exchanging as a measure against reentrancy.\\n    proposal.state = ExchangeProposalState.Executed;\\n    // Perform the exchange.\\n    (IERC20 sellToken, uint256 sellAmount) = getSellTokenAndSellAmount(proposal);\\n    // If the exchange sells CELO, the CELO is sent to the Reserve from this contract\\n    // and stable token is minted to the exchanger.\\n    if (proposal.sellCelo) {\\n      // Send the CELO from this contract to the reserve.\\n      require(sellToken.transfer(address(getReserve()), sellAmount), \\\"Transfer out of CELO to Reserve failed\\\");\\n      // Mint stable token to the exchanger.\\n      require(IStableToken(proposal.stableToken).mint(proposal.exchanger, proposal.buyAmount), \\\"Stable token mint failed\\\");\\n    } else {\\n      // If the exchange is selling stable token, the stable token is burned from\\n      // this contract and CELO is transferred from the Reserve to the exchanger.\\n\\n      // Burn the stable token from this contract.\\n      require(IStableToken(proposal.stableToken).burn(sellAmount), \\\"Stable token burn failed\\\");\\n      // Transfer the CELO from the Reserve to the exchanger.\\n      require(\\n        getReserve().transferExchangeGold(proposal.exchanger, proposal.buyAmount),\\n        \\\"Transfer out of CELO from Reserve failed\\\"\\n      );\\n    }\\n    emit ExchangeProposalExecuted(proposalId);\\n  }\\n\\n  /**\\n   * @notice Gets the sell token and the sell amount for a proposal.\\n   * @dev For stable token sell amounts that are stored as units, the value\\n   * is returned. Ensures sell amount is not greater than this contract's balance.\\n   * @param proposal The proposal to get the sell token and sell amount for.\\n   * @return The IERC20 sell token.\\n   * @return The value sell amount.\\n   */\\n  function getSellTokenAndSellAmount(ExchangeProposal memory proposal) private view returns (IERC20, uint256) {\\n    IERC20 sellToken;\\n    uint256 sellAmount;\\n    if (proposal.sellCelo) {\\n      sellToken = getGoldToken();\\n      sellAmount = proposal.sellAmount;\\n    } else {\\n      address stableToken = proposal.stableToken;\\n      sellToken = IERC20(stableToken);\\n      // When selling stableToken, the sell amount is stored in units.\\n      // Units must be converted to value when refunding.\\n      sellAmount = IStableToken(stableToken).unitsToValue(proposal.sellAmount);\\n    }\\n    // In the event a precision issue from the unit <-> value calculations results\\n    // in sellAmount being greater than this contract's balance, set the sellAmount\\n    // to the entire balance.\\n    // This check should not be necessary for CELO, but is done so regardless\\n    // for extra certainty that cancelling an exchange proposal can never fail\\n    // if for some reason the CELO balance of this contract is less than the\\n    // recorded sell amount.\\n    uint256 totalBalance = sellToken.balanceOf(address(this));\\n    if (totalBalance < sellAmount) {\\n      sellAmount = totalBalance;\\n    }\\n    return (sellToken, sellAmount);\\n  }\\n\\n  /**\\n   * @notice Using the oracle price, charges the spread and calculates the amount of\\n   * the asset being bought.\\n   * @dev Stable token value amounts are used for the sellAmount, not unit amounts.\\n   * Assumes both CELO and the stable token have 18 decimals.\\n   * @param celoStableTokenExchangeRate The unwrapped fraction exchange rate of CELO\\n   * quoted in the stable token.\\n   * @param sellAmount The amount of the sell token being sold.\\n   * @param sellCelo Whether CELO is being sold.\\n   * @return The amount of the asset being bought.\\n   */\\n  function getBuyAmount(\\n    uint256 celoStableTokenExchangeRate,\\n    uint256 sellAmount,\\n    bool sellCelo\\n  ) public view returns (uint256) {\\n    FixidityLib.Fraction memory exchangeRate = FixidityLib.wrap(celoStableTokenExchangeRate);\\n    // If stableToken is being sold, instead use the price of stableToken\\n    // quoted in CELO.\\n    if (!sellCelo) {\\n      exchangeRate = exchangeRate.reciprocal();\\n    }\\n    // The sell amount taking the spread into account, ie:\\n    // (1 - spread) * sellAmount\\n    FixidityLib.Fraction memory adjustedSellAmount = FixidityLib.fixed1().subtract(spread).multiply(\\n      FixidityLib.newFixed(sellAmount)\\n    );\\n    // Calculate the buy amount:\\n    // exchangeRate * adjustedSellAmount\\n    return exchangeRate.multiply(adjustedSellAmount).fromFixed();\\n  }\\n\\n  /**\\n   * @notice Removes the proposal ID found at the provided index of activeProposalIdsSuperset\\n   * if the exchange proposal is not active.\\n   * @dev Anyone can call. Reverts if the exchange proposal is active.\\n   * @param index The index of the proposal ID to remove from activeProposalIdsSuperset.\\n   */\\n  function removeFromActiveProposalIdsSuperset(uint256 index) external {\\n    require(index < activeProposalIdsSuperset.length, \\\"Index out of bounds\\\");\\n    uint256 proposalId = activeProposalIdsSuperset[index];\\n    // Require the exchange proposal to be inactive.\\n    require(\\n      exchangeProposals[proposalId].state != ExchangeProposalState.Proposed &&\\n        exchangeProposals[proposalId].state != ExchangeProposalState.Approved,\\n      \\\"Exchange proposal not inactive\\\"\\n    );\\n    // If not removing the last element, overwrite the index with the value of\\n    // the last element.\\n    uint256 lastIndex = activeProposalIdsSuperset.length.sub(1);\\n    if (index < lastIndex) {\\n      activeProposalIdsSuperset[index] = activeProposalIdsSuperset[lastIndex];\\n    }\\n    // Delete the last element.\\n    activeProposalIdsSuperset.length--;\\n  }\\n\\n  /**\\n   * @notice Gets the proposal identifiers of exchange proposals in the\\n   * Proposed or Approved state. Returns a version of activeProposalIdsSuperset\\n   * with inactive proposal IDs set as 0.\\n   * @dev Elements with a proposal ID of 0 should be filtered out by the consumer.\\n   * @return An array of active exchange proposals IDs.\\n   */\\n  function getActiveProposalIds() external view returns (uint256[] memory) {\\n    // Solidity doesn't play well with dynamically sized memory arrays.\\n    // Instead, this array is created with the same length as activeProposalIdsSuperset,\\n    // and will replace elements that are inactive proposal IDs with the value 0.\\n    uint256[] memory activeProposalIds = new uint256[](activeProposalIdsSuperset.length);\\n\\n    for (uint256 i = 0; i < activeProposalIdsSuperset.length; i = i.add(1)) {\\n      uint256 proposalId = activeProposalIdsSuperset[i];\\n      if (\\n        exchangeProposals[proposalId].state == ExchangeProposalState.Proposed ||\\n        exchangeProposals[proposalId].state == ExchangeProposalState.Approved\\n      ) {\\n        activeProposalIds[i] = proposalId;\\n      }\\n    }\\n    return activeProposalIds;\\n  }\\n\\n  /**\\n   * @notice Gets the oracle CELO price quoted in the stable token.\\n   * @dev Reverts if there is not a rate for the provided stable token.\\n   * @param stableToken The stable token to get the oracle price for.\\n   * @return The oracle CELO price quoted in the stable token.\\n   */\\n  function getOracleExchangeRate(address stableToken) private view returns (FixidityLib.Fraction memory) {\\n    uint256 rateNumerator;\\n    uint256 rateDenominator;\\n    (rateNumerator, rateDenominator) = getSortedOracles().medianRate(stableToken);\\n    // When rateDenominator is 0, it means there are no rates known to SortedOracles.\\n    require(rateDenominator > 0, \\\"No oracle rates present for token\\\");\\n    return FixidityLib.wrap(rateNumerator).divide(FixidityLib.wrap(rateDenominator));\\n  }\\n\\n  /**\\n   * @notice Gets the minimum and maximum amount of a stable token that can be\\n   * involved in a single exchange.\\n   * @dev Reverts if there is no explicit exchange limit for the stable token.\\n   * @param stableTokenRegistryId The string registry ID for the stable token.\\n   * @return Minimum exchange amount.\\n   * @return Maximum exchange amount.\\n   */\\n  function getStableTokenExchangeLimits(string memory stableTokenRegistryId) public view returns (uint256, uint256) {\\n    ExchangeLimits memory exchangeLimits = stableTokenExchangeLimits[stableTokenRegistryId];\\n    // Require the configurable stableToken max exchange amount to be > 0.\\n    // This covers the case where a stableToken has never been explicitly permitted.\\n    require(exchangeLimits.maxExchangeAmount > 0, \\\"Max stable token exchange amount must be defined\\\");\\n    return (exchangeLimits.minExchangeAmount, exchangeLimits.maxExchangeAmount);\\n  }\\n\\n  /**\\n   * @notice Sets the approver.\\n   * @dev Sender must be owner. New approver is allowed to be address(0).\\n   * @param newApprover The new value for the approver.\\n   */\\n  function setApprover(address newApprover) public onlyOwner {\\n    approver = newApprover;\\n    emit ApproverSet(newApprover);\\n  }\\n\\n  /**\\n   * @notice Sets the maximum allowed change in the CELO/stable token price when\\n   * an exchange proposal is being approved relative to the price when the proposal\\n   * was created.\\n   * @dev Sender must be owner.\\n   * @param newMaxApprovalExchangeRateChange The new value for maxApprovalExchangeRateChange\\n   * to be wrapped.\\n   */\\n  function setMaxApprovalExchangeRateChange(uint256 newMaxApprovalExchangeRateChange) public onlyOwner {\\n    maxApprovalExchangeRateChange = FixidityLib.wrap(newMaxApprovalExchangeRateChange);\\n    emit MaxApprovalExchangeRateChangeSet(newMaxApprovalExchangeRateChange);\\n  }\\n\\n  /**\\n   * @notice Sets the spread.\\n   * @dev Sender must be owner.\\n   * @param newSpread The new value for the spread to be wrapped. Must be <= fixed 1.\\n   */\\n  function setSpread(uint256 newSpread) public onlyOwner {\\n    spread = FixidityLib.wrap(newSpread);\\n    require(FixidityLib.lte(spread, FixidityLib.fixed1()), \\\"Spread must be less than or equal to 1\\\");\\n    emit SpreadSet(newSpread);\\n  }\\n\\n  /**\\n   * @notice Sets the minimum and maximum amount of the stable token an exchange can involve.\\n   * @dev Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new\\n   * exchange proposals for the token.\\n   * @param stableTokenRegistryId The registry ID string for the stable token to set limits for.\\n   * @param minExchangeAmount The new minimum exchange amount for the stable token.\\n   * @param maxExchangeAmount The new maximum exchange amount for the stable token.\\n   */\\n  function setStableTokenExchangeLimits(\\n    string calldata stableTokenRegistryId,\\n    uint256 minExchangeAmount,\\n    uint256 maxExchangeAmount\\n  ) external onlyOwner {\\n    require(minExchangeAmount <= maxExchangeAmount, \\\"Min exchange amount must not be greater than max\\\");\\n    stableTokenExchangeLimits[stableTokenRegistryId] = ExchangeLimits({\\n      minExchangeAmount: minExchangeAmount,\\n      maxExchangeAmount: maxExchangeAmount\\n    });\\n    emit StableTokenExchangeLimitsSet(stableTokenRegistryId, minExchangeAmount, maxExchangeAmount);\\n  }\\n\\n  /**\\n   * @notice Sets the veto period in seconds.\\n   * @dev Sender must be owner.\\n   * @param newVetoPeriodSeconds The new value for the veto period in seconds.\\n   */\\n  function setVetoPeriodSeconds(uint256 newVetoPeriodSeconds) public onlyOwner {\\n    // Hardcode a max of 4 weeks.\\n    // A minimum is not enforced for flexibility. A case of interest is if\\n    // Governance were to be set as the `approver`, it would be desirable to\\n    // set the veto period to 0 seconds.\\n    require(newVetoPeriodSeconds <= 4 weeks, \\\"Veto period cannot exceed 4 weeks\\\");\\n    vetoPeriodSeconds = newVetoPeriodSeconds;\\n    emit VetoPeriodSecondsSet(newVetoPeriodSeconds);\\n  }\\n}\\n\",\"keccak256\":\"0x5f928c71b5c24ce0dcbd852cb31a513de606d5c5b25316f0786804605f2fc633\"},\"project:/lib/mento-core/contracts/common/FixidityLib.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title FixidityLib\\n * @author Gadi Guy, Alberto Cuesta Canada\\n * @notice This library provides fixed point arithmetic with protection against\\n * overflow.\\n * All operations are done with uint256 and the operands must have been created\\n * with any of the newFrom* functions, which shift the comma digits() to the\\n * right and check for limits, or with wrap() which expects a number already\\n * in the internal representation of a fraction.\\n * When using this library be sure to use maxNewFixed() as the upper limit for\\n * creation of fixed point numbers.\\n * @dev All contained functions are pure and thus marked internal to be inlined\\n * on consuming contracts at compile time for gas efficiency.\\n */\\nlibrary FixidityLib {\\n    struct Fraction {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @notice Number of positions that the comma is shifted to the right.\\n     */\\n    function digits() internal pure returns (uint8) {\\n        return 24;\\n    }\\n\\n    uint256 private constant FIXED1_UINT = 1000000000000000000000000;\\n\\n    /**\\n     * @notice This is 1 in the fixed point units used in this library.\\n     * @dev Test fixed1() equals 10^digits()\\n     * Hardcoded to 24 digits.\\n     */\\n    function fixed1() internal pure returns (Fraction memory) {\\n        return Fraction(FIXED1_UINT);\\n    }\\n\\n    /**\\n     * @notice Wrap a uint256 that represents a 24-decimal fraction in a Fraction\\n     * struct.\\n     * @param x Number that already represents a 24-decimal fraction.\\n     * @return A Fraction struct with contents x.\\n     */\\n    function wrap(uint256 x) internal pure returns (Fraction memory) {\\n        return Fraction(x);\\n    }\\n\\n    /**\\n     * @notice Unwraps the uint256 inside of a Fraction struct.\\n     */\\n    function unwrap(Fraction memory x) internal pure returns (uint256) {\\n        return x.value;\\n    }\\n\\n    /**\\n     * @notice The amount of decimals lost on each multiplication operand.\\n     * @dev Test mulPrecision() equals sqrt(fixed1)\\n     */\\n    function mulPrecision() internal pure returns (uint256) {\\n        return 1000000000000;\\n    }\\n\\n    /**\\n     * @notice Maximum value that can be converted to fixed point. Optimize for deployment.\\n     * @dev\\n     * Test maxNewFixed() equals maxUint256() / fixed1()\\n     */\\n    function maxNewFixed() internal pure returns (uint256) {\\n        return 115792089237316195423570985008687907853269984665640564;\\n    }\\n\\n    /**\\n     * @notice Converts a uint256 to fixed point Fraction\\n     * @dev Test newFixed(0) returns 0\\n     * Test newFixed(1) returns fixed1()\\n     * Test newFixed(maxNewFixed()) returns maxNewFixed() * fixed1()\\n     * Test newFixed(maxNewFixed()+1) fails\\n     */\\n    function newFixed(uint256 x) internal pure returns (Fraction memory) {\\n        require(x <= maxNewFixed(), \\\"can't create fixidity number larger than maxNewFixed()\\\");\\n        return Fraction(x * FIXED1_UINT);\\n    }\\n\\n    /**\\n     * @notice Converts a uint256 in the fixed point representation of this\\n     * library to a non decimal. All decimal digits will be truncated.\\n     */\\n    function fromFixed(Fraction memory x) internal pure returns (uint256) {\\n        return x.value / FIXED1_UINT;\\n    }\\n\\n    /**\\n     * @notice Converts two uint256 representing a fraction to fixed point units,\\n     * equivalent to multiplying dividend and divisor by 10^digits().\\n     * @param numerator numerator must be <= maxNewFixed()\\n     * @param denominator denominator must be <= maxNewFixed() and denominator can't be 0\\n     * @dev\\n     * Test newFixedFraction(1,0) fails\\n     * Test newFixedFraction(0,1) returns 0\\n     * Test newFixedFraction(1,1) returns fixed1()\\n     * Test newFixedFraction(1,fixed1()) returns 1\\n     */\\n    function newFixedFraction(uint256 numerator, uint256 denominator) internal pure returns (Fraction memory) {\\n        Fraction memory convertedNumerator = newFixed(numerator);\\n        Fraction memory convertedDenominator = newFixed(denominator);\\n        return divide(convertedNumerator, convertedDenominator);\\n    }\\n\\n    /**\\n     * @notice Returns the integer part of a fixed point number.\\n     * @dev\\n     * Test integer(0) returns 0\\n     * Test integer(fixed1()) returns fixed1()\\n     * Test integer(newFixed(maxNewFixed())) returns maxNewFixed()*fixed1()\\n     */\\n    function integer(Fraction memory x) internal pure returns (Fraction memory) {\\n        return Fraction((x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n    }\\n\\n    /**\\n     * @notice Returns the fractional part of a fixed point number.\\n     * In the case of a negative number the fractional is also negative.\\n     * @dev\\n     * Test fractional(0) returns 0\\n     * Test fractional(fixed1()) returns 0\\n     * Test fractional(fixed1()-1) returns 10^24-1\\n     */\\n    function fractional(Fraction memory x) internal pure returns (Fraction memory) {\\n        return Fraction(x.value - (x.value / FIXED1_UINT) * FIXED1_UINT); // Can't overflow\\n    }\\n\\n    /**\\n     * @notice x+y.\\n     * @dev The maximum value that can be safely used as an addition operator is defined as\\n     * maxFixedAdd = maxUint256()-1 / 2, or\\n     * 57896044618658097711785492504343953926634992332820282019728792003956564819967.\\n     * Test add(maxFixedAdd,maxFixedAdd) equals maxFixedAdd + maxFixedAdd\\n     * Test add(maxFixedAdd+1,maxFixedAdd+1) throws\\n     */\\n    function add(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n        uint256 z = x.value + y.value;\\n        require(z >= x.value, \\\"add overflow detected\\\");\\n        return Fraction(z);\\n    }\\n\\n    /**\\n     * @notice x-y.\\n     * @dev\\n     * Test subtract(6, 10) fails\\n     */\\n    function subtract(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n        require(x.value >= y.value, \\\"substraction underflow detected\\\");\\n        return Fraction(x.value - y.value);\\n    }\\n\\n    /**\\n     * @notice x*y. If any of the operators is higher than the max multiplier value it\\n     * might overflow.\\n     * @dev The maximum value that can be safely used as a multiplication operator\\n     * (maxFixedMul) is calculated as sqrt(maxUint256()*fixed1()),\\n     * or 340282366920938463463374607431768211455999999999999\\n     * Test multiply(0,0) returns 0\\n     * Test multiply(maxFixedMul,0) returns 0\\n     * Test multiply(0,maxFixedMul) returns 0\\n     * Test multiply(fixed1()/mulPrecision(),fixed1()*mulPrecision()) returns fixed1()\\n     * Test multiply(maxFixedMul,maxFixedMul) is around maxUint256()\\n     * Test multiply(maxFixedMul+1,maxFixedMul+1) fails\\n     */\\n    function multiply(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n        if (x.value == 0 || y.value == 0) return Fraction(0);\\n        if (y.value == FIXED1_UINT) return x;\\n        if (x.value == FIXED1_UINT) return y;\\n\\n        // Separate into integer and fractional parts\\n        // x = x1 + x2, y = y1 + y2\\n        uint256 x1 = integer(x).value / FIXED1_UINT;\\n        uint256 x2 = fractional(x).value;\\n        uint256 y1 = integer(y).value / FIXED1_UINT;\\n        uint256 y2 = fractional(y).value;\\n\\n        // (x1 + x2) * (y1 + y2) = (x1 * y1) + (x1 * y2) + (x2 * y1) + (x2 * y2)\\n        uint256 x1y1 = x1 * y1;\\n        if (x1 != 0) require(x1y1 / x1 == y1, \\\"overflow x1y1 detected\\\");\\n\\n        // x1y1 needs to be multiplied back by fixed1\\n        // solium-disable-next-line mixedcase\\n        uint256 fixed_x1y1 = x1y1 * FIXED1_UINT;\\n        if (x1y1 != 0) require(fixed_x1y1 / x1y1 == FIXED1_UINT, \\\"overflow x1y1 * fixed1 detected\\\");\\n        x1y1 = fixed_x1y1;\\n\\n        uint256 x2y1 = x2 * y1;\\n        if (x2 != 0) require(x2y1 / x2 == y1, \\\"overflow x2y1 detected\\\");\\n\\n        uint256 x1y2 = x1 * y2;\\n        if (x1 != 0) require(x1y2 / x1 == y2, \\\"overflow x1y2 detected\\\");\\n\\n        x2 = x2 / mulPrecision();\\n        y2 = y2 / mulPrecision();\\n        uint256 x2y2 = x2 * y2;\\n        if (x2 != 0) require(x2y2 / x2 == y2, \\\"overflow x2y2 detected\\\");\\n\\n        // result = fixed1() * x1 * y1 + x1 * y2 + x2 * y1 + x2 * y2 / fixed1();\\n        Fraction memory result = Fraction(x1y1);\\n        result = add(result, Fraction(x2y1)); // Add checks for overflow\\n        result = add(result, Fraction(x1y2)); // Add checks for overflow\\n        result = add(result, Fraction(x2y2)); // Add checks for overflow\\n        return result;\\n    }\\n\\n    /**\\n     * @notice 1/x\\n     * @dev\\n     * Test reciprocal(0) fails\\n     * Test reciprocal(fixed1()) returns fixed1()\\n     * Test reciprocal(fixed1()*fixed1()) returns 1 // Testing how the fractional is truncated\\n     * Test reciprocal(1+fixed1()*fixed1()) returns 0 // Testing how the fractional is truncated\\n     * Test reciprocal(newFixedFraction(1, 1e24)) returns newFixed(1e24)\\n     */\\n    function reciprocal(Fraction memory x) internal pure returns (Fraction memory) {\\n        require(x.value != 0, \\\"can't call reciprocal(0)\\\");\\n        return Fraction((FIXED1_UINT * FIXED1_UINT) / x.value); // Can't overflow\\n    }\\n\\n    /**\\n     * @notice x/y. If the dividend is higher than the max dividend value, it\\n     * might overflow. You can use multiply(x,reciprocal(y)) instead.\\n     * @dev The maximum value that can be safely used as a dividend (maxNewFixed) is defined as\\n     * divide(maxNewFixed,newFixedFraction(1,fixed1())) is around maxUint256().\\n     * This yields the value 115792089237316195423570985008687907853269984665640564.\\n     * Test maxNewFixed equals maxUint256()/fixed1()\\n     * Test divide(maxNewFixed,1) equals maxNewFixed*(fixed1)\\n     * Test divide(maxNewFixed+1,multiply(mulPrecision(),mulPrecision())) throws\\n     * Test divide(fixed1(),0) fails\\n     * Test divide(maxNewFixed,1) = maxNewFixed*(10^digits())\\n     * Test divide(maxNewFixed+1,1) throws\\n     */\\n    function divide(Fraction memory x, Fraction memory y) internal pure returns (Fraction memory) {\\n        require(y.value != 0, \\\"can't divide by 0\\\");\\n        uint256 X = x.value * FIXED1_UINT;\\n        require(X / FIXED1_UINT == x.value, \\\"overflow at divide\\\");\\n        return Fraction(X / y.value);\\n    }\\n\\n    /**\\n     * @notice x > y\\n     */\\n    function gt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n        return x.value > y.value;\\n    }\\n\\n    /**\\n     * @notice x >= y\\n     */\\n    function gte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n        return x.value >= y.value;\\n    }\\n\\n    /**\\n     * @notice x < y\\n     */\\n    function lt(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n        return x.value < y.value;\\n    }\\n\\n    /**\\n     * @notice x <= y\\n     */\\n    function lte(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n        return x.value <= y.value;\\n    }\\n\\n    /**\\n     * @notice x == y\\n     */\\n    function equals(Fraction memory x, Fraction memory y) internal pure returns (bool) {\\n        return x.value == y.value;\\n    }\\n\\n    /**\\n     * @notice x <= 1\\n     */\\n    function isProperFraction(Fraction memory x) internal pure returns (bool) {\\n        return lte(x, fixed1());\\n    }\\n}\\n\",\"keccak256\":\"0x242f5ad451047a899fec403f798c8477ac6c6c7c637a9c00b82c909aaa0ebc58\"},\"project:/lib/mento-core/contracts/common/Initializable.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ncontract Initializable {\\n    bool public initialized;\\n\\n    constructor(bool testingDeployment) public {\\n        if (!testingDeployment) {\\n            initialized = true;\\n        }\\n    }\\n\\n    modifier initializer() {\\n        require(!initialized, \\\"contract already initialized\\\");\\n        initialized = true;\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xb0ecb1e982724eea55f4fff68ae425db6a5cb34e7a76ebefc6c30ddf858f80d6\"},\"project:/lib/mento-core/contracts/common/ReentrancyGuard.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title Helps contracts guard against reentrancy attacks.\\n * @author Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\\n * @dev If you mark a function `nonReentrant`, you should also\\n * mark it `external`.\\n */\\ncontract ReentrancyGuard {\\n    /// @dev counter to allow mutex lock with only one SSTORE operation\\n    uint256 private _guardCounter;\\n\\n    constructor() internal {\\n        // The counter starts at one to prevent changing it from zero to a non-zero\\n        // value, which is a more expensive operation.\\n        _guardCounter = 1;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _guardCounter += 1;\\n        uint256 localCounter = _guardCounter;\\n        _;\\n        require(localCounter == _guardCounter, \\\"reentrant call\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x2ef34e9e00aa11688d4dde367ef5ea7d8bcc4ecafe7e1d623b12cf1465c0b2ed\"},\"project:/lib/mento-core/contracts/common/UsingRegistry.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\n\\nimport \\\"../interfaces/IExchange.sol\\\";\\nimport \\\"../interfaces/IReserve.sol\\\";\\nimport \\\"../interfaces/ISortedOracles.sol\\\";\\nimport \\\"../interfaces/IStableToken.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n    event RegistrySet(address indexed registryAddress);\\n\\n    // solhint-disable state-visibility\\n    bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n    bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n    bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n    bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n    bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n    bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n    bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID = keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n    bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n    bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n    bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n    bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n    bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n    bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n    bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n    bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n    bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n    bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n    // solhint-enable state-visibility\\n\\n    IRegistry public registry;\\n\\n    modifier onlyRegisteredContract(bytes32 identifierHash) {\\n        require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n        _;\\n    }\\n\\n    modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n        require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Updates the address pointing to a Registry contract.\\n     * @param registryAddress The address of a registry contract for routing to other contracts.\\n     */\\n    function setRegistry(address registryAddress) public onlyOwner {\\n        require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n        registry = IRegistry(registryAddress);\\n        emit RegistrySet(registryAddress);\\n    }\\n\\n    function getExchange() internal view returns (IExchange) {\\n        return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n    }\\n\\n    function getFreezer() internal view returns (IFreezer) {\\n        return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n    }\\n\\n    function getGoldToken() internal view returns (IERC20) {\\n        return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n    }\\n\\n    function getReserve() internal view returns (IReserve) {\\n        return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n    }\\n\\n    function getSortedOracles() internal view returns (ISortedOracles) {\\n        return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n    }\\n\\n    function getStableToken() internal view returns (IStableToken) {\\n        return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n    }\\n}\\n\",\"keccak256\":\"0x08129f15c2b5641a361125c94ec8e575f222364f4f8fcb1a326016b27e15274e\"},\"project:/lib/mento-core/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface ICeloVersionedContract {\\n    /**\\n     * @notice Returns the storage, major, minor, and patch version of the contract.\\n     * @return Storage version of the contract.\\n     * @return Major version of the contract.\\n     * @return Minor version of the contract.\\n     * @return Patch version of the contract.\\n     */\\n    function getVersionNumber()\\n        external\\n        pure\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n}\\n\",\"keccak256\":\"0xcd0ec818f34364d442602c03b76a9068d994d7a44c75e7abdfc879df48a54527\"},\"project:/lib/mento-core/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IFreezer {\\n    function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd54bab5f4df0471c112b7274db5e4321cda98f9bd894afff16a9e8e9ef58daf4\"},\"project:/lib/mento-core/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IRegistry {\\n    function setAddressFor(string calldata, address) external;\\n\\n    function getAddressForOrDie(bytes32) external view returns (address);\\n\\n    function getAddressFor(bytes32) external view returns (address);\\n\\n    function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n\\n    function getAddressForString(string calldata identifier) external view returns (address);\\n\\n    function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6349f43583970ac9ead075cc13f2716275ca8d8883246e6a58ab74a8f8560dd4\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/ISortedOracles.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface ISortedOracles {\\n    function addOracle(address, address) external;\\n\\n    function removeOracle(\\n        address,\\n        address,\\n        uint256\\n    ) external;\\n\\n    function report(\\n        address,\\n        uint256,\\n        address,\\n        address\\n    ) external;\\n\\n    function removeExpiredReports(address, uint256) external;\\n\\n    function isOldestReportExpired(address token) external view returns (bool, address);\\n\\n    function numRates(address) external view returns (uint256);\\n\\n    function medianRate(address) external view returns (uint256, uint256);\\n\\n    function numTimestamps(address) external view returns (uint256);\\n\\n    function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x000a938f4229fc5d8115eac3a98117ba87e8ed26d85ddad76be77b90c9dd4451\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004ca238038062004ca2833981810160405260208110156200003757600080fd5b81019080805190602001909291905050508060006200005b6200012b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350806200011b576001600060146101000a81548160ff0219169083151502179055505b5060016002819055505062000133565b600033905090565b614b5f80620001436000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637b10399911610104578063be4c0d2c116100a2578063e33ddfc011610071578063e33ddfc0146109e2578063e7be36c814610a6f578063e7f6d98014610a9d578063f2fde38b14610abb576101da565b8063be4c0d2c1461082e578063c89f6e1714610904578063cb60cca014610932578063d13f90b414610960576101da565b8063a91ee0dc116100de578063a91ee0dc14610770578063aa853da4146107b4578063b66a261c146107d2578063b7430ab014610800576101da565b80637b103999146106ba5780638da5cb5b146107045780638f32d59b1461074e576101da565b80633ff9d6371161017c5780635c25c76c1161014b5780635c25c76c146105905780635eb8fc76146105ae578063715018a61461065157806371a1aea71461065b576101da565b80633ff9d637146104a557806344ca493a146104c357806349dc646a1461050557806354255be01461055d576101da565b8063158ef93e116101b8578063158ef93e1461032d5780631f4328b51461034f5780633156560e1461037d5780633b5b4f2c146103c1576101da565b8063049ecbd9146101df578063139fdcff1461020d578063141a8dd8146102e3575b600080fd5b61020b600480360360208110156101f557600080fd5b8101908080359060200190929190505050610aff565b005b6102c66004803603602081101561022357600080fd5b810190808035906020019064010000000081111561024057600080fd5b82018360208201111561025257600080fd5b8035906020019184600183028401116401000000008311171561027457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c16565b604051808381526020018281526020019250505060405180910390f35b6102eb610d1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610335610d42565b604051808215151515815260200191505060405180910390f35b61037b6004803603602081101561036557600080fd5b8101908080359060200190929190505050610d55565b005b6103bf6004803603602081101561039357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d4565b005b6103ed600480360360208110156103d757600080fd5b81019080803590602001909291905050506111f5565b604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188600481111561046157fe5b60ff16815260200187151515158152602001868152602001858152602001848152602001838152602001828152602001995050505050505050505060405180910390f35b6104ad61129d565b6040518082815260200191505060405180910390f35b6104ef600480360360208110156104d957600080fd5b81019080803590602001909291905050506112a9565b6040518082815260200191505060405180910390f35b6105476004803603606081101561051b57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506112ca565b6040518082815260200191505060405180910390f35b61056561136a565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b610598611391565b6040518082815260200191505060405180910390f35b61063b600480360360608110156105c457600080fd5b81019080803590602001906401000000008111156105e157600080fd5b8201836020820111156105f357600080fd5b8035906020019184600183028401116401000000008311171561061557600080fd5b90919293919293908035906020019092919080351515906020019092919050505061139d565b6040518082815260200191505060405180910390f35b610659611bff565b005b610663611d38565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106a657808201518184015260208101905061068b565b505050509050019250505060405180910390f35b6106c2611e65565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61070c611e8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610756611eb4565b604051808215151515815260200191505060405180910390f35b6107b26004803603602081101561078657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f12565b005b6107bc6120b6565b6040518082815260200191505060405180910390f35b6107fe600480360360208110156107e857600080fd5b81019080803590602001909291905050506120bc565b005b61082c6004803603602081101561081657600080fd5b8101908080359060200190929190505050612204565b005b6108e76004803603602081101561084457600080fd5b810190808035906020019064010000000081111561086157600080fd5b82018360208201111561087357600080fd5b8035906020019184600183028401116401000000008311171561089557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122d0565b604051808381526020018281526020019250505060405180910390f35b6109306004803603602081101561091a57600080fd5b810190808035906020019092919050505061230a565b005b61095e6004803603602081101561094857600080fd5b8101908080359060200190929190505050612882565b005b6109e0600480360360a081101561097657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506130f9565b005b610a6d600480360360608110156109f857600080fd5b8101908080359060200190640100000000811115610a1557600080fd5b820183602082011115610a2757600080fd5b80359060200191846001830284011164010000000083111715610a4957600080fd5b909192939192939080359060200190929190803590602001909291905050506131d4565b005b610a9b60048036036020811015610a8557600080fd5b8101908080359060200190929190505050613373565b005b610aa5613573565b6040518082815260200191505060405180910390f35b610afd60048036036020811015610ad157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613579565b005b610b07611eb4565b610b79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6224ea00811115610bd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614b0a6021913960400191505060405180910390fd5b806006819055507f444fcf883d2258a54ed4f56fa23112232c0eef64dc4af5cab8c3dd7546a028b9816040518082815260200191505060405180910390a150565b600080610c2161483c565b6007846040518082805190602001908083835b60208310610c575780518252602082019150602081019050602083039250610c34565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206040518060400160405290816000820154815260200160018201548152505090506000816020015111610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806149b16030913960400191505060405180910390fd5b806000015181602001519250925050915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff1681565b600160026000828254019250508190555060006002549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f53656e646572206d75737420626520617070726f76657200000000000000000081525060200191505060405180910390fd5b600060086000848152602001908152602001600020905060016004811115610e5457fe5b8160010160149054906101000a900460ff166004811115610e7157fe5b14610ec7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149476022913960400191505060405180910390fd5b610ecf614856565b610efc8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135ff565b9050610f06614856565b610f13836004015461375f565b9050610f1d614856565b610f25614856565b610f38838561377d90919063ffffffff16565b610f43578284610f46565b83835b91509150610f52614856565b610f7784610f69858561379290919063ffffffff16565b61383990919063ffffffff16565b9050610fa260046040518060200160405290816000820154815250508261398290919063ffffffff16565b610ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180614a3d603b913960400191505060405180910390fd5b42866006018190555060028660010160146101000a81548160ff0219169083600481111561102157fe5b0217905550877f8b2b870c73325a932fadfc3f0d07358f8086320c6e6c27d36b5ea14d7c3d541360405160405180910390a250505050505060025481146110d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6110dc611eb4565b61114e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa03757d836cb0b61c0fbba2147f5d51d6071ff3dd5bf6963beb55563d64878e181604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060010160159054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154905089565b60048060000154905081565b600981815481106112b657fe5b906000526020600020016000915090505481565b60006112d4614856565b6112dd8561375f565b9050826112f0576112ed81613998565b90505b6112f8614856565b61134261130486613a4a565b6113346005604051806020016040529081600082015481525050611326613ad4565b61379290919063ffffffff16565b613afa90919063ffffffff16565b905061135f61135a8284613afa90919063ffffffff16565b613f59565b925050509392505050565b60008060008060018060006001839350829250819150809050935093509350935090919293565b60058060000154905081565b60006001600260008282540192505081905550600060025490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638932cbf488886040518363ffffffff1660e01b815260040180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060206040518083038186803b15801561145857600080fd5b505afa15801561146c573d6000803e3d6000fd5b505050506040513d602081101561148257600080fd5b8101908080519060200190929190505050905060006114a86114a3836135ff565b613f7a565b905060006114b78288886112ca565b90506000806115098b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c16565b9150915060008861151a578961151c565b835b905081811115801561152e5750828110155b611583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614a0f602e913960400191505060405180910390fd5b505050600086611593578361159c565b61159b613f88565b5b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561165957600080fd5b505af115801561166d573d6000803e3d6000fd5b505050506040513d602081101561168357600080fd5b8101908080519060200190929190505050611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5472616e7366657220696e206f662073656c6c20746f6b656e206661696c656481525060200191505060405180910390fd5b61171c6001600a5461408390919063ffffffff16565b600a819055506000876117ba578473ffffffffffffffffffffffffffffffffffffffff166312c6c0998a6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561177a57600080fd5b505afa15801561178e573d6000803e3d6000fd5b505050506040513d60208110156117a457600080fd5b81019080805190602001909291905050506117bc565b885b90506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561180f57fe5b815260200189151581526020018281526020018481526020018581526020016006548152602001600081525060086000600a54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600481111561190257fe5b021790555060608201518160010160156101000a81548160ff0219169083151502179055506080820151816002015560a0820151816003015560c0820151816004015560e082015181600501556101008201518160060155905050611aac60086000600a548152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115611a4b57fe5b6004811115611a5657fe5b81526020016001820160159054906101000a900460ff161515151581526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505061410b565b50506009600a5490806001815401808255809150509060018203906000526020600020016000909192909190915055503373ffffffffffffffffffffffffffffffffffffffff16600a547f988f3fd60d91f43c99361ce5de82a51999ffd3deda06baac9235df289bb7c6498d8d8d888e6040518080602001858152602001848152602001831515151581526020018281038252878782818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a3600a54965050505050506002548114611bf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b50949350505050565b611c07611eb4565b611c79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606080600980549050604051908082528060200260200182016040528015611d6f5781602001602082028038833980820191505090505b50905060008090505b600980549050811015611e5d57600060098281548110611d9457fe5b9060005260206000200154905060016004811115611dae57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611ddd57fe5b1480611e22575060026004811115611df157fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611e2057fe5b145b15611e415780838381518110611e3457fe5b6020026020010181815250505b50611e5660018261408390919063ffffffff16565b9050611d78565b508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ef66142a7565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611f1a611eb4565b611f8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561202f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600a5481565b6120c4611eb4565b612136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61213f8161375f565b6005600082015181600001559050506121756005604051806020016040529081600082015481525050612170613ad4565b613982565b6121ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180614ac16026913960400191505060405180910390fd5b7f8946f328efcc515b5cc3282f6cd95e87a6c0d3508421af0b52d4d3620b3e2db3816040518082815260200191505060405180910390a150565b61220c611eb4565b61227e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6122878161375f565b6004600082015181600001559050507f64efcc8d6bb33e1eb5c31f8bec9ac8a42321a1fa36c6d831c759a6da5c2797f7816040518082815260200191505060405180910390a150565b6007818051602081018201805184825260208301602085012081835280955050505050506000915090508060000154908060010154905082565b60016002600082825401925050819055506000600254905060006008600084815260200190815260200160002090506001600481111561234657fe5b8160010160149054906101000a900460ff16600481111561236357fe5b1415612433573373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461242e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f53656e646572206d7573742062652065786368616e676572000000000000000081525060200191505060405180910390fd5b612534565b6002600481111561244057fe5b8160010160149054906101000a900460ff16600481111561245d57fe5b14156124e25761246b611eb4565b6124dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f53656e646572206d757374206265206f776e657200000000000000000000000081525060200191505060405180910390fd5b612533565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806149e1602e913960400191505060405180910390fd5b5b60048160010160146101000a81548160ff0219169083600481111561255557fe5b021790555060008061269883604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600481111561263757fe5b600481111561264257fe5b81526020016001820160159054906101000a900460ff161515151581526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505061410b565b915091508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561274757600080fd5b505af115801561275b573d6000803e3d6000fd5b505050506040513d602081101561277157600080fd5b81019080805190602001909291905050506127d7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180614ae76023913960400191505060405180910390fd5b847f80079243b2a36fa4656ef4ac30e5a3ebe1d048ca90b5b91cf3d597bf526dcaa760405160405180910390a2505050600254811461287e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6001600260008282540192505081905550600060025490506000600860008481526020019081526020016000209050600260048111156128be57fe5b8160010160149054906101000a900460ff1660048111156128db57fe5b14612931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149696022913960400191505060405180910390fd5b4261294d8260050154836006015461408390919063ffffffff16565b11156129c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5665746f20706572696f64206e6f7420656c617073656400000000000000000081525060200191505060405180910390fd5b60038160010160146101000a81548160ff021916908360048111156129e257fe5b0217905550600080612b2583604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115612ac457fe5b6004811115612acf57fe5b81526020016001820160159054906101000a900460ff161515151581526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505061410b565b915091508260010160159054906101000a900460ff1615612de3578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb612b646142af565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612bce57600080fd5b505af1158015612be2573d6000803e3d6000fd5b505050506040513d6020811015612bf857600080fd5b8101908080519060200190929190505050612c5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061498b6026913960400191505060405180910390fd5b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612d3157600080fd5b505af1158015612d45573d6000803e3d6000fd5b505050506040513d6020811015612d5b57600080fd5b8101908080519060200190929190505050612dde576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206d696e74206661696c6564000000000000000081525060200191505060405180910390fd5b61304e565b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015612e5a57600080fd5b505af1158015612e6e573d6000803e3d6000fd5b505050506040513d6020811015612e8457600080fd5b8101908080519060200190929190505050612f07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206275726e206661696c6564000000000000000081525060200191505060405180910390fd5b612f0f6142af565b73ffffffffffffffffffffffffffffffffffffffff166303a0fea38460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612fbd57600080fd5b505af1158015612fd1573d6000803e3d6000fd5b505050506040513d6020811015612fe757600080fd5b810190808051906020019092919050505061304d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614a786028913960400191505060405180910390fd5b5b847f0b4c107dd8ed767c40dcc74867774b42e6987abba9874b97b9740d3bcb5c9ccb60405160405180910390a250505060025481146130f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b600060149054906101000a900460ff161561317c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506131a0336143aa565b6131a985611f12565b6131b2846110d4565b6131bb83612204565b6131c4826120bc565b6131cd81610aff565b5050505050565b6131dc611eb4565b61324e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b808211156132a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806148e16030913960400191505060405180910390fd5b60405180604001604052808381526020018281525060078585604051808383808284378083019250505092505050908152602001604051809103902060008201518160000155602082015181600101559050507f64b64d5a316c373e148f92eebf62bd8ce51e1c34b056eb81c7a4d1f0e47636668484848460405180806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a150505050565b60098054905081106133ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b6000600982815481106133fc57fe5b906000526020600020015490506001600481111561341657fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561344557fe5b1415801561348d57506002600481111561345b57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561348a57fe5b14155b6134ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45786368616e67652070726f706f73616c206e6f7420696e616374697665000081525060200191505060405180910390fd5b600061351a60016009805490506144ee90919063ffffffff16565b905080831015613558576009818154811061353157fe5b90600052602060002001546009848154811061354957fe5b90600052602060002001819055505b600980548091906001900361356d9190614869565b50505050565b60065481565b613581611eb4565b6135f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6135fc816143aa565b50565b613607614856565b600080613612614538565b73ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561368d57600080fd5b505afa1580156136a1573d6000803e3d6000fd5b505050506040513d60408110156136b757600080fd5b810190808051906020019092919080519060200190929190505050809250819350505060008111613733576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614aa06021913960400191505060405180910390fd5b61375661373f8261375f565b6137488461375f565b61383990919063ffffffff16565b92505050919050565b613767614856565b6040518060200160405280838152509050919050565b60008160000151836000015110905092915050565b61379a614856565b816000015183600001511015613818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b613841614856565b6000826000015114156138bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816138e957fe5b041461395d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161397557fe5b0481525091505092915050565b6000816000015183600001511115905092915050565b6139a0614856565b600082600001511415613a1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f63616e27742063616c6c207265636970726f63616c283029000000000000000081525060200191505060405180910390fd5b6040518060200160405280836000015169d3c21bcecceda1000000800281613a3f57fe5b048152509050919050565b613a52614856565b613a5a614633565b821115613ab2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806149116036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b613adc614856565b604051806020016040528069d3c21bcecceda1000000815250905090565b613b02614856565b600083600001511480613b19575060008260000151145b15613b3557604051806020016040528060008152509050613f53565b69d3c21bcecceda100000082600001511415613b5357829050613f53565b69d3c21bcecceda100000083600001511415613b7157819050613f53565b600069d3c21bcecceda1000000613b8785614652565b6000015181613b9257fe5b0490506000613ba085614689565b600001519050600069d3c21bcecceda1000000613bbc86614652565b6000015181613bc757fe5b0490506000613bd586614689565b6000015190506000828502905060008514613c695782858281613bf457fe5b0414613c68576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214613d0b5769d3c21bcecceda1000000828281613c9657fe5b0414613d0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b8091506000848602905060008614613d9c5784868281613d2757fe5b0414613d9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6000848802905060008814613e2a5784888281613db557fe5b0414613e29576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613e326146c6565b8781613e3a57fe5b049650613e456146c6565b8581613e4d57fe5b0494506000858802905060008814613ede5785888281613e6957fe5b0414613edd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613ee6614856565b6040518060200160405280878152509050613f0f816040518060200160405280878152506146d3565b9050613f29816040518060200160405280868152506146d3565b9050613f43816040518060200160405280858152506146d3565b9050809a50505050505050505050505b92915050565b600069d3c21bcecceda1000000826000015181613f7257fe5b049050919050565b600081600001519050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561404357600080fd5b505afa158015614057573d6000803e3d6000fd5b505050506040513d602081101561406d57600080fd5b8101908080519060200190929190505050905090565b600080828401905083811015614101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060008084606001511561413157614123613f88565b9150846080015190506141d1565b6000856020015190508092508073ffffffffffffffffffffffffffffffffffffffff1663af31f58787608001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561419257600080fd5b505afa1580156141a6573d6000803e3d6000fd5b505050506040513d60208110156141bc57600080fd5b81019080805190602001909291905050509150505b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561425057600080fd5b505afa158015614264573d6000803e3d6000fd5b505050506040513d602081101561427a57600080fd5b8101908080519060200190929190505050905081811015614299578091505b828294509450505050915091565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561436a57600080fd5b505afa15801561437e573d6000803e3d6000fd5b505050506040513d602081101561439457600080fd5b8101908080519060200190929190505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806148bb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061453083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061477c565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156145f357600080fd5b505afa158015614607573d6000803e3d6000fd5b505050506040513d602081101561461d57600080fd5b8101908080519060200190929190505050905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b61465a614856565b604051806020016040528069d3c21bcecceda10000008085600001518161467d57fe5b04028152509050919050565b614691614856565b604051806020016040528069d3c21bcecceda1000000808560000151816146b457fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6146db614856565b6000826000015184600001510190508360000151811015614764576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b6000838311158290614829576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147ee5780820151818401526020810190506147d3565b50505050905090810190601f16801561481b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600081525090565b6040518060200160405280600081525090565b8154818355818111156148905781836000526020600020918201910161488f9190614895565b5b505050565b6148b791905b808211156148b357600081600090555060010161489b565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d617863616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e65774669786564282950726f706f73616c206d75737420626520696e2050726f706f73656420737461746550726f706f73616c206d75737420626520696e20417070726f7665642073746174655472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c65644d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e656450726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d69747343454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f7365642070726963655472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c65644e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e537072656164206d757374206265206c657373207468616e206f7220657175616c20746f20315472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c65645665746f20706572696f642063616e6e6f74206578636565642034207765656b73a265627a7a72315820026fd755a45152c66bb3ad34fde98d808047367480a6f58591ab81019105952764736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80637b10399911610104578063be4c0d2c116100a2578063e33ddfc011610071578063e33ddfc0146109e2578063e7be36c814610a6f578063e7f6d98014610a9d578063f2fde38b14610abb576101da565b8063be4c0d2c1461082e578063c89f6e1714610904578063cb60cca014610932578063d13f90b414610960576101da565b8063a91ee0dc116100de578063a91ee0dc14610770578063aa853da4146107b4578063b66a261c146107d2578063b7430ab014610800576101da565b80637b103999146106ba5780638da5cb5b146107045780638f32d59b1461074e576101da565b80633ff9d6371161017c5780635c25c76c1161014b5780635c25c76c146105905780635eb8fc76146105ae578063715018a61461065157806371a1aea71461065b576101da565b80633ff9d637146104a557806344ca493a146104c357806349dc646a1461050557806354255be01461055d576101da565b8063158ef93e116101b8578063158ef93e1461032d5780631f4328b51461034f5780633156560e1461037d5780633b5b4f2c146103c1576101da565b8063049ecbd9146101df578063139fdcff1461020d578063141a8dd8146102e3575b600080fd5b61020b600480360360208110156101f557600080fd5b8101908080359060200190929190505050610aff565b005b6102c66004803603602081101561022357600080fd5b810190808035906020019064010000000081111561024057600080fd5b82018360208201111561025257600080fd5b8035906020019184600183028401116401000000008311171561027457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c16565b604051808381526020018281526020019250505060405180910390f35b6102eb610d1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610335610d42565b604051808215151515815260200191505060405180910390f35b61037b6004803603602081101561036557600080fd5b8101908080359060200190929190505050610d55565b005b6103bf6004803603602081101561039357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d4565b005b6103ed600480360360208110156103d757600080fd5b81019080803590602001909291905050506111f5565b604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188600481111561046157fe5b60ff16815260200187151515158152602001868152602001858152602001848152602001838152602001828152602001995050505050505050505060405180910390f35b6104ad61129d565b6040518082815260200191505060405180910390f35b6104ef600480360360208110156104d957600080fd5b81019080803590602001909291905050506112a9565b6040518082815260200191505060405180910390f35b6105476004803603606081101561051b57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506112ca565b6040518082815260200191505060405180910390f35b61056561136a565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b610598611391565b6040518082815260200191505060405180910390f35b61063b600480360360608110156105c457600080fd5b81019080803590602001906401000000008111156105e157600080fd5b8201836020820111156105f357600080fd5b8035906020019184600183028401116401000000008311171561061557600080fd5b90919293919293908035906020019092919080351515906020019092919050505061139d565b6040518082815260200191505060405180910390f35b610659611bff565b005b610663611d38565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106a657808201518184015260208101905061068b565b505050509050019250505060405180910390f35b6106c2611e65565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61070c611e8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610756611eb4565b604051808215151515815260200191505060405180910390f35b6107b26004803603602081101561078657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f12565b005b6107bc6120b6565b6040518082815260200191505060405180910390f35b6107fe600480360360208110156107e857600080fd5b81019080803590602001909291905050506120bc565b005b61082c6004803603602081101561081657600080fd5b8101908080359060200190929190505050612204565b005b6108e76004803603602081101561084457600080fd5b810190808035906020019064010000000081111561086157600080fd5b82018360208201111561087357600080fd5b8035906020019184600183028401116401000000008311171561089557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122d0565b604051808381526020018281526020019250505060405180910390f35b6109306004803603602081101561091a57600080fd5b810190808035906020019092919050505061230a565b005b61095e6004803603602081101561094857600080fd5b8101908080359060200190929190505050612882565b005b6109e0600480360360a081101561097657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506130f9565b005b610a6d600480360360608110156109f857600080fd5b8101908080359060200190640100000000811115610a1557600080fd5b820183602082011115610a2757600080fd5b80359060200191846001830284011164010000000083111715610a4957600080fd5b909192939192939080359060200190929190803590602001909291905050506131d4565b005b610a9b60048036036020811015610a8557600080fd5b8101908080359060200190929190505050613373565b005b610aa5613573565b6040518082815260200191505060405180910390f35b610afd60048036036020811015610ad157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613579565b005b610b07611eb4565b610b79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6224ea00811115610bd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614b0a6021913960400191505060405180910390fd5b806006819055507f444fcf883d2258a54ed4f56fa23112232c0eef64dc4af5cab8c3dd7546a028b9816040518082815260200191505060405180910390a150565b600080610c2161483c565b6007846040518082805190602001908083835b60208310610c575780518252602082019150602081019050602083039250610c34565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206040518060400160405290816000820154815260200160018201548152505090506000816020015111610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806149b16030913960400191505060405180910390fd5b806000015181602001519250925050915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff1681565b600160026000828254019250508190555060006002549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f53656e646572206d75737420626520617070726f76657200000000000000000081525060200191505060405180910390fd5b600060086000848152602001908152602001600020905060016004811115610e5457fe5b8160010160149054906101000a900460ff166004811115610e7157fe5b14610ec7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149476022913960400191505060405180910390fd5b610ecf614856565b610efc8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166135ff565b9050610f06614856565b610f13836004015461375f565b9050610f1d614856565b610f25614856565b610f38838561377d90919063ffffffff16565b610f43578284610f46565b83835b91509150610f52614856565b610f7784610f69858561379290919063ffffffff16565b61383990919063ffffffff16565b9050610fa260046040518060200160405290816000820154815250508261398290919063ffffffff16565b610ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180614a3d603b913960400191505060405180910390fd5b42866006018190555060028660010160146101000a81548160ff0219169083600481111561102157fe5b0217905550877f8b2b870c73325a932fadfc3f0d07358f8086320c6e6c27d36b5ea14d7c3d541360405160405180910390a250505050505060025481146110d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6110dc611eb4565b61114e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa03757d836cb0b61c0fbba2147f5d51d6071ff3dd5bf6963beb55563d64878e181604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060010160159054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154905089565b60048060000154905081565b600981815481106112b657fe5b906000526020600020016000915090505481565b60006112d4614856565b6112dd8561375f565b9050826112f0576112ed81613998565b90505b6112f8614856565b61134261130486613a4a565b6113346005604051806020016040529081600082015481525050611326613ad4565b61379290919063ffffffff16565b613afa90919063ffffffff16565b905061135f61135a8284613afa90919063ffffffff16565b613f59565b925050509392505050565b60008060008060018060006001839350829250819150809050935093509350935090919293565b60058060000154905081565b60006001600260008282540192505081905550600060025490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638932cbf488886040518363ffffffff1660e01b815260040180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060206040518083038186803b15801561145857600080fd5b505afa15801561146c573d6000803e3d6000fd5b505050506040513d602081101561148257600080fd5b8101908080519060200190929190505050905060006114a86114a3836135ff565b613f7a565b905060006114b78288886112ca565b90506000806115098b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c16565b9150915060008861151a578961151c565b835b905081811115801561152e5750828110155b611583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614a0f602e913960400191505060405180910390fd5b505050600086611593578361159c565b61159b613f88565b5b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561165957600080fd5b505af115801561166d573d6000803e3d6000fd5b505050506040513d602081101561168357600080fd5b8101908080519060200190929190505050611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5472616e7366657220696e206f662073656c6c20746f6b656e206661696c656481525060200191505060405180910390fd5b61171c6001600a5461408390919063ffffffff16565b600a819055506000876117ba578473ffffffffffffffffffffffffffffffffffffffff166312c6c0998a6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561177a57600080fd5b505afa15801561178e573d6000803e3d6000fd5b505050506040513d60208110156117a457600080fd5b81019080805190602001909291905050506117bc565b885b90506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561180f57fe5b815260200189151581526020018281526020018481526020018581526020016006548152602001600081525060086000600a54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600481111561190257fe5b021790555060608201518160010160156101000a81548160ff0219169083151502179055506080820151816002015560a0820151816003015560c0820151816004015560e082015181600501556101008201518160060155905050611aac60086000600a548152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115611a4b57fe5b6004811115611a5657fe5b81526020016001820160159054906101000a900460ff161515151581526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505061410b565b50506009600a5490806001815401808255809150509060018203906000526020600020016000909192909190915055503373ffffffffffffffffffffffffffffffffffffffff16600a547f988f3fd60d91f43c99361ce5de82a51999ffd3deda06baac9235df289bb7c6498d8d8d888e6040518080602001858152602001848152602001831515151581526020018281038252878782818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a3600a54965050505050506002548114611bf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b50949350505050565b611c07611eb4565b611c79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606080600980549050604051908082528060200260200182016040528015611d6f5781602001602082028038833980820191505090505b50905060008090505b600980549050811015611e5d57600060098281548110611d9457fe5b9060005260206000200154905060016004811115611dae57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611ddd57fe5b1480611e22575060026004811115611df157fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611e2057fe5b145b15611e415780838381518110611e3457fe5b6020026020010181815250505b50611e5660018261408390919063ffffffff16565b9050611d78565b508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ef66142a7565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611f1a611eb4565b611f8c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561202f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600a5481565b6120c4611eb4565b612136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61213f8161375f565b6005600082015181600001559050506121756005604051806020016040529081600082015481525050612170613ad4565b613982565b6121ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180614ac16026913960400191505060405180910390fd5b7f8946f328efcc515b5cc3282f6cd95e87a6c0d3508421af0b52d4d3620b3e2db3816040518082815260200191505060405180910390a150565b61220c611eb4565b61227e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6122878161375f565b6004600082015181600001559050507f64efcc8d6bb33e1eb5c31f8bec9ac8a42321a1fa36c6d831c759a6da5c2797f7816040518082815260200191505060405180910390a150565b6007818051602081018201805184825260208301602085012081835280955050505050506000915090508060000154908060010154905082565b60016002600082825401925050819055506000600254905060006008600084815260200190815260200160002090506001600481111561234657fe5b8160010160149054906101000a900460ff16600481111561236357fe5b1415612433573373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461242e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f53656e646572206d7573742062652065786368616e676572000000000000000081525060200191505060405180910390fd5b612534565b6002600481111561244057fe5b8160010160149054906101000a900460ff16600481111561245d57fe5b14156124e25761246b611eb4565b6124dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f53656e646572206d757374206265206f776e657200000000000000000000000081525060200191505060405180910390fd5b612533565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806149e1602e913960400191505060405180910390fd5b5b60048160010160146101000a81548160ff0219169083600481111561255557fe5b021790555060008061269883604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600481111561263757fe5b600481111561264257fe5b81526020016001820160159054906101000a900460ff161515151581526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505061410b565b915091508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561274757600080fd5b505af115801561275b573d6000803e3d6000fd5b505050506040513d602081101561277157600080fd5b81019080805190602001909291905050506127d7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180614ae76023913960400191505060405180910390fd5b847f80079243b2a36fa4656ef4ac30e5a3ebe1d048ca90b5b91cf3d597bf526dcaa760405160405180910390a2505050600254811461287e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6001600260008282540192505081905550600060025490506000600860008481526020019081526020016000209050600260048111156128be57fe5b8160010160149054906101000a900460ff1660048111156128db57fe5b14612931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149696022913960400191505060405180910390fd5b4261294d8260050154836006015461408390919063ffffffff16565b11156129c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5665746f20706572696f64206e6f7420656c617073656400000000000000000081525060200191505060405180910390fd5b60038160010160146101000a81548160ff021916908360048111156129e257fe5b0217905550600080612b2583604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115612ac457fe5b6004811115612acf57fe5b81526020016001820160159054906101000a900460ff161515151581526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152505061410b565b915091508260010160159054906101000a900460ff1615612de3578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb612b646142af565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612bce57600080fd5b505af1158015612be2573d6000803e3d6000fd5b505050506040513d6020811015612bf857600080fd5b8101908080519060200190929190505050612c5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061498b6026913960400191505060405180910390fd5b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612d3157600080fd5b505af1158015612d45573d6000803e3d6000fd5b505050506040513d6020811015612d5b57600080fd5b8101908080519060200190929190505050612dde576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206d696e74206661696c6564000000000000000081525060200191505060405180910390fd5b61304e565b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015612e5a57600080fd5b505af1158015612e6e573d6000803e3d6000fd5b505050506040513d6020811015612e8457600080fd5b8101908080519060200190929190505050612f07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206275726e206661696c6564000000000000000081525060200191505060405180910390fd5b612f0f6142af565b73ffffffffffffffffffffffffffffffffffffffff166303a0fea38460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612fbd57600080fd5b505af1158015612fd1573d6000803e3d6000fd5b505050506040513d6020811015612fe757600080fd5b810190808051906020019092919050505061304d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614a786028913960400191505060405180910390fd5b5b847f0b4c107dd8ed767c40dcc74867774b42e6987abba9874b97b9740d3bcb5c9ccb60405160405180910390a250505060025481146130f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b600060149054906101000a900460ff161561317c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506131a0336143aa565b6131a985611f12565b6131b2846110d4565b6131bb83612204565b6131c4826120bc565b6131cd81610aff565b5050505050565b6131dc611eb4565b61324e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b808211156132a7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806148e16030913960400191505060405180910390fd5b60405180604001604052808381526020018281525060078585604051808383808284378083019250505092505050908152602001604051809103902060008201518160000155602082015181600101559050507f64b64d5a316c373e148f92eebf62bd8ce51e1c34b056eb81c7a4d1f0e47636668484848460405180806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a150505050565b60098054905081106133ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b6000600982815481106133fc57fe5b906000526020600020015490506001600481111561341657fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561344557fe5b1415801561348d57506002600481111561345b57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561348a57fe5b14155b6134ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45786368616e67652070726f706f73616c206e6f7420696e616374697665000081525060200191505060405180910390fd5b600061351a60016009805490506144ee90919063ffffffff16565b905080831015613558576009818154811061353157fe5b90600052602060002001546009848154811061354957fe5b90600052602060002001819055505b600980548091906001900361356d9190614869565b50505050565b60065481565b613581611eb4565b6135f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6135fc816143aa565b50565b613607614856565b600080613612614538565b73ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561368d57600080fd5b505afa1580156136a1573d6000803e3d6000fd5b505050506040513d60408110156136b757600080fd5b810190808051906020019092919080519060200190929190505050809250819350505060008111613733576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614aa06021913960400191505060405180910390fd5b61375661373f8261375f565b6137488461375f565b61383990919063ffffffff16565b92505050919050565b613767614856565b6040518060200160405280838152509050919050565b60008160000151836000015110905092915050565b61379a614856565b816000015183600001511015613818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b613841614856565b6000826000015114156138bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816138e957fe5b041461395d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161397557fe5b0481525091505092915050565b6000816000015183600001511115905092915050565b6139a0614856565b600082600001511415613a1b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f63616e27742063616c6c207265636970726f63616c283029000000000000000081525060200191505060405180910390fd5b6040518060200160405280836000015169d3c21bcecceda1000000800281613a3f57fe5b048152509050919050565b613a52614856565b613a5a614633565b821115613ab2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806149116036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b613adc614856565b604051806020016040528069d3c21bcecceda1000000815250905090565b613b02614856565b600083600001511480613b19575060008260000151145b15613b3557604051806020016040528060008152509050613f53565b69d3c21bcecceda100000082600001511415613b5357829050613f53565b69d3c21bcecceda100000083600001511415613b7157819050613f53565b600069d3c21bcecceda1000000613b8785614652565b6000015181613b9257fe5b0490506000613ba085614689565b600001519050600069d3c21bcecceda1000000613bbc86614652565b6000015181613bc757fe5b0490506000613bd586614689565b6000015190506000828502905060008514613c695782858281613bf457fe5b0414613c68576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214613d0b5769d3c21bcecceda1000000828281613c9657fe5b0414613d0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b8091506000848602905060008614613d9c5784868281613d2757fe5b0414613d9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6000848802905060008814613e2a5784888281613db557fe5b0414613e29576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613e326146c6565b8781613e3a57fe5b049650613e456146c6565b8581613e4d57fe5b0494506000858802905060008814613ede5785888281613e6957fe5b0414613edd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613ee6614856565b6040518060200160405280878152509050613f0f816040518060200160405280878152506146d3565b9050613f29816040518060200160405280868152506146d3565b9050613f43816040518060200160405280858152506146d3565b9050809a50505050505050505050505b92915050565b600069d3c21bcecceda1000000826000015181613f7257fe5b049050919050565b600081600001519050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561404357600080fd5b505afa158015614057573d6000803e3d6000fd5b505050506040513d602081101561406d57600080fd5b8101908080519060200190929190505050905090565b600080828401905083811015614101576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008060008084606001511561413157614123613f88565b9150846080015190506141d1565b6000856020015190508092508073ffffffffffffffffffffffffffffffffffffffff1663af31f58787608001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561419257600080fd5b505afa1580156141a6573d6000803e3d6000fd5b505050506040513d60208110156141bc57600080fd5b81019080805190602001909291905050509150505b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561425057600080fd5b505afa158015614264573d6000803e3d6000fd5b505050506040513d602081101561427a57600080fd5b8101908080519060200190929190505050905081811015614299578091505b828294509450505050915091565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561436a57600080fd5b505afa15801561437e573d6000803e3d6000fd5b505050506040513d602081101561439457600080fd5b8101908080519060200190929190505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806148bb6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061453083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061477c565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156145f357600080fd5b505afa158015614607573d6000803e3d6000fd5b505050506040513d602081101561461d57600080fd5b8101908080519060200190929190505050905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b61465a614856565b604051806020016040528069d3c21bcecceda10000008085600001518161467d57fe5b04028152509050919050565b614691614856565b604051806020016040528069d3c21bcecceda1000000808560000151816146b457fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6146db614856565b6000826000015184600001510190508360000151811015614764576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b6000838311158290614829576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147ee5780820151818401526020810190506147d3565b50505050905090810190601f16801561481b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600081525090565b6040518060200160405280600081525090565b8154818355818111156148905781836000526020600020918201910161488f9190614895565b5b505050565b6148b791905b808211156148b357600081600090555060010161489b565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d617863616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e65774669786564282950726f706f73616c206d75737420626520696e2050726f706f73656420737461746550726f706f73616c206d75737420626520696e20417070726f7665642073746174655472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c65644d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e656450726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d69747343454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f7365642070726963655472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c65644e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e537072656164206d757374206265206c657373207468616e206f7220657175616c20746f20315472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c65645665746f20706572696f642063616e6e6f74206578636565642034207765656b73a265627a7a72315820026fd755a45152c66bb3ad34fde98d808047367480a6f58591ab81019105952764736f6c634300050d0032",
  "sourceMap": "471:26790:9:-;;;6962:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;6962:52:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6962:52:9;;;;;;;;;;;;;;;;7006:4;698:17:3;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;143:17:23;138:67;;190:4;176:11;;:18;;;;;;;;;;;;;;;;;;138:67;85:126;576:1:26;560:13;:17;;;;6962:52:9;471:26790;;788:96:0;833:15;867:10;860:17;;788:96;:::o;471:26790:9:-;;;;;;;",
  "deployedSourceMap": "471:26790:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;471:26790:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26768:491;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26768:491:9;;;;;;;;;;;;;;;;;:::i;:::-;;23671:556;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23671:556:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;23671:556:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;23671:556:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;23671:556:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23671:556:9;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4650:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;55::23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12324:1309:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12324:1309:9;;;;;;;;;;;;;;;;;:::i;:::-;;24405:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24405:127:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;5455:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5455:61:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4851:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6425:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6425:42:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19423:790;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19423:790:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7291:161;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4970:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8877:3224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8877:3224:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8877:3224:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8877:3224:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8877:3224:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:3;;;:::i;:::-;;21713:814:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21713:814:9;;;;;;;;;;;;;;;;;2132:25:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;899:77:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2715:244:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2715:244:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;6602:36:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25311:235;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25311:235:9;;;;;;;;;;;;;;;;;:::i;:::-;;24876:271;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24876:271:9;;;;;;;;;;;;;;;;;:::i;:::-;;5308:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5308:66:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5308:66:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5308:66:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5308:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5308:66:9;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;13899:1179;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13899:1179:9;;;;;;;;;;;;;;;;;:::i;:::-;;15390:1868;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15390:1868:9;;;;;;;;;;;;;;;;;:::i;:::-;;7971:425;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7971:425:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;26052:543;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26052:543:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;26052:543:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;26052:543:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;26052:543:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20528:836;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20528:836:9;;;;;;;;;;;;;;;;;:::i;:::-;;5103:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1970:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;26768:491:9;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27110:7:9;27086:20;:31;;27078:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27181:20;27161:17;:40;;;;27212:42;27233:20;27212:42;;;;;;;;;;;;;;;;;;26768:491;:::o;23671:556::-;23767:7;23776;23791:36;;:::i;:::-;23830:25;23856:21;23830:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;23830:48:9;;;;;;;;;;;;;;;;;;;;;23791:87;;;;;;;;;;;;;;;;;;;;;;;;;;;24087:1;24052:14;:32;;;:36;24044:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24155:14;:32;;;24189:14;:32;;;24147:75;;;;;23671:556;;;:::o;4650:23::-;;;;;;;;;;;;;:::o;55::23:-;;;;;;;;;;;;;:::o;12324:1309:9:-;1010:1:26;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;6763:8:9;;;;;;;;;;;6749:22;;:10;:22;;;6741:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12418:33;12454:17;:29;12472:10;12454:29;;;;;;;;;;;12418:65;;12568:30;12550:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;12542:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12812:39;;:::i;:::-;12854:43;12876:8;:20;;;;;;;;;;;;12854:21;:43::i;:::-;12812:85;;12903:40;;:::i;:::-;12946:54;12963:8;:36;;;12946:16;:54::i;:::-;12903:97;;13007:38;;:::i;:::-;13047:39;;:::i;:::-;13090:28;13105:12;13090:11;:14;;:28;;;;:::i;:::-;:100;;13164:12;13178:11;13090:100;;;13128:11;13141:12;13090:100;13006:184;;;;13196:38;;:::i;:::-;13237:53;13277:12;13237:32;13258:10;13237:11;:20;;:32;;;;:::i;:::-;:39;;:53;;;;:::i;:::-;13196:94;;13304:45;13319:29;13304:45;;;;;;;;;;;;;;;;;:10;:14;;:45;;;;:::i;:::-;13296:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13513:15;13484:8;:26;;:44;;;;13551:30;13534:8;:14;;;:47;;;;;;;;;;;;;;;;;;;;;;;;13617:10;13592:36;;;;;;;;;;6805:1;;;;;;1102:13:26;;1086:12;:29;1078:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12324:1309:9;;:::o;24405:127::-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24481:11:9;24470:8;;:22;;;;;;;;;;;;;;;;;;24503:24;24515:11;24503:24;;;;;;;;;;;;;;;;;;;;;;24405:127;:::o;5455:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4851:57::-;;;;;;;;;:::o;6425:42::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19423:790::-;19554:7;19569:40;;:::i;:::-;19612:45;19629:27;19612:16;:45::i;:::-;19569:88;;19765:8;19760:70;;19798:25;:12;:23;:25::i;:::-;19783:40;;19760:70;19927:46;;:::i;:::-;19976:92;20030:32;20051:10;20030:20;:32::i;:::-;19976:37;20006:6;19976:37;;;;;;;;;;;;;;;;;:20;:18;:20::i;:::-;:29;;:37;;;;:::i;:::-;:46;;:92;;;;:::i;:::-;19927:141;;20155:53;:41;20177:18;20155:12;:21;;:41;;;;:::i;:::-;:51;:53::i;:::-;20148:60;;;;19423:790;;;;;:::o;7291:161::-;7361:7;7376;7391;7406;7436:1;7439;7442;7445;7428:19;;;;;;;;;;;;;;;;;;;;7291:161;;;;:::o;4970:34::-;;;;;;;;;:::o;8877:3224::-;9030:7;1010:1:26;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;9045:19:9;9067:8;;;;;;;;;;;:33;;;9101:21;;9067:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9067:56:9;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9067:56:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9067:56:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9067:56:9;;;;;;;;;;;;;;;;9045:78;;9183:35;9221:43;:34;9243:11;9221:21;:34::i;:::-;:41;:43::i;:::-;9183:81;;9401:17;9421:63;9434:27;9463:10;9475:8;9421:12;:63::i;:::-;9401:83;;9747:25;9774;9803:51;9832:21;;9803:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9803:51:9;;;;;;:28;:51::i;:::-;9746:108;;;;9983:33;10019:8;:33;;10042:10;10019:33;;;10030:9;10019:33;9983:69;;10106:17;10077:25;:46;;:96;;;;;10156:17;10127:25;:46;;10077:96;10060:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1067:1:26;;;10290:16:9;10309:8;:47;;10344:11;10309:47;;;10320:14;:12;:14::i;:::-;10309:47;10290:66;;10370:9;:22;;;10393:10;10413:4;10420:10;10370:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10370:61:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10370:61:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10370:61:9;;;;;;;;;;;;;;;;10362:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10672:28;10698:1;10672:21;;:25;;:28;;;;:::i;:::-;10648:21;:52;;;;10786:24;10813:8;:74;;10850:11;10837:38;;;10876:10;10837:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10837:50:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10837:50:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10837:50:9;;;;;;;;;;;;;;;;10813:74;;;10824:10;10813:74;10786:101;;10936:395;;;;;;;;10972:10;10936:395;;;;;;11003:11;10936:395;;;;;;11029:30;10936:395;;;;;;;;;;;;11077:8;10936:395;;;;;;11105:16;10936:395;;;;11140:9;10936:395;;;;11186:27;10936:395;;;;11240:17;;10936:395;;;;11284:1;10936:395;;;10893:17;:40;10911:21;;10893:40;;;;;;;;;;;:438;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11676:67;11702:17;:40;11720:21;;11702:40;;;;;;;;;;;11676:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:67::i;:::-;;;11800:25;11831:21;;11800:53;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;11800:53:9;;;;;;;;;;;;;;;;;;;;;;11995:10;11948:114;;11972:21;;11948:114;12007:21;;12030:10;12042:9;12053:8;11948:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11948:114:9;;;;;;;;;;;;;;;;;12075:21;;12068:28;;;;;;;1102:13:26;;1086:12;:29;1078:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8877:3224:9;;;;;;;:::o;1684:137:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;21713:814:9:-;21768:16;22035:34;22086:25;:32;;;;22072:47;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;22072:47:9;;;;22035:84;;22131:9;22143:1;22131:13;;22126:367;22150:25;:32;;;;22146:1;:36;22126:367;;;22206:18;22227:25;22253:1;22227:28;;;;;;;;;;;;;;;;22206:49;;22315:30;22276:69;;;;;;;;:17;:29;22294:10;22276:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;:150;;;;22396:30;22357:69;;;;;;;;:17;:29;22375:10;22357:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;22276:150;22263:224;;;22468:10;22445:17;22463:1;22445:20;;;;;;;;;;;;;:33;;;;;22263:224;22126:367;22188:8;22194:1;22188;:5;;:8;;;;:::i;:::-;22184:12;;22126:367;;;;22505:17;22498:24;;;21713:814;:::o;2132:25:29:-;;;;;;;;;;;;;:::o;899:77:3:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;2715:244:29:-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:1:29;2796:29;;:15;:29;;;;2788:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:15;2872:8;;:37;;;;;;;;;;;;;;;;;;2936:15;2924:28;;;;;;;;;;;;2715:244;:::o;6602:36:9:-;;;;:::o;25311:235::-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25381:27:9;25398:9;25381:16;:27::i;:::-;25372:6;:36;;;;;;;;;;;25422:45;25438:6;25422:45;;;;;;;;;;;;;;;;;25446:20;:18;:20::i;:::-;25422:15;:45::i;:::-;25414:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25521:20;25531:9;25521:20;;;;;;;;;;;;;;;;;;25311:235;:::o;24876:271::-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25015:50:9;25032:32;25015:16;:50::i;:::-;24983:29;:82;;;;;;;;;;;25076:66;25109:32;25076:66;;;;;;;;;;;;;;;;;;24876:271;:::o;5308:66::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;5308:66:9;;;;;;;;;;;;;;;;;;:::o;13899:1179::-;1010:1:26;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;13979:33:9;14015:17;:29;14033:10;14015:29;;;;;;;;;;;13979:65;;14250:30;14232:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;14228:332;;;14320:10;14298:32;;:8;:18;;;;;;;;;;;;:32;;;14290:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14228:332;;;14394:30;14376:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;14372:188;;;14442:9;:7;:9::i;:::-;14434:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14372:188;;;14497:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14372:188;14228:332;14679:31;14662:8;:14;;;:48;;;;;;;;;;;;;;;;;;;;;;;;14788:18;14808:20;14832:35;14858:8;14832:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:35::i;:::-;14787:80;;;;14931:11;:20;;;14952:8;:18;;;;;;;;;;;;14972:12;14931:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14931:54:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14931:54:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14931:54:9;;;;;;;;;;;;;;;;14923:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15062:10;15036:37;;;;;;;;;;1067:1:26;;;1102:13;;1086:12;:29;1078:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13899:1179:9;;:::o;15390:1868::-;1010:1:26;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;15471:33:9;15507:17;:29;15525:10;15507:29;;;;;;;;;;;15471:65;;15627:30;15609:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;15601:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15845:15;15783:58;15814:8;:26;;;15783:8;:26;;;:30;;:58;;;;:::i;:::-;:77;;15775:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16008:30;15991:8;:14;;;:47;;;;;;;;;;;;;;;;;;;;;;;;16074:16;16092:18;16114:35;16140:8;16114:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:35::i;:::-;16073:76;;;;16297:8;:17;;;;;;;;;;;;16293:914;;;16390:9;:18;;;16417:12;:10;:12::i;:::-;16432:10;16390:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16390:53:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16390:53:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16390:53:9;;;;;;;;;;;;;;;;16382:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16560:8;:20;;;;;;;;;;;;16547:39;;;16587:8;:18;;;;;;;;;;;;16607:8;:18;;;16547:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16547:79:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16547:79:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16547:79:9;;;;;;;;;;;;;;;;16539:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16293:914;;;16913:8;:20;;;;;;;;;;;;16900:39;;;16940:10;16900:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16900:51:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16900:51:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16900:51:9;;;;;;;;;;;;;;;;16892:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17067:12;:10;:12::i;:::-;:33;;;17101:8;:18;;;;;;;;;;;;17121:8;:18;;;17067:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17067:73:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17067:73:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17067:73:9;;;;;;;;;;;;;;;;17050:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16293:914;17242:10;17217:36;;;;;;;;;;1067:1:26;;;1102:13;;1086:12;:29;1078:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15390:1868:9;;:::o;7971:425::-;259:11:23;;;;;;;;;;;258:12;250:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:4;313:11;;:18;;;;;;;;;;;;;;;;;;8165:30:9;8184:10;8165:18;:30::i;:::-;8201:22;8213:9;8201:11;:22::i;:::-;8229;8241:9;8229:11;:22::i;:::-;8257:64;8290:30;8257:32;:64::i;:::-;8327:18;8337:7;8327:9;:18::i;:::-;8351:40;8372:18;8351:20;:40::i;:::-;7971:425;;;;;:::o;26052:543::-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26253:17:9;26232;:38;;26224:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26380:110;;;;;;;;26422:17;26380:110;;;;26466:17;26380:110;;;26329:25;26355:21;;26329:48;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;26329:48:9;;;;;;;;;;;;;;;;;;:161;;;;;;;;;;;;;;;;;;;26501:89;26530:21;;26553:17;26572;26501:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;26501:89:9;;;;;;;;;;;;;;;;26052:543;;;;:::o;20528:836::-;20619:25;:32;;;;20611:5;:40;20603:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20681:18;20702:25;20728:5;20702:32;;;;;;;;;;;;;;;;20681:53;;20847:30;20808:69;;;;;;;;:17;:29;20826:10;20808:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;;:150;;;;;20928:30;20889:69;;;;;;;;:17;:29;20907:10;20889:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;;20808:150;20793:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21114:17;21134:39;21171:1;21134:25;:32;;;;:36;;:39;;;;:::i;:::-;21114:59;;21191:9;21183:5;:17;21179:109;;;21245:25;21271:9;21245:36;;;;;;;;;;;;;;;;21210:25;21236:5;21210:32;;;;;;;;;;;;;;;:71;;;;21179:109;21325:25;:34;;;;;;;;;;;;:::i;:::-;;20528:836;;;:::o;5103:32::-;;;;:::o;1970:107:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;22816:490:9:-;22890:27;;:::i;:::-;22925:21;22952:23;23016:18;:16;:18::i;:::-;:29;;;23046:11;23016:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23016:42:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23016:42:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23016:42:9;;;;;;;;;;;;;;;;;;;;;;;;;22981:77;;;;;;;;23176:1;23158:15;:19;23150:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23228:73;23267:33;23284:15;23267:16;:33::i;:::-;23228:31;23245:13;23228:16;:31::i;:::-;:38;;:73;;;;:::i;:::-;23221:80;;;;22816:490;;;:::o;1558:100:19:-;1606:15;;:::i;:::-;1640:11;;;;;;;;1649:1;1640:11;;;1633:18;;1558:100;;;:::o;10341:120::-;10414:4;10447:1;:7;;;10437:1;:7;;;:17;10430:24;;10341:120;;;;:::o;5607:219::-;5686:15;;:::i;:::-;5732:1;:7;;;5721:1;:7;;;:18;;5713:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5792:27;;;;;;;;5811:1;:7;;;5801:1;:7;;;:17;5792:27;;;5785:34;;5607:219;;;;:::o;9668:301::-;9745:15;;:::i;:::-;9791:1;9780;:7;;;:12;;9772:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9824:9;1020:25;9836:1;:7;;;:21;9824:33;;9894:1;:7;;;1020:25;9875:1;:15;;;;;;:26;9867:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9941:21;;;;;;;;9954:1;:7;;;9950:1;:11;;;;;;9941:21;;;9934:28;;;9668:301;;;;:::o;10505:122::-;10579:4;10613:1;:7;;;10602:1;:7;;;:18;;10595:25;;10505:122;;;;:::o;8672:227::-;8734:15;;:::i;:::-;8780:1;8769;:7;;;:12;;8761:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8827:47;;;;;;;;8866:1;:7;;;1020:25;;8837;8836:37;;;;;;8827:47;;;8820:54;;8672:227;;;:::o;2673:213::-;2725:15;;:::i;:::-;2765:13;:11;:13::i;:::-;2760:1;:18;;2752:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2854:25;;;;;;;;1020;2863:1;:15;2854:25;;;2847:32;;2673:213;;;:::o;1216:103::-;1257:15;;:::i;:::-;1291:21;;;;;;;;1020:25;1291:21;;;1284:28;;1216:103;:::o;6510:1762::-;6589:15;;:::i;:::-;6631:1;6620;:7;;;:12;:28;;;;6647:1;6636;:7;;;:12;6620:28;6616:52;;;6657:11;;;;;;;;6666:1;6657:11;;;6650:18;;;;6616:52;1020:25;6682:1;:7;;;:22;6678:36;;;6713:1;6706:8;;;;6678:36;1020:25;6728:1;:7;;;:22;6724:36;;;6759:1;6752:8;;;;6724:36;6861:10;1020:25;6874:10;6882:1;6874:7;:10::i;:::-;:16;;;:30;;;;;;6861:43;;6914:10;6927:13;6938:1;6927:10;:13::i;:::-;:19;;;6914:32;;6956:10;1020:25;6969:10;6977:1;6969:7;:10::i;:::-;:16;;;:30;;;;;;6956:43;;7009:10;7022:13;7033:1;7022:10;:13::i;:::-;:19;;;7009:32;;7133:12;7153:2;7148;:7;7133:22;;7175:1;7169:2;:7;7165:63;;7199:2;7193;7186:4;:9;;;;;;:15;7178:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7165:63;7339:18;1020:25;7360:4;:18;7339:39;;7400:1;7392:4;:9;7388:91;;1020:25;7424:4;7411:10;:17;;;;;;:32;7403:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7388:91;7496:10;7489:17;;7517:12;7537:2;7532;:7;7517:22;;7559:1;7553:2;:7;7549:63;;7583:2;7577;7570:4;:9;;;;;;:15;7562:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7549:63;7623:12;7643:2;7638;:7;7623:22;;7665:1;7659:2;:7;7655:63;;7689:2;7683;7676:4;:9;;;;;;:15;7668:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7655:63;7739:14;:12;:14::i;:::-;7734:2;:19;;;;;;7729:24;;7773:14;:12;:14::i;:::-;7768:2;:19;;;;;;7763:24;;7797:12;7817:2;7812;:7;7797:22;;7839:1;7833:2;:7;7829:63;;7863:2;7857;7850:4;:9;;;;;;:15;7842:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7829:63;7984:22;;:::i;:::-;8009:14;;;;;;;;8018:4;8009:14;;;7984:39;;8042:27;8046:6;8054:14;;;;;;;;8063:4;8054:14;;;8042:3;:27::i;:::-;8033:36;;8115:27;8119:6;8127:14;;;;;;;;8136:4;8127:14;;;8115:3;:27::i;:::-;8106:36;;8188:27;8192:6;8200:14;;;;;;;;8209:4;8200:14;;;8188:3;:27::i;:::-;8179:36;;8259:6;8252:13;;;;;;;;;;;;6510:1762;;;;;:::o;3055:115::-;3116:7;1020:25;3142:1;:7;;;:21;;;;;;3135:28;;3055:115;;;:::o;1744:98::-;1802:7;1828:1;:7;;;1821:14;;1744:98;;;:::o;3255:138:29:-;3302:6;3334:8;;;;;;;;;;;:27;;;1332:29;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1332:29:29;;;1322:40;;;;;;3334:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3334:51:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3334:51:29;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3334:51:29;;;;;;;;;;;;;;;;3320:66;;3255:138;:::o;834:176:2:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;17651:1214:9:-;17742:6;17750:7;17765:16;17787:18;17815:8;:17;;;17811:415;;;17854:14;:12;:14::i;:::-;17842:26;;17889:8;:19;;;17876:32;;17811:415;;;17929:19;17951:8;:20;;;17929:42;;17998:11;17979:31;;18173:11;18160:38;;;18199:8;:19;;;18160:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18160:59:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18160:59:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18160:59:9;;;;;;;;;;;;;;;;18147:72;;17811:415;;18691:20;18714:9;:19;;;18742:4;18714:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18714:34:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18714:34:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18714:34:9;;;;;;;;;;;;;;;;18691:57;;18773:10;18758:12;:25;18754:71;;;18806:12;18793:25;;18754:71;18838:9;18849:10;18830:30;;;;;;;17651:1214;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;3399:137:29:-;3444:8;3480;;;;;;;;;;;:27;;;1700;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1700:27:29;;;1690:38;;;;;;3480:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3480:48:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3480:48:29;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3480:48:29;;;;;;;;;;;;;;;;3464:65;;3399:137;:::o;2178:225:3:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1274:134:2:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3542:162:29:-;3593:14;3641:8;;;;;;;;;;;:27;;;1871:33;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1871:33:29;;;1861:44;;;;;;3641:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3641:55:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3641:55:29;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3641:55:29;;;;;;;;;;;;;;;;3619:78;;3542:162;:::o;2267:133:19:-;2313:7;2339:54;2332:61;;2267:133;:::o;4260:165::-;4319:15;;:::i;:::-;4353:47;;;;;;;;1020:25;;4363:1;:7;;;:21;;;;;;4362:37;4353:47;;;4346:54;;4260:165;;;:::o;4730:178::-;4792:15;;:::i;:::-;4826:57;;;;;;;;1020:25;;4846:1;:7;;;:21;;;;;;4845:37;4835:1;:7;;;:47;4826:57;;;4819:64;;4730:178;;;:::o;1991:93::-;2038:7;2064:13;2057:20;;1991:93;:::o;5298:221::-;5372:15;;:::i;:::-;5399:9;5421:1;:7;;;5411:1;:7;;;:17;5399:29;;5451:1;:7;;;5446:1;:12;;5438:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5501:11;;;;;;;;5510:1;5501:11;;;5494:18;;;5298:221;;;;:::o;1732:187:2:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;471:26790:9:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./common/FixidityLib.sol\";\nimport \"./common/Initializable.sol\";\nimport \"./common/UsingRegistry.sol\";\nimport \"./common/interfaces/ICeloVersionedContract.sol\";\nimport \"./common/ReentrancyGuard.sol\";\nimport \"./interfaces/IStableToken.sol\";\n\n/**\n * @title Facilitates large exchanges between CELO stable tokens.\n */\ncontract GrandaMento is ICeloVersionedContract, Ownable, Initializable, UsingRegistry, ReentrancyGuard {\n  using FixidityLib for FixidityLib.Fraction;\n  using SafeMath for uint256;\n\n  // Emitted when a new exchange proposal is created.\n  event ExchangeProposalCreated(\n    uint256 indexed proposalId,\n    address indexed exchanger,\n    string stableTokenRegistryId,\n    uint256 sellAmount,\n    uint256 buyAmount,\n    bool sellCelo\n  );\n\n  // Emitted when an exchange proposal is approved by the approver.\n  event ExchangeProposalApproved(uint256 indexed proposalId);\n\n  // Emitted when an exchange proposal is cancelled.\n  event ExchangeProposalCancelled(uint256 indexed proposalId);\n\n  // Emitted when an exchange proposal is executed.\n  event ExchangeProposalExecuted(uint256 indexed proposalId);\n\n  // Emitted when the approver is set.\n  event ApproverSet(address approver);\n\n  // Emitted when maxApprovalExchangeRateChange is set.\n  event MaxApprovalExchangeRateChangeSet(uint256 maxApprovalExchangeRateChange);\n\n  // Emitted when the spread is set.\n  event SpreadSet(uint256 spread);\n\n  // Emitted when the veto period in seconds is set.\n  event VetoPeriodSecondsSet(uint256 vetoPeriodSeconds);\n\n  // Emitted when the exchange limits for a stable token are set.\n  event StableTokenExchangeLimitsSet(string stableTokenRegistryId, uint256 minExchangeAmount, uint256 maxExchangeAmount);\n\n  enum ExchangeProposalState {\n    None,\n    Proposed,\n    Approved,\n    Executed,\n    Cancelled\n  }\n\n  struct ExchangeLimits {\n    // The minimum amount of an asset that can be exchanged in a single proposal.\n    uint256 minExchangeAmount;\n    // The maximum amount of an asset that can be exchanged in a single proposal.\n    uint256 maxExchangeAmount;\n  }\n\n  struct ExchangeProposal {\n    // The exchanger/proposer of the exchange proposal.\n    address payable exchanger;\n    // The stable token involved in this proposal. This is stored rather than\n    // the stable token's registry ID in case the contract address is changed\n    // after a proposal is created, which could affect refunding or burning the\n    // stable token.\n    address stableToken;\n    // The state of the exchange proposal.\n    ExchangeProposalState state;\n    // Whether the exchanger is selling CELO and buying stableToken.\n    bool sellCelo;\n    // The amount of the sell token being sold. If a stable token is being sold,\n    // the amount of stable token in \"units\" is stored rather than the \"value.\"\n    // This is because stable tokens may experience demurrage/inflation, where\n    // the amount of stable token \"units\" doesn't change with time, but the \"value\"\n    // does. This is important to ensure the correct inflation-adjusted amount\n    // of the stable token is transferred out of this contract when a deposit is\n    // refunded or an exchange selling the stable token is executed.\n    // See StableToken.sol for more details on what \"units\" vs \"values\" are.\n    uint256 sellAmount;\n    // The amount of the buy token being bought. For stable tokens, this is\n    // kept track of as the value, not units.\n    uint256 buyAmount;\n    // The price of CELO quoted in stableToken at the time of the exchange proposal\n    // creation. This is the price used to calculate the buyAmount. Used for a\n    // safety check when an approval is being made that the price isn't wildly\n    // different. Recalculating buyAmount is not sufficient because if a stable token\n    // is being sold that has demurrage enabled, the original value when the stable\n    // tokens were deposited cannot be calculated.\n    uint256 celoStableTokenExchangeRate;\n    // The veto period in seconds at the time the proposal was created. This is kept\n    // track of on a per-proposal basis to lock-in the veto period for a proposal so\n    // that changes to the contract's vetoPeriodSeconds do not affect existing\n    // proposals.\n    uint256 vetoPeriodSeconds;\n    // The timestamp (`block.timestamp`) at which the exchange proposal was approved\n    // in seconds. If the exchange proposal has not ever been approved, is 0.\n    uint256 approvalTimestamp;\n  }\n\n  // The address with the authority to approve exchange proposals.\n  address public approver;\n\n  // The maximum allowed change in the CELO/stable token price when an exchange proposal\n  // is being approved relative to the rate when the exchange proposal was created.\n  FixidityLib.Fraction public maxApprovalExchangeRateChange;\n\n  // The percent fee imposed upon an exchange execution.\n  FixidityLib.Fraction public spread;\n\n  // The period in seconds after an approval during which an exchange proposal can be vetoed.\n  uint256 public vetoPeriodSeconds;\n\n  // The minimum and maximum amount of the stable token that can be minted or\n  // burned in a single exchange. Indexed by the stable token registry identifier string.\n  mapping(string => ExchangeLimits) public stableTokenExchangeLimits;\n\n  // State for all exchange proposals. Indexed by the exchange proposal ID.\n  mapping(uint256 => ExchangeProposal) public exchangeProposals;\n\n  // An array containing a superset of the IDs of exchange proposals that are currently\n  // in the Proposed or Approved state. Intended to allow easy viewing of all active\n  // exchange proposals. It's possible for a proposal ID in this array to no longer be\n  // active, so filtering is required to find the true set of active proposal IDs.\n  // A superset is kept because exchange proposal vetoes, intended to be done\n  // by Governance, effectively go through a multi-day timelock. If the veto\n  // call was required to provide the index in an array of activeProposalIds to\n  // remove corresponding to the vetoed exchange proposal, the timelock could result\n  // in the provided index being stale by the time the veto would be executed.\n  // Alternative approaches exist, like maintaining a linkedlist of active proposal\n  // IDs, but this approach was chosen for its low implementation complexity.\n  uint256[] public activeProposalIdsSuperset;\n\n  // Number of exchange proposals that have ever been created. Used for assigning\n  // an exchange proposal ID to a new proposal.\n  uint256 public exchangeProposalCount;\n\n  /**\n   * @notice Reverts if the sender is not the approver.\n   */\n  modifier onlyApprover() {\n    require(msg.sender == approver, \"Sender must be approver\");\n    _;\n  }\n\n  /**\n   * @notice Sets initialized == true on implementation contracts.\n   * @param test Set to true to skip implementation initialization.\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber()\n    external\n    pure\n    returns (\n      uint256,\n      uint256,\n      uint256,\n      uint256\n    )\n  {\n    return (1, 1, 0, 1);\n  }\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param _registry The address of the registry.\n   * @param _approver The approver that has the ability to approve exchange proposals.\n   * @param _maxApprovalExchangeRateChange The maximum allowed change in CELO price\n   * between an exchange proposal's creation and approval.\n   * @param _spread The spread charged on exchanges.\n   * @param _vetoPeriodSeconds The length of the veto period in seconds.\n   */\n  function initialize(\n    address _registry,\n    address _approver,\n    uint256 _maxApprovalExchangeRateChange,\n    uint256 _spread,\n    uint256 _vetoPeriodSeconds\n  ) external initializer {\n    _transferOwnership(msg.sender);\n    setRegistry(_registry);\n    setApprover(_approver);\n    setMaxApprovalExchangeRateChange(_maxApprovalExchangeRateChange);\n    setSpread(_spread);\n    setVetoPeriodSeconds(_vetoPeriodSeconds);\n  }\n\n  /**\n   * @notice Creates a new exchange proposal and deposits the tokens being sold.\n   * @dev Stable token value amounts are used for the sellAmount, not unit amounts.\n   * @param stableTokenRegistryId The string registry ID for the stable token\n   * involved in the exchange.\n   * @param sellAmount The amount of the sell token being sold.\n   * @param sellCelo Whether CELO is being sold.\n   * @return The proposal identifier for the newly created exchange proposal.\n   */\n  function createExchangeProposal(\n    string calldata stableTokenRegistryId,\n    uint256 sellAmount,\n    bool sellCelo\n  ) external nonReentrant returns (uint256) {\n    address stableToken = registry.getAddressForStringOrDie(stableTokenRegistryId);\n\n    // Gets the price of CELO quoted in stableToken.\n    uint256 celoStableTokenExchangeRate = getOracleExchangeRate(stableToken).unwrap();\n\n    // Using the current oracle exchange rate, calculate what the buy amount is.\n    // This takes the spread into consideration.\n    uint256 buyAmount = getBuyAmount(celoStableTokenExchangeRate, sellAmount, sellCelo);\n\n    // Create new scope to prevent a stack too deep error.\n    {\n      // Get the minimum and maximum amount of stable token than can be involved\n      // in the exchange. This reverts if exchange limits for the stable token have\n      // not been set.\n      (uint256 minExchangeAmount, uint256 maxExchangeAmount) = getStableTokenExchangeLimits(stableTokenRegistryId);\n      // Ensure that the amount of stableToken being bought or sold is within\n      // the configurable exchange limits.\n      uint256 stableTokenExchangeAmount = sellCelo ? buyAmount : sellAmount;\n      require(\n        stableTokenExchangeAmount <= maxExchangeAmount && stableTokenExchangeAmount >= minExchangeAmount,\n        \"Stable token exchange amount not within limits\"\n      );\n    }\n\n    // Deposit the assets being sold.\n    IERC20 sellToken = sellCelo ? getGoldToken() : IERC20(stableToken);\n    require(sellToken.transferFrom(msg.sender, address(this), sellAmount), \"Transfer in of sell token failed\");\n\n    // Record the proposal.\n    // Add 1 to the running proposal count, and use the updated proposal count as\n    // the proposal ID. Proposal IDs intentionally start at 1.\n    exchangeProposalCount = exchangeProposalCount.add(1);\n    // For stable tokens, the amount is stored in units to deal with demurrage.\n    uint256 storedSellAmount = sellCelo ? sellAmount : IStableToken(stableToken).valueToUnits(sellAmount);\n    exchangeProposals[exchangeProposalCount] = ExchangeProposal({\n      exchanger: msg.sender,\n      stableToken: stableToken,\n      state: ExchangeProposalState.Proposed,\n      sellCelo: sellCelo,\n      sellAmount: storedSellAmount,\n      buyAmount: buyAmount,\n      celoStableTokenExchangeRate: celoStableTokenExchangeRate,\n      vetoPeriodSeconds: vetoPeriodSeconds,\n      approvalTimestamp: 0 // initial value when not approved yet\n    });\n    // StableToken.unitsToValue (called within getSellTokenAndSellAmount) can\n    // overflow for very large StableToken amounts. Call it here as a sanity\n    // check, so that the overflow happens here, blocking proposal creation\n    // rather than when attempting to execute the proposal, which would lock\n    // funds in this contract.\n    getSellTokenAndSellAmount(exchangeProposals[exchangeProposalCount]);\n    // Push it into the array of active proposals.\n    activeProposalIdsSuperset.push(exchangeProposalCount);\n    // Even if stable tokens are being sold, the sellAmount emitted is the \"value.\"\n    emit ExchangeProposalCreated(exchangeProposalCount, msg.sender, stableTokenRegistryId, sellAmount, buyAmount, sellCelo);\n    return exchangeProposalCount;\n  }\n\n  /**\n   * @notice Approves an existing exchange proposal.\n   * @dev Sender must be the approver. Exchange proposal must be in the Proposed state.\n   * @param proposalId The identifier of the proposal to approve.\n   */\n  function approveExchangeProposal(uint256 proposalId) external nonReentrant onlyApprover {\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\n    // Ensure the proposal is in the Proposed state.\n    require(proposal.state == ExchangeProposalState.Proposed, \"Proposal must be in Proposed state\");\n    // Ensure the change in the current price of CELO quoted in the stable token\n    // relative to the value when the proposal was created is within the allowed limit.\n    FixidityLib.Fraction memory currentRate = getOracleExchangeRate(proposal.stableToken);\n    FixidityLib.Fraction memory proposalRate = FixidityLib.wrap(proposal.celoStableTokenExchangeRate);\n    (FixidityLib.Fraction memory lesserRate, FixidityLib.Fraction memory greaterRate) = currentRate.lt(proposalRate)\n      ? (currentRate, proposalRate)\n      : (proposalRate, currentRate);\n    FixidityLib.Fraction memory rateChange = greaterRate.subtract(lesserRate).divide(proposalRate);\n    require(rateChange.lte(maxApprovalExchangeRateChange), \"CELO exchange rate is too different from the proposed price\");\n\n    // Set the time the approval occurred and change the state.\n    proposal.approvalTimestamp = block.timestamp;\n    proposal.state = ExchangeProposalState.Approved;\n    emit ExchangeProposalApproved(proposalId);\n  }\n\n  /**\n   * @notice Cancels an exchange proposal.\n   * @dev Only callable by the exchanger if the proposal is in the Proposed state\n   * or the owner if the proposal is in the Approved state.\n   * @param proposalId The identifier of the proposal to cancel.\n   */\n  function cancelExchangeProposal(uint256 proposalId) external nonReentrant {\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\n    // Require the appropriate state and sender.\n    // This will also revert if a proposalId is given that does not correspond\n    // to a previously created exchange proposal.\n    if (proposal.state == ExchangeProposalState.Proposed) {\n      require(proposal.exchanger == msg.sender, \"Sender must be exchanger\");\n    } else if (proposal.state == ExchangeProposalState.Approved) {\n      require(isOwner(), \"Sender must be owner\");\n    } else {\n      revert(\"Proposal must be in Proposed or Approved state\");\n    }\n    // Mark the proposal as cancelled. Do so prior to refunding as a measure against reentrancy.\n    proposal.state = ExchangeProposalState.Cancelled;\n    // Get the token and amount that will be refunded to the proposer.\n    (IERC20 refundToken, uint256 refundAmount) = getSellTokenAndSellAmount(proposal);\n    // Finally, transfer out the deposited funds.\n    require(refundToken.transfer(proposal.exchanger, refundAmount), \"Transfer out of refund token failed\");\n    emit ExchangeProposalCancelled(proposalId);\n  }\n\n  /**\n   * @notice Executes an exchange proposal that's been approved and not vetoed.\n   * @dev Callable by anyone. Reverts if the proposal is not in the Approved state\n   * or proposal.vetoPeriodSeconds has not elapsed since approval.\n   * @param proposalId The identifier of the proposal to execute.\n   */\n  function executeExchangeProposal(uint256 proposalId) external nonReentrant {\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\n    // Require that the proposal is in the Approved state.\n    require(proposal.state == ExchangeProposalState.Approved, \"Proposal must be in Approved state\");\n    // Require that the veto period has elapsed since the approval time.\n    require(proposal.approvalTimestamp.add(proposal.vetoPeriodSeconds) <= block.timestamp, \"Veto period not elapsed\");\n    // Mark the proposal as executed. Do so prior to exchanging as a measure against reentrancy.\n    proposal.state = ExchangeProposalState.Executed;\n    // Perform the exchange.\n    (IERC20 sellToken, uint256 sellAmount) = getSellTokenAndSellAmount(proposal);\n    // If the exchange sells CELO, the CELO is sent to the Reserve from this contract\n    // and stable token is minted to the exchanger.\n    if (proposal.sellCelo) {\n      // Send the CELO from this contract to the reserve.\n      require(sellToken.transfer(address(getReserve()), sellAmount), \"Transfer out of CELO to Reserve failed\");\n      // Mint stable token to the exchanger.\n      require(IStableToken(proposal.stableToken).mint(proposal.exchanger, proposal.buyAmount), \"Stable token mint failed\");\n    } else {\n      // If the exchange is selling stable token, the stable token is burned from\n      // this contract and CELO is transferred from the Reserve to the exchanger.\n\n      // Burn the stable token from this contract.\n      require(IStableToken(proposal.stableToken).burn(sellAmount), \"Stable token burn failed\");\n      // Transfer the CELO from the Reserve to the exchanger.\n      require(\n        getReserve().transferExchangeGold(proposal.exchanger, proposal.buyAmount),\n        \"Transfer out of CELO from Reserve failed\"\n      );\n    }\n    emit ExchangeProposalExecuted(proposalId);\n  }\n\n  /**\n   * @notice Gets the sell token and the sell amount for a proposal.\n   * @dev For stable token sell amounts that are stored as units, the value\n   * is returned. Ensures sell amount is not greater than this contract's balance.\n   * @param proposal The proposal to get the sell token and sell amount for.\n   * @return The IERC20 sell token.\n   * @return The value sell amount.\n   */\n  function getSellTokenAndSellAmount(ExchangeProposal memory proposal) private view returns (IERC20, uint256) {\n    IERC20 sellToken;\n    uint256 sellAmount;\n    if (proposal.sellCelo) {\n      sellToken = getGoldToken();\n      sellAmount = proposal.sellAmount;\n    } else {\n      address stableToken = proposal.stableToken;\n      sellToken = IERC20(stableToken);\n      // When selling stableToken, the sell amount is stored in units.\n      // Units must be converted to value when refunding.\n      sellAmount = IStableToken(stableToken).unitsToValue(proposal.sellAmount);\n    }\n    // In the event a precision issue from the unit <-> value calculations results\n    // in sellAmount being greater than this contract's balance, set the sellAmount\n    // to the entire balance.\n    // This check should not be necessary for CELO, but is done so regardless\n    // for extra certainty that cancelling an exchange proposal can never fail\n    // if for some reason the CELO balance of this contract is less than the\n    // recorded sell amount.\n    uint256 totalBalance = sellToken.balanceOf(address(this));\n    if (totalBalance < sellAmount) {\n      sellAmount = totalBalance;\n    }\n    return (sellToken, sellAmount);\n  }\n\n  /**\n   * @notice Using the oracle price, charges the spread and calculates the amount of\n   * the asset being bought.\n   * @dev Stable token value amounts are used for the sellAmount, not unit amounts.\n   * Assumes both CELO and the stable token have 18 decimals.\n   * @param celoStableTokenExchangeRate The unwrapped fraction exchange rate of CELO\n   * quoted in the stable token.\n   * @param sellAmount The amount of the sell token being sold.\n   * @param sellCelo Whether CELO is being sold.\n   * @return The amount of the asset being bought.\n   */\n  function getBuyAmount(\n    uint256 celoStableTokenExchangeRate,\n    uint256 sellAmount,\n    bool sellCelo\n  ) public view returns (uint256) {\n    FixidityLib.Fraction memory exchangeRate = FixidityLib.wrap(celoStableTokenExchangeRate);\n    // If stableToken is being sold, instead use the price of stableToken\n    // quoted in CELO.\n    if (!sellCelo) {\n      exchangeRate = exchangeRate.reciprocal();\n    }\n    // The sell amount taking the spread into account, ie:\n    // (1 - spread) * sellAmount\n    FixidityLib.Fraction memory adjustedSellAmount = FixidityLib.fixed1().subtract(spread).multiply(\n      FixidityLib.newFixed(sellAmount)\n    );\n    // Calculate the buy amount:\n    // exchangeRate * adjustedSellAmount\n    return exchangeRate.multiply(adjustedSellAmount).fromFixed();\n  }\n\n  /**\n   * @notice Removes the proposal ID found at the provided index of activeProposalIdsSuperset\n   * if the exchange proposal is not active.\n   * @dev Anyone can call. Reverts if the exchange proposal is active.\n   * @param index The index of the proposal ID to remove from activeProposalIdsSuperset.\n   */\n  function removeFromActiveProposalIdsSuperset(uint256 index) external {\n    require(index < activeProposalIdsSuperset.length, \"Index out of bounds\");\n    uint256 proposalId = activeProposalIdsSuperset[index];\n    // Require the exchange proposal to be inactive.\n    require(\n      exchangeProposals[proposalId].state != ExchangeProposalState.Proposed &&\n        exchangeProposals[proposalId].state != ExchangeProposalState.Approved,\n      \"Exchange proposal not inactive\"\n    );\n    // If not removing the last element, overwrite the index with the value of\n    // the last element.\n    uint256 lastIndex = activeProposalIdsSuperset.length.sub(1);\n    if (index < lastIndex) {\n      activeProposalIdsSuperset[index] = activeProposalIdsSuperset[lastIndex];\n    }\n    // Delete the last element.\n    activeProposalIdsSuperset.length--;\n  }\n\n  /**\n   * @notice Gets the proposal identifiers of exchange proposals in the\n   * Proposed or Approved state. Returns a version of activeProposalIdsSuperset\n   * with inactive proposal IDs set as 0.\n   * @dev Elements with a proposal ID of 0 should be filtered out by the consumer.\n   * @return An array of active exchange proposals IDs.\n   */\n  function getActiveProposalIds() external view returns (uint256[] memory) {\n    // Solidity doesn't play well with dynamically sized memory arrays.\n    // Instead, this array is created with the same length as activeProposalIdsSuperset,\n    // and will replace elements that are inactive proposal IDs with the value 0.\n    uint256[] memory activeProposalIds = new uint256[](activeProposalIdsSuperset.length);\n\n    for (uint256 i = 0; i < activeProposalIdsSuperset.length; i = i.add(1)) {\n      uint256 proposalId = activeProposalIdsSuperset[i];\n      if (\n        exchangeProposals[proposalId].state == ExchangeProposalState.Proposed ||\n        exchangeProposals[proposalId].state == ExchangeProposalState.Approved\n      ) {\n        activeProposalIds[i] = proposalId;\n      }\n    }\n    return activeProposalIds;\n  }\n\n  /**\n   * @notice Gets the oracle CELO price quoted in the stable token.\n   * @dev Reverts if there is not a rate for the provided stable token.\n   * @param stableToken The stable token to get the oracle price for.\n   * @return The oracle CELO price quoted in the stable token.\n   */\n  function getOracleExchangeRate(address stableToken) private view returns (FixidityLib.Fraction memory) {\n    uint256 rateNumerator;\n    uint256 rateDenominator;\n    (rateNumerator, rateDenominator) = getSortedOracles().medianRate(stableToken);\n    // When rateDenominator is 0, it means there are no rates known to SortedOracles.\n    require(rateDenominator > 0, \"No oracle rates present for token\");\n    return FixidityLib.wrap(rateNumerator).divide(FixidityLib.wrap(rateDenominator));\n  }\n\n  /**\n   * @notice Gets the minimum and maximum amount of a stable token that can be\n   * involved in a single exchange.\n   * @dev Reverts if there is no explicit exchange limit for the stable token.\n   * @param stableTokenRegistryId The string registry ID for the stable token.\n   * @return Minimum exchange amount.\n   * @return Maximum exchange amount.\n   */\n  function getStableTokenExchangeLimits(string memory stableTokenRegistryId) public view returns (uint256, uint256) {\n    ExchangeLimits memory exchangeLimits = stableTokenExchangeLimits[stableTokenRegistryId];\n    // Require the configurable stableToken max exchange amount to be > 0.\n    // This covers the case where a stableToken has never been explicitly permitted.\n    require(exchangeLimits.maxExchangeAmount > 0, \"Max stable token exchange amount must be defined\");\n    return (exchangeLimits.minExchangeAmount, exchangeLimits.maxExchangeAmount);\n  }\n\n  /**\n   * @notice Sets the approver.\n   * @dev Sender must be owner. New approver is allowed to be address(0).\n   * @param newApprover The new value for the approver.\n   */\n  function setApprover(address newApprover) public onlyOwner {\n    approver = newApprover;\n    emit ApproverSet(newApprover);\n  }\n\n  /**\n   * @notice Sets the maximum allowed change in the CELO/stable token price when\n   * an exchange proposal is being approved relative to the price when the proposal\n   * was created.\n   * @dev Sender must be owner.\n   * @param newMaxApprovalExchangeRateChange The new value for maxApprovalExchangeRateChange\n   * to be wrapped.\n   */\n  function setMaxApprovalExchangeRateChange(uint256 newMaxApprovalExchangeRateChange) public onlyOwner {\n    maxApprovalExchangeRateChange = FixidityLib.wrap(newMaxApprovalExchangeRateChange);\n    emit MaxApprovalExchangeRateChangeSet(newMaxApprovalExchangeRateChange);\n  }\n\n  /**\n   * @notice Sets the spread.\n   * @dev Sender must be owner.\n   * @param newSpread The new value for the spread to be wrapped. Must be <= fixed 1.\n   */\n  function setSpread(uint256 newSpread) public onlyOwner {\n    spread = FixidityLib.wrap(newSpread);\n    require(FixidityLib.lte(spread, FixidityLib.fixed1()), \"Spread must be less than or equal to 1\");\n    emit SpreadSet(newSpread);\n  }\n\n  /**\n   * @notice Sets the minimum and maximum amount of the stable token an exchange can involve.\n   * @dev Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new\n   * exchange proposals for the token.\n   * @param stableTokenRegistryId The registry ID string for the stable token to set limits for.\n   * @param minExchangeAmount The new minimum exchange amount for the stable token.\n   * @param maxExchangeAmount The new maximum exchange amount for the stable token.\n   */\n  function setStableTokenExchangeLimits(\n    string calldata stableTokenRegistryId,\n    uint256 minExchangeAmount,\n    uint256 maxExchangeAmount\n  ) external onlyOwner {\n    require(minExchangeAmount <= maxExchangeAmount, \"Min exchange amount must not be greater than max\");\n    stableTokenExchangeLimits[stableTokenRegistryId] = ExchangeLimits({\n      minExchangeAmount: minExchangeAmount,\n      maxExchangeAmount: maxExchangeAmount\n    });\n    emit StableTokenExchangeLimitsSet(stableTokenRegistryId, minExchangeAmount, maxExchangeAmount);\n  }\n\n  /**\n   * @notice Sets the veto period in seconds.\n   * @dev Sender must be owner.\n   * @param newVetoPeriodSeconds The new value for the veto period in seconds.\n   */\n  function setVetoPeriodSeconds(uint256 newVetoPeriodSeconds) public onlyOwner {\n    // Hardcode a max of 4 weeks.\n    // A minimum is not enforced for flexibility. A case of interest is if\n    // Governance were to be set as the `approver`, it would be desirable to\n    // set the veto period to 0 seconds.\n    require(newVetoPeriodSeconds <= 4 weeks, \"Veto period cannot exceed 4 weeks\");\n    vetoPeriodSeconds = newVetoPeriodSeconds;\n    emit VetoPeriodSecondsSet(newVetoPeriodSeconds);\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/lib/mento-core/contracts/GrandaMento.sol",
  "ast": {
    "absolutePath": "project:/lib/mento-core/contracts/GrandaMento.sol",
    "exportedSymbols": {
      "GrandaMento": [
        2699
      ]
    },
    "id": 2700,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1605,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1606,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 283,
        "src": "26:59:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 1607,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 401,
        "src": "86:63:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/common/FixidityLib.sol",
        "file": "./common/FixidityLib.sol",
        "id": 1608,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 7531,
        "src": "151:34:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/common/Initializable.sol",
        "file": "./common/Initializable.sol",
        "id": 1609,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 8253,
        "src": "186:36:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/common/UsingRegistry.sol",
        "file": "./common/UsingRegistry.sol",
        "id": 1610,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 10807,
        "src": "223:36:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "./common/interfaces/ICeloVersionedContract.sol",
        "id": 1611,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 10821,
        "src": "260:56:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/common/ReentrancyGuard.sol",
        "file": "./common/ReentrancyGuard.sol",
        "id": 1612,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 9649,
        "src": "317:38:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/interfaces/IStableToken.sol",
        "file": "./interfaces/IStableToken.sol",
        "id": 1613,
        "nodeType": "ImportDirective",
        "scope": 2700,
        "sourceUnit": 14143,
        "src": "356:39:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1614,
              "name": "ICeloVersionedContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10820,
              "src": "495:22:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICeloVersionedContract_$10820",
                "typeString": "contract ICeloVersionedContract"
              }
            },
            "id": 1615,
            "nodeType": "InheritanceSpecifier",
            "src": "495:22:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1616,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 400,
              "src": "519:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$400",
                "typeString": "contract Ownable"
              }
            },
            "id": 1617,
            "nodeType": "InheritanceSpecifier",
            "src": "519:7:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1618,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8252,
              "src": "528:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8252",
                "typeString": "contract Initializable"
              }
            },
            "id": 1619,
            "nodeType": "InheritanceSpecifier",
            "src": "528:13:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1620,
              "name": "UsingRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10806,
              "src": "543:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingRegistry_$10806",
                "typeString": "contract UsingRegistry"
              }
            },
            "id": 1621,
            "nodeType": "InheritanceSpecifier",
            "src": "543:13:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1622,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9648,
              "src": "558:15:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$9648",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 1623,
            "nodeType": "InheritanceSpecifier",
            "src": "558:15:9"
          }
        ],
        "contractDependencies": [
          26,
          400,
          8252,
          9648,
          10806,
          10820
        ],
        "contractKind": "contract",
        "documentation": "@title Facilitates large exchanges between CELO stable tokens.",
        "fullyImplemented": true,
        "id": 2699,
        "linearizedBaseContracts": [
          2699,
          9648,
          10806,
          8252,
          400,
          26,
          10820
        ],
        "name": "GrandaMento",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1626,
            "libraryName": {
              "contractScope": null,
              "id": 1624,
              "name": "FixidityLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7530,
              "src": "584:11:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FixidityLib_$7530",
                "typeString": "library FixidityLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "578:43:9",
            "typeName": {
              "contractScope": null,
              "id": 1625,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6931,
              "src": "600:20:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "id": 1629,
            "libraryName": {
              "contractScope": null,
              "id": 1627,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "630:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$282",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "624:27:9",
            "typeName": {
              "id": 1628,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "643:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1643,
            "name": "ExchangeProposalCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "744:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1633,
                  "indexed": true,
                  "name": "exchanger",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "776:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1635,
                  "indexed": false,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "807:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1634,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1637,
                  "indexed": false,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "841:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1639,
                  "indexed": false,
                  "name": "buyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "865:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1641,
                  "indexed": false,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "888:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1640,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "738:167:9"
            },
            "src": "709:197:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1647,
            "name": "ExchangeProposalApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1645,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "1009:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1008:28:9"
            },
            "src": "978:59:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1651,
            "name": "ExchangeProposalCancelled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1649,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1651,
                  "src": "1126:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1126:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1125:28:9"
            },
            "src": "1094:60:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1655,
            "name": "ExchangeProposalExecuted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1655,
                  "src": "1241:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1240:28:9"
            },
            "src": "1210:59:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1659,
            "name": "ApproverSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1657,
                  "indexed": false,
                  "name": "approver",
                  "nodeType": "VariableDeclaration",
                  "scope": 1659,
                  "src": "1330:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1330:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1329:18:9"
            },
            "src": "1312:36:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1663,
            "name": "MaxApprovalExchangeRateChangeSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1661,
                  "indexed": false,
                  "name": "maxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1663,
                  "src": "1447:37:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1446:39:9"
            },
            "src": "1408:78:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1667,
            "name": "SpreadSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1665,
                  "indexed": false,
                  "name": "spread",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "1543:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1542:16:9"
            },
            "src": "1527:32:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1671,
            "name": "VetoPeriodSecondsSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "indexed": false,
                  "name": "vetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "1643:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1643:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1642:27:9"
            },
            "src": "1616:54:9"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1679,
            "name": "StableTokenExchangeLimitsSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1673,
                  "indexed": false,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "1775:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1672,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1675,
                  "indexed": false,
                  "name": "minExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "1805:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1677,
                  "indexed": false,
                  "name": "maxExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1679,
                  "src": "1832:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1832:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1774:84:9"
            },
            "src": "1740:119:9"
          },
          {
            "canonicalName": "GrandaMento.ExchangeProposalState",
            "id": 1685,
            "members": [
              {
                "id": 1680,
                "name": "None",
                "nodeType": "EnumValue",
                "src": "1896:4:9"
              },
              {
                "id": 1681,
                "name": "Proposed",
                "nodeType": "EnumValue",
                "src": "1906:8:9"
              },
              {
                "id": 1682,
                "name": "Approved",
                "nodeType": "EnumValue",
                "src": "1920:8:9"
              },
              {
                "id": 1683,
                "name": "Executed",
                "nodeType": "EnumValue",
                "src": "1934:8:9"
              },
              {
                "id": 1684,
                "name": "Cancelled",
                "nodeType": "EnumValue",
                "src": "1948:9:9"
              }
            ],
            "name": "ExchangeProposalState",
            "nodeType": "EnumDefinition",
            "src": "1863:98:9"
          },
          {
            "canonicalName": "GrandaMento.ExchangeLimits",
            "id": 1690,
            "members": [
              {
                "constant": false,
                "id": 1687,
                "name": "minExchangeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 1690,
                "src": "2075:25:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1686,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2075:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1689,
                "name": "maxExchangeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 1690,
                "src": "2188:25:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1688,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2188:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ExchangeLimits",
            "nodeType": "StructDefinition",
            "scope": 2699,
            "src": "1965:253:9",
            "visibility": "public"
          },
          {
            "canonicalName": "GrandaMento.ExchangeProposal",
            "id": 1709,
            "members": [
              {
                "constant": false,
                "id": 1692,
                "name": "exchanger",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "2308:25:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1691,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2308:15:9",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1694,
                "name": "stableToken",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "2596:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1693,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2596:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1696,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "2664:27:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                  "typeString": "enum GrandaMento.ExchangeProposalState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1695,
                  "name": "ExchangeProposalState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1685,
                  "src": "2664:21:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                    "typeString": "enum GrandaMento.ExchangeProposalState"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1698,
                "name": "sellCelo",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "2766:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1697,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2766:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1700,
                "name": "sellAmount",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "3415:18:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1699,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3415:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1702,
                "name": "buyAmount",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "3561:17:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1701,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3561:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1704,
                "name": "celoStableTokenExchangeRate",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "4047:35:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1703,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4047:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1706,
                "name": "vetoPeriodSeconds",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "4355:25:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1705,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4355:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1708,
                "name": "approvalTimestamp",
                "nodeType": "VariableDeclaration",
                "scope": 1709,
                "src": "4549:25:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1707,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4549:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ExchangeProposal",
            "nodeType": "StructDefinition",
            "scope": 2699,
            "src": "2222:2357:9",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1711,
            "name": "approver",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "4650:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1710,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4650:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1713,
            "name": "maxApprovalExchangeRateChange",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "4851:57:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "contractScope": null,
              "id": 1712,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6931,
              "src": "4851:20:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1715,
            "name": "spread",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "4970:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "contractScope": null,
              "id": 1714,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6931,
              "src": "4970:20:9",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1717,
            "name": "vetoPeriodSeconds",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "5103:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1716,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5103:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1721,
            "name": "stableTokenExchangeLimits",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "5308:66:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$1690_storage_$",
              "typeString": "mapping(string => struct GrandaMento.ExchangeLimits)"
            },
            "typeName": {
              "id": 1720,
              "keyType": {
                "id": 1718,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5316:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5308:33:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$1690_storage_$",
                "typeString": "mapping(string => struct GrandaMento.ExchangeLimits)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1719,
                "name": "ExchangeLimits",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1690,
                "src": "5326:14:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExchangeLimits_$1690_storage_ptr",
                  "typeString": "struct GrandaMento.ExchangeLimits"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1725,
            "name": "exchangeProposals",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "5455:61:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
              "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal)"
            },
            "typeName": {
              "id": 1724,
              "keyType": {
                "id": 1722,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5463:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5455:36:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1723,
                "name": "ExchangeProposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1709,
                "src": "5474:16:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                  "typeString": "struct GrandaMento.ExchangeProposal"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1728,
            "name": "activeProposalIdsSuperset",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "6425:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1726,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6425:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1727,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "6425:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1730,
            "name": "exchangeProposalCount",
            "nodeType": "VariableDeclaration",
            "scope": 2699,
            "src": "6602:36:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6602:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1741,
              "nodeType": "Block",
              "src": "6735:76:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1733,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14223,
                            "src": "6749:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6749:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1735,
                          "name": "approver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1711,
                          "src": "6763:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6749:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206d75737420626520617070726f766572",
                        "id": 1737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6773:25:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fd6d9e84a913c2056cc57d9de71bf548ba2a0ceb02699a44b3a7d52aa725b72",
                          "typeString": "literal_string \"Sender must be approver\""
                        },
                        "value": "Sender must be approver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8fd6d9e84a913c2056cc57d9de71bf548ba2a0ceb02699a44b3a7d52aa725b72",
                          "typeString": "literal_string \"Sender must be approver\""
                        }
                      ],
                      "id": 1732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "6741:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6741:58:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1739,
                  "nodeType": "ExpressionStatement",
                  "src": "6741:58:9"
                },
                {
                  "id": 1740,
                  "nodeType": "PlaceholderStatement",
                  "src": "6805:1:9"
                }
              ]
            },
            "documentation": "@notice Reverts if the sender is not the approver.",
            "id": 1742,
            "name": "onlyApprover",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6732:2:9"
            },
            "src": "6711:100:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1750,
              "nodeType": "Block",
              "src": "7012:2:9",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialization.",
            "id": 1751,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1747,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1744,
                    "src": "7006:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 1748,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1746,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8252,
                  "src": "6992:13:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$8252_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6992:19:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1744,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "6974:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1743,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6974:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6973:11:9"
            },
            "returnParameters": {
              "id": 1749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7012:0:9"
            },
            "scope": 2699,
            "src": "6962:52:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1768,
              "nodeType": "Block",
              "src": "7422:30:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7436:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7439:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7442:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7445:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "id": 1766,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7435:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_1_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0,int_const 1)"
                    }
                  },
                  "functionReturnParameters": 1761,
                  "id": 1767,
                  "nodeType": "Return",
                  "src": "7428:19:9"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
            "id": 1769,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7316:2:9"
            },
            "returnParameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1754,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1769,
                  "src": "7361:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7361:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1756,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1769,
                  "src": "7376:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1755,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7376:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1758,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1769,
                  "src": "7391:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7391:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1760,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1769,
                  "src": "7406:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7406:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7353:66:9"
            },
            "scope": 2699,
            "src": "7291:161:9",
            "stateMutability": "pure",
            "superFunction": 10819,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1809,
              "nodeType": "Block",
              "src": "8159:237:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1785,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14223,
                          "src": "8184:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8184:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1784,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "8165:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8165:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1788,
                  "nodeType": "ExpressionStatement",
                  "src": "8165:30:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1790,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1771,
                        "src": "8213:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1789,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10727,
                      "src": "8201:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8201:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1792,
                  "nodeType": "ExpressionStatement",
                  "src": "8201:22:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1794,
                        "name": "_approver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1773,
                        "src": "8241:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1793,
                      "name": "setApprover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2592,
                      "src": "8229:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8229:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1796,
                  "nodeType": "ExpressionStatement",
                  "src": "8229:22:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1798,
                        "name": "_maxApprovalExchangeRateChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1775,
                        "src": "8290:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1797,
                      "name": "setMaxApprovalExchangeRateChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2611,
                      "src": "8257:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8257:64:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "8257:64:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1802,
                        "name": "_spread",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1777,
                        "src": "8337:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1801,
                      "name": "setSpread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2641,
                      "src": "8327:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8327:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1804,
                  "nodeType": "ExpressionStatement",
                  "src": "8327:18:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1806,
                        "name": "_vetoPeriodSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1779,
                        "src": "8372:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1805,
                      "name": "setVetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2698,
                      "src": "8351:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8351:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1808,
                  "nodeType": "ExpressionStatement",
                  "src": "8351:40:9"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param _registry The address of the registry.\n@param _approver The approver that has the ability to approve exchange proposals.\n@param _maxApprovalExchangeRateChange The maximum allowed change in CELO price\nbetween an exchange proposal's creation and approval.\n@param _spread The spread charged on exchanges.\n@param _vetoPeriodSeconds The length of the veto period in seconds.",
            "id": 1810,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1782,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1781,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8251,
                  "src": "8147:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8147:11:9"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1771,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "7996:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7996:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1773,
                  "name": "_approver",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "8019:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8019:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1775,
                  "name": "_maxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "8042:38:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8042:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1777,
                  "name": "_spread",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "8086:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8086:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1779,
                  "name": "_vetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "8107:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8107:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7990:147:9"
            },
            "returnParameters": {
              "id": 1783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8159:0:9"
            },
            "scope": 2699,
            "src": "7971:425:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1957,
              "nodeType": "Block",
              "src": "9039:3062:9",
              "statements": [
                {
                  "assignments": [
                    1824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1824,
                      "name": "stableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "9045:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1823,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9045:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1829,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1827,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1812,
                        "src": "9101:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1825,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10666,
                        "src": "9067:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRegistry_$10878",
                          "typeString": "contract IRegistry"
                        }
                      },
                      "id": 1826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressForStringOrDie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10860,
                      "src": "9067:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9067:56:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9045:78:9"
                },
                {
                  "assignments": [
                    1831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1831,
                      "name": "celoStableTokenExchangeRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "9183:35:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1830,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9183:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1837,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1833,
                            "name": "stableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1824,
                            "src": "9243:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1832,
                          "name": "getOracleExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2546,
                          "src": "9221:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (address) view returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9221:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 1835,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6975,
                      "src": "9221:41:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9221:43:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9183:81:9"
                },
                {
                  "assignments": [
                    1839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1839,
                      "name": "buyAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "9401:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1838,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9401:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1845,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1841,
                        "name": "celoStableTokenExchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1831,
                        "src": "9434:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1842,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "9463:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1843,
                        "name": "sellCelo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "9475:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1840,
                      "name": "getBuyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2373,
                      "src": "9421:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,bool) view returns (uint256)"
                      }
                    },
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9421:63:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9401:83:9"
                },
                {
                  "id": 1872,
                  "nodeType": "Block",
                  "src": "9550:696:9",
                  "statements": [
                    {
                      "assignments": [
                        1847,
                        1849
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1847,
                          "name": "minExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 1872,
                          "src": "9747:25:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1846,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9747:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1849,
                          "name": "maxExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 1872,
                          "src": "9774:25:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1848,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9774:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1853,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1851,
                            "name": "stableTokenRegistryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1812,
                            "src": "9832:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 1850,
                          "name": "getStableTokenExchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2576,
                          "src": "9803:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                            "typeString": "function (string memory) view returns (uint256,uint256)"
                          }
                        },
                        "id": 1852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9803:51:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9746:108:9"
                    },
                    {
                      "assignments": [
                        1855
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1855,
                          "name": "stableTokenExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 1872,
                          "src": "9983:33:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1854,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9983:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 1860,
                      "initialValue": {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 1856,
                          "name": "sellCelo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1816,
                          "src": "10019:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 1858,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1814,
                          "src": "10042:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "10019:33:9",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 1857,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1839,
                          "src": "10030:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9983:69:9"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1862,
                                "name": "stableTokenExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1855,
                                "src": "10077:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1863,
                                "name": "maxExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1849,
                                "src": "10106:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10077:46:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1865,
                                "name": "stableTokenExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1855,
                                "src": "10127:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1866,
                                "name": "minExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1847,
                                "src": "10156:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10127:46:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10077:96:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d697473",
                            "id": 1869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10183:48:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_abff683270a5c9e3636b2bef3a56099622c6c5e2bed3532270ab1542fc51361e",
                              "typeString": "literal_string \"Stable token exchange amount not within limits\""
                            },
                            "value": "Stable token exchange amount not within limits"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_abff683270a5c9e3636b2bef3a56099622c6c5e2bed3532270ab1542fc51361e",
                              "typeString": "literal_string \"Stable token exchange amount not within limits\""
                            }
                          ],
                          "id": 1861,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            14226,
                            14227
                          ],
                          "referencedDeclaration": 14227,
                          "src": "10060:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10060:179:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1871,
                      "nodeType": "ExpressionStatement",
                      "src": "10060:179:9"
                    }
                  ]
                },
                {
                  "assignments": [
                    1874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1874,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "10290:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$469",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1873,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 469,
                        "src": "10290:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1882,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "id": 1875,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1816,
                      "src": "10309:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1879,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "10344:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1878,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "10337:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$469_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10337:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$469",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10309:47:9",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1876,
                        "name": "getGoldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10766,
                        "src": "10320:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$469_$",
                          "typeString": "function () view returns (contract IERC20)"
                        }
                      },
                      "id": 1877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10320:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$469",
                        "typeString": "contract IERC20"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$469",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10290:66:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1886,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14223,
                              "src": "10393:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10393:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1889,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14279,
                                "src": "10413:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GrandaMento_$2699",
                                  "typeString": "contract GrandaMento"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GrandaMento_$2699",
                                  "typeString": "contract GrandaMento"
                                }
                              ],
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10405:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10405:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1891,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1814,
                            "src": "10420:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1884,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1874,
                            "src": "10370:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$469",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 452,
                          "src": "10370:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10370:61:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657220696e206f662073656c6c20746f6b656e206661696c6564",
                        "id": 1893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10433:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3d3acf05ce3453d7e66bf75f2aa176fc296c2d3dc774cde7eabf241efe8438",
                          "typeString": "literal_string \"Transfer in of sell token failed\""
                        },
                        "value": "Transfer in of sell token failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c3d3acf05ce3453d7e66bf75f2aa176fc296c2d3dc774cde7eabf241efe8438",
                          "typeString": "literal_string \"Transfer in of sell token failed\""
                        }
                      ],
                      "id": 1883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "10362:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10362:106:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1895,
                  "nodeType": "ExpressionStatement",
                  "src": "10362:106:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1896,
                      "name": "exchangeProposalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1730,
                      "src": "10648:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10698:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1897,
                          "name": "exchangeProposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1730,
                          "src": "10672:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 122,
                        "src": "10672:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10672:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10648:52:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1902,
                  "nodeType": "ExpressionStatement",
                  "src": "10648:52:9"
                },
                {
                  "assignments": [
                    1904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1904,
                      "name": "storedSellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1957,
                      "src": "10786:24:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1903,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10786:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1914,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "id": 1905,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1816,
                      "src": "10813:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1911,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1814,
                          "src": "10876:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1908,
                              "name": "stableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1824,
                              "src": "10850:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1907,
                            "name": "IStableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14142,
                            "src": "10837:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStableToken_$14142_$",
                              "typeString": "type(contract IStableToken)"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10837:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStableToken_$14142",
                            "typeString": "contract IStableToken"
                          }
                        },
                        "id": 1910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valueToUnits",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14116,
                        "src": "10837:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 1912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10837:50:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10813:74:9",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 1906,
                      "name": "sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1814,
                      "src": "10824:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10786:101:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1915,
                        "name": "exchangeProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1725,
                        "src": "10893:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                          "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                        }
                      },
                      "id": 1917,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1916,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "10911:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10893:40:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                        "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1919,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14223,
                            "src": "10972:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10972:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1921,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "11003:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1922,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "11029:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Proposed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11029:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1924,
                          "name": "sellCelo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1816,
                          "src": "11077:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1925,
                          "name": "storedSellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "11105:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1926,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1839,
                          "src": "11140:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1927,
                          "name": "celoStableTokenExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "11186:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1928,
                          "name": "vetoPeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1717,
                          "src": "11240:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11284:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1918,
                        "name": "ExchangeProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1709,
                        "src": "10936:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExchangeProposal_$1709_storage_ptr_$",
                          "typeString": "type(struct GrandaMento.ExchangeProposal storage pointer)"
                        }
                      },
                      "id": 1930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "exchanger",
                        "stableToken",
                        "state",
                        "sellCelo",
                        "sellAmount",
                        "buyAmount",
                        "celoStableTokenExchangeRate",
                        "vetoPeriodSeconds",
                        "approvalTimestamp"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "10936:395:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$1709_memory",
                        "typeString": "struct GrandaMento.ExchangeProposal memory"
                      }
                    },
                    "src": "10893:438:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "id": 1932,
                  "nodeType": "ExpressionStatement",
                  "src": "10893:438:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1934,
                          "name": "exchangeProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "11702:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                            "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                          }
                        },
                        "id": 1936,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1935,
                          "name": "exchangeProposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1730,
                          "src": "11720:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11702:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                          "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                          "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                        }
                      ],
                      "id": 1933,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2318,
                      "src": "11676:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$1709_memory_ptr_$returns$_t_contract$_IERC20_$469_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11676:67:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$469_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "11676:67:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1942,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "11831:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1939,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "11800:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11800:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11800:53:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1944,
                  "nodeType": "ExpressionStatement",
                  "src": "11800:53:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1946,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1730,
                        "src": "11972:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14223,
                          "src": "11995:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11995:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1949,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1812,
                        "src": "12007:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1950,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1814,
                        "src": "12030:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1951,
                        "name": "buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "12042:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1952,
                        "name": "sellCelo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1816,
                        "src": "12053:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1945,
                      "name": "ExchangeProposalCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "11948:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11948:114:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1954,
                  "nodeType": "EmitStatement",
                  "src": "11943:119:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1955,
                    "name": "exchangeProposalCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1730,
                    "src": "12075:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1822,
                  "id": 1956,
                  "nodeType": "Return",
                  "src": "12068:28:9"
                }
              ]
            },
            "documentation": "@notice Creates a new exchange proposal and deposits the tokens being sold.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\n@param stableTokenRegistryId The string registry ID for the stable token\ninvolved in the exchange.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The proposal identifier for the newly created exchange proposal.",
            "id": 1958,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1818,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9647,
                  "src": "9008:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9008:12:9"
              }
            ],
            "name": "createExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1812,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "8914:37:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1811,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8914:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1814,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "8957:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8957:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1816,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "8981:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8981:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8908:90:9"
            },
            "returnParameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1958,
                  "src": "9030:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9030:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9029:9:9"
            },
            "scope": 2699,
            "src": "8877:3224:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2057,
              "nodeType": "Block",
              "src": "12412:1221:9",
              "statements": [
                {
                  "assignments": [
                    1968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1968,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 2057,
                      "src": "12418:33:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1967,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1709,
                        "src": "12418:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1972,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1969,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "12454:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 1971,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1970,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1960,
                      "src": "12472:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12454:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12418:65:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        },
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1974,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1968,
                            "src": "12550:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                            }
                          },
                          "id": 1975,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1696,
                          "src": "12550:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1976,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "12568:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 1977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Proposed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12568:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "src": "12550:48:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f706f73616c206d75737420626520696e2050726f706f736564207374617465",
                        "id": 1979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12600:36:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f07d250355247691ebfa293273b531c2088ec330ce34593573f341f0d9db861",
                          "typeString": "literal_string \"Proposal must be in Proposed state\""
                        },
                        "value": "Proposal must be in Proposed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f07d250355247691ebfa293273b531c2088ec330ce34593573f341f0d9db861",
                          "typeString": "literal_string \"Proposal must be in Proposed state\""
                        }
                      ],
                      "id": 1973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "12542:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12542:95:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1981,
                  "nodeType": "ExpressionStatement",
                  "src": "12542:95:9"
                },
                {
                  "assignments": [
                    1985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1985,
                      "name": "currentRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2057,
                      "src": "12812:39:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1984,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6931,
                        "src": "12812:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1990,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1987,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1968,
                          "src": "12876:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 1988,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stableToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1694,
                        "src": "12876:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1986,
                      "name": "getOracleExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2546,
                      "src": "12854:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (address) view returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 1989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12854:43:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12812:85:9"
                },
                {
                  "assignments": [
                    1994
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1994,
                      "name": "proposalRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2057,
                      "src": "12903:40:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1993,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6931,
                        "src": "12903:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2000,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1997,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1968,
                          "src": "12963:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 1998,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "celoStableTokenExchangeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1704,
                        "src": "12963:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1995,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7530,
                        "src": "12946:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6964,
                      "src": "12946:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12946:54:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12903:97:9"
                },
                {
                  "assignments": [
                    2004,
                    2006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2004,
                      "name": "lesserRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2057,
                      "src": "13007:38:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2003,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6931,
                        "src": "13007:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2006,
                      "name": "greaterRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2057,
                      "src": "13047:39:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2005,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6931,
                        "src": "13047:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2018,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2009,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1994,
                          "src": "13105:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2007,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1985,
                          "src": "13090:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 2008,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7483,
                        "src": "13090:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                        }
                      },
                      "id": 2010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13090:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2014,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1994,
                          "src": "13164:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2015,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1985,
                          "src": "13178:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "id": 2016,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13163:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 2017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "13090:100:9",
                    "trueExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2011,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1985,
                          "src": "13128:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2012,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1994,
                          "src": "13141:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "id": 2013,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13127:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$",
                      "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13006:184:9"
                },
                {
                  "assignments": [
                    2022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2022,
                      "name": "rateChange",
                      "nodeType": "VariableDeclaration",
                      "scope": 2057,
                      "src": "13196:38:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2021,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6931,
                        "src": "13196:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2030,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2028,
                        "name": "proposalRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1994,
                        "src": "13277:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2025,
                            "name": "lesserRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2004,
                            "src": "13258:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2023,
                            "name": "greaterRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2006,
                            "src": "13237:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 2024,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subtract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7149,
                          "src": "13237:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_struct$_Fraction_$6931_memory_ptr_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 2026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13237:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divide",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7435,
                      "src": "13237:39:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_struct$_Fraction_$6931_memory_ptr_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13237:53:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13196:94:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2034,
                            "name": "maxApprovalExchangeRateChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "13319:29:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2032,
                            "name": "rateChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2022,
                            "src": "13304:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7499,
                          "src": "13304:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 2035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13304:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f736564207072696365",
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13351:61:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0ac17e3919bdf22a49d2ef31bd4c38ec015be0b3ae601abd9de4a352dbf757b",
                          "typeString": "literal_string \"CELO exchange rate is too different from the proposed price\""
                        },
                        "value": "CELO exchange rate is too different from the proposed price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0ac17e3919bdf22a49d2ef31bd4c38ec015be0b3ae601abd9de4a352dbf757b",
                          "typeString": "literal_string \"CELO exchange rate is too different from the proposed price\""
                        }
                      ],
                      "id": 2031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "13296:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13296:117:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2038,
                  "nodeType": "ExpressionStatement",
                  "src": "13296:117:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2039,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1968,
                        "src": "13484:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 2041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "approvalTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1708,
                      "src": "13484:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2042,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14213,
                        "src": "13513:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13513:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13484:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2045,
                  "nodeType": "ExpressionStatement",
                  "src": "13484:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2046,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1968,
                        "src": "13534:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1696,
                      "src": "13534:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2049,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1685,
                        "src": "13551:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 2050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Approved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13551:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "13534:47:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 2052,
                  "nodeType": "ExpressionStatement",
                  "src": "13534:47:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2054,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1960,
                        "src": "13617:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2053,
                      "name": "ExchangeProposalApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1647,
                      "src": "13592:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13592:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2056,
                  "nodeType": "EmitStatement",
                  "src": "13587:41:9"
                }
              ]
            },
            "documentation": "@notice Approves an existing exchange proposal.\n@dev Sender must be the approver. Exchange proposal must be in the Proposed state.\n@param proposalId The identifier of the proposal to approve.",
            "id": 2058,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1963,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1962,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9647,
                  "src": "12386:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12386:12:9"
              },
              {
                "arguments": null,
                "id": 1965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1964,
                  "name": "onlyApprover",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1742,
                  "src": "12399:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12399:12:9"
              }
            ],
            "name": "approveExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1960,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "12357:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12357:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12356:20:9"
            },
            "returnParameters": {
              "id": 1966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12412:0:9"
            },
            "scope": 2699,
            "src": "12324:1309:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2134,
              "nodeType": "Block",
              "src": "13973:1105:9",
              "statements": [
                {
                  "assignments": [
                    2066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2066,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 2134,
                      "src": "13979:33:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2065,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1709,
                        "src": "13979:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2070,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2067,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "14015:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 2069,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2068,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2060,
                      "src": "14033:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14015:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13979:65:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    },
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2071,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2066,
                        "src": "14232:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1696,
                      "src": "14232:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2073,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1685,
                        "src": "14250:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 2074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Proposed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14250:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "14232:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      },
                      "id": 2090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2086,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2066,
                          "src": "14376:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 2087,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1696,
                        "src": "14376:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2088,
                          "name": "ExchangeProposalState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "14394:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                            "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                          }
                        },
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Approved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14394:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        }
                      },
                      "src": "14376:48:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 2102,
                      "nodeType": "Block",
                      "src": "14489:71:9",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "50726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465",
                                "id": 2099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14504:48:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_91d3ace944acdf7d687a846eb2b5661f450ab871065be0f62adfff3bbd59ffb4",
                                  "typeString": "literal_string \"Proposal must be in Proposed or Approved state\""
                                },
                                "value": "Proposal must be in Proposed or Approved state"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_91d3ace944acdf7d687a846eb2b5661f450ab871065be0f62adfff3bbd59ffb4",
                                  "typeString": "literal_string \"Proposal must be in Proposed or Approved state\""
                                }
                              ],
                              "id": 2098,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                14228,
                                14229
                              ],
                              "referencedDeclaration": 14229,
                              "src": "14497:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14497:56:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2101,
                          "nodeType": "ExpressionStatement",
                          "src": "14497:56:9"
                        }
                      ]
                    },
                    "id": 2103,
                    "nodeType": "IfStatement",
                    "src": "14372:188:9",
                    "trueBody": {
                      "id": 2097,
                      "nodeType": "Block",
                      "src": "14426:57:9",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2092,
                                  "name": "isOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 344,
                                  "src": "14442:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 2093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14442:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "53656e646572206d757374206265206f776e6572",
                                "id": 2094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14453:22:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_404c2168553dbdc824a22b8a75a593b364cc920eebfd6e09e56793693e59f693",
                                  "typeString": "literal_string \"Sender must be owner\""
                                },
                                "value": "Sender must be owner"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_404c2168553dbdc824a22b8a75a593b364cc920eebfd6e09e56793693e59f693",
                                  "typeString": "literal_string \"Sender must be owner\""
                                }
                              ],
                              "id": 2091,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "src": "14434:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14434:42:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2096,
                          "nodeType": "ExpressionStatement",
                          "src": "14434:42:9"
                        }
                      ]
                    }
                  },
                  "id": 2104,
                  "nodeType": "IfStatement",
                  "src": "14228:332:9",
                  "trueBody": {
                    "id": 2085,
                    "nodeType": "Block",
                    "src": "14282:84:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "id": 2081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2077,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2066,
                                  "src": "14298:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                    "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                  }
                                },
                                "id": 2078,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exchanger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1692,
                                "src": "14298:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2079,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14223,
                                  "src": "14320:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "14320:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "14298:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e646572206d7573742062652065786368616e676572",
                              "id": 2082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14332:26:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d0878d974f3ca893a13f341842199f45ffc8b0363faa926f8cac59e4e0ccf82",
                                "typeString": "literal_string \"Sender must be exchanger\""
                              },
                              "value": "Sender must be exchanger"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d0878d974f3ca893a13f341842199f45ffc8b0363faa926f8cac59e4e0ccf82",
                                "typeString": "literal_string \"Sender must be exchanger\""
                              }
                            ],
                            "id": 2076,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              14226,
                              14227
                            ],
                            "referencedDeclaration": 14227,
                            "src": "14290:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14290:69:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2084,
                        "nodeType": "ExpressionStatement",
                        "src": "14290:69:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2105,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2066,
                        "src": "14662:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1696,
                      "src": "14662:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2108,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1685,
                        "src": "14679:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 2109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14679:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "14662:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 2111,
                  "nodeType": "ExpressionStatement",
                  "src": "14662:48:9"
                },
                {
                  "assignments": [
                    2113,
                    2115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2113,
                      "name": "refundToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2134,
                      "src": "14788:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$469",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2112,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 469,
                        "src": "14788:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2115,
                      "name": "refundAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2134,
                      "src": "14808:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14808:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2119,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2117,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2066,
                        "src": "14858:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      ],
                      "id": 2116,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2318,
                      "src": "14832:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$1709_memory_ptr_$returns$_t_contract$_IERC20_$469_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 2118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14832:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$469_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14787:80:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2123,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2066,
                              "src": "14952:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                              }
                            },
                            "id": 2124,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchanger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1692,
                            "src": "14952:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2125,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2115,
                            "src": "14972:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2121,
                            "name": "refundToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2113,
                            "src": "14931:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$469",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 423,
                          "src": "14931:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14931:54:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c6564",
                        "id": 2127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14987:37:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9a882f5283dfc7ded7f8414ccb91e66df6245ba57228b30beb7da35984b0f40",
                          "typeString": "literal_string \"Transfer out of refund token failed\""
                        },
                        "value": "Transfer out of refund token failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9a882f5283dfc7ded7f8414ccb91e66df6245ba57228b30beb7da35984b0f40",
                          "typeString": "literal_string \"Transfer out of refund token failed\""
                        }
                      ],
                      "id": 2120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "14923:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14923:102:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2129,
                  "nodeType": "ExpressionStatement",
                  "src": "14923:102:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2131,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2060,
                        "src": "15062:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2130,
                      "name": "ExchangeProposalCancelled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1651,
                      "src": "15036:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15036:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2133,
                  "nodeType": "EmitStatement",
                  "src": "15031:42:9"
                }
              ]
            },
            "documentation": "@notice Cancels an exchange proposal.\n@dev Only callable by the exchanger if the proposal is in the Proposed state\nor the owner if the proposal is in the Approved state.\n@param proposalId The identifier of the proposal to cancel.",
            "id": 2135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2063,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2062,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9647,
                  "src": "13960:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13960:12:9"
              }
            ],
            "name": "cancelExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2060,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2135,
                  "src": "13931:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13931:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13930:20:9"
            },
            "returnParameters": {
              "id": 2064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13973:0:9"
            },
            "scope": 2699,
            "src": "13899:1179:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2243,
              "nodeType": "Block",
              "src": "15465:1793:9",
              "statements": [
                {
                  "assignments": [
                    2143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2143,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "15471:33:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2142,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1709,
                        "src": "15471:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2147,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2144,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "15507:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 2146,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2145,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2137,
                      "src": "15525:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15507:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15471:65:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        },
                        "id": 2153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2149,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "15609:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                            }
                          },
                          "id": 2150,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1696,
                          "src": "15609:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2151,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "15627:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 2152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Approved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15627:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "src": "15609:48:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f706f73616c206d75737420626520696e20417070726f766564207374617465",
                        "id": 2154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15659:36:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6492cca35e68d90b1c479734012d7c4759c952cfee1ac9ddb401bb3fff651638",
                          "typeString": "literal_string \"Proposal must be in Approved state\""
                        },
                        "value": "Proposal must be in Approved state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6492cca35e68d90b1c479734012d7c4759c952cfee1ac9ddb401bb3fff651638",
                          "typeString": "literal_string \"Proposal must be in Approved state\""
                        }
                      ],
                      "id": 2148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "15601:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15601:95:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "15601:95:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2161,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2143,
                                "src": "15814:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              },
                              "id": 2162,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vetoPeriodSeconds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1706,
                              "src": "15814:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2158,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2143,
                                "src": "15783:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              },
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvalTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1708,
                              "src": "15783:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 122,
                            "src": "15783:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15783:58:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2164,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14213,
                            "src": "15845:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15845:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15783:77:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5665746f20706572696f64206e6f7420656c6170736564",
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15862:25:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9adb9325f97705d5387db63be73967a449629e33d2c0e1b56671067dfa3d14f",
                          "typeString": "literal_string \"Veto period not elapsed\""
                        },
                        "value": "Veto period not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9adb9325f97705d5387db63be73967a449629e33d2c0e1b56671067dfa3d14f",
                          "typeString": "literal_string \"Veto period not elapsed\""
                        }
                      ],
                      "id": 2157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "15775:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15775:113:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2169,
                  "nodeType": "ExpressionStatement",
                  "src": "15775:113:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2170,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "15991:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1696,
                      "src": "15991:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2173,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1685,
                        "src": "16008:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 2174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16008:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "15991:47:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 2176,
                  "nodeType": "ExpressionStatement",
                  "src": "15991:47:9"
                },
                {
                  "assignments": [
                    2178,
                    2180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2178,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "16074:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$469",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2177,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 469,
                        "src": "16074:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2180,
                      "name": "sellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "16092:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16092:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2184,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2182,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "16140:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      ],
                      "id": 2181,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2318,
                      "src": "16114:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$1709_memory_ptr_$returns$_t_contract$_IERC20_$469_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16114:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$469_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16073:76:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2185,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2143,
                      "src": "16297:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                      }
                    },
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellCelo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1698,
                    "src": "16297:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2237,
                    "nodeType": "Block",
                    "src": "16668:539:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2220,
                                  "name": "sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2180,
                                  "src": "16940:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2216,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2143,
                                        "src": "16913:8:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                        }
                                      },
                                      "id": 2217,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stableToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1694,
                                      "src": "16913:20:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2215,
                                    "name": "IStableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14142,
                                    "src": "16900:12:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStableToken_$14142_$",
                                      "typeString": "type(contract IStableToken)"
                                    }
                                  },
                                  "id": 2218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16900:34:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableToken_$14142",
                                    "typeString": "contract IStableToken"
                                  }
                                },
                                "id": 2219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "burn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14102,
                                "src": "16900:39:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) external returns (bool)"
                                }
                              },
                              "id": 2221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16900:51:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "537461626c6520746f6b656e206275726e206661696c6564",
                              "id": 2222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16953:26:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_efec162428556da2b45d085c1a911c7ef180d0382abc4781aed63a8187c50108",
                                "typeString": "literal_string \"Stable token burn failed\""
                              },
                              "value": "Stable token burn failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_efec162428556da2b45d085c1a911c7ef180d0382abc4781aed63a8187c50108",
                                "typeString": "literal_string \"Stable token burn failed\""
                              }
                            ],
                            "id": 2214,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              14226,
                              14227
                            ],
                            "referencedDeclaration": 14227,
                            "src": "16892:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16892:88:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2224,
                        "nodeType": "ExpressionStatement",
                        "src": "16892:88:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2229,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2143,
                                    "src": "17101:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 2230,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchanger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1692,
                                  "src": "17101:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2231,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2143,
                                    "src": "17121:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 2232,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1702,
                                  "src": "17121:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2226,
                                    "name": "getReserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10779,
                                    "src": "17067:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IReserve_$14008_$",
                                      "typeString": "function () view returns (contract IReserve)"
                                    }
                                  },
                                  "id": 2227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17067:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IReserve_$14008",
                                    "typeString": "contract IReserve"
                                  }
                                },
                                "id": 2228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferExchangeGold",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 13957,
                                "src": "17067:33:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address payable,uint256) external returns (bool)"
                                }
                              },
                              "id": 2233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17067:73:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c6564",
                              "id": 2234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17150:42:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3166ce0190dbb91e92210474c455f5511f5a0a878da93f4f966137efc12b895",
                                "typeString": "literal_string \"Transfer out of CELO from Reserve failed\""
                              },
                              "value": "Transfer out of CELO from Reserve failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b3166ce0190dbb91e92210474c455f5511f5a0a878da93f4f966137efc12b895",
                                "typeString": "literal_string \"Transfer out of CELO from Reserve failed\""
                              }
                            ],
                            "id": 2225,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              14226,
                              14227
                            ],
                            "referencedDeclaration": 14227,
                            "src": "17050:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17050:150:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2236,
                        "nodeType": "ExpressionStatement",
                        "src": "17050:150:9"
                      }
                    ]
                  },
                  "id": 2238,
                  "nodeType": "IfStatement",
                  "src": "16293:914:9",
                  "trueBody": {
                    "id": 2213,
                    "nodeType": "Block",
                    "src": "16316:346:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2191,
                                        "name": "getReserve",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10779,
                                        "src": "16417:10:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IReserve_$14008_$",
                                          "typeString": "function () view returns (contract IReserve)"
                                        }
                                      },
                                      "id": 2192,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16417:12:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IReserve_$14008",
                                        "typeString": "contract IReserve"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IReserve_$14008",
                                        "typeString": "contract IReserve"
                                      }
                                    ],
                                    "id": 2190,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16409:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 2193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16409:21:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2194,
                                  "name": "sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2180,
                                  "src": "16432:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2188,
                                  "name": "sellToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2178,
                                  "src": "16390:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$469",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 423,
                                "src": "16390:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16390:53:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c6564",
                              "id": 2196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16445:40:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6fc922853d1b52a948a9059e822d355fcf8ace00967171f83e0cd00d5de8b72b",
                                "typeString": "literal_string \"Transfer out of CELO to Reserve failed\""
                              },
                              "value": "Transfer out of CELO to Reserve failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6fc922853d1b52a948a9059e822d355fcf8ace00967171f83e0cd00d5de8b72b",
                                "typeString": "literal_string \"Transfer out of CELO to Reserve failed\""
                              }
                            ],
                            "id": 2187,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              14226,
                              14227
                            ],
                            "referencedDeclaration": 14227,
                            "src": "16382:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16382:104:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2198,
                        "nodeType": "ExpressionStatement",
                        "src": "16382:104:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2205,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2143,
                                    "src": "16587:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 2206,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchanger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1692,
                                  "src": "16587:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2207,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2143,
                                    "src": "16607:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 2208,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1702,
                                  "src": "16607:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2201,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2143,
                                        "src": "16560:8:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                        }
                                      },
                                      "id": 2202,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stableToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1694,
                                      "src": "16560:20:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2200,
                                    "name": "IStableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14142,
                                    "src": "16547:12:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStableToken_$14142_$",
                                      "typeString": "type(contract IStableToken)"
                                    }
                                  },
                                  "id": 2203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16547:34:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableToken_$14142",
                                    "typeString": "contract IStableToken"
                                  }
                                },
                                "id": 2204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14095,
                                "src": "16547:39:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16547:79:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "537461626c6520746f6b656e206d696e74206661696c6564",
                              "id": 2210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16628:26:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5e1b1f0876e7b6c87ca8770e27a0603b7f7c4f2716d8c02c9fb21d8065e1d99",
                                "typeString": "literal_string \"Stable token mint failed\""
                              },
                              "value": "Stable token mint failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5e1b1f0876e7b6c87ca8770e27a0603b7f7c4f2716d8c02c9fb21d8065e1d99",
                                "typeString": "literal_string \"Stable token mint failed\""
                              }
                            ],
                            "id": 2199,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              14226,
                              14227
                            ],
                            "referencedDeclaration": 14227,
                            "src": "16539:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16539:116:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2212,
                        "nodeType": "ExpressionStatement",
                        "src": "16539:116:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2137,
                        "src": "17242:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2239,
                      "name": "ExchangeProposalExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "17217:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17217:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2242,
                  "nodeType": "EmitStatement",
                  "src": "17212:41:9"
                }
              ]
            },
            "documentation": "@notice Executes an exchange proposal that's been approved and not vetoed.\n@dev Callable by anyone. Reverts if the proposal is not in the Approved state\nor proposal.vetoPeriodSeconds has not elapsed since approval.\n@param proposalId The identifier of the proposal to execute.",
            "id": 2244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2140,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2139,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9647,
                  "src": "15452:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15452:12:9"
              }
            ],
            "name": "executeExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2137,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2244,
                  "src": "15423:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15423:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15422:20:9"
            },
            "returnParameters": {
              "id": 2141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15465:0:9"
            },
            "scope": 2699,
            "src": "15390:1868:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2317,
              "nodeType": "Block",
              "src": "17759:1106:9",
              "statements": [
                {
                  "assignments": [
                    2254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2254,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 2317,
                      "src": "17765:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$469",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2253,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 469,
                        "src": "17765:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2255,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17765:16:9"
                },
                {
                  "assignments": [
                    2257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2257,
                      "name": "sellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2317,
                      "src": "17787:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17787:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2258,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17787:18:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2259,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2246,
                      "src": "17815:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$1709_memory_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal memory"
                      }
                    },
                    "id": 2260,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellCelo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1698,
                    "src": "17815:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2293,
                    "nodeType": "Block",
                    "src": "17921:305:9",
                    "statements": [
                      {
                        "assignments": [
                          2273
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2273,
                            "name": "stableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 2293,
                            "src": "17929:19:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2272,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17929:7:9",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2276,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2274,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2246,
                            "src": "17951:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$1709_memory_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal memory"
                            }
                          },
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stableToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1694,
                          "src": "17951:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17929:42:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2277,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2254,
                            "src": "17979:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$469",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2279,
                                "name": "stableToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2273,
                                "src": "17998:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2278,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "17991:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$469_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17991:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$469",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "17979:31:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$469",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2282,
                        "nodeType": "ExpressionStatement",
                        "src": "17979:31:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2283,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2257,
                            "src": "18147:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2288,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2246,
                                  "src": "18199:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeProposal_$1709_memory_ptr",
                                    "typeString": "struct GrandaMento.ExchangeProposal memory"
                                  }
                                },
                                "id": 2289,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sellAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1700,
                                "src": "18199:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2285,
                                    "name": "stableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2273,
                                    "src": "18173:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2284,
                                  "name": "IStableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14142,
                                  "src": "18160:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IStableToken_$14142_$",
                                    "typeString": "type(contract IStableToken)"
                                  }
                                },
                                "id": 2286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18160:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStableToken_$14142",
                                  "typeString": "contract IStableToken"
                                }
                              },
                              "id": 2287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "unitsToValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14123,
                              "src": "18160:38:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 2290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18160:59:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18147:72:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2292,
                        "nodeType": "ExpressionStatement",
                        "src": "18147:72:9"
                      }
                    ]
                  },
                  "id": 2294,
                  "nodeType": "IfStatement",
                  "src": "17811:415:9",
                  "trueBody": {
                    "id": 2271,
                    "nodeType": "Block",
                    "src": "17834:81:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2261,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2254,
                            "src": "17842:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$469",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2262,
                              "name": "getGoldToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10766,
                              "src": "17854:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$469_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 2263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17854:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$469",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "17842:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$469",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2265,
                        "nodeType": "ExpressionStatement",
                        "src": "17842:26:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2266,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2257,
                            "src": "17876:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2267,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2246,
                              "src": "17889:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$1709_memory_ptr",
                                "typeString": "struct GrandaMento.ExchangeProposal memory"
                              }
                            },
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1700,
                            "src": "17889:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17876:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2270,
                        "nodeType": "ExpressionStatement",
                        "src": "17876:32:9"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2296,
                      "name": "totalBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2317,
                      "src": "18691:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18691:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2303,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2300,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14279,
                            "src": "18742:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GrandaMento_$2699",
                              "typeString": "contract GrandaMento"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GrandaMento_$2699",
                              "typeString": "contract GrandaMento"
                            }
                          ],
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18734:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18734:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2297,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "18714:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$469",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 414,
                      "src": "18714:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18714:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18691:57:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2304,
                      "name": "totalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2296,
                      "src": "18758:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2305,
                      "name": "sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2257,
                      "src": "18773:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18758:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2312,
                  "nodeType": "IfStatement",
                  "src": "18754:71:9",
                  "trueBody": {
                    "id": 2311,
                    "nodeType": "Block",
                    "src": "18785:40:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2307,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2257,
                            "src": "18793:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2308,
                            "name": "totalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2296,
                            "src": "18806:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18793:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2310,
                        "nodeType": "ExpressionStatement",
                        "src": "18793:25:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 2313,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2254,
                        "src": "18838:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$469",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2314,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "18849:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2315,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18837:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$469_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "functionReturnParameters": 2252,
                  "id": 2316,
                  "nodeType": "Return",
                  "src": "18830:30:9"
                }
              ]
            },
            "documentation": "@notice Gets the sell token and the sell amount for a proposal.\n@dev For stable token sell amounts that are stored as units, the value\nis returned. Ensures sell amount is not greater than this contract's balance.\n@param proposal The proposal to get the sell token and sell amount for.\n@return The IERC20 sell token.\n@return The value sell amount.",
            "id": 2318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSellTokenAndSellAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2246,
                  "name": "proposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 2318,
                  "src": "17686:32:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeProposal_$1709_memory_ptr",
                    "typeString": "struct GrandaMento.ExchangeProposal"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2245,
                    "name": "ExchangeProposal",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1709,
                    "src": "17686:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                      "typeString": "struct GrandaMento.ExchangeProposal"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17685:34:9"
            },
            "returnParameters": {
              "id": 2252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2318,
                  "src": "17742:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$469",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2248,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 469,
                    "src": "17742:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$469",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2251,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2318,
                  "src": "17750:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17750:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17741:17:9"
            },
            "scope": 2699,
            "src": "17651:1214:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2372,
              "nodeType": "Block",
              "src": "19563:650:9",
              "statements": [
                {
                  "assignments": [
                    2332
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2332,
                      "name": "exchangeRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 2372,
                      "src": "19569:40:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2331,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6931,
                        "src": "19569:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2337,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2335,
                        "name": "celoStableTokenExchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2320,
                        "src": "19629:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2333,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7530,
                        "src": "19612:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 2334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6964,
                      "src": "19612:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 2336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19612:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19569:88:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "19764:9:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 2338,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2324,
                      "src": "19765:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2347,
                  "nodeType": "IfStatement",
                  "src": "19760:70:9",
                  "trueBody": {
                    "id": 2346,
                    "nodeType": "Block",
                    "src": "19775:55:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2340,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2332,
                            "src": "19783:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2341,
                                "name": "exchangeRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2332,
                                "src": "19798:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              },
                              "id": 2342,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reciprocal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7393,
                              "src": "19798:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_struct$_Fraction_$6931_memory_ptr_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                                "typeString": "function (struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 2343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19798:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "src": "19783:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 2345,
                        "nodeType": "ExpressionStatement",
                        "src": "19783:40:9"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2351
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2351,
                      "name": "adjustedSellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 2372,
                      "src": "19927:46:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2350,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 6931,
                        "src": "19927:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2364,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2361,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "20051:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2359,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7530,
                            "src": "20030:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 2360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newFixed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7013,
                          "src": "20030:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 2362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20030:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2356,
                            "name": "spread",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "20006:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2352,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7530,
                                "src": "19976:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 2353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6952,
                              "src": "19976:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 2354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19976:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 2355,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subtract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7149,
                          "src": "19976:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_struct$_Fraction_$6931_memory_ptr_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 2357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19976:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 2358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multiply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7367,
                      "src": "19976:46:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_struct$_Fraction_$6931_memory_ptr_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 2363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19976:92:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19927:141:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2367,
                            "name": "adjustedSellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2351,
                            "src": "20177:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2365,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2332,
                            "src": "20155:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 2366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "multiply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7367,
                          "src": "20155:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_struct$_Fraction_$6931_memory_ptr_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 2368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20155:41:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 2369,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromFixed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7026,
                      "src": "20155:51:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20155:53:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2328,
                  "id": 2371,
                  "nodeType": "Return",
                  "src": "20148:60:9"
                }
              ]
            },
            "documentation": "@notice Using the oracle price, charges the spread and calculates the amount of\nthe asset being bought.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\nAssumes both CELO and the stable token have 18 decimals.\n@param celoStableTokenExchangeRate The unwrapped fraction exchange rate of CELO\nquoted in the stable token.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The amount of the asset being bought.",
            "id": 2373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBuyAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2320,
                  "name": "celoStableTokenExchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "19450:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19450:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2322,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "19491:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19491:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2324,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "19515:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19515:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19444:88:9"
            },
            "returnParameters": {
              "id": 2328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2327,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2373,
                  "src": "19554:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19554:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19553:9:9"
            },
            "scope": 2699,
            "src": "19423:790:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2437,
              "nodeType": "Block",
              "src": "20597:767:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2379,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2375,
                          "src": "20611:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2380,
                            "name": "activeProposalIdsSuperset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "20619:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20619:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20611:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e646578206f7574206f6620626f756e6473",
                        "id": 2383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20653:21:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        },
                        "value": "Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        }
                      ],
                      "id": 2378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "20603:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20603:72:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2385,
                  "nodeType": "ExpressionStatement",
                  "src": "20603:72:9"
                },
                {
                  "assignments": [
                    2387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2387,
                      "name": "proposalId",
                      "nodeType": "VariableDeclaration",
                      "scope": 2437,
                      "src": "20681:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20681:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2391,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2388,
                      "name": "activeProposalIdsSuperset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1728,
                      "src": "20702:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 2390,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2389,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "20728:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20702:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20681:53:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          "id": 2399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2393,
                                "name": "exchangeProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1725,
                                "src": "20808:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                                  "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                }
                              },
                              "id": 2395,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2394,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2387,
                                "src": "20826:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20808:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                                "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                              }
                            },
                            "id": 2396,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1696,
                            "src": "20808:35:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2397,
                              "name": "ExchangeProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "20847:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                                "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                              }
                            },
                            "id": 2398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Proposed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20847:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "src": "20808:69:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          "id": 2406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2400,
                                "name": "exchangeProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1725,
                                "src": "20889:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                                  "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                }
                              },
                              "id": 2402,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2401,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2387,
                                "src": "20907:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20889:29:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                                "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                              }
                            },
                            "id": 2403,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1696,
                            "src": "20889:35:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2404,
                              "name": "ExchangeProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "20928:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                                "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                              }
                            },
                            "id": 2405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20928:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "src": "20889:69:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20808:150:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45786368616e67652070726f706f73616c206e6f7420696e616374697665",
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20966:32:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56c29c7b37ffda0688125b531f5db03c5503cc91e651368e4740314f6992c046",
                          "typeString": "literal_string \"Exchange proposal not inactive\""
                        },
                        "value": "Exchange proposal not inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56c29c7b37ffda0688125b531f5db03c5503cc91e651368e4740314f6992c046",
                          "typeString": "literal_string \"Exchange proposal not inactive\""
                        }
                      ],
                      "id": 2392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "20793:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20793:211:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "20793:211:9"
                },
                {
                  "assignments": [
                    2412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2412,
                      "name": "lastIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 2437,
                      "src": "21114:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21114:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2418,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 2416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21171:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2413,
                          "name": "activeProposalIdsSuperset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1728,
                          "src": "21134:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 2414,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "21134:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 138,
                      "src": "21134:36:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21134:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21114:59:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2419,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "21183:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2420,
                      "name": "lastIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "21191:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21183:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2431,
                  "nodeType": "IfStatement",
                  "src": "21179:109:9",
                  "trueBody": {
                    "id": 2430,
                    "nodeType": "Block",
                    "src": "21202:86:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2422,
                              "name": "activeProposalIdsSuperset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1728,
                              "src": "21210:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2424,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2423,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2375,
                              "src": "21236:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21210:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2425,
                              "name": "activeProposalIdsSuperset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1728,
                              "src": "21245:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 2427,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2426,
                              "name": "lastIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "21271:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21245:36:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21210:71:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2429,
                        "nodeType": "ExpressionStatement",
                        "src": "21210:71:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "21325:34:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2432,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "21325:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2434,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "21325:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2436,
                  "nodeType": "ExpressionStatement",
                  "src": "21325:34:9"
                }
              ]
            },
            "documentation": "@notice Removes the proposal ID found at the provided index of activeProposalIdsSuperset\nif the exchange proposal is not active.\n@dev Anyone can call. Reverts if the exchange proposal is active.\n@param index The index of the proposal ID to remove from activeProposalIdsSuperset.",
            "id": 2438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromActiveProposalIdsSuperset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2375,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 2438,
                  "src": "20573:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20573:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20572:15:9"
            },
            "returnParameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20597:0:9"
            },
            "scope": 2699,
            "src": "20528:836:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2503,
              "nodeType": "Block",
              "src": "21786:741:9",
              "statements": [
                {
                  "assignments": [
                    2447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2447,
                      "name": "activeProposalIds",
                      "nodeType": "VariableDeclaration",
                      "scope": 2503,
                      "src": "22035:34:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2445,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22035:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2446,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "22035:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2454,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2451,
                          "name": "activeProposalIdsSuperset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1728,
                          "src": "22086:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 2452,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "22086:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "22072:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22076:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2449,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "22076:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22072:47:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22035:84:9"
                },
                {
                  "body": {
                    "id": 2499,
                    "nodeType": "Block",
                    "src": "22198:295:9",
                    "statements": [
                      {
                        "assignments": [
                          2471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2471,
                            "name": "proposalId",
                            "nodeType": "VariableDeclaration",
                            "scope": 2499,
                            "src": "22206:18:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22206:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2475,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2472,
                            "name": "activeProposalIdsSuperset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "22227:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 2474,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2473,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2456,
                            "src": "22253:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22227:28:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22206:49:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            },
                            "id": 2482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2476,
                                  "name": "exchangeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1725,
                                  "src": "22276:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                                    "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                  }
                                },
                                "id": 2478,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2477,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2471,
                                  "src": "22294:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22276:29:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                                }
                              },
                              "id": 2479,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1696,
                              "src": "22276:35:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2480,
                                "name": "ExchangeProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1685,
                                "src": "22315:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                                  "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                                }
                              },
                              "id": 2481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Proposed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22315:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "src": "22276:69:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            },
                            "id": 2489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 2483,
                                  "name": "exchangeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1725,
                                  "src": "22357:17:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$1709_storage_$",
                                    "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                  }
                                },
                                "id": 2485,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 2484,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2471,
                                  "src": "22375:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22357:29:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                                }
                              },
                              "id": 2486,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1696,
                              "src": "22357:35:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2487,
                                "name": "ExchangeProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1685,
                                "src": "22396:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$1685_$",
                                  "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                                }
                              },
                              "id": 2488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Approved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22396:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "src": "22357:69:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22276:150:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2498,
                        "nodeType": "IfStatement",
                        "src": "22263:224:9",
                        "trueBody": {
                          "id": 2497,
                          "nodeType": "Block",
                          "src": "22435:52:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2491,
                                    "name": "activeProposalIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2447,
                                    "src": "22445:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 2493,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2492,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2456,
                                    "src": "22463:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22445:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2494,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2471,
                                  "src": "22468:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22445:33:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2496,
                              "nodeType": "ExpressionStatement",
                              "src": "22445:33:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2459,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2456,
                      "src": "22146:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2460,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1728,
                        "src": "22150:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 2461,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "22150:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22146:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2500,
                  "initializationExpression": {
                    "assignments": [
                      2456
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2456,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2500,
                        "src": "22131:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22131:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2458,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22143:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "22131:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 2463,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2456,
                        "src": "22184:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22194:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2464,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2456,
                            "src": "22188:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 122,
                          "src": "22188:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22188:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22184:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2469,
                    "nodeType": "ExpressionStatement",
                    "src": "22184:12:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "22126:367:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2501,
                    "name": "activeProposalIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2447,
                    "src": "22505:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 2443,
                  "id": 2502,
                  "nodeType": "Return",
                  "src": "22498:24:9"
                }
              ]
            },
            "documentation": "@notice Gets the proposal identifiers of exchange proposals in the\nProposed or Approved state. Returns a version of activeProposalIdsSuperset\nwith inactive proposal IDs set as 0.\n@dev Elements with a proposal ID of 0 should be filtered out by the consumer.\n@return An array of active exchange proposals IDs.",
            "id": 2504,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveProposalIds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21742:2:9"
            },
            "returnParameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2442,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2504,
                  "src": "21768:16:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2440,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21768:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2441,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21768:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21767:18:9"
            },
            "scope": 2699,
            "src": "21713:814:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2545,
              "nodeType": "Block",
              "src": "22919:387:9",
              "statements": [
                {
                  "assignments": [
                    2512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2512,
                      "name": "rateNumerator",
                      "nodeType": "VariableDeclaration",
                      "scope": 2545,
                      "src": "22925:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22925:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2513,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22925:21:9"
                },
                {
                  "assignments": [
                    2515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2515,
                      "name": "rateDenominator",
                      "nodeType": "VariableDeclaration",
                      "scope": 2545,
                      "src": "22952:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2514,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22952:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2516,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22952:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 2517,
                          "name": "rateNumerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2512,
                          "src": "22982:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2518,
                          "name": "rateDenominator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2515,
                          "src": "22997:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2519,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "22981:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2523,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2506,
                          "src": "23046:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2520,
                            "name": "getSortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10792,
                            "src": "23016:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ISortedOracles_$14084_$",
                              "typeString": "function () view returns (contract ISortedOracles)"
                            }
                          },
                          "id": 2521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23016:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISortedOracles_$14084",
                            "typeString": "contract ISortedOracles"
                          }
                        },
                        "id": 2522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "medianRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14069,
                        "src": "23016:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 2524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23016:42:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "22981:77:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2526,
                  "nodeType": "ExpressionStatement",
                  "src": "22981:77:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2528,
                          "name": "rateDenominator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2515,
                          "src": "23158:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23176:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23158:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e",
                        "id": 2531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23179:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7367d7d56c5f8cec11d2f702a1fadc61ae1a809eeeb3a70092f20e50e401cf7",
                          "typeString": "literal_string \"No oracle rates present for token\""
                        },
                        "value": "No oracle rates present for token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7367d7d56c5f8cec11d2f702a1fadc61ae1a809eeeb3a70092f20e50e401cf7",
                          "typeString": "literal_string \"No oracle rates present for token\""
                        }
                      ],
                      "id": 2527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "23150:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23150:65:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2533,
                  "nodeType": "ExpressionStatement",
                  "src": "23150:65:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2541,
                            "name": "rateDenominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2515,
                            "src": "23284:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2539,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7530,
                            "src": "23267:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 2540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6964,
                          "src": "23267:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 2542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23267:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2536,
                            "name": "rateNumerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2512,
                            "src": "23245:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2534,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7530,
                            "src": "23228:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 2535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6964,
                          "src": "23228:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 2537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23228:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 2538,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divide",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7435,
                      "src": "23228:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_struct$_Fraction_$6931_memory_ptr_$bound_to$_t_struct$_Fraction_$6931_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 2543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23228:73:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "functionReturnParameters": 2510,
                  "id": 2544,
                  "nodeType": "Return",
                  "src": "23221:80:9"
                }
              ]
            },
            "documentation": "@notice Gets the oracle CELO price quoted in the stable token.\n@dev Reverts if there is not a rate for the provided stable token.\n@param stableToken The stable token to get the oracle price for.\n@return The oracle CELO price quoted in the stable token.",
            "id": 2546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleExchangeRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2506,
                  "name": "stableToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 2546,
                  "src": "22847:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22847:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22846:21:9"
            },
            "returnParameters": {
              "id": 2510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2509,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2546,
                  "src": "22890:27:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                    "typeString": "struct FixidityLib.Fraction"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2508,
                    "name": "FixidityLib.Fraction",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6931,
                    "src": "22890:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_storage_ptr",
                      "typeString": "struct FixidityLib.Fraction"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22889:29:9"
            },
            "scope": 2699,
            "src": "22816:490:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2575,
              "nodeType": "Block",
              "src": "23785:442:9",
              "statements": [
                {
                  "assignments": [
                    2556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2556,
                      "name": "exchangeLimits",
                      "nodeType": "VariableDeclaration",
                      "scope": 2575,
                      "src": "23791:36:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$1690_memory_ptr",
                        "typeString": "struct GrandaMento.ExchangeLimits"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2555,
                        "name": "ExchangeLimits",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1690,
                        "src": "23791:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeLimits_$1690_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeLimits"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2560,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2557,
                      "name": "stableTokenExchangeLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1721,
                      "src": "23830:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$1690_storage_$",
                        "typeString": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)"
                      }
                    },
                    "id": 2559,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2558,
                      "name": "stableTokenRegistryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2548,
                      "src": "23856:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23830:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeLimits_$1690_storage",
                      "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23791:87:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2562,
                            "name": "exchangeLimits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2556,
                            "src": "24052:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeLimits_$1690_memory_ptr",
                              "typeString": "struct GrandaMento.ExchangeLimits memory"
                            }
                          },
                          "id": 2563,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxExchangeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1689,
                          "src": "24052:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24087:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24052:36:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e6564",
                        "id": 2566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24090:50:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79c687fe29e1c0c528f93c98d274726b3cd9195311965a3aaec2f4a0bc06595a",
                          "typeString": "literal_string \"Max stable token exchange amount must be defined\""
                        },
                        "value": "Max stable token exchange amount must be defined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79c687fe29e1c0c528f93c98d274726b3cd9195311965a3aaec2f4a0bc06595a",
                          "typeString": "literal_string \"Max stable token exchange amount must be defined\""
                        }
                      ],
                      "id": 2561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "24044:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24044:97:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2568,
                  "nodeType": "ExpressionStatement",
                  "src": "24044:97:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2569,
                          "name": "exchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2556,
                          "src": "24155:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeLimits_$1690_memory_ptr",
                            "typeString": "struct GrandaMento.ExchangeLimits memory"
                          }
                        },
                        "id": 2570,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minExchangeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1687,
                        "src": "24155:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2571,
                          "name": "exchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2556,
                          "src": "24189:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeLimits_$1690_memory_ptr",
                            "typeString": "struct GrandaMento.ExchangeLimits memory"
                          }
                        },
                        "id": 2572,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxExchangeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1689,
                        "src": "24189:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2573,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24154:68:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 2554,
                  "id": 2574,
                  "nodeType": "Return",
                  "src": "24147:75:9"
                }
              ]
            },
            "documentation": "@notice Gets the minimum and maximum amount of a stable token that can be\ninvolved in a single exchange.\n@dev Reverts if there is no explicit exchange limit for the stable token.\n@param stableTokenRegistryId The string registry ID for the stable token.\n@return Minimum exchange amount.\n@return Maximum exchange amount.",
            "id": 2576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStableTokenExchangeLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2548,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2576,
                  "src": "23709:35:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23709:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23708:37:9"
            },
            "returnParameters": {
              "id": 2554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2551,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2576,
                  "src": "23767:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23767:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2553,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2576,
                  "src": "23776:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23776:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23766:18:9"
            },
            "scope": 2699,
            "src": "23671:556:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2591,
              "nodeType": "Block",
              "src": "24464:68:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2583,
                      "name": "approver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1711,
                      "src": "24470:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2584,
                      "name": "newApprover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2578,
                      "src": "24481:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24470:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2586,
                  "nodeType": "ExpressionStatement",
                  "src": "24470:22:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2588,
                        "name": "newApprover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2578,
                        "src": "24515:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2587,
                      "name": "ApproverSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1659,
                      "src": "24503:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24503:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2590,
                  "nodeType": "EmitStatement",
                  "src": "24498:29:9"
                }
              ]
            },
            "documentation": "@notice Sets the approver.\n@dev Sender must be owner. New approver is allowed to be address(0).\n@param newApprover The new value for the approver.",
            "id": 2592,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2581,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2580,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "24454:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24454:9:9"
              }
            ],
            "name": "setApprover",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2578,
                  "name": "newApprover",
                  "nodeType": "VariableDeclaration",
                  "scope": 2592,
                  "src": "24426:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24426:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24425:21:9"
            },
            "returnParameters": {
              "id": 2582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24464:0:9"
            },
            "scope": 2699,
            "src": "24405:127:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2610,
              "nodeType": "Block",
              "src": "24977:170:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2599,
                      "name": "maxApprovalExchangeRateChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1713,
                      "src": "24983:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2602,
                          "name": "newMaxApprovalExchangeRateChange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2594,
                          "src": "25032:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2600,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "25015:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 2601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6964,
                        "src": "25015:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 2603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25015:50:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "24983:82:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 2605,
                  "nodeType": "ExpressionStatement",
                  "src": "24983:82:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2607,
                        "name": "newMaxApprovalExchangeRateChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2594,
                        "src": "25109:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2606,
                      "name": "MaxApprovalExchangeRateChangeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1663,
                      "src": "25076:32:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25076:66:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2609,
                  "nodeType": "EmitStatement",
                  "src": "25071:71:9"
                }
              ]
            },
            "documentation": "@notice Sets the maximum allowed change in the CELO/stable token price when\nan exchange proposal is being approved relative to the price when the proposal\nwas created.\n@dev Sender must be owner.\n@param newMaxApprovalExchangeRateChange The new value for maxApprovalExchangeRateChange\nto be wrapped.",
            "id": 2611,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2597,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2596,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "24967:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24967:9:9"
              }
            ],
            "name": "setMaxApprovalExchangeRateChange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2594,
                  "name": "newMaxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 2611,
                  "src": "24918:40:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24918:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24917:42:9"
            },
            "returnParameters": {
              "id": 2598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24977:0:9"
            },
            "scope": 2699,
            "src": "24876:271:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2640,
              "nodeType": "Block",
              "src": "25366:180:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2618,
                      "name": "spread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1715,
                      "src": "25372:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2621,
                          "name": "newSpread",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2613,
                          "src": "25398:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2619,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7530,
                          "src": "25381:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6964,
                        "src": "25381:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 2622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25381:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "25372:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 2624,
                  "nodeType": "ExpressionStatement",
                  "src": "25372:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2628,
                            "name": "spread",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1715,
                            "src": "25438:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2629,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7530,
                                "src": "25446:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 2630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6952,
                              "src": "25446:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$6931_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 2631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25446:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            },
                            {
                              "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2626,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7530,
                            "src": "25422:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$7530_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 2627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7499,
                          "src": "25422:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$6931_memory_ptr_$_t_struct$_Fraction_$6931_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 2632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25422:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537072656164206d757374206265206c657373207468616e206f7220657175616c20746f2031",
                        "id": 2633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25469:40:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8cd9288d85d45a1ac84eeea1a7f9ffb9fab81f22c951d7d7f489ccd85873d37",
                          "typeString": "literal_string \"Spread must be less than or equal to 1\""
                        },
                        "value": "Spread must be less than or equal to 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8cd9288d85d45a1ac84eeea1a7f9ffb9fab81f22c951d7d7f489ccd85873d37",
                          "typeString": "literal_string \"Spread must be less than or equal to 1\""
                        }
                      ],
                      "id": 2625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "25414:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25414:96:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2635,
                  "nodeType": "ExpressionStatement",
                  "src": "25414:96:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2637,
                        "name": "newSpread",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2613,
                        "src": "25531:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2636,
                      "name": "SpreadSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1667,
                      "src": "25521:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25521:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2639,
                  "nodeType": "EmitStatement",
                  "src": "25516:25:9"
                }
              ]
            },
            "documentation": "@notice Sets the spread.\n@dev Sender must be owner.\n@param newSpread The new value for the spread to be wrapped. Must be <= fixed 1.",
            "id": 2641,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2616,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2615,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "25356:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25356:9:9"
              }
            ],
            "name": "setSpread",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2613,
                  "name": "newSpread",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "25330:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25330:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25329:19:9"
            },
            "returnParameters": {
              "id": 2617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25366:0:9"
            },
            "scope": 2699,
            "src": "25311:235:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2674,
              "nodeType": "Block",
              "src": "26218:377:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2653,
                          "name": "minExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2645,
                          "src": "26232:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2654,
                          "name": "maxExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2647,
                          "src": "26253:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26232:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d6178",
                        "id": 2656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26272:50:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55b505c4d68020c2e891038105b4f4ecd9a61ba2e1c7341c64d391411c6f4c2e",
                          "typeString": "literal_string \"Min exchange amount must not be greater than max\""
                        },
                        "value": "Min exchange amount must not be greater than max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55b505c4d68020c2e891038105b4f4ecd9a61ba2e1c7341c64d391411c6f4c2e",
                          "typeString": "literal_string \"Min exchange amount must not be greater than max\""
                        }
                      ],
                      "id": 2652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "26224:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26224:99:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2658,
                  "nodeType": "ExpressionStatement",
                  "src": "26224:99:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2659,
                        "name": "stableTokenExchangeLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1721,
                        "src": "26329:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$1690_storage_$",
                          "typeString": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)"
                        }
                      },
                      "id": 2661,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2660,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "26355:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26329:48:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$1690_storage",
                        "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2663,
                          "name": "minExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2645,
                          "src": "26422:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2664,
                          "name": "maxExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2647,
                          "src": "26466:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2662,
                        "name": "ExchangeLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1690,
                        "src": "26380:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExchangeLimits_$1690_storage_ptr_$",
                          "typeString": "type(struct GrandaMento.ExchangeLimits storage pointer)"
                        }
                      },
                      "id": 2665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "minExchangeAmount",
                        "maxExchangeAmount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "26380:110:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$1690_memory",
                        "typeString": "struct GrandaMento.ExchangeLimits memory"
                      }
                    },
                    "src": "26329:161:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeLimits_$1690_storage",
                      "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                    }
                  },
                  "id": 2667,
                  "nodeType": "ExpressionStatement",
                  "src": "26329:161:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2669,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2643,
                        "src": "26530:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2670,
                        "name": "minExchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2645,
                        "src": "26553:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2671,
                        "name": "maxExchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2647,
                        "src": "26572:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2668,
                      "name": "StableTokenExchangeLimitsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1679,
                      "src": "26501:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 2672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26501:89:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2673,
                  "nodeType": "EmitStatement",
                  "src": "26496:94:9"
                }
              ]
            },
            "documentation": "@notice Sets the minimum and maximum amount of the stable token an exchange can involve.\n@dev Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new\nexchange proposals for the token.\n@param stableTokenRegistryId The registry ID string for the stable token to set limits for.\n@param minExchangeAmount The new minimum exchange amount for the stable token.\n@param maxExchangeAmount The new maximum exchange amount for the stable token.",
            "id": 2675,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2650,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2649,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "26208:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26208:9:9"
              }
            ],
            "name": "setStableTokenExchangeLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2643,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "26095:37:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2642,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26095:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2645,
                  "name": "minExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "26138:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26138:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2647,
                  "name": "maxExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2675,
                  "src": "26169:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26169:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26089:109:9"
            },
            "returnParameters": {
              "id": 2651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26218:0:9"
            },
            "scope": 2699,
            "src": "26052:543:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2697,
              "nodeType": "Block",
              "src": "26845:414:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2683,
                          "name": "newVetoPeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2677,
                          "src": "27086:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 2684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27110:7:9",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "src": "27086:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5665746f20706572696f642063616e6e6f74206578636565642034207765656b73",
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27119:35:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb965376e8cf5f333b57ce44de7c4b8880c6cfb990bd33179bafc5d0b6bc178",
                          "typeString": "literal_string \"Veto period cannot exceed 4 weeks\""
                        },
                        "value": "Veto period cannot exceed 4 weeks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb965376e8cf5f333b57ce44de7c4b8880c6cfb990bd33179bafc5d0b6bc178",
                          "typeString": "literal_string \"Veto period cannot exceed 4 weeks\""
                        }
                      ],
                      "id": 2682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14226,
                        14227
                      ],
                      "referencedDeclaration": 14227,
                      "src": "27078:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27078:77:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2688,
                  "nodeType": "ExpressionStatement",
                  "src": "27078:77:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2689,
                      "name": "vetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "27161:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2690,
                      "name": "newVetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2677,
                      "src": "27181:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27161:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2692,
                  "nodeType": "ExpressionStatement",
                  "src": "27161:40:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2694,
                        "name": "newVetoPeriodSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2677,
                        "src": "27233:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2693,
                      "name": "VetoPeriodSecondsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1671,
                      "src": "27212:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27212:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2696,
                  "nodeType": "EmitStatement",
                  "src": "27207:47:9"
                }
              ]
            },
            "documentation": "@notice Sets the veto period in seconds.\n@dev Sender must be owner.\n@param newVetoPeriodSeconds The new value for the veto period in seconds.",
            "id": 2698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2680,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2679,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "26835:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26835:9:9"
              }
            ],
            "name": "setVetoPeriodSeconds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2677,
                  "name": "newVetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 2698,
                  "src": "26798:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26798:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26797:30:9"
            },
            "returnParameters": {
              "id": 2681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26845:0:9"
            },
            "scope": 2699,
            "src": "26768:491:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2700,
        "src": "471:26790:9"
      }
    ],
    "src": "0:27262:9"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/lib/mento-core/contracts/GrandaMento.sol",
      "exportedSymbols": {
        "GrandaMento": [
          2699
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 1605,
        "name": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "attributes": {
          "SourceUnit": 283,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1606,
        "name": "ImportDirective",
        "src": "26:59:9"
      },
      {
        "attributes": {
          "SourceUnit": 401,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1607,
        "name": "ImportDirective",
        "src": "86:63:9"
      },
      {
        "attributes": {
          "SourceUnit": 7531,
          "absolutePath": "project:/lib/mento-core/contracts/common/FixidityLib.sol",
          "file": "./common/FixidityLib.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1608,
        "name": "ImportDirective",
        "src": "151:34:9"
      },
      {
        "attributes": {
          "SourceUnit": 8253,
          "absolutePath": "project:/lib/mento-core/contracts/common/Initializable.sol",
          "file": "./common/Initializable.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1609,
        "name": "ImportDirective",
        "src": "186:36:9"
      },
      {
        "attributes": {
          "SourceUnit": 10807,
          "absolutePath": "project:/lib/mento-core/contracts/common/UsingRegistry.sol",
          "file": "./common/UsingRegistry.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1610,
        "name": "ImportDirective",
        "src": "223:36:9"
      },
      {
        "attributes": {
          "SourceUnit": 10821,
          "absolutePath": "project:/lib/mento-core/contracts/common/interfaces/ICeloVersionedContract.sol",
          "file": "./common/interfaces/ICeloVersionedContract.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1611,
        "name": "ImportDirective",
        "src": "260:56:9"
      },
      {
        "attributes": {
          "SourceUnit": 9649,
          "absolutePath": "project:/lib/mento-core/contracts/common/ReentrancyGuard.sol",
          "file": "./common/ReentrancyGuard.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1612,
        "name": "ImportDirective",
        "src": "317:38:9"
      },
      {
        "attributes": {
          "SourceUnit": 14143,
          "absolutePath": "project:/lib/mento-core/contracts/interfaces/IStableToken.sol",
          "file": "./interfaces/IStableToken.sol",
          "scope": 2700,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1613,
        "name": "ImportDirective",
        "src": "356:39:9"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            400,
            8252,
            9648,
            10806,
            10820
          ],
          "contractKind": "contract",
          "documentation": "@title Facilitates large exchanges between CELO stable tokens.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2699,
            9648,
            10806,
            8252,
            400,
            26,
            10820
          ],
          "name": "GrandaMento",
          "scope": 2700
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ICeloVersionedContract",
                  "referencedDeclaration": 10820,
                  "type": "contract ICeloVersionedContract"
                },
                "id": 1614,
                "name": "UserDefinedTypeName",
                "src": "495:22:9"
              }
            ],
            "id": 1615,
            "name": "InheritanceSpecifier",
            "src": "495:22:9"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 400,
                  "type": "contract Ownable"
                },
                "id": 1616,
                "name": "UserDefinedTypeName",
                "src": "519:7:9"
              }
            ],
            "id": 1617,
            "name": "InheritanceSpecifier",
            "src": "519:7:9"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 8252,
                  "type": "contract Initializable"
                },
                "id": 1618,
                "name": "UserDefinedTypeName",
                "src": "528:13:9"
              }
            ],
            "id": 1619,
            "name": "InheritanceSpecifier",
            "src": "528:13:9"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "UsingRegistry",
                  "referencedDeclaration": 10806,
                  "type": "contract UsingRegistry"
                },
                "id": 1620,
                "name": "UserDefinedTypeName",
                "src": "543:13:9"
              }
            ],
            "id": 1621,
            "name": "InheritanceSpecifier",
            "src": "543:13:9"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ReentrancyGuard",
                  "referencedDeclaration": 9648,
                  "type": "contract ReentrancyGuard"
                },
                "id": 1622,
                "name": "UserDefinedTypeName",
                "src": "558:15:9"
              }
            ],
            "id": 1623,
            "name": "InheritanceSpecifier",
            "src": "558:15:9"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib",
                  "referencedDeclaration": 7530,
                  "type": "library FixidityLib"
                },
                "id": 1624,
                "name": "UserDefinedTypeName",
                "src": "584:11:9"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib.Fraction",
                  "referencedDeclaration": 6931,
                  "type": "struct FixidityLib.Fraction"
                },
                "id": 1625,
                "name": "UserDefinedTypeName",
                "src": "600:20:9"
              }
            ],
            "id": 1626,
            "name": "UsingForDirective",
            "src": "578:43:9"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 282,
                  "type": "library SafeMath"
                },
                "id": 1627,
                "name": "UserDefinedTypeName",
                "src": "630:8:9"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1628,
                "name": "ElementaryTypeName",
                "src": "643:7:9"
              }
            ],
            "id": 1629,
            "name": "UsingForDirective",
            "src": "624:27:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ExchangeProposalCreated"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "proposalId",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1630,
                        "name": "ElementaryTypeName",
                        "src": "744:7:9"
                      }
                    ],
                    "id": 1631,
                    "name": "VariableDeclaration",
                    "src": "744:26:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "exchanger",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1632,
                        "name": "ElementaryTypeName",
                        "src": "776:7:9"
                      }
                    ],
                    "id": 1633,
                    "name": "VariableDeclaration",
                    "src": "776:25:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "stableTokenRegistryId",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1634,
                        "name": "ElementaryTypeName",
                        "src": "807:6:9"
                      }
                    ],
                    "id": 1635,
                    "name": "VariableDeclaration",
                    "src": "807:28:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "sellAmount",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1636,
                        "name": "ElementaryTypeName",
                        "src": "841:7:9"
                      }
                    ],
                    "id": 1637,
                    "name": "VariableDeclaration",
                    "src": "841:18:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "buyAmount",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1638,
                        "name": "ElementaryTypeName",
                        "src": "865:7:9"
                      }
                    ],
                    "id": 1639,
                    "name": "VariableDeclaration",
                    "src": "865:17:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "sellCelo",
                      "scope": 1643,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1640,
                        "name": "ElementaryTypeName",
                        "src": "888:4:9"
                      }
                    ],
                    "id": 1641,
                    "name": "VariableDeclaration",
                    "src": "888:13:9"
                  }
                ],
                "id": 1642,
                "name": "ParameterList",
                "src": "738:167:9"
              }
            ],
            "id": 1643,
            "name": "EventDefinition",
            "src": "709:197:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ExchangeProposalApproved"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "proposalId",
                      "scope": 1647,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1644,
                        "name": "ElementaryTypeName",
                        "src": "1009:7:9"
                      }
                    ],
                    "id": 1645,
                    "name": "VariableDeclaration",
                    "src": "1009:26:9"
                  }
                ],
                "id": 1646,
                "name": "ParameterList",
                "src": "1008:28:9"
              }
            ],
            "id": 1647,
            "name": "EventDefinition",
            "src": "978:59:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ExchangeProposalCancelled"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "proposalId",
                      "scope": 1651,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1648,
                        "name": "ElementaryTypeName",
                        "src": "1126:7:9"
                      }
                    ],
                    "id": 1649,
                    "name": "VariableDeclaration",
                    "src": "1126:26:9"
                  }
                ],
                "id": 1650,
                "name": "ParameterList",
                "src": "1125:28:9"
              }
            ],
            "id": 1651,
            "name": "EventDefinition",
            "src": "1094:60:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ExchangeProposalExecuted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "proposalId",
                      "scope": 1655,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1652,
                        "name": "ElementaryTypeName",
                        "src": "1241:7:9"
                      }
                    ],
                    "id": 1653,
                    "name": "VariableDeclaration",
                    "src": "1241:26:9"
                  }
                ],
                "id": 1654,
                "name": "ParameterList",
                "src": "1240:28:9"
              }
            ],
            "id": 1655,
            "name": "EventDefinition",
            "src": "1210:59:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "ApproverSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "approver",
                      "scope": 1659,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1656,
                        "name": "ElementaryTypeName",
                        "src": "1330:7:9"
                      }
                    ],
                    "id": 1657,
                    "name": "VariableDeclaration",
                    "src": "1330:16:9"
                  }
                ],
                "id": 1658,
                "name": "ParameterList",
                "src": "1329:18:9"
              }
            ],
            "id": 1659,
            "name": "EventDefinition",
            "src": "1312:36:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "MaxApprovalExchangeRateChangeSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "maxApprovalExchangeRateChange",
                      "scope": 1663,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1660,
                        "name": "ElementaryTypeName",
                        "src": "1447:7:9"
                      }
                    ],
                    "id": 1661,
                    "name": "VariableDeclaration",
                    "src": "1447:37:9"
                  }
                ],
                "id": 1662,
                "name": "ParameterList",
                "src": "1446:39:9"
              }
            ],
            "id": 1663,
            "name": "EventDefinition",
            "src": "1408:78:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SpreadSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "spread",
                      "scope": 1667,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1664,
                        "name": "ElementaryTypeName",
                        "src": "1543:7:9"
                      }
                    ],
                    "id": 1665,
                    "name": "VariableDeclaration",
                    "src": "1543:14:9"
                  }
                ],
                "id": 1666,
                "name": "ParameterList",
                "src": "1542:16:9"
              }
            ],
            "id": 1667,
            "name": "EventDefinition",
            "src": "1527:32:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "VetoPeriodSecondsSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "vetoPeriodSeconds",
                      "scope": 1671,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1668,
                        "name": "ElementaryTypeName",
                        "src": "1643:7:9"
                      }
                    ],
                    "id": 1669,
                    "name": "VariableDeclaration",
                    "src": "1643:25:9"
                  }
                ],
                "id": 1670,
                "name": "ParameterList",
                "src": "1642:27:9"
              }
            ],
            "id": 1671,
            "name": "EventDefinition",
            "src": "1616:54:9"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "StableTokenExchangeLimitsSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "stableTokenRegistryId",
                      "scope": 1679,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1672,
                        "name": "ElementaryTypeName",
                        "src": "1775:6:9"
                      }
                    ],
                    "id": 1673,
                    "name": "VariableDeclaration",
                    "src": "1775:28:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "minExchangeAmount",
                      "scope": 1679,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1674,
                        "name": "ElementaryTypeName",
                        "src": "1805:7:9"
                      }
                    ],
                    "id": 1675,
                    "name": "VariableDeclaration",
                    "src": "1805:25:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "maxExchangeAmount",
                      "scope": 1679,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1676,
                        "name": "ElementaryTypeName",
                        "src": "1832:7:9"
                      }
                    ],
                    "id": 1677,
                    "name": "VariableDeclaration",
                    "src": "1832:25:9"
                  }
                ],
                "id": 1678,
                "name": "ParameterList",
                "src": "1774:84:9"
              }
            ],
            "id": 1679,
            "name": "EventDefinition",
            "src": "1740:119:9"
          },
          {
            "attributes": {
              "canonicalName": "GrandaMento.ExchangeProposalState",
              "name": "ExchangeProposalState"
            },
            "children": [
              {
                "attributes": {
                  "name": "None"
                },
                "id": 1680,
                "name": "EnumValue",
                "src": "1896:4:9"
              },
              {
                "attributes": {
                  "name": "Proposed"
                },
                "id": 1681,
                "name": "EnumValue",
                "src": "1906:8:9"
              },
              {
                "attributes": {
                  "name": "Approved"
                },
                "id": 1682,
                "name": "EnumValue",
                "src": "1920:8:9"
              },
              {
                "attributes": {
                  "name": "Executed"
                },
                "id": 1683,
                "name": "EnumValue",
                "src": "1934:8:9"
              },
              {
                "attributes": {
                  "name": "Cancelled"
                },
                "id": 1684,
                "name": "EnumValue",
                "src": "1948:9:9"
              }
            ],
            "id": 1685,
            "name": "EnumDefinition",
            "src": "1863:98:9"
          },
          {
            "attributes": {
              "canonicalName": "GrandaMento.ExchangeLimits",
              "name": "ExchangeLimits",
              "scope": 2699,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "minExchangeAmount",
                  "scope": 1690,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1686,
                    "name": "ElementaryTypeName",
                    "src": "2075:7:9"
                  }
                ],
                "id": 1687,
                "name": "VariableDeclaration",
                "src": "2075:25:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "maxExchangeAmount",
                  "scope": 1690,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1688,
                    "name": "ElementaryTypeName",
                    "src": "2188:7:9"
                  }
                ],
                "id": 1689,
                "name": "VariableDeclaration",
                "src": "2188:25:9"
              }
            ],
            "id": 1690,
            "name": "StructDefinition",
            "src": "1965:253:9"
          },
          {
            "attributes": {
              "canonicalName": "GrandaMento.ExchangeProposal",
              "name": "ExchangeProposal",
              "scope": 2699,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "exchanger",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address payable",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "payable",
                      "type": "address payable"
                    },
                    "id": 1691,
                    "name": "ElementaryTypeName",
                    "src": "2308:15:9"
                  }
                ],
                "id": 1692,
                "name": "VariableDeclaration",
                "src": "2308:25:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "stableToken",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 1693,
                    "name": "ElementaryTypeName",
                    "src": "2596:7:9"
                  }
                ],
                "id": 1694,
                "name": "VariableDeclaration",
                "src": "2596:19:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "state",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum GrandaMento.ExchangeProposalState",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ExchangeProposalState",
                      "referencedDeclaration": 1685,
                      "type": "enum GrandaMento.ExchangeProposalState"
                    },
                    "id": 1695,
                    "name": "UserDefinedTypeName",
                    "src": "2664:21:9"
                  }
                ],
                "id": 1696,
                "name": "VariableDeclaration",
                "src": "2664:27:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "sellCelo",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 1697,
                    "name": "ElementaryTypeName",
                    "src": "2766:4:9"
                  }
                ],
                "id": 1698,
                "name": "VariableDeclaration",
                "src": "2766:13:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "sellAmount",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1699,
                    "name": "ElementaryTypeName",
                    "src": "3415:7:9"
                  }
                ],
                "id": 1700,
                "name": "VariableDeclaration",
                "src": "3415:18:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "buyAmount",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1701,
                    "name": "ElementaryTypeName",
                    "src": "3561:7:9"
                  }
                ],
                "id": 1702,
                "name": "VariableDeclaration",
                "src": "3561:17:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "celoStableTokenExchangeRate",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1703,
                    "name": "ElementaryTypeName",
                    "src": "4047:7:9"
                  }
                ],
                "id": 1704,
                "name": "VariableDeclaration",
                "src": "4047:35:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "vetoPeriodSeconds",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1705,
                    "name": "ElementaryTypeName",
                    "src": "4355:7:9"
                  }
                ],
                "id": 1706,
                "name": "VariableDeclaration",
                "src": "4355:25:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "approvalTimestamp",
                  "scope": 1709,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1707,
                    "name": "ElementaryTypeName",
                    "src": "4549:7:9"
                  }
                ],
                "id": 1708,
                "name": "VariableDeclaration",
                "src": "4549:25:9"
              }
            ],
            "id": 1709,
            "name": "StructDefinition",
            "src": "2222:2357:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "approver",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1710,
                "name": "ElementaryTypeName",
                "src": "4650:7:9"
              }
            ],
            "id": 1711,
            "name": "VariableDeclaration",
            "src": "4650:23:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "maxApprovalExchangeRateChange",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct FixidityLib.Fraction",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib.Fraction",
                  "referencedDeclaration": 6931,
                  "type": "struct FixidityLib.Fraction"
                },
                "id": 1712,
                "name": "UserDefinedTypeName",
                "src": "4851:20:9"
              }
            ],
            "id": 1713,
            "name": "VariableDeclaration",
            "src": "4851:57:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "spread",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct FixidityLib.Fraction",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "FixidityLib.Fraction",
                  "referencedDeclaration": 6931,
                  "type": "struct FixidityLib.Fraction"
                },
                "id": 1714,
                "name": "UserDefinedTypeName",
                "src": "4970:20:9"
              }
            ],
            "id": 1715,
            "name": "VariableDeclaration",
            "src": "4970:34:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "vetoPeriodSeconds",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1716,
                "name": "ElementaryTypeName",
                "src": "5103:7:9"
              }
            ],
            "id": 1717,
            "name": "VariableDeclaration",
            "src": "5103:32:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "stableTokenExchangeLimits",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => struct GrandaMento.ExchangeLimits)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => struct GrandaMento.ExchangeLimits)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 1718,
                    "name": "ElementaryTypeName",
                    "src": "5316:6:9"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ExchangeLimits",
                      "referencedDeclaration": 1690,
                      "type": "struct GrandaMento.ExchangeLimits"
                    },
                    "id": 1719,
                    "name": "UserDefinedTypeName",
                    "src": "5326:14:9"
                  }
                ],
                "id": 1720,
                "name": "Mapping",
                "src": "5308:33:9"
              }
            ],
            "id": 1721,
            "name": "VariableDeclaration",
            "src": "5308:66:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "exchangeProposals",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1722,
                    "name": "ElementaryTypeName",
                    "src": "5463:7:9"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ExchangeProposal",
                      "referencedDeclaration": 1709,
                      "type": "struct GrandaMento.ExchangeProposal"
                    },
                    "id": 1723,
                    "name": "UserDefinedTypeName",
                    "src": "5474:16:9"
                  }
                ],
                "id": 1724,
                "name": "Mapping",
                "src": "5455:36:9"
              }
            ],
            "id": 1725,
            "name": "VariableDeclaration",
            "src": "5455:61:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "activeProposalIdsSuperset",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "uint256[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 1726,
                    "name": "ElementaryTypeName",
                    "src": "6425:7:9"
                  }
                ],
                "id": 1727,
                "name": "ArrayTypeName",
                "src": "6425:9:9"
              }
            ],
            "id": 1728,
            "name": "VariableDeclaration",
            "src": "6425:42:9"
          },
          {
            "attributes": {
              "constant": false,
              "name": "exchangeProposalCount",
              "scope": 2699,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1729,
                "name": "ElementaryTypeName",
                "src": "6602:7:9"
              }
            ],
            "id": 1730,
            "name": "VariableDeclaration",
            "src": "6602:36:9"
          },
          {
            "attributes": {
              "documentation": "@notice Reverts if the sender is not the approver.",
              "name": "onlyApprover",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1731,
                "name": "ParameterList",
                "src": "6732:2:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8fd6d9e84a913c2056cc57d9de71bf548ba2a0ceb02699a44b3a7d52aa725b72",
                                  "typeString": "literal_string \"Sender must be approver\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1732,
                            "name": "Identifier",
                            "src": "6741:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14223,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1733,
                                    "name": "Identifier",
                                    "src": "6749:3:9"
                                  }
                                ],
                                "id": 1734,
                                "name": "MemberAccess",
                                "src": "6749:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1711,
                                  "type": "address",
                                  "value": "approver"
                                },
                                "id": 1735,
                                "name": "Identifier",
                                "src": "6763:8:9"
                              }
                            ],
                            "id": 1736,
                            "name": "BinaryOperation",
                            "src": "6749:22:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "53656e646572206d75737420626520617070726f766572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Sender must be approver\"",
                              "value": "Sender must be approver"
                            },
                            "id": 1737,
                            "name": "Literal",
                            "src": "6773:25:9"
                          }
                        ],
                        "id": 1738,
                        "name": "FunctionCall",
                        "src": "6741:58:9"
                      }
                    ],
                    "id": 1739,
                    "name": "ExpressionStatement",
                    "src": "6741:58:9"
                  },
                  {
                    "id": 1740,
                    "name": "PlaceholderStatement",
                    "src": "6805:1:9"
                  }
                ],
                "id": 1741,
                "name": "Block",
                "src": "6735:76:9"
              }
            ],
            "id": 1742,
            "name": "ModifierDefinition",
            "src": "6711:100:9"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialization.",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 1751,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1743,
                        "name": "ElementaryTypeName",
                        "src": "6974:4:9"
                      }
                    ],
                    "id": 1744,
                    "name": "VariableDeclaration",
                    "src": "6974:9:9"
                  }
                ],
                "id": 1745,
                "name": "ParameterList",
                "src": "6973:11:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1749,
                "name": "ParameterList",
                "src": "7012:0:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8252,
                      "type": "type(contract Initializable)",
                      "value": "Initializable"
                    },
                    "id": 1746,
                    "name": "Identifier",
                    "src": "6992:13:9"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1744,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 1747,
                    "name": "Identifier",
                    "src": "7006:4:9"
                  }
                ],
                "id": 1748,
                "name": "ModifierInvocation",
                "src": "6992:19:9"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1750,
                "name": "Block",
                "src": "7012:2:9"
              }
            ],
            "id": 1751,
            "name": "FunctionDefinition",
            "src": "6962:52:9"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionNumber",
              "scope": 2699,
              "stateMutability": "pure",
              "superFunction": 10819,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1752,
                "name": "ParameterList",
                "src": "7316:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1769,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1753,
                        "name": "ElementaryTypeName",
                        "src": "7361:7:9"
                      }
                    ],
                    "id": 1754,
                    "name": "VariableDeclaration",
                    "src": "7361:7:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1769,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1755,
                        "name": "ElementaryTypeName",
                        "src": "7376:7:9"
                      }
                    ],
                    "id": 1756,
                    "name": "VariableDeclaration",
                    "src": "7376:7:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1769,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1757,
                        "name": "ElementaryTypeName",
                        "src": "7391:7:9"
                      }
                    ],
                    "id": 1758,
                    "name": "VariableDeclaration",
                    "src": "7391:7:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1769,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1759,
                        "name": "ElementaryTypeName",
                        "src": "7406:7:9"
                      }
                    ],
                    "id": 1760,
                    "name": "VariableDeclaration",
                    "src": "7406:7:9"
                  }
                ],
                "id": 1761,
                "name": "ParameterList",
                "src": "7353:66:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1761
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(int_const 1,int_const 1,int_const 0,int_const 1)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1762,
                            "name": "Literal",
                            "src": "7436:1:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1763,
                            "name": "Literal",
                            "src": "7439:1:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1764,
                            "name": "Literal",
                            "src": "7442:1:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1765,
                            "name": "Literal",
                            "src": "7445:1:9"
                          }
                        ],
                        "id": 1766,
                        "name": "TupleExpression",
                        "src": "7435:12:9"
                      }
                    ],
                    "id": 1767,
                    "name": "Return",
                    "src": "7428:19:9"
                  }
                ],
                "id": 1768,
                "name": "Block",
                "src": "7422:30:9"
              }
            ],
            "id": 1769,
            "name": "FunctionDefinition",
            "src": "7291:161:9"
          },
          {
            "attributes": {
              "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param _registry The address of the registry.\n@param _approver The approver that has the ability to approve exchange proposals.\n@param _maxApprovalExchangeRateChange The maximum allowed change in CELO price\nbetween an exchange proposal's creation and approval.\n@param _spread The spread charged on exchanges.\n@param _vetoPeriodSeconds The length of the veto period in seconds.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_registry",
                      "scope": 1810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1770,
                        "name": "ElementaryTypeName",
                        "src": "7996:7:9"
                      }
                    ],
                    "id": 1771,
                    "name": "VariableDeclaration",
                    "src": "7996:17:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_approver",
                      "scope": 1810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1772,
                        "name": "ElementaryTypeName",
                        "src": "8019:7:9"
                      }
                    ],
                    "id": 1773,
                    "name": "VariableDeclaration",
                    "src": "8019:17:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_maxApprovalExchangeRateChange",
                      "scope": 1810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1774,
                        "name": "ElementaryTypeName",
                        "src": "8042:7:9"
                      }
                    ],
                    "id": 1775,
                    "name": "VariableDeclaration",
                    "src": "8042:38:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_spread",
                      "scope": 1810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1776,
                        "name": "ElementaryTypeName",
                        "src": "8086:7:9"
                      }
                    ],
                    "id": 1777,
                    "name": "VariableDeclaration",
                    "src": "8086:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_vetoPeriodSeconds",
                      "scope": 1810,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1778,
                        "name": "ElementaryTypeName",
                        "src": "8107:7:9"
                      }
                    ],
                    "id": 1779,
                    "name": "VariableDeclaration",
                    "src": "8107:26:9"
                  }
                ],
                "id": 1780,
                "name": "ParameterList",
                "src": "7990:147:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1783,
                "name": "ParameterList",
                "src": "8159:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8251,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 1781,
                    "name": "Identifier",
                    "src": "8147:11:9"
                  }
                ],
                "id": 1782,
                "name": "ModifierInvocation",
                "src": "8147:11:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 399,
                              "type": "function (address)",
                              "value": "_transferOwnership"
                            },
                            "id": 1784,
                            "name": "Identifier",
                            "src": "8165:18:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14223,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1785,
                                "name": "Identifier",
                                "src": "8184:3:9"
                              }
                            ],
                            "id": 1786,
                            "name": "MemberAccess",
                            "src": "8184:10:9"
                          }
                        ],
                        "id": 1787,
                        "name": "FunctionCall",
                        "src": "8165:30:9"
                      }
                    ],
                    "id": 1788,
                    "name": "ExpressionStatement",
                    "src": "8165:30:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10727,
                              "type": "function (address)",
                              "value": "setRegistry"
                            },
                            "id": 1789,
                            "name": "Identifier",
                            "src": "8201:11:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1771,
                              "type": "address",
                              "value": "_registry"
                            },
                            "id": 1790,
                            "name": "Identifier",
                            "src": "8213:9:9"
                          }
                        ],
                        "id": 1791,
                        "name": "FunctionCall",
                        "src": "8201:22:9"
                      }
                    ],
                    "id": 1792,
                    "name": "ExpressionStatement",
                    "src": "8201:22:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2592,
                              "type": "function (address)",
                              "value": "setApprover"
                            },
                            "id": 1793,
                            "name": "Identifier",
                            "src": "8229:11:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1773,
                              "type": "address",
                              "value": "_approver"
                            },
                            "id": 1794,
                            "name": "Identifier",
                            "src": "8241:9:9"
                          }
                        ],
                        "id": 1795,
                        "name": "FunctionCall",
                        "src": "8229:22:9"
                      }
                    ],
                    "id": 1796,
                    "name": "ExpressionStatement",
                    "src": "8229:22:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2611,
                              "type": "function (uint256)",
                              "value": "setMaxApprovalExchangeRateChange"
                            },
                            "id": 1797,
                            "name": "Identifier",
                            "src": "8257:32:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1775,
                              "type": "uint256",
                              "value": "_maxApprovalExchangeRateChange"
                            },
                            "id": 1798,
                            "name": "Identifier",
                            "src": "8290:30:9"
                          }
                        ],
                        "id": 1799,
                        "name": "FunctionCall",
                        "src": "8257:64:9"
                      }
                    ],
                    "id": 1800,
                    "name": "ExpressionStatement",
                    "src": "8257:64:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2641,
                              "type": "function (uint256)",
                              "value": "setSpread"
                            },
                            "id": 1801,
                            "name": "Identifier",
                            "src": "8327:9:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1777,
                              "type": "uint256",
                              "value": "_spread"
                            },
                            "id": 1802,
                            "name": "Identifier",
                            "src": "8337:7:9"
                          }
                        ],
                        "id": 1803,
                        "name": "FunctionCall",
                        "src": "8327:18:9"
                      }
                    ],
                    "id": 1804,
                    "name": "ExpressionStatement",
                    "src": "8327:18:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2698,
                              "type": "function (uint256)",
                              "value": "setVetoPeriodSeconds"
                            },
                            "id": 1805,
                            "name": "Identifier",
                            "src": "8351:20:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1779,
                              "type": "uint256",
                              "value": "_vetoPeriodSeconds"
                            },
                            "id": 1806,
                            "name": "Identifier",
                            "src": "8372:18:9"
                          }
                        ],
                        "id": 1807,
                        "name": "FunctionCall",
                        "src": "8351:40:9"
                      }
                    ],
                    "id": 1808,
                    "name": "ExpressionStatement",
                    "src": "8351:40:9"
                  }
                ],
                "id": 1809,
                "name": "Block",
                "src": "8159:237:9"
              }
            ],
            "id": 1810,
            "name": "FunctionDefinition",
            "src": "7971:425:9"
          },
          {
            "attributes": {
              "documentation": "@notice Creates a new exchange proposal and deposits the tokens being sold.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\n@param stableTokenRegistryId The string registry ID for the stable token\ninvolved in the exchange.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The proposal identifier for the newly created exchange proposal.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "createExchangeProposal",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "stableTokenRegistryId",
                      "scope": 1958,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1811,
                        "name": "ElementaryTypeName",
                        "src": "8914:6:9"
                      }
                    ],
                    "id": 1812,
                    "name": "VariableDeclaration",
                    "src": "8914:37:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellAmount",
                      "scope": 1958,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1813,
                        "name": "ElementaryTypeName",
                        "src": "8957:7:9"
                      }
                    ],
                    "id": 1814,
                    "name": "VariableDeclaration",
                    "src": "8957:18:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellCelo",
                      "scope": 1958,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1815,
                        "name": "ElementaryTypeName",
                        "src": "8981:4:9"
                      }
                    ],
                    "id": 1816,
                    "name": "VariableDeclaration",
                    "src": "8981:13:9"
                  }
                ],
                "id": 1817,
                "name": "ParameterList",
                "src": "8908:90:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1958,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1820,
                        "name": "ElementaryTypeName",
                        "src": "9030:7:9"
                      }
                    ],
                    "id": 1821,
                    "name": "VariableDeclaration",
                    "src": "9030:7:9"
                  }
                ],
                "id": 1822,
                "name": "ParameterList",
                "src": "9029:9:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9647,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 1818,
                    "name": "Identifier",
                    "src": "9008:12:9"
                  }
                ],
                "id": 1819,
                "name": "ModifierInvocation",
                "src": "9008:12:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1824
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "stableToken",
                          "scope": 1957,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1823,
                            "name": "ElementaryTypeName",
                            "src": "9045:7:9"
                          }
                        ],
                        "id": 1824,
                        "name": "VariableDeclaration",
                        "src": "9045:19:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getAddressForStringOrDie",
                              "referencedDeclaration": 10860,
                              "type": "function (string memory) view external returns (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10666,
                                  "type": "contract IRegistry",
                                  "value": "registry"
                                },
                                "id": 1825,
                                "name": "Identifier",
                                "src": "9067:8:9"
                              }
                            ],
                            "id": 1826,
                            "name": "MemberAccess",
                            "src": "9067:33:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1812,
                              "type": "string calldata",
                              "value": "stableTokenRegistryId"
                            },
                            "id": 1827,
                            "name": "Identifier",
                            "src": "9101:21:9"
                          }
                        ],
                        "id": 1828,
                        "name": "FunctionCall",
                        "src": "9067:56:9"
                      }
                    ],
                    "id": 1829,
                    "name": "VariableDeclarationStatement",
                    "src": "9045:78:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1831
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "celoStableTokenExchangeRate",
                          "scope": 1957,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1830,
                            "name": "ElementaryTypeName",
                            "src": "9183:7:9"
                          }
                        ],
                        "id": 1831,
                        "name": "VariableDeclaration",
                        "src": "9183:35:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "unwrap",
                              "referencedDeclaration": 6975,
                              "type": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct FixidityLib.Fraction memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2546,
                                      "type": "function (address) view returns (struct FixidityLib.Fraction memory)",
                                      "value": "getOracleExchangeRate"
                                    },
                                    "id": 1832,
                                    "name": "Identifier",
                                    "src": "9221:21:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1824,
                                      "type": "address",
                                      "value": "stableToken"
                                    },
                                    "id": 1833,
                                    "name": "Identifier",
                                    "src": "9243:11:9"
                                  }
                                ],
                                "id": 1834,
                                "name": "FunctionCall",
                                "src": "9221:34:9"
                              }
                            ],
                            "id": 1835,
                            "name": "MemberAccess",
                            "src": "9221:41:9"
                          }
                        ],
                        "id": 1836,
                        "name": "FunctionCall",
                        "src": "9221:43:9"
                      }
                    ],
                    "id": 1837,
                    "name": "VariableDeclarationStatement",
                    "src": "9183:81:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1839
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "buyAmount",
                          "scope": 1957,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1838,
                            "name": "ElementaryTypeName",
                            "src": "9401:7:9"
                          }
                        ],
                        "id": 1839,
                        "name": "VariableDeclaration",
                        "src": "9401:17:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2373,
                              "type": "function (uint256,uint256,bool) view returns (uint256)",
                              "value": "getBuyAmount"
                            },
                            "id": 1840,
                            "name": "Identifier",
                            "src": "9421:12:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1831,
                              "type": "uint256",
                              "value": "celoStableTokenExchangeRate"
                            },
                            "id": 1841,
                            "name": "Identifier",
                            "src": "9434:27:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1814,
                              "type": "uint256",
                              "value": "sellAmount"
                            },
                            "id": 1842,
                            "name": "Identifier",
                            "src": "9463:10:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1816,
                              "type": "bool",
                              "value": "sellCelo"
                            },
                            "id": 1843,
                            "name": "Identifier",
                            "src": "9475:8:9"
                          }
                        ],
                        "id": 1844,
                        "name": "FunctionCall",
                        "src": "9421:63:9"
                      }
                    ],
                    "id": 1845,
                    "name": "VariableDeclarationStatement",
                    "src": "9401:83:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            1847,
                            1849
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "minExchangeAmount",
                              "scope": 1872,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1846,
                                "name": "ElementaryTypeName",
                                "src": "9747:7:9"
                              }
                            ],
                            "id": 1847,
                            "name": "VariableDeclaration",
                            "src": "9747:25:9"
                          },
                          {
                            "attributes": {
                              "constant": false,
                              "name": "maxExchangeAmount",
                              "scope": 1872,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1848,
                                "name": "ElementaryTypeName",
                                "src": "9774:7:9"
                              }
                            ],
                            "id": 1849,
                            "name": "VariableDeclaration",
                            "src": "9774:25:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple(uint256,uint256)",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2576,
                                  "type": "function (string memory) view returns (uint256,uint256)",
                                  "value": "getStableTokenExchangeLimits"
                                },
                                "id": 1850,
                                "name": "Identifier",
                                "src": "9803:28:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1812,
                                  "type": "string calldata",
                                  "value": "stableTokenRegistryId"
                                },
                                "id": 1851,
                                "name": "Identifier",
                                "src": "9832:21:9"
                              }
                            ],
                            "id": 1852,
                            "name": "FunctionCall",
                            "src": "9803:51:9"
                          }
                        ],
                        "id": 1853,
                        "name": "VariableDeclarationStatement",
                        "src": "9746:108:9"
                      },
                      {
                        "attributes": {
                          "assignments": [
                            1855
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "stableTokenExchangeAmount",
                              "scope": 1872,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 1854,
                                "name": "ElementaryTypeName",
                                "src": "9983:7:9"
                              }
                            ],
                            "id": 1855,
                            "name": "VariableDeclaration",
                            "src": "9983:33:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1816,
                                  "type": "bool",
                                  "value": "sellCelo"
                                },
                                "id": 1856,
                                "name": "Identifier",
                                "src": "10019:8:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1839,
                                  "type": "uint256",
                                  "value": "buyAmount"
                                },
                                "id": 1857,
                                "name": "Identifier",
                                "src": "10030:9:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1814,
                                  "type": "uint256",
                                  "value": "sellAmount"
                                },
                                "id": 1858,
                                "name": "Identifier",
                                "src": "10042:10:9"
                              }
                            ],
                            "id": 1859,
                            "name": "Conditional",
                            "src": "10019:33:9"
                          }
                        ],
                        "id": 1860,
                        "name": "VariableDeclarationStatement",
                        "src": "9983:69:9"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple()",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_abff683270a5c9e3636b2bef3a56099622c6c5e2bed3532270ab1542fc51361e",
                                      "typeString": "literal_string \"Stable token exchange amount not within limits\""
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    14226,
                                    14227
                                  ],
                                  "referencedDeclaration": 14227,
                                  "type": "function (bool,string memory) pure",
                                  "value": "require"
                                },
                                "id": 1861,
                                "name": "Identifier",
                                "src": "10060:7:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "<=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1855,
                                          "type": "uint256",
                                          "value": "stableTokenExchangeAmount"
                                        },
                                        "id": 1862,
                                        "name": "Identifier",
                                        "src": "10077:25:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1849,
                                          "type": "uint256",
                                          "value": "maxExchangeAmount"
                                        },
                                        "id": 1863,
                                        "name": "Identifier",
                                        "src": "10106:17:9"
                                      }
                                    ],
                                    "id": 1864,
                                    "name": "BinaryOperation",
                                    "src": "10077:46:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1855,
                                          "type": "uint256",
                                          "value": "stableTokenExchangeAmount"
                                        },
                                        "id": 1865,
                                        "name": "Identifier",
                                        "src": "10127:25:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1847,
                                          "type": "uint256",
                                          "value": "minExchangeAmount"
                                        },
                                        "id": 1866,
                                        "name": "Identifier",
                                        "src": "10156:17:9"
                                      }
                                    ],
                                    "id": 1867,
                                    "name": "BinaryOperation",
                                    "src": "10127:46:9"
                                  }
                                ],
                                "id": 1868,
                                "name": "BinaryOperation",
                                "src": "10077:96:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d697473",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"Stable token exchange amount not within limits\"",
                                  "value": "Stable token exchange amount not within limits"
                                },
                                "id": 1869,
                                "name": "Literal",
                                "src": "10183:48:9"
                              }
                            ],
                            "id": 1870,
                            "name": "FunctionCall",
                            "src": "10060:179:9"
                          }
                        ],
                        "id": 1871,
                        "name": "ExpressionStatement",
                        "src": "10060:179:9"
                      }
                    ],
                    "id": 1872,
                    "name": "Block",
                    "src": "9550:696:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1874
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sellToken",
                          "scope": 1957,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 469,
                              "type": "contract IERC20"
                            },
                            "id": 1873,
                            "name": "UserDefinedTypeName",
                            "src": "10290:6:9"
                          }
                        ],
                        "id": 1874,
                        "name": "VariableDeclaration",
                        "src": "10290:16:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "contract IERC20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1816,
                              "type": "bool",
                              "value": "sellCelo"
                            },
                            "id": 1875,
                            "name": "Identifier",
                            "src": "10309:8:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract IERC20",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10766,
                                  "type": "function () view returns (contract IERC20)",
                                  "value": "getGoldToken"
                                },
                                "id": 1876,
                                "name": "Identifier",
                                "src": "10320:12:9"
                              }
                            ],
                            "id": 1877,
                            "name": "FunctionCall",
                            "src": "10320:14:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract IERC20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 469,
                                  "type": "type(contract IERC20)",
                                  "value": "IERC20"
                                },
                                "id": 1878,
                                "name": "Identifier",
                                "src": "10337:6:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1824,
                                  "type": "address",
                                  "value": "stableToken"
                                },
                                "id": 1879,
                                "name": "Identifier",
                                "src": "10344:11:9"
                              }
                            ],
                            "id": 1880,
                            "name": "FunctionCall",
                            "src": "10337:19:9"
                          }
                        ],
                        "id": 1881,
                        "name": "Conditional",
                        "src": "10309:47:9"
                      }
                    ],
                    "id": 1882,
                    "name": "VariableDeclarationStatement",
                    "src": "10290:66:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8c3d3acf05ce3453d7e66bf75f2aa176fc296c2d3dc774cde7eabf241efe8438",
                                  "typeString": "literal_string \"Transfer in of sell token failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1883,
                            "name": "Identifier",
                            "src": "10362:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 452,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1874,
                                      "type": "contract IERC20",
                                      "value": "sellToken"
                                    },
                                    "id": 1884,
                                    "name": "Identifier",
                                    "src": "10370:9:9"
                                  }
                                ],
                                "id": 1885,
                                "name": "MemberAccess",
                                "src": "10370:22:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14223,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1886,
                                    "name": "Identifier",
                                    "src": "10393:3:9"
                                  }
                                ],
                                "id": 1887,
                                "name": "MemberAccess",
                                "src": "10393:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_GrandaMento_$2699",
                                          "typeString": "contract GrandaMento"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 1888,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "10405:7:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14279,
                                      "type": "contract GrandaMento",
                                      "value": "this"
                                    },
                                    "id": 1889,
                                    "name": "Identifier",
                                    "src": "10413:4:9"
                                  }
                                ],
                                "id": 1890,
                                "name": "FunctionCall",
                                "src": "10405:13:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1814,
                                  "type": "uint256",
                                  "value": "sellAmount"
                                },
                                "id": 1891,
                                "name": "Identifier",
                                "src": "10420:10:9"
                              }
                            ],
                            "id": 1892,
                            "name": "FunctionCall",
                            "src": "10370:61:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5472616e7366657220696e206f662073656c6c20746f6b656e206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Transfer in of sell token failed\"",
                              "value": "Transfer in of sell token failed"
                            },
                            "id": 1893,
                            "name": "Literal",
                            "src": "10433:34:9"
                          }
                        ],
                        "id": 1894,
                        "name": "FunctionCall",
                        "src": "10362:106:9"
                      }
                    ],
                    "id": 1895,
                    "name": "ExpressionStatement",
                    "src": "10362:106:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1730,
                              "type": "uint256",
                              "value": "exchangeProposalCount"
                            },
                            "id": 1896,
                            "name": "Identifier",
                            "src": "10648:21:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 122,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1730,
                                      "type": "uint256",
                                      "value": "exchangeProposalCount"
                                    },
                                    "id": 1897,
                                    "name": "Identifier",
                                    "src": "10672:21:9"
                                  }
                                ],
                                "id": 1898,
                                "name": "MemberAccess",
                                "src": "10672:25:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 1899,
                                "name": "Literal",
                                "src": "10698:1:9"
                              }
                            ],
                            "id": 1900,
                            "name": "FunctionCall",
                            "src": "10672:28:9"
                          }
                        ],
                        "id": 1901,
                        "name": "Assignment",
                        "src": "10648:52:9"
                      }
                    ],
                    "id": 1902,
                    "name": "ExpressionStatement",
                    "src": "10648:52:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1904
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "storedSellAmount",
                          "scope": 1957,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 1903,
                            "name": "ElementaryTypeName",
                            "src": "10786:7:9"
                          }
                        ],
                        "id": 1904,
                        "name": "VariableDeclaration",
                        "src": "10786:24:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1816,
                              "type": "bool",
                              "value": "sellCelo"
                            },
                            "id": 1905,
                            "name": "Identifier",
                            "src": "10813:8:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1814,
                              "type": "uint256",
                              "value": "sellAmount"
                            },
                            "id": 1906,
                            "name": "Identifier",
                            "src": "10824:10:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "valueToUnits",
                                  "referencedDeclaration": 14116,
                                  "type": "function (uint256) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract IStableToken",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 14142,
                                          "type": "type(contract IStableToken)",
                                          "value": "IStableToken"
                                        },
                                        "id": 1907,
                                        "name": "Identifier",
                                        "src": "10837:12:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1824,
                                          "type": "address",
                                          "value": "stableToken"
                                        },
                                        "id": 1908,
                                        "name": "Identifier",
                                        "src": "10850:11:9"
                                      }
                                    ],
                                    "id": 1909,
                                    "name": "FunctionCall",
                                    "src": "10837:25:9"
                                  }
                                ],
                                "id": 1910,
                                "name": "MemberAccess",
                                "src": "10837:38:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1814,
                                  "type": "uint256",
                                  "value": "sellAmount"
                                },
                                "id": 1911,
                                "name": "Identifier",
                                "src": "10876:10:9"
                              }
                            ],
                            "id": 1912,
                            "name": "FunctionCall",
                            "src": "10837:50:9"
                          }
                        ],
                        "id": 1913,
                        "name": "Conditional",
                        "src": "10813:74:9"
                      }
                    ],
                    "id": 1914,
                    "name": "VariableDeclarationStatement",
                    "src": "10786:101:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct GrandaMento.ExchangeProposal storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct GrandaMento.ExchangeProposal storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1725,
                                  "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                                  "value": "exchangeProposals"
                                },
                                "id": 1915,
                                "name": "Identifier",
                                "src": "10893:17:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1730,
                                  "type": "uint256",
                                  "value": "exchangeProposalCount"
                                },
                                "id": 1916,
                                "name": "Identifier",
                                "src": "10911:21:9"
                              }
                            ],
                            "id": 1917,
                            "name": "IndexAccess",
                            "src": "10893:40:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "exchanger",
                                "stableToken",
                                "state",
                                "sellCelo",
                                "sellAmount",
                                "buyAmount",
                                "celoStableTokenExchangeRate",
                                "vetoPeriodSeconds",
                                "approvalTimestamp"
                              ],
                              "type": "struct GrandaMento.ExchangeProposal memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                      "typeString": "enum GrandaMento.ExchangeProposalState"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1709,
                                  "type": "type(struct GrandaMento.ExchangeProposal storage pointer)",
                                  "value": "ExchangeProposal"
                                },
                                "id": 1918,
                                "name": "Identifier",
                                "src": "10936:16:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14223,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1919,
                                    "name": "Identifier",
                                    "src": "10972:3:9"
                                  }
                                ],
                                "id": 1920,
                                "name": "MemberAccess",
                                "src": "10972:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1824,
                                  "type": "address",
                                  "value": "stableToken"
                                },
                                "id": 1921,
                                "name": "Identifier",
                                "src": "11003:11:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Proposed",
                                  "referencedDeclaration": null,
                                  "type": "enum GrandaMento.ExchangeProposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1685,
                                      "type": "type(enum GrandaMento.ExchangeProposalState)",
                                      "value": "ExchangeProposalState"
                                    },
                                    "id": 1922,
                                    "name": "Identifier",
                                    "src": "11029:21:9"
                                  }
                                ],
                                "id": 1923,
                                "name": "MemberAccess",
                                "src": "11029:30:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1816,
                                  "type": "bool",
                                  "value": "sellCelo"
                                },
                                "id": 1924,
                                "name": "Identifier",
                                "src": "11077:8:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1904,
                                  "type": "uint256",
                                  "value": "storedSellAmount"
                                },
                                "id": 1925,
                                "name": "Identifier",
                                "src": "11105:16:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1839,
                                  "type": "uint256",
                                  "value": "buyAmount"
                                },
                                "id": 1926,
                                "name": "Identifier",
                                "src": "11140:9:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1831,
                                  "type": "uint256",
                                  "value": "celoStableTokenExchangeRate"
                                },
                                "id": 1927,
                                "name": "Identifier",
                                "src": "11186:27:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1717,
                                  "type": "uint256",
                                  "value": "vetoPeriodSeconds"
                                },
                                "id": 1928,
                                "name": "Identifier",
                                "src": "11240:17:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1929,
                                "name": "Literal",
                                "src": "11284:1:9"
                              }
                            ],
                            "id": 1930,
                            "name": "FunctionCall",
                            "src": "10936:395:9"
                          }
                        ],
                        "id": 1931,
                        "name": "Assignment",
                        "src": "10893:438:9"
                      }
                    ],
                    "id": 1932,
                    "name": "ExpressionStatement",
                    "src": "10893:438:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple(contract IERC20,uint256)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2318,
                              "type": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)",
                              "value": "getSellTokenAndSellAmount"
                            },
                            "id": 1933,
                            "name": "Identifier",
                            "src": "11676:25:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct GrandaMento.ExchangeProposal storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1725,
                                  "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                                  "value": "exchangeProposals"
                                },
                                "id": 1934,
                                "name": "Identifier",
                                "src": "11702:17:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1730,
                                  "type": "uint256",
                                  "value": "exchangeProposalCount"
                                },
                                "id": 1935,
                                "name": "Identifier",
                                "src": "11720:21:9"
                              }
                            ],
                            "id": 1936,
                            "name": "IndexAccess",
                            "src": "11702:40:9"
                          }
                        ],
                        "id": 1937,
                        "name": "FunctionCall",
                        "src": "11676:67:9"
                      }
                    ],
                    "id": 1938,
                    "name": "ExpressionStatement",
                    "src": "11676:67:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (uint256) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1728,
                                  "type": "uint256[] storage ref",
                                  "value": "activeProposalIdsSuperset"
                                },
                                "id": 1939,
                                "name": "Identifier",
                                "src": "11800:25:9"
                              }
                            ],
                            "id": 1941,
                            "name": "MemberAccess",
                            "src": "11800:30:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1730,
                              "type": "uint256",
                              "value": "exchangeProposalCount"
                            },
                            "id": 1942,
                            "name": "Identifier",
                            "src": "11831:21:9"
                          }
                        ],
                        "id": 1943,
                        "name": "FunctionCall",
                        "src": "11800:53:9"
                      }
                    ],
                    "id": 1944,
                    "name": "ExpressionStatement",
                    "src": "11800:53:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1643,
                              "type": "function (uint256,address,string memory,uint256,uint256,bool)",
                              "value": "ExchangeProposalCreated"
                            },
                            "id": 1945,
                            "name": "Identifier",
                            "src": "11948:23:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1730,
                              "type": "uint256",
                              "value": "exchangeProposalCount"
                            },
                            "id": 1946,
                            "name": "Identifier",
                            "src": "11972:21:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14223,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1947,
                                "name": "Identifier",
                                "src": "11995:3:9"
                              }
                            ],
                            "id": 1948,
                            "name": "MemberAccess",
                            "src": "11995:10:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1812,
                              "type": "string calldata",
                              "value": "stableTokenRegistryId"
                            },
                            "id": 1949,
                            "name": "Identifier",
                            "src": "12007:21:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1814,
                              "type": "uint256",
                              "value": "sellAmount"
                            },
                            "id": 1950,
                            "name": "Identifier",
                            "src": "12030:10:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1839,
                              "type": "uint256",
                              "value": "buyAmount"
                            },
                            "id": 1951,
                            "name": "Identifier",
                            "src": "12042:9:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1816,
                              "type": "bool",
                              "value": "sellCelo"
                            },
                            "id": 1952,
                            "name": "Identifier",
                            "src": "12053:8:9"
                          }
                        ],
                        "id": 1953,
                        "name": "FunctionCall",
                        "src": "11948:114:9"
                      }
                    ],
                    "id": 1954,
                    "name": "EmitStatement",
                    "src": "11943:119:9"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1822
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1730,
                          "type": "uint256",
                          "value": "exchangeProposalCount"
                        },
                        "id": 1955,
                        "name": "Identifier",
                        "src": "12075:21:9"
                      }
                    ],
                    "id": 1956,
                    "name": "Return",
                    "src": "12068:28:9"
                  }
                ],
                "id": 1957,
                "name": "Block",
                "src": "9039:3062:9"
              }
            ],
            "id": 1958,
            "name": "FunctionDefinition",
            "src": "8877:3224:9"
          },
          {
            "attributes": {
              "documentation": "@notice Approves an existing exchange proposal.\n@dev Sender must be the approver. Exchange proposal must be in the Proposed state.\n@param proposalId The identifier of the proposal to approve.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "approveExchangeProposal",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proposalId",
                      "scope": 2058,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1959,
                        "name": "ElementaryTypeName",
                        "src": "12357:7:9"
                      }
                    ],
                    "id": 1960,
                    "name": "VariableDeclaration",
                    "src": "12357:18:9"
                  }
                ],
                "id": 1961,
                "name": "ParameterList",
                "src": "12356:20:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1966,
                "name": "ParameterList",
                "src": "12412:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9647,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 1962,
                    "name": "Identifier",
                    "src": "12386:12:9"
                  }
                ],
                "id": 1963,
                "name": "ModifierInvocation",
                "src": "12386:12:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1742,
                      "type": "modifier ()",
                      "value": "onlyApprover"
                    },
                    "id": 1964,
                    "name": "Identifier",
                    "src": "12399:12:9"
                  }
                ],
                "id": 1965,
                "name": "ModifierInvocation",
                "src": "12399:12:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1968
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "proposal",
                          "scope": 2057,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct GrandaMento.ExchangeProposal",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "ExchangeProposal",
                              "referencedDeclaration": 1709,
                              "type": "struct GrandaMento.ExchangeProposal"
                            },
                            "id": 1967,
                            "name": "UserDefinedTypeName",
                            "src": "12418:16:9"
                          }
                        ],
                        "id": 1968,
                        "name": "VariableDeclaration",
                        "src": "12418:33:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct GrandaMento.ExchangeProposal storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1725,
                              "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                              "value": "exchangeProposals"
                            },
                            "id": 1969,
                            "name": "Identifier",
                            "src": "12454:17:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1960,
                              "type": "uint256",
                              "value": "proposalId"
                            },
                            "id": 1970,
                            "name": "Identifier",
                            "src": "12472:10:9"
                          }
                        ],
                        "id": 1971,
                        "name": "IndexAccess",
                        "src": "12454:29:9"
                      }
                    ],
                    "id": 1972,
                    "name": "VariableDeclarationStatement",
                    "src": "12418:65:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5f07d250355247691ebfa293273b531c2088ec330ce34593573f341f0d9db861",
                                  "typeString": "literal_string \"Proposal must be in Proposed state\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1973,
                            "name": "Identifier",
                            "src": "12542:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 1696,
                                  "type": "enum GrandaMento.ExchangeProposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1968,
                                      "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                      "value": "proposal"
                                    },
                                    "id": 1974,
                                    "name": "Identifier",
                                    "src": "12550:8:9"
                                  }
                                ],
                                "id": 1975,
                                "name": "MemberAccess",
                                "src": "12550:14:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Proposed",
                                  "referencedDeclaration": null,
                                  "type": "enum GrandaMento.ExchangeProposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1685,
                                      "type": "type(enum GrandaMento.ExchangeProposalState)",
                                      "value": "ExchangeProposalState"
                                    },
                                    "id": 1976,
                                    "name": "Identifier",
                                    "src": "12568:21:9"
                                  }
                                ],
                                "id": 1977,
                                "name": "MemberAccess",
                                "src": "12568:30:9"
                              }
                            ],
                            "id": 1978,
                            "name": "BinaryOperation",
                            "src": "12550:48:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f706f73616c206d75737420626520696e2050726f706f736564207374617465",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proposal must be in Proposed state\"",
                              "value": "Proposal must be in Proposed state"
                            },
                            "id": 1979,
                            "name": "Literal",
                            "src": "12600:36:9"
                          }
                        ],
                        "id": 1980,
                        "name": "FunctionCall",
                        "src": "12542:95:9"
                      }
                    ],
                    "id": 1981,
                    "name": "ExpressionStatement",
                    "src": "12542:95:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1985
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "currentRate",
                          "scope": 2057,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct FixidityLib.Fraction",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "FixidityLib.Fraction",
                              "referencedDeclaration": 6931,
                              "type": "struct FixidityLib.Fraction"
                            },
                            "id": 1984,
                            "name": "UserDefinedTypeName",
                            "src": "12812:20:9"
                          }
                        ],
                        "id": 1985,
                        "name": "VariableDeclaration",
                        "src": "12812:39:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct FixidityLib.Fraction memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2546,
                              "type": "function (address) view returns (struct FixidityLib.Fraction memory)",
                              "value": "getOracleExchangeRate"
                            },
                            "id": 1986,
                            "name": "Identifier",
                            "src": "12854:21:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "stableToken",
                              "referencedDeclaration": 1694,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1968,
                                  "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                  "value": "proposal"
                                },
                                "id": 1987,
                                "name": "Identifier",
                                "src": "12876:8:9"
                              }
                            ],
                            "id": 1988,
                            "name": "MemberAccess",
                            "src": "12876:20:9"
                          }
                        ],
                        "id": 1989,
                        "name": "FunctionCall",
                        "src": "12854:43:9"
                      }
                    ],
                    "id": 1990,
                    "name": "VariableDeclarationStatement",
                    "src": "12812:85:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1994
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "proposalRate",
                          "scope": 2057,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct FixidityLib.Fraction",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "FixidityLib.Fraction",
                              "referencedDeclaration": 6931,
                              "type": "struct FixidityLib.Fraction"
                            },
                            "id": 1993,
                            "name": "UserDefinedTypeName",
                            "src": "12903:20:9"
                          }
                        ],
                        "id": 1994,
                        "name": "VariableDeclaration",
                        "src": "12903:40:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct FixidityLib.Fraction memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "wrap",
                              "referencedDeclaration": 6964,
                              "type": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7530,
                                  "type": "type(library FixidityLib)",
                                  "value": "FixidityLib"
                                },
                                "id": 1995,
                                "name": "Identifier",
                                "src": "12946:11:9"
                              }
                            ],
                            "id": 1996,
                            "name": "MemberAccess",
                            "src": "12946:16:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "celoStableTokenExchangeRate",
                              "referencedDeclaration": 1704,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1968,
                                  "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                  "value": "proposal"
                                },
                                "id": 1997,
                                "name": "Identifier",
                                "src": "12963:8:9"
                              }
                            ],
                            "id": 1998,
                            "name": "MemberAccess",
                            "src": "12963:36:9"
                          }
                        ],
                        "id": 1999,
                        "name": "FunctionCall",
                        "src": "12946:54:9"
                      }
                    ],
                    "id": 2000,
                    "name": "VariableDeclarationStatement",
                    "src": "12903:97:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2004,
                        2006
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lesserRate",
                          "scope": 2057,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct FixidityLib.Fraction",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "FixidityLib.Fraction",
                              "referencedDeclaration": 6931,
                              "type": "struct FixidityLib.Fraction"
                            },
                            "id": 2003,
                            "name": "UserDefinedTypeName",
                            "src": "13007:20:9"
                          }
                        ],
                        "id": 2004,
                        "name": "VariableDeclaration",
                        "src": "13007:38:9"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "greaterRate",
                          "scope": 2057,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct FixidityLib.Fraction",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "FixidityLib.Fraction",
                              "referencedDeclaration": 6931,
                              "type": "struct FixidityLib.Fraction"
                            },
                            "id": 2005,
                            "name": "UserDefinedTypeName",
                            "src": "13047:20:9"
                          }
                        ],
                        "id": 2006,
                        "name": "VariableDeclaration",
                        "src": "13047:39:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                      "typeString": "struct FixidityLib.Fraction memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "lt",
                                  "referencedDeclaration": 7483,
                                  "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1985,
                                      "type": "struct FixidityLib.Fraction memory",
                                      "value": "currentRate"
                                    },
                                    "id": 2007,
                                    "name": "Identifier",
                                    "src": "13090:11:9"
                                  }
                                ],
                                "id": 2008,
                                "name": "MemberAccess",
                                "src": "13090:14:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1994,
                                  "type": "struct FixidityLib.Fraction memory",
                                  "value": "proposalRate"
                                },
                                "id": 2009,
                                "name": "Identifier",
                                "src": "13105:12:9"
                              }
                            ],
                            "id": 2010,
                            "name": "FunctionCall",
                            "src": "13090:28:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1985,
                                  "type": "struct FixidityLib.Fraction memory",
                                  "value": "currentRate"
                                },
                                "id": 2011,
                                "name": "Identifier",
                                "src": "13128:11:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1994,
                                  "type": "struct FixidityLib.Fraction memory",
                                  "value": "proposalRate"
                                },
                                "id": 2012,
                                "name": "Identifier",
                                "src": "13141:12:9"
                              }
                            ],
                            "id": 2013,
                            "name": "TupleExpression",
                            "src": "13127:27:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1994,
                                  "type": "struct FixidityLib.Fraction memory",
                                  "value": "proposalRate"
                                },
                                "id": 2014,
                                "name": "Identifier",
                                "src": "13164:12:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1985,
                                  "type": "struct FixidityLib.Fraction memory",
                                  "value": "currentRate"
                                },
                                "id": 2015,
                                "name": "Identifier",
                                "src": "13178:11:9"
                              }
                            ],
                            "id": 2016,
                            "name": "TupleExpression",
                            "src": "13163:27:9"
                          }
                        ],
                        "id": 2017,
                        "name": "Conditional",
                        "src": "13090:100:9"
                      }
                    ],
                    "id": 2018,
                    "name": "VariableDeclarationStatement",
                    "src": "13006:184:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2022
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "rateChange",
                          "scope": 2057,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct FixidityLib.Fraction",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "FixidityLib.Fraction",
                              "referencedDeclaration": 6931,
                              "type": "struct FixidityLib.Fraction"
                            },
                            "id": 2021,
                            "name": "UserDefinedTypeName",
                            "src": "13196:20:9"
                          }
                        ],
                        "id": 2022,
                        "name": "VariableDeclaration",
                        "src": "13196:38:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct FixidityLib.Fraction memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "divide",
                              "referencedDeclaration": 7435,
                              "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct FixidityLib.Fraction memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                          "typeString": "struct FixidityLib.Fraction memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "subtract",
                                      "referencedDeclaration": 7149,
                                      "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2006,
                                          "type": "struct FixidityLib.Fraction memory",
                                          "value": "greaterRate"
                                        },
                                        "id": 2023,
                                        "name": "Identifier",
                                        "src": "13237:11:9"
                                      }
                                    ],
                                    "id": 2024,
                                    "name": "MemberAccess",
                                    "src": "13237:20:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2004,
                                      "type": "struct FixidityLib.Fraction memory",
                                      "value": "lesserRate"
                                    },
                                    "id": 2025,
                                    "name": "Identifier",
                                    "src": "13258:10:9"
                                  }
                                ],
                                "id": 2026,
                                "name": "FunctionCall",
                                "src": "13237:32:9"
                              }
                            ],
                            "id": 2027,
                            "name": "MemberAccess",
                            "src": "13237:39:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1994,
                              "type": "struct FixidityLib.Fraction memory",
                              "value": "proposalRate"
                            },
                            "id": 2028,
                            "name": "Identifier",
                            "src": "13277:12:9"
                          }
                        ],
                        "id": 2029,
                        "name": "FunctionCall",
                        "src": "13237:53:9"
                      }
                    ],
                    "id": 2030,
                    "name": "VariableDeclarationStatement",
                    "src": "13196:94:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b0ac17e3919bdf22a49d2ef31bd4c38ec015be0b3ae601abd9de4a352dbf757b",
                                  "typeString": "literal_string \"CELO exchange rate is too different from the proposed price\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2031,
                            "name": "Identifier",
                            "src": "13296:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                                      "typeString": "struct FixidityLib.Fraction storage ref"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "lte",
                                  "referencedDeclaration": 7499,
                                  "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2022,
                                      "type": "struct FixidityLib.Fraction memory",
                                      "value": "rateChange"
                                    },
                                    "id": 2032,
                                    "name": "Identifier",
                                    "src": "13304:10:9"
                                  }
                                ],
                                "id": 2033,
                                "name": "MemberAccess",
                                "src": "13304:14:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1713,
                                  "type": "struct FixidityLib.Fraction storage ref",
                                  "value": "maxApprovalExchangeRateChange"
                                },
                                "id": 2034,
                                "name": "Identifier",
                                "src": "13319:29:9"
                              }
                            ],
                            "id": 2035,
                            "name": "FunctionCall",
                            "src": "13304:45:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "43454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f736564207072696365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"CELO exchange rate is too different from the proposed price\"",
                              "value": "CELO exchange rate is too different from the proposed price"
                            },
                            "id": 2036,
                            "name": "Literal",
                            "src": "13351:61:9"
                          }
                        ],
                        "id": 2037,
                        "name": "FunctionCall",
                        "src": "13296:117:9"
                      }
                    ],
                    "id": 2038,
                    "name": "ExpressionStatement",
                    "src": "13296:117:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "approvalTimestamp",
                              "referencedDeclaration": 1708,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1968,
                                  "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                  "value": "proposal"
                                },
                                "id": 2039,
                                "name": "Identifier",
                                "src": "13484:8:9"
                              }
                            ],
                            "id": 2041,
                            "name": "MemberAccess",
                            "src": "13484:26:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14213,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 2042,
                                "name": "Identifier",
                                "src": "13513:5:9"
                              }
                            ],
                            "id": 2043,
                            "name": "MemberAccess",
                            "src": "13513:15:9"
                          }
                        ],
                        "id": 2044,
                        "name": "Assignment",
                        "src": "13484:44:9"
                      }
                    ],
                    "id": 2045,
                    "name": "ExpressionStatement",
                    "src": "13484:44:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum GrandaMento.ExchangeProposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "state",
                              "referencedDeclaration": 1696,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1968,
                                  "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                  "value": "proposal"
                                },
                                "id": 2046,
                                "name": "Identifier",
                                "src": "13534:8:9"
                              }
                            ],
                            "id": 2048,
                            "name": "MemberAccess",
                            "src": "13534:14:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Approved",
                              "referencedDeclaration": null,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1685,
                                  "type": "type(enum GrandaMento.ExchangeProposalState)",
                                  "value": "ExchangeProposalState"
                                },
                                "id": 2049,
                                "name": "Identifier",
                                "src": "13551:21:9"
                              }
                            ],
                            "id": 2050,
                            "name": "MemberAccess",
                            "src": "13551:30:9"
                          }
                        ],
                        "id": 2051,
                        "name": "Assignment",
                        "src": "13534:47:9"
                      }
                    ],
                    "id": 2052,
                    "name": "ExpressionStatement",
                    "src": "13534:47:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1647,
                              "type": "function (uint256)",
                              "value": "ExchangeProposalApproved"
                            },
                            "id": 2053,
                            "name": "Identifier",
                            "src": "13592:24:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1960,
                              "type": "uint256",
                              "value": "proposalId"
                            },
                            "id": 2054,
                            "name": "Identifier",
                            "src": "13617:10:9"
                          }
                        ],
                        "id": 2055,
                        "name": "FunctionCall",
                        "src": "13592:36:9"
                      }
                    ],
                    "id": 2056,
                    "name": "EmitStatement",
                    "src": "13587:41:9"
                  }
                ],
                "id": 2057,
                "name": "Block",
                "src": "12412:1221:9"
              }
            ],
            "id": 2058,
            "name": "FunctionDefinition",
            "src": "12324:1309:9"
          },
          {
            "attributes": {
              "documentation": "@notice Cancels an exchange proposal.\n@dev Only callable by the exchanger if the proposal is in the Proposed state\nor the owner if the proposal is in the Approved state.\n@param proposalId The identifier of the proposal to cancel.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "cancelExchangeProposal",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proposalId",
                      "scope": 2135,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2059,
                        "name": "ElementaryTypeName",
                        "src": "13931:7:9"
                      }
                    ],
                    "id": 2060,
                    "name": "VariableDeclaration",
                    "src": "13931:18:9"
                  }
                ],
                "id": 2061,
                "name": "ParameterList",
                "src": "13930:20:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2064,
                "name": "ParameterList",
                "src": "13973:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9647,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 2062,
                    "name": "Identifier",
                    "src": "13960:12:9"
                  }
                ],
                "id": 2063,
                "name": "ModifierInvocation",
                "src": "13960:12:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2066
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "proposal",
                          "scope": 2134,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct GrandaMento.ExchangeProposal",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "ExchangeProposal",
                              "referencedDeclaration": 1709,
                              "type": "struct GrandaMento.ExchangeProposal"
                            },
                            "id": 2065,
                            "name": "UserDefinedTypeName",
                            "src": "13979:16:9"
                          }
                        ],
                        "id": 2066,
                        "name": "VariableDeclaration",
                        "src": "13979:33:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct GrandaMento.ExchangeProposal storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1725,
                              "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                              "value": "exchangeProposals"
                            },
                            "id": 2067,
                            "name": "Identifier",
                            "src": "14015:17:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2060,
                              "type": "uint256",
                              "value": "proposalId"
                            },
                            "id": 2068,
                            "name": "Identifier",
                            "src": "14033:10:9"
                          }
                        ],
                        "id": 2069,
                        "name": "IndexAccess",
                        "src": "14015:29:9"
                      }
                    ],
                    "id": 2070,
                    "name": "VariableDeclarationStatement",
                    "src": "13979:65:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "state",
                              "referencedDeclaration": 1696,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2066,
                                  "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                  "value": "proposal"
                                },
                                "id": 2071,
                                "name": "Identifier",
                                "src": "14232:8:9"
                              }
                            ],
                            "id": 2072,
                            "name": "MemberAccess",
                            "src": "14232:14:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Proposed",
                              "referencedDeclaration": null,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1685,
                                  "type": "type(enum GrandaMento.ExchangeProposalState)",
                                  "value": "ExchangeProposalState"
                                },
                                "id": 2073,
                                "name": "Identifier",
                                "src": "14250:21:9"
                              }
                            ],
                            "id": 2074,
                            "name": "MemberAccess",
                            "src": "14250:30:9"
                          }
                        ],
                        "id": 2075,
                        "name": "BinaryOperation",
                        "src": "14232:48:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_0d0878d974f3ca893a13f341842199f45ffc8b0363faa926f8cac59e4e0ccf82",
                                          "typeString": "literal_string \"Sender must be exchanger\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        14226,
                                        14227
                                      ],
                                      "referencedDeclaration": 14227,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 2076,
                                    "name": "Identifier",
                                    "src": "14290:7:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "exchanger",
                                          "referencedDeclaration": 1692,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2066,
                                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                              "value": "proposal"
                                            },
                                            "id": 2077,
                                            "name": "Identifier",
                                            "src": "14298:8:9"
                                          }
                                        ],
                                        "id": 2078,
                                        "name": "MemberAccess",
                                        "src": "14298:18:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 14223,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 2079,
                                            "name": "Identifier",
                                            "src": "14320:3:9"
                                          }
                                        ],
                                        "id": 2080,
                                        "name": "MemberAccess",
                                        "src": "14320:10:9"
                                      }
                                    ],
                                    "id": 2081,
                                    "name": "BinaryOperation",
                                    "src": "14298:32:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "53656e646572206d7573742062652065786368616e676572",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Sender must be exchanger\"",
                                      "value": "Sender must be exchanger"
                                    },
                                    "id": 2082,
                                    "name": "Literal",
                                    "src": "14332:26:9"
                                  }
                                ],
                                "id": 2083,
                                "name": "FunctionCall",
                                "src": "14290:69:9"
                              }
                            ],
                            "id": 2084,
                            "name": "ExpressionStatement",
                            "src": "14290:69:9"
                          }
                        ],
                        "id": 2085,
                        "name": "Block",
                        "src": "14282:84:9"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 1696,
                                  "type": "enum GrandaMento.ExchangeProposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2066,
                                      "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                      "value": "proposal"
                                    },
                                    "id": 2086,
                                    "name": "Identifier",
                                    "src": "14376:8:9"
                                  }
                                ],
                                "id": 2087,
                                "name": "MemberAccess",
                                "src": "14376:14:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Approved",
                                  "referencedDeclaration": null,
                                  "type": "enum GrandaMento.ExchangeProposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1685,
                                      "type": "type(enum GrandaMento.ExchangeProposalState)",
                                      "value": "ExchangeProposalState"
                                    },
                                    "id": 2088,
                                    "name": "Identifier",
                                    "src": "14394:21:9"
                                  }
                                ],
                                "id": 2089,
                                "name": "MemberAccess",
                                "src": "14394:30:9"
                              }
                            ],
                            "id": 2090,
                            "name": "BinaryOperation",
                            "src": "14376:48:9"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_404c2168553dbdc824a22b8a75a593b364cc920eebfd6e09e56793693e59f693",
                                              "typeString": "literal_string \"Sender must be owner\""
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            14226,
                                            14227
                                          ],
                                          "referencedDeclaration": 14227,
                                          "type": "function (bool,string memory) pure",
                                          "value": "require"
                                        },
                                        "id": 2091,
                                        "name": "Identifier",
                                        "src": "14434:7:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bool",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 344,
                                              "type": "function () view returns (bool)",
                                              "value": "isOwner"
                                            },
                                            "id": 2092,
                                            "name": "Identifier",
                                            "src": "14442:7:9"
                                          }
                                        ],
                                        "id": 2093,
                                        "name": "FunctionCall",
                                        "src": "14442:9:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "53656e646572206d757374206265206f776e6572",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "string",
                                          "type": "literal_string \"Sender must be owner\"",
                                          "value": "Sender must be owner"
                                        },
                                        "id": 2094,
                                        "name": "Literal",
                                        "src": "14453:22:9"
                                      }
                                    ],
                                    "id": 2095,
                                    "name": "FunctionCall",
                                    "src": "14434:42:9"
                                  }
                                ],
                                "id": 2096,
                                "name": "ExpressionStatement",
                                "src": "14434:42:9"
                              }
                            ],
                            "id": 2097,
                            "name": "Block",
                            "src": "14426:57:9"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_91d3ace944acdf7d687a846eb2b5661f450ab871065be0f62adfff3bbd59ffb4",
                                              "typeString": "literal_string \"Proposal must be in Proposed or Approved state\""
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            14228,
                                            14229
                                          ],
                                          "referencedDeclaration": 14229,
                                          "type": "function (string memory) pure",
                                          "value": "revert"
                                        },
                                        "id": 2098,
                                        "name": "Identifier",
                                        "src": "14497:6:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "50726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "string",
                                          "type": "literal_string \"Proposal must be in Proposed or Approved state\"",
                                          "value": "Proposal must be in Proposed or Approved state"
                                        },
                                        "id": 2099,
                                        "name": "Literal",
                                        "src": "14504:48:9"
                                      }
                                    ],
                                    "id": 2100,
                                    "name": "FunctionCall",
                                    "src": "14497:56:9"
                                  }
                                ],
                                "id": 2101,
                                "name": "ExpressionStatement",
                                "src": "14497:56:9"
                              }
                            ],
                            "id": 2102,
                            "name": "Block",
                            "src": "14489:71:9"
                          }
                        ],
                        "id": 2103,
                        "name": "IfStatement",
                        "src": "14372:188:9"
                      }
                    ],
                    "id": 2104,
                    "name": "IfStatement",
                    "src": "14228:332:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum GrandaMento.ExchangeProposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "state",
                              "referencedDeclaration": 1696,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2066,
                                  "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                  "value": "proposal"
                                },
                                "id": 2105,
                                "name": "Identifier",
                                "src": "14662:8:9"
                              }
                            ],
                            "id": 2107,
                            "name": "MemberAccess",
                            "src": "14662:14:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Cancelled",
                              "referencedDeclaration": null,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1685,
                                  "type": "type(enum GrandaMento.ExchangeProposalState)",
                                  "value": "ExchangeProposalState"
                                },
                                "id": 2108,
                                "name": "Identifier",
                                "src": "14679:21:9"
                              }
                            ],
                            "id": 2109,
                            "name": "MemberAccess",
                            "src": "14679:31:9"
                          }
                        ],
                        "id": 2110,
                        "name": "Assignment",
                        "src": "14662:48:9"
                      }
                    ],
                    "id": 2111,
                    "name": "ExpressionStatement",
                    "src": "14662:48:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2113,
                        2115
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "refundToken",
                          "scope": 2134,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 469,
                              "type": "contract IERC20"
                            },
                            "id": 2112,
                            "name": "UserDefinedTypeName",
                            "src": "14788:6:9"
                          }
                        ],
                        "id": 2113,
                        "name": "VariableDeclaration",
                        "src": "14788:18:9"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "refundAmount",
                          "scope": 2134,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2114,
                            "name": "ElementaryTypeName",
                            "src": "14808:7:9"
                          }
                        ],
                        "id": 2115,
                        "name": "VariableDeclaration",
                        "src": "14808:20:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple(contract IERC20,uint256)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2318,
                              "type": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)",
                              "value": "getSellTokenAndSellAmount"
                            },
                            "id": 2116,
                            "name": "Identifier",
                            "src": "14832:25:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2066,
                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                              "value": "proposal"
                            },
                            "id": 2117,
                            "name": "Identifier",
                            "src": "14858:8:9"
                          }
                        ],
                        "id": 2118,
                        "name": "FunctionCall",
                        "src": "14832:35:9"
                      }
                    ],
                    "id": 2119,
                    "name": "VariableDeclarationStatement",
                    "src": "14787:80:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d9a882f5283dfc7ded7f8414ccb91e66df6245ba57228b30beb7da35984b0f40",
                                  "typeString": "literal_string \"Transfer out of refund token failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2120,
                            "name": "Identifier",
                            "src": "14923:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transfer",
                                  "referencedDeclaration": 423,
                                  "type": "function (address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2113,
                                      "type": "contract IERC20",
                                      "value": "refundToken"
                                    },
                                    "id": 2121,
                                    "name": "Identifier",
                                    "src": "14931:11:9"
                                  }
                                ],
                                "id": 2122,
                                "name": "MemberAccess",
                                "src": "14931:20:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exchanger",
                                  "referencedDeclaration": 1692,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2066,
                                      "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                      "value": "proposal"
                                    },
                                    "id": 2123,
                                    "name": "Identifier",
                                    "src": "14952:8:9"
                                  }
                                ],
                                "id": 2124,
                                "name": "MemberAccess",
                                "src": "14952:18:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2115,
                                  "type": "uint256",
                                  "value": "refundAmount"
                                },
                                "id": 2125,
                                "name": "Identifier",
                                "src": "14972:12:9"
                              }
                            ],
                            "id": 2126,
                            "name": "FunctionCall",
                            "src": "14931:54:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Transfer out of refund token failed\"",
                              "value": "Transfer out of refund token failed"
                            },
                            "id": 2127,
                            "name": "Literal",
                            "src": "14987:37:9"
                          }
                        ],
                        "id": 2128,
                        "name": "FunctionCall",
                        "src": "14923:102:9"
                      }
                    ],
                    "id": 2129,
                    "name": "ExpressionStatement",
                    "src": "14923:102:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1651,
                              "type": "function (uint256)",
                              "value": "ExchangeProposalCancelled"
                            },
                            "id": 2130,
                            "name": "Identifier",
                            "src": "15036:25:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2060,
                              "type": "uint256",
                              "value": "proposalId"
                            },
                            "id": 2131,
                            "name": "Identifier",
                            "src": "15062:10:9"
                          }
                        ],
                        "id": 2132,
                        "name": "FunctionCall",
                        "src": "15036:37:9"
                      }
                    ],
                    "id": 2133,
                    "name": "EmitStatement",
                    "src": "15031:42:9"
                  }
                ],
                "id": 2134,
                "name": "Block",
                "src": "13973:1105:9"
              }
            ],
            "id": 2135,
            "name": "FunctionDefinition",
            "src": "13899:1179:9"
          },
          {
            "attributes": {
              "documentation": "@notice Executes an exchange proposal that's been approved and not vetoed.\n@dev Callable by anyone. Reverts if the proposal is not in the Approved state\nor proposal.vetoPeriodSeconds has not elapsed since approval.\n@param proposalId The identifier of the proposal to execute.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "executeExchangeProposal",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proposalId",
                      "scope": 2244,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2136,
                        "name": "ElementaryTypeName",
                        "src": "15423:7:9"
                      }
                    ],
                    "id": 2137,
                    "name": "VariableDeclaration",
                    "src": "15423:18:9"
                  }
                ],
                "id": 2138,
                "name": "ParameterList",
                "src": "15422:20:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2141,
                "name": "ParameterList",
                "src": "15465:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9647,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 2139,
                    "name": "Identifier",
                    "src": "15452:12:9"
                  }
                ],
                "id": 2140,
                "name": "ModifierInvocation",
                "src": "15452:12:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2143
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "proposal",
                          "scope": 2243,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct GrandaMento.ExchangeProposal",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "ExchangeProposal",
                              "referencedDeclaration": 1709,
                              "type": "struct GrandaMento.ExchangeProposal"
                            },
                            "id": 2142,
                            "name": "UserDefinedTypeName",
                            "src": "15471:16:9"
                          }
                        ],
                        "id": 2143,
                        "name": "VariableDeclaration",
                        "src": "15471:33:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct GrandaMento.ExchangeProposal storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1725,
                              "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                              "value": "exchangeProposals"
                            },
                            "id": 2144,
                            "name": "Identifier",
                            "src": "15507:17:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2137,
                              "type": "uint256",
                              "value": "proposalId"
                            },
                            "id": 2145,
                            "name": "Identifier",
                            "src": "15525:10:9"
                          }
                        ],
                        "id": 2146,
                        "name": "IndexAccess",
                        "src": "15507:29:9"
                      }
                    ],
                    "id": 2147,
                    "name": "VariableDeclarationStatement",
                    "src": "15471:65:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6492cca35e68d90b1c479734012d7c4759c952cfee1ac9ddb401bb3fff651638",
                                  "typeString": "literal_string \"Proposal must be in Approved state\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2148,
                            "name": "Identifier",
                            "src": "15601:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 1696,
                                  "type": "enum GrandaMento.ExchangeProposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2143,
                                      "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                      "value": "proposal"
                                    },
                                    "id": 2149,
                                    "name": "Identifier",
                                    "src": "15609:8:9"
                                  }
                                ],
                                "id": 2150,
                                "name": "MemberAccess",
                                "src": "15609:14:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Approved",
                                  "referencedDeclaration": null,
                                  "type": "enum GrandaMento.ExchangeProposalState"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1685,
                                      "type": "type(enum GrandaMento.ExchangeProposalState)",
                                      "value": "ExchangeProposalState"
                                    },
                                    "id": 2151,
                                    "name": "Identifier",
                                    "src": "15627:21:9"
                                  }
                                ],
                                "id": 2152,
                                "name": "MemberAccess",
                                "src": "15627:30:9"
                              }
                            ],
                            "id": 2153,
                            "name": "BinaryOperation",
                            "src": "15609:48:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f706f73616c206d75737420626520696e20417070726f766564207374617465",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proposal must be in Approved state\"",
                              "value": "Proposal must be in Approved state"
                            },
                            "id": 2154,
                            "name": "Literal",
                            "src": "15659:36:9"
                          }
                        ],
                        "id": 2155,
                        "name": "FunctionCall",
                        "src": "15601:95:9"
                      }
                    ],
                    "id": 2156,
                    "name": "ExpressionStatement",
                    "src": "15601:95:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d9adb9325f97705d5387db63be73967a449629e33d2c0e1b56671067dfa3d14f",
                                  "typeString": "literal_string \"Veto period not elapsed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2157,
                            "name": "Identifier",
                            "src": "15775:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 122,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "approvalTimestamp",
                                          "referencedDeclaration": 1708,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2143,
                                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                              "value": "proposal"
                                            },
                                            "id": 2158,
                                            "name": "Identifier",
                                            "src": "15783:8:9"
                                          }
                                        ],
                                        "id": 2159,
                                        "name": "MemberAccess",
                                        "src": "15783:26:9"
                                      }
                                    ],
                                    "id": 2160,
                                    "name": "MemberAccess",
                                    "src": "15783:30:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "vetoPeriodSeconds",
                                      "referencedDeclaration": 1706,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2143,
                                          "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                          "value": "proposal"
                                        },
                                        "id": 2161,
                                        "name": "Identifier",
                                        "src": "15814:8:9"
                                      }
                                    ],
                                    "id": 2162,
                                    "name": "MemberAccess",
                                    "src": "15814:26:9"
                                  }
                                ],
                                "id": 2163,
                                "name": "FunctionCall",
                                "src": "15783:58:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "timestamp",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 14213,
                                      "type": "block",
                                      "value": "block"
                                    },
                                    "id": 2164,
                                    "name": "Identifier",
                                    "src": "15845:5:9"
                                  }
                                ],
                                "id": 2165,
                                "name": "MemberAccess",
                                "src": "15845:15:9"
                              }
                            ],
                            "id": 2166,
                            "name": "BinaryOperation",
                            "src": "15783:77:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5665746f20706572696f64206e6f7420656c6170736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Veto period not elapsed\"",
                              "value": "Veto period not elapsed"
                            },
                            "id": 2167,
                            "name": "Literal",
                            "src": "15862:25:9"
                          }
                        ],
                        "id": 2168,
                        "name": "FunctionCall",
                        "src": "15775:113:9"
                      }
                    ],
                    "id": 2169,
                    "name": "ExpressionStatement",
                    "src": "15775:113:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum GrandaMento.ExchangeProposalState"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "state",
                              "referencedDeclaration": 1696,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2143,
                                  "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                  "value": "proposal"
                                },
                                "id": 2170,
                                "name": "Identifier",
                                "src": "15991:8:9"
                              }
                            ],
                            "id": 2172,
                            "name": "MemberAccess",
                            "src": "15991:14:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Executed",
                              "referencedDeclaration": null,
                              "type": "enum GrandaMento.ExchangeProposalState"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1685,
                                  "type": "type(enum GrandaMento.ExchangeProposalState)",
                                  "value": "ExchangeProposalState"
                                },
                                "id": 2173,
                                "name": "Identifier",
                                "src": "16008:21:9"
                              }
                            ],
                            "id": 2174,
                            "name": "MemberAccess",
                            "src": "16008:30:9"
                          }
                        ],
                        "id": 2175,
                        "name": "Assignment",
                        "src": "15991:47:9"
                      }
                    ],
                    "id": 2176,
                    "name": "ExpressionStatement",
                    "src": "15991:47:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2178,
                        2180
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sellToken",
                          "scope": 2243,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 469,
                              "type": "contract IERC20"
                            },
                            "id": 2177,
                            "name": "UserDefinedTypeName",
                            "src": "16074:6:9"
                          }
                        ],
                        "id": 2178,
                        "name": "VariableDeclaration",
                        "src": "16074:16:9"
                      },
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sellAmount",
                          "scope": 2243,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2179,
                            "name": "ElementaryTypeName",
                            "src": "16092:7:9"
                          }
                        ],
                        "id": 2180,
                        "name": "VariableDeclaration",
                        "src": "16092:18:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple(contract IERC20,uint256)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$1709_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2318,
                              "type": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)",
                              "value": "getSellTokenAndSellAmount"
                            },
                            "id": 2181,
                            "name": "Identifier",
                            "src": "16114:25:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2143,
                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                              "value": "proposal"
                            },
                            "id": 2182,
                            "name": "Identifier",
                            "src": "16140:8:9"
                          }
                        ],
                        "id": 2183,
                        "name": "FunctionCall",
                        "src": "16114:35:9"
                      }
                    ],
                    "id": 2184,
                    "name": "VariableDeclarationStatement",
                    "src": "16073:76:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "sellCelo",
                          "referencedDeclaration": 1698,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2143,
                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                              "value": "proposal"
                            },
                            "id": 2185,
                            "name": "Identifier",
                            "src": "16297:8:9"
                          }
                        ],
                        "id": 2186,
                        "name": "MemberAccess",
                        "src": "16297:17:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_6fc922853d1b52a948a9059e822d355fcf8ace00967171f83e0cd00d5de8b72b",
                                          "typeString": "literal_string \"Transfer out of CELO to Reserve failed\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        14226,
                                        14227
                                      ],
                                      "referencedDeclaration": 14227,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 2187,
                                    "name": "Identifier",
                                    "src": "16382:7:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "transfer",
                                          "referencedDeclaration": 423,
                                          "type": "function (address,uint256) external returns (bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2178,
                                              "type": "contract IERC20",
                                              "value": "sellToken"
                                            },
                                            "id": 2188,
                                            "name": "Identifier",
                                            "src": "16390:9:9"
                                          }
                                        ],
                                        "id": 2189,
                                        "name": "MemberAccess",
                                        "src": "16390:18:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "address",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IReserve_$14008",
                                                  "typeString": "contract IReserve"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(address)",
                                              "value": "address"
                                            },
                                            "id": 2190,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "16409:7:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "contract IReserve",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 10779,
                                                  "type": "function () view returns (contract IReserve)",
                                                  "value": "getReserve"
                                                },
                                                "id": 2191,
                                                "name": "Identifier",
                                                "src": "16417:10:9"
                                              }
                                            ],
                                            "id": 2192,
                                            "name": "FunctionCall",
                                            "src": "16417:12:9"
                                          }
                                        ],
                                        "id": 2193,
                                        "name": "FunctionCall",
                                        "src": "16409:21:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2180,
                                          "type": "uint256",
                                          "value": "sellAmount"
                                        },
                                        "id": 2194,
                                        "name": "Identifier",
                                        "src": "16432:10:9"
                                      }
                                    ],
                                    "id": 2195,
                                    "name": "FunctionCall",
                                    "src": "16390:53:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "5472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c6564",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Transfer out of CELO to Reserve failed\"",
                                      "value": "Transfer out of CELO to Reserve failed"
                                    },
                                    "id": 2196,
                                    "name": "Literal",
                                    "src": "16445:40:9"
                                  }
                                ],
                                "id": 2197,
                                "name": "FunctionCall",
                                "src": "16382:104:9"
                              }
                            ],
                            "id": 2198,
                            "name": "ExpressionStatement",
                            "src": "16382:104:9"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_a5e1b1f0876e7b6c87ca8770e27a0603b7f7c4f2716d8c02c9fb21d8065e1d99",
                                          "typeString": "literal_string \"Stable token mint failed\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        14226,
                                        14227
                                      ],
                                      "referencedDeclaration": 14227,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 2199,
                                    "name": "Identifier",
                                    "src": "16539:7:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "mint",
                                          "referencedDeclaration": 14095,
                                          "type": "function (address,uint256) external returns (bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "contract IStableToken",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 14142,
                                                  "type": "type(contract IStableToken)",
                                                  "value": "IStableToken"
                                                },
                                                "id": 2200,
                                                "name": "Identifier",
                                                "src": "16547:12:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "stableToken",
                                                  "referencedDeclaration": 1694,
                                                  "type": "address"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2143,
                                                      "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                                      "value": "proposal"
                                                    },
                                                    "id": 2201,
                                                    "name": "Identifier",
                                                    "src": "16560:8:9"
                                                  }
                                                ],
                                                "id": 2202,
                                                "name": "MemberAccess",
                                                "src": "16560:20:9"
                                              }
                                            ],
                                            "id": 2203,
                                            "name": "FunctionCall",
                                            "src": "16547:34:9"
                                          }
                                        ],
                                        "id": 2204,
                                        "name": "MemberAccess",
                                        "src": "16547:39:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "exchanger",
                                          "referencedDeclaration": 1692,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2143,
                                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                              "value": "proposal"
                                            },
                                            "id": 2205,
                                            "name": "Identifier",
                                            "src": "16587:8:9"
                                          }
                                        ],
                                        "id": 2206,
                                        "name": "MemberAccess",
                                        "src": "16587:18:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "buyAmount",
                                          "referencedDeclaration": 1702,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2143,
                                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                              "value": "proposal"
                                            },
                                            "id": 2207,
                                            "name": "Identifier",
                                            "src": "16607:8:9"
                                          }
                                        ],
                                        "id": 2208,
                                        "name": "MemberAccess",
                                        "src": "16607:18:9"
                                      }
                                    ],
                                    "id": 2209,
                                    "name": "FunctionCall",
                                    "src": "16547:79:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "537461626c6520746f6b656e206d696e74206661696c6564",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Stable token mint failed\"",
                                      "value": "Stable token mint failed"
                                    },
                                    "id": 2210,
                                    "name": "Literal",
                                    "src": "16628:26:9"
                                  }
                                ],
                                "id": 2211,
                                "name": "FunctionCall",
                                "src": "16539:116:9"
                              }
                            ],
                            "id": 2212,
                            "name": "ExpressionStatement",
                            "src": "16539:116:9"
                          }
                        ],
                        "id": 2213,
                        "name": "Block",
                        "src": "16316:346:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_efec162428556da2b45d085c1a911c7ef180d0382abc4781aed63a8187c50108",
                                          "typeString": "literal_string \"Stable token burn failed\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        14226,
                                        14227
                                      ],
                                      "referencedDeclaration": 14227,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 2214,
                                    "name": "Identifier",
                                    "src": "16892:7:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "burn",
                                          "referencedDeclaration": 14102,
                                          "type": "function (uint256) external returns (bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "contract IStableToken",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 14142,
                                                  "type": "type(contract IStableToken)",
                                                  "value": "IStableToken"
                                                },
                                                "id": 2215,
                                                "name": "Identifier",
                                                "src": "16900:12:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "stableToken",
                                                  "referencedDeclaration": 1694,
                                                  "type": "address"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 2143,
                                                      "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                                      "value": "proposal"
                                                    },
                                                    "id": 2216,
                                                    "name": "Identifier",
                                                    "src": "16913:8:9"
                                                  }
                                                ],
                                                "id": 2217,
                                                "name": "MemberAccess",
                                                "src": "16913:20:9"
                                              }
                                            ],
                                            "id": 2218,
                                            "name": "FunctionCall",
                                            "src": "16900:34:9"
                                          }
                                        ],
                                        "id": 2219,
                                        "name": "MemberAccess",
                                        "src": "16900:39:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2180,
                                          "type": "uint256",
                                          "value": "sellAmount"
                                        },
                                        "id": 2220,
                                        "name": "Identifier",
                                        "src": "16940:10:9"
                                      }
                                    ],
                                    "id": 2221,
                                    "name": "FunctionCall",
                                    "src": "16900:51:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "537461626c6520746f6b656e206275726e206661696c6564",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Stable token burn failed\"",
                                      "value": "Stable token burn failed"
                                    },
                                    "id": 2222,
                                    "name": "Literal",
                                    "src": "16953:26:9"
                                  }
                                ],
                                "id": 2223,
                                "name": "FunctionCall",
                                "src": "16892:88:9"
                              }
                            ],
                            "id": 2224,
                            "name": "ExpressionStatement",
                            "src": "16892:88:9"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_b3166ce0190dbb91e92210474c455f5511f5a0a878da93f4f966137efc12b895",
                                          "typeString": "literal_string \"Transfer out of CELO from Reserve failed\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        14226,
                                        14227
                                      ],
                                      "referencedDeclaration": 14227,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 2225,
                                    "name": "Identifier",
                                    "src": "17050:7:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "transferExchangeGold",
                                          "referencedDeclaration": 13957,
                                          "type": "function (address payable,uint256) external returns (bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "contract IReserve",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    null
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 10779,
                                                  "type": "function () view returns (contract IReserve)",
                                                  "value": "getReserve"
                                                },
                                                "id": 2226,
                                                "name": "Identifier",
                                                "src": "17067:10:9"
                                              }
                                            ],
                                            "id": 2227,
                                            "name": "FunctionCall",
                                            "src": "17067:12:9"
                                          }
                                        ],
                                        "id": 2228,
                                        "name": "MemberAccess",
                                        "src": "17067:33:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "exchanger",
                                          "referencedDeclaration": 1692,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2143,
                                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                              "value": "proposal"
                                            },
                                            "id": 2229,
                                            "name": "Identifier",
                                            "src": "17101:8:9"
                                          }
                                        ],
                                        "id": 2230,
                                        "name": "MemberAccess",
                                        "src": "17101:18:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "buyAmount",
                                          "referencedDeclaration": 1702,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2143,
                                              "type": "struct GrandaMento.ExchangeProposal storage pointer",
                                              "value": "proposal"
                                            },
                                            "id": 2231,
                                            "name": "Identifier",
                                            "src": "17121:8:9"
                                          }
                                        ],
                                        "id": 2232,
                                        "name": "MemberAccess",
                                        "src": "17121:18:9"
                                      }
                                    ],
                                    "id": 2233,
                                    "name": "FunctionCall",
                                    "src": "17067:73:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "5472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c6564",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"Transfer out of CELO from Reserve failed\"",
                                      "value": "Transfer out of CELO from Reserve failed"
                                    },
                                    "id": 2234,
                                    "name": "Literal",
                                    "src": "17150:42:9"
                                  }
                                ],
                                "id": 2235,
                                "name": "FunctionCall",
                                "src": "17050:150:9"
                              }
                            ],
                            "id": 2236,
                            "name": "ExpressionStatement",
                            "src": "17050:150:9"
                          }
                        ],
                        "id": 2237,
                        "name": "Block",
                        "src": "16668:539:9"
                      }
                    ],
                    "id": 2238,
                    "name": "IfStatement",
                    "src": "16293:914:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1655,
                              "type": "function (uint256)",
                              "value": "ExchangeProposalExecuted"
                            },
                            "id": 2239,
                            "name": "Identifier",
                            "src": "17217:24:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2137,
                              "type": "uint256",
                              "value": "proposalId"
                            },
                            "id": 2240,
                            "name": "Identifier",
                            "src": "17242:10:9"
                          }
                        ],
                        "id": 2241,
                        "name": "FunctionCall",
                        "src": "17217:36:9"
                      }
                    ],
                    "id": 2242,
                    "name": "EmitStatement",
                    "src": "17212:41:9"
                  }
                ],
                "id": 2243,
                "name": "Block",
                "src": "15465:1793:9"
              }
            ],
            "id": 2244,
            "name": "FunctionDefinition",
            "src": "15390:1868:9"
          },
          {
            "attributes": {
              "documentation": "@notice Gets the sell token and the sell amount for a proposal.\n@dev For stable token sell amounts that are stored as units, the value\nis returned. Ensures sell amount is not greater than this contract's balance.\n@param proposal The proposal to get the sell token and sell amount for.\n@return The IERC20 sell token.\n@return The value sell amount.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getSellTokenAndSellAmount",
              "scope": 2699,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proposal",
                      "scope": 2318,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct GrandaMento.ExchangeProposal",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "ExchangeProposal",
                          "referencedDeclaration": 1709,
                          "type": "struct GrandaMento.ExchangeProposal"
                        },
                        "id": 2245,
                        "name": "UserDefinedTypeName",
                        "src": "17686:16:9"
                      }
                    ],
                    "id": 2246,
                    "name": "VariableDeclaration",
                    "src": "17686:32:9"
                  }
                ],
                "id": 2247,
                "name": "ParameterList",
                "src": "17685:34:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2318,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IERC20",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IERC20",
                          "referencedDeclaration": 469,
                          "type": "contract IERC20"
                        },
                        "id": 2248,
                        "name": "UserDefinedTypeName",
                        "src": "17742:6:9"
                      }
                    ],
                    "id": 2249,
                    "name": "VariableDeclaration",
                    "src": "17742:6:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2318,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2250,
                        "name": "ElementaryTypeName",
                        "src": "17750:7:9"
                      }
                    ],
                    "id": 2251,
                    "name": "VariableDeclaration",
                    "src": "17750:7:9"
                  }
                ],
                "id": 2252,
                "name": "ParameterList",
                "src": "17741:17:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2254
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sellToken",
                          "scope": 2317,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IERC20",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IERC20",
                              "referencedDeclaration": 469,
                              "type": "contract IERC20"
                            },
                            "id": 2253,
                            "name": "UserDefinedTypeName",
                            "src": "17765:6:9"
                          }
                        ],
                        "id": 2254,
                        "name": "VariableDeclaration",
                        "src": "17765:16:9"
                      }
                    ],
                    "id": 2255,
                    "name": "VariableDeclarationStatement",
                    "src": "17765:16:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2257
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sellAmount",
                          "scope": 2317,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2256,
                            "name": "ElementaryTypeName",
                            "src": "17787:7:9"
                          }
                        ],
                        "id": 2257,
                        "name": "VariableDeclaration",
                        "src": "17787:18:9"
                      }
                    ],
                    "id": 2258,
                    "name": "VariableDeclarationStatement",
                    "src": "17787:18:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "sellCelo",
                          "referencedDeclaration": 1698,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2246,
                              "type": "struct GrandaMento.ExchangeProposal memory",
                              "value": "proposal"
                            },
                            "id": 2259,
                            "name": "Identifier",
                            "src": "17815:8:9"
                          }
                        ],
                        "id": 2260,
                        "name": "MemberAccess",
                        "src": "17815:17:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "contract IERC20"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2254,
                                      "type": "contract IERC20",
                                      "value": "sellToken"
                                    },
                                    "id": 2261,
                                    "name": "Identifier",
                                    "src": "17842:9:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract IERC20",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10766,
                                          "type": "function () view returns (contract IERC20)",
                                          "value": "getGoldToken"
                                        },
                                        "id": 2262,
                                        "name": "Identifier",
                                        "src": "17854:12:9"
                                      }
                                    ],
                                    "id": 2263,
                                    "name": "FunctionCall",
                                    "src": "17854:14:9"
                                  }
                                ],
                                "id": 2264,
                                "name": "Assignment",
                                "src": "17842:26:9"
                              }
                            ],
                            "id": 2265,
                            "name": "ExpressionStatement",
                            "src": "17842:26:9"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2257,
                                      "type": "uint256",
                                      "value": "sellAmount"
                                    },
                                    "id": 2266,
                                    "name": "Identifier",
                                    "src": "17876:10:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sellAmount",
                                      "referencedDeclaration": 1700,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2246,
                                          "type": "struct GrandaMento.ExchangeProposal memory",
                                          "value": "proposal"
                                        },
                                        "id": 2267,
                                        "name": "Identifier",
                                        "src": "17889:8:9"
                                      }
                                    ],
                                    "id": 2268,
                                    "name": "MemberAccess",
                                    "src": "17889:19:9"
                                  }
                                ],
                                "id": 2269,
                                "name": "Assignment",
                                "src": "17876:32:9"
                              }
                            ],
                            "id": 2270,
                            "name": "ExpressionStatement",
                            "src": "17876:32:9"
                          }
                        ],
                        "id": 2271,
                        "name": "Block",
                        "src": "17834:81:9"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                2273
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "stableToken",
                                  "scope": 2293,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 2272,
                                    "name": "ElementaryTypeName",
                                    "src": "17929:7:9"
                                  }
                                ],
                                "id": 2273,
                                "name": "VariableDeclaration",
                                "src": "17929:19:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "stableToken",
                                  "referencedDeclaration": 1694,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2246,
                                      "type": "struct GrandaMento.ExchangeProposal memory",
                                      "value": "proposal"
                                    },
                                    "id": 2274,
                                    "name": "Identifier",
                                    "src": "17951:8:9"
                                  }
                                ],
                                "id": 2275,
                                "name": "MemberAccess",
                                "src": "17951:20:9"
                              }
                            ],
                            "id": 2276,
                            "name": "VariableDeclarationStatement",
                            "src": "17929:42:9"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "contract IERC20"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2254,
                                      "type": "contract IERC20",
                                      "value": "sellToken"
                                    },
                                    "id": 2277,
                                    "name": "Identifier",
                                    "src": "17979:9:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract IERC20",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 469,
                                          "type": "type(contract IERC20)",
                                          "value": "IERC20"
                                        },
                                        "id": 2278,
                                        "name": "Identifier",
                                        "src": "17991:6:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2273,
                                          "type": "address",
                                          "value": "stableToken"
                                        },
                                        "id": 2279,
                                        "name": "Identifier",
                                        "src": "17998:11:9"
                                      }
                                    ],
                                    "id": 2280,
                                    "name": "FunctionCall",
                                    "src": "17991:19:9"
                                  }
                                ],
                                "id": 2281,
                                "name": "Assignment",
                                "src": "17979:31:9"
                              }
                            ],
                            "id": 2282,
                            "name": "ExpressionStatement",
                            "src": "17979:31:9"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2257,
                                      "type": "uint256",
                                      "value": "sellAmount"
                                    },
                                    "id": 2283,
                                    "name": "Identifier",
                                    "src": "18147:10:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "unitsToValue",
                                          "referencedDeclaration": 14123,
                                          "type": "function (uint256) view external returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "contract IStableToken",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 14142,
                                                  "type": "type(contract IStableToken)",
                                                  "value": "IStableToken"
                                                },
                                                "id": 2284,
                                                "name": "Identifier",
                                                "src": "18160:12:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2273,
                                                  "type": "address",
                                                  "value": "stableToken"
                                                },
                                                "id": 2285,
                                                "name": "Identifier",
                                                "src": "18173:11:9"
                                              }
                                            ],
                                            "id": 2286,
                                            "name": "FunctionCall",
                                            "src": "18160:25:9"
                                          }
                                        ],
                                        "id": 2287,
                                        "name": "MemberAccess",
                                        "src": "18160:38:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sellAmount",
                                          "referencedDeclaration": 1700,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2246,
                                              "type": "struct GrandaMento.ExchangeProposal memory",
                                              "value": "proposal"
                                            },
                                            "id": 2288,
                                            "name": "Identifier",
                                            "src": "18199:8:9"
                                          }
                                        ],
                                        "id": 2289,
                                        "name": "MemberAccess",
                                        "src": "18199:19:9"
                                      }
                                    ],
                                    "id": 2290,
                                    "name": "FunctionCall",
                                    "src": "18160:59:9"
                                  }
                                ],
                                "id": 2291,
                                "name": "Assignment",
                                "src": "18147:72:9"
                              }
                            ],
                            "id": 2292,
                            "name": "ExpressionStatement",
                            "src": "18147:72:9"
                          }
                        ],
                        "id": 2293,
                        "name": "Block",
                        "src": "17921:305:9"
                      }
                    ],
                    "id": 2294,
                    "name": "IfStatement",
                    "src": "17811:415:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2296
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "totalBalance",
                          "scope": 2317,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2295,
                            "name": "ElementaryTypeName",
                            "src": "18691:7:9"
                          }
                        ],
                        "id": 2296,
                        "name": "VariableDeclaration",
                        "src": "18691:20:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 414,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2254,
                                  "type": "contract IERC20",
                                  "value": "sellToken"
                                },
                                "id": 2297,
                                "name": "Identifier",
                                "src": "18714:9:9"
                              }
                            ],
                            "id": 2298,
                            "name": "MemberAccess",
                            "src": "18714:19:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_GrandaMento_$2699",
                                      "typeString": "contract GrandaMento"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 2299,
                                "name": "ElementaryTypeNameExpression",
                                "src": "18734:7:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14279,
                                  "type": "contract GrandaMento",
                                  "value": "this"
                                },
                                "id": 2300,
                                "name": "Identifier",
                                "src": "18742:4:9"
                              }
                            ],
                            "id": 2301,
                            "name": "FunctionCall",
                            "src": "18734:13:9"
                          }
                        ],
                        "id": 2302,
                        "name": "FunctionCall",
                        "src": "18714:34:9"
                      }
                    ],
                    "id": 2303,
                    "name": "VariableDeclarationStatement",
                    "src": "18691:57:9"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2296,
                              "type": "uint256",
                              "value": "totalBalance"
                            },
                            "id": 2304,
                            "name": "Identifier",
                            "src": "18758:12:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2257,
                              "type": "uint256",
                              "value": "sellAmount"
                            },
                            "id": 2305,
                            "name": "Identifier",
                            "src": "18773:10:9"
                          }
                        ],
                        "id": 2306,
                        "name": "BinaryOperation",
                        "src": "18758:25:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2257,
                                      "type": "uint256",
                                      "value": "sellAmount"
                                    },
                                    "id": 2307,
                                    "name": "Identifier",
                                    "src": "18793:10:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2296,
                                      "type": "uint256",
                                      "value": "totalBalance"
                                    },
                                    "id": 2308,
                                    "name": "Identifier",
                                    "src": "18806:12:9"
                                  }
                                ],
                                "id": 2309,
                                "name": "Assignment",
                                "src": "18793:25:9"
                              }
                            ],
                            "id": 2310,
                            "name": "ExpressionStatement",
                            "src": "18793:25:9"
                          }
                        ],
                        "id": 2311,
                        "name": "Block",
                        "src": "18785:40:9"
                      }
                    ],
                    "id": 2312,
                    "name": "IfStatement",
                    "src": "18754:71:9"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2252
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(contract IERC20,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2254,
                              "type": "contract IERC20",
                              "value": "sellToken"
                            },
                            "id": 2313,
                            "name": "Identifier",
                            "src": "18838:9:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2257,
                              "type": "uint256",
                              "value": "sellAmount"
                            },
                            "id": 2314,
                            "name": "Identifier",
                            "src": "18849:10:9"
                          }
                        ],
                        "id": 2315,
                        "name": "TupleExpression",
                        "src": "18837:23:9"
                      }
                    ],
                    "id": 2316,
                    "name": "Return",
                    "src": "18830:30:9"
                  }
                ],
                "id": 2317,
                "name": "Block",
                "src": "17759:1106:9"
              }
            ],
            "id": 2318,
            "name": "FunctionDefinition",
            "src": "17651:1214:9"
          },
          {
            "attributes": {
              "documentation": "@notice Using the oracle price, charges the spread and calculates the amount of\nthe asset being bought.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\nAssumes both CELO and the stable token have 18 decimals.\n@param celoStableTokenExchangeRate The unwrapped fraction exchange rate of CELO\nquoted in the stable token.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The amount of the asset being bought.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getBuyAmount",
              "scope": 2699,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "celoStableTokenExchangeRate",
                      "scope": 2373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2319,
                        "name": "ElementaryTypeName",
                        "src": "19450:7:9"
                      }
                    ],
                    "id": 2320,
                    "name": "VariableDeclaration",
                    "src": "19450:35:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellAmount",
                      "scope": 2373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2321,
                        "name": "ElementaryTypeName",
                        "src": "19491:7:9"
                      }
                    ],
                    "id": 2322,
                    "name": "VariableDeclaration",
                    "src": "19491:18:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sellCelo",
                      "scope": 2373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2323,
                        "name": "ElementaryTypeName",
                        "src": "19515:4:9"
                      }
                    ],
                    "id": 2324,
                    "name": "VariableDeclaration",
                    "src": "19515:13:9"
                  }
                ],
                "id": 2325,
                "name": "ParameterList",
                "src": "19444:88:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2373,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2326,
                        "name": "ElementaryTypeName",
                        "src": "19554:7:9"
                      }
                    ],
                    "id": 2327,
                    "name": "VariableDeclaration",
                    "src": "19554:7:9"
                  }
                ],
                "id": 2328,
                "name": "ParameterList",
                "src": "19553:9:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2332
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "exchangeRate",
                          "scope": 2372,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct FixidityLib.Fraction",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "FixidityLib.Fraction",
                              "referencedDeclaration": 6931,
                              "type": "struct FixidityLib.Fraction"
                            },
                            "id": 2331,
                            "name": "UserDefinedTypeName",
                            "src": "19569:20:9"
                          }
                        ],
                        "id": 2332,
                        "name": "VariableDeclaration",
                        "src": "19569:40:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct FixidityLib.Fraction memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "wrap",
                              "referencedDeclaration": 6964,
                              "type": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7530,
                                  "type": "type(library FixidityLib)",
                                  "value": "FixidityLib"
                                },
                                "id": 2333,
                                "name": "Identifier",
                                "src": "19612:11:9"
                              }
                            ],
                            "id": 2334,
                            "name": "MemberAccess",
                            "src": "19612:16:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2320,
                              "type": "uint256",
                              "value": "celoStableTokenExchangeRate"
                            },
                            "id": 2335,
                            "name": "Identifier",
                            "src": "19629:27:9"
                          }
                        ],
                        "id": 2336,
                        "name": "FunctionCall",
                        "src": "19612:45:9"
                      }
                    ],
                    "id": 2337,
                    "name": "VariableDeclarationStatement",
                    "src": "19569:88:9"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2324,
                              "type": "bool",
                              "value": "sellCelo"
                            },
                            "id": 2338,
                            "name": "Identifier",
                            "src": "19765:8:9"
                          }
                        ],
                        "id": 2339,
                        "name": "UnaryOperation",
                        "src": "19764:9:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct FixidityLib.Fraction memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2332,
                                      "type": "struct FixidityLib.Fraction memory",
                                      "value": "exchangeRate"
                                    },
                                    "id": 2340,
                                    "name": "Identifier",
                                    "src": "19783:12:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "struct FixidityLib.Fraction memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "reciprocal",
                                          "referencedDeclaration": 7393,
                                          "type": "function (struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2332,
                                              "type": "struct FixidityLib.Fraction memory",
                                              "value": "exchangeRate"
                                            },
                                            "id": 2341,
                                            "name": "Identifier",
                                            "src": "19798:12:9"
                                          }
                                        ],
                                        "id": 2342,
                                        "name": "MemberAccess",
                                        "src": "19798:23:9"
                                      }
                                    ],
                                    "id": 2343,
                                    "name": "FunctionCall",
                                    "src": "19798:25:9"
                                  }
                                ],
                                "id": 2344,
                                "name": "Assignment",
                                "src": "19783:40:9"
                              }
                            ],
                            "id": 2345,
                            "name": "ExpressionStatement",
                            "src": "19783:40:9"
                          }
                        ],
                        "id": 2346,
                        "name": "Block",
                        "src": "19775:55:9"
                      }
                    ],
                    "id": 2347,
                    "name": "IfStatement",
                    "src": "19760:70:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2351
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "adjustedSellAmount",
                          "scope": 2372,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct FixidityLib.Fraction",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "FixidityLib.Fraction",
                              "referencedDeclaration": 6931,
                              "type": "struct FixidityLib.Fraction"
                            },
                            "id": 2350,
                            "name": "UserDefinedTypeName",
                            "src": "19927:20:9"
                          }
                        ],
                        "id": 2351,
                        "name": "VariableDeclaration",
                        "src": "19927:46:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct FixidityLib.Fraction memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "multiply",
                              "referencedDeclaration": 7367,
                              "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct FixidityLib.Fraction memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                                          "typeString": "struct FixidityLib.Fraction storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "subtract",
                                      "referencedDeclaration": 7149,
                                      "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "struct FixidityLib.Fraction memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "fixed1",
                                              "referencedDeclaration": 6952,
                                              "type": "function () pure returns (struct FixidityLib.Fraction memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 7530,
                                                  "type": "type(library FixidityLib)",
                                                  "value": "FixidityLib"
                                                },
                                                "id": 2352,
                                                "name": "Identifier",
                                                "src": "19976:11:9"
                                              }
                                            ],
                                            "id": 2353,
                                            "name": "MemberAccess",
                                            "src": "19976:18:9"
                                          }
                                        ],
                                        "id": 2354,
                                        "name": "FunctionCall",
                                        "src": "19976:20:9"
                                      }
                                    ],
                                    "id": 2355,
                                    "name": "MemberAccess",
                                    "src": "19976:29:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1715,
                                      "type": "struct FixidityLib.Fraction storage ref",
                                      "value": "spread"
                                    },
                                    "id": 2356,
                                    "name": "Identifier",
                                    "src": "20006:6:9"
                                  }
                                ],
                                "id": 2357,
                                "name": "FunctionCall",
                                "src": "19976:37:9"
                              }
                            ],
                            "id": 2358,
                            "name": "MemberAccess",
                            "src": "19976:46:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct FixidityLib.Fraction memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "newFixed",
                                  "referencedDeclaration": 7013,
                                  "type": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7530,
                                      "type": "type(library FixidityLib)",
                                      "value": "FixidityLib"
                                    },
                                    "id": 2359,
                                    "name": "Identifier",
                                    "src": "20030:11:9"
                                  }
                                ],
                                "id": 2360,
                                "name": "MemberAccess",
                                "src": "20030:20:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2322,
                                  "type": "uint256",
                                  "value": "sellAmount"
                                },
                                "id": 2361,
                                "name": "Identifier",
                                "src": "20051:10:9"
                              }
                            ],
                            "id": 2362,
                            "name": "FunctionCall",
                            "src": "20030:32:9"
                          }
                        ],
                        "id": 2363,
                        "name": "FunctionCall",
                        "src": "19976:92:9"
                      }
                    ],
                    "id": 2364,
                    "name": "VariableDeclarationStatement",
                    "src": "19927:141:9"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2328
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "fromFixed",
                              "referencedDeclaration": 7026,
                              "type": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct FixidityLib.Fraction memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                          "typeString": "struct FixidityLib.Fraction memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "multiply",
                                      "referencedDeclaration": 7367,
                                      "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2332,
                                          "type": "struct FixidityLib.Fraction memory",
                                          "value": "exchangeRate"
                                        },
                                        "id": 2365,
                                        "name": "Identifier",
                                        "src": "20155:12:9"
                                      }
                                    ],
                                    "id": 2366,
                                    "name": "MemberAccess",
                                    "src": "20155:21:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2351,
                                      "type": "struct FixidityLib.Fraction memory",
                                      "value": "adjustedSellAmount"
                                    },
                                    "id": 2367,
                                    "name": "Identifier",
                                    "src": "20177:18:9"
                                  }
                                ],
                                "id": 2368,
                                "name": "FunctionCall",
                                "src": "20155:41:9"
                              }
                            ],
                            "id": 2369,
                            "name": "MemberAccess",
                            "src": "20155:51:9"
                          }
                        ],
                        "id": 2370,
                        "name": "FunctionCall",
                        "src": "20155:53:9"
                      }
                    ],
                    "id": 2371,
                    "name": "Return",
                    "src": "20148:60:9"
                  }
                ],
                "id": 2372,
                "name": "Block",
                "src": "19563:650:9"
              }
            ],
            "id": 2373,
            "name": "FunctionDefinition",
            "src": "19423:790:9"
          },
          {
            "attributes": {
              "documentation": "@notice Removes the proposal ID found at the provided index of activeProposalIdsSuperset\nif the exchange proposal is not active.\n@dev Anyone can call. Reverts if the exchange proposal is active.\n@param index The index of the proposal ID to remove from activeProposalIdsSuperset.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "removeFromActiveProposalIdsSuperset",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 2438,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2374,
                        "name": "ElementaryTypeName",
                        "src": "20573:7:9"
                      }
                    ],
                    "id": 2375,
                    "name": "VariableDeclaration",
                    "src": "20573:13:9"
                  }
                ],
                "id": 2376,
                "name": "ParameterList",
                "src": "20572:15:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2377,
                "name": "ParameterList",
                "src": "20597:0:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                                  "typeString": "literal_string \"Index out of bounds\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2378,
                            "name": "Identifier",
                            "src": "20603:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2375,
                                  "type": "uint256",
                                  "value": "index"
                                },
                                "id": 2379,
                                "name": "Identifier",
                                "src": "20611:5:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1728,
                                      "type": "uint256[] storage ref",
                                      "value": "activeProposalIdsSuperset"
                                    },
                                    "id": 2380,
                                    "name": "Identifier",
                                    "src": "20619:25:9"
                                  }
                                ],
                                "id": 2381,
                                "name": "MemberAccess",
                                "src": "20619:32:9"
                              }
                            ],
                            "id": 2382,
                            "name": "BinaryOperation",
                            "src": "20611:40:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "496e646578206f7574206f6620626f756e6473",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Index out of bounds\"",
                              "value": "Index out of bounds"
                            },
                            "id": 2383,
                            "name": "Literal",
                            "src": "20653:21:9"
                          }
                        ],
                        "id": 2384,
                        "name": "FunctionCall",
                        "src": "20603:72:9"
                      }
                    ],
                    "id": 2385,
                    "name": "ExpressionStatement",
                    "src": "20603:72:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2387
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "proposalId",
                          "scope": 2437,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2386,
                            "name": "ElementaryTypeName",
                            "src": "20681:7:9"
                          }
                        ],
                        "id": 2387,
                        "name": "VariableDeclaration",
                        "src": "20681:18:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1728,
                              "type": "uint256[] storage ref",
                              "value": "activeProposalIdsSuperset"
                            },
                            "id": 2388,
                            "name": "Identifier",
                            "src": "20702:25:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2375,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 2389,
                            "name": "Identifier",
                            "src": "20728:5:9"
                          }
                        ],
                        "id": 2390,
                        "name": "IndexAccess",
                        "src": "20702:32:9"
                      }
                    ],
                    "id": 2391,
                    "name": "VariableDeclarationStatement",
                    "src": "20681:53:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_56c29c7b37ffda0688125b531f5db03c5503cc91e651368e4740314f6992c046",
                                  "typeString": "literal_string \"Exchange proposal not inactive\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2392,
                            "name": "Identifier",
                            "src": "20793:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                    "typeString": "enum GrandaMento.ExchangeProposalState"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "state",
                                      "referencedDeclaration": 1696,
                                      "type": "enum GrandaMento.ExchangeProposalState"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct GrandaMento.ExchangeProposal storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1725,
                                              "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                                              "value": "exchangeProposals"
                                            },
                                            "id": 2393,
                                            "name": "Identifier",
                                            "src": "20808:17:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2387,
                                              "type": "uint256",
                                              "value": "proposalId"
                                            },
                                            "id": 2394,
                                            "name": "Identifier",
                                            "src": "20826:10:9"
                                          }
                                        ],
                                        "id": 2395,
                                        "name": "IndexAccess",
                                        "src": "20808:29:9"
                                      }
                                    ],
                                    "id": 2396,
                                    "name": "MemberAccess",
                                    "src": "20808:35:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "Proposed",
                                      "referencedDeclaration": null,
                                      "type": "enum GrandaMento.ExchangeProposalState"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1685,
                                          "type": "type(enum GrandaMento.ExchangeProposalState)",
                                          "value": "ExchangeProposalState"
                                        },
                                        "id": 2397,
                                        "name": "Identifier",
                                        "src": "20847:21:9"
                                      }
                                    ],
                                    "id": 2398,
                                    "name": "MemberAccess",
                                    "src": "20847:30:9"
                                  }
                                ],
                                "id": 2399,
                                "name": "BinaryOperation",
                                "src": "20808:69:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                    "typeString": "enum GrandaMento.ExchangeProposalState"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "state",
                                      "referencedDeclaration": 1696,
                                      "type": "enum GrandaMento.ExchangeProposalState"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct GrandaMento.ExchangeProposal storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1725,
                                              "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                                              "value": "exchangeProposals"
                                            },
                                            "id": 2400,
                                            "name": "Identifier",
                                            "src": "20889:17:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2387,
                                              "type": "uint256",
                                              "value": "proposalId"
                                            },
                                            "id": 2401,
                                            "name": "Identifier",
                                            "src": "20907:10:9"
                                          }
                                        ],
                                        "id": 2402,
                                        "name": "IndexAccess",
                                        "src": "20889:29:9"
                                      }
                                    ],
                                    "id": 2403,
                                    "name": "MemberAccess",
                                    "src": "20889:35:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "Approved",
                                      "referencedDeclaration": null,
                                      "type": "enum GrandaMento.ExchangeProposalState"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1685,
                                          "type": "type(enum GrandaMento.ExchangeProposalState)",
                                          "value": "ExchangeProposalState"
                                        },
                                        "id": 2404,
                                        "name": "Identifier",
                                        "src": "20928:21:9"
                                      }
                                    ],
                                    "id": 2405,
                                    "name": "MemberAccess",
                                    "src": "20928:30:9"
                                  }
                                ],
                                "id": 2406,
                                "name": "BinaryOperation",
                                "src": "20889:69:9"
                              }
                            ],
                            "id": 2407,
                            "name": "BinaryOperation",
                            "src": "20808:150:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "45786368616e67652070726f706f73616c206e6f7420696e616374697665",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Exchange proposal not inactive\"",
                              "value": "Exchange proposal not inactive"
                            },
                            "id": 2408,
                            "name": "Literal",
                            "src": "20966:32:9"
                          }
                        ],
                        "id": 2409,
                        "name": "FunctionCall",
                        "src": "20793:211:9"
                      }
                    ],
                    "id": 2410,
                    "name": "ExpressionStatement",
                    "src": "20793:211:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2412
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "lastIndex",
                          "scope": 2437,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2411,
                            "name": "ElementaryTypeName",
                            "src": "21114:7:9"
                          }
                        ],
                        "id": 2412,
                        "name": "VariableDeclaration",
                        "src": "21114:17:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sub",
                              "referencedDeclaration": 138,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1728,
                                      "type": "uint256[] storage ref",
                                      "value": "activeProposalIdsSuperset"
                                    },
                                    "id": 2413,
                                    "name": "Identifier",
                                    "src": "21134:25:9"
                                  }
                                ],
                                "id": 2414,
                                "name": "MemberAccess",
                                "src": "21134:32:9"
                              }
                            ],
                            "id": 2415,
                            "name": "MemberAccess",
                            "src": "21134:36:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 2416,
                            "name": "Literal",
                            "src": "21171:1:9"
                          }
                        ],
                        "id": 2417,
                        "name": "FunctionCall",
                        "src": "21134:39:9"
                      }
                    ],
                    "id": 2418,
                    "name": "VariableDeclarationStatement",
                    "src": "21114:59:9"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2375,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 2419,
                            "name": "Identifier",
                            "src": "21183:5:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2412,
                              "type": "uint256",
                              "value": "lastIndex"
                            },
                            "id": 2420,
                            "name": "Identifier",
                            "src": "21191:9:9"
                          }
                        ],
                        "id": 2421,
                        "name": "BinaryOperation",
                        "src": "21183:17:9"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1728,
                                          "type": "uint256[] storage ref",
                                          "value": "activeProposalIdsSuperset"
                                        },
                                        "id": 2422,
                                        "name": "Identifier",
                                        "src": "21210:25:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2375,
                                          "type": "uint256",
                                          "value": "index"
                                        },
                                        "id": 2423,
                                        "name": "Identifier",
                                        "src": "21236:5:9"
                                      }
                                    ],
                                    "id": 2424,
                                    "name": "IndexAccess",
                                    "src": "21210:32:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1728,
                                          "type": "uint256[] storage ref",
                                          "value": "activeProposalIdsSuperset"
                                        },
                                        "id": 2425,
                                        "name": "Identifier",
                                        "src": "21245:25:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2412,
                                          "type": "uint256",
                                          "value": "lastIndex"
                                        },
                                        "id": 2426,
                                        "name": "Identifier",
                                        "src": "21271:9:9"
                                      }
                                    ],
                                    "id": 2427,
                                    "name": "IndexAccess",
                                    "src": "21245:36:9"
                                  }
                                ],
                                "id": 2428,
                                "name": "Assignment",
                                "src": "21210:71:9"
                              }
                            ],
                            "id": 2429,
                            "name": "ExpressionStatement",
                            "src": "21210:71:9"
                          }
                        ],
                        "id": 2430,
                        "name": "Block",
                        "src": "21202:86:9"
                      }
                    ],
                    "id": 2431,
                    "name": "IfStatement",
                    "src": "21179:109:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "--",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1728,
                                  "type": "uint256[] storage ref",
                                  "value": "activeProposalIdsSuperset"
                                },
                                "id": 2432,
                                "name": "Identifier",
                                "src": "21325:25:9"
                              }
                            ],
                            "id": 2434,
                            "name": "MemberAccess",
                            "src": "21325:32:9"
                          }
                        ],
                        "id": 2435,
                        "name": "UnaryOperation",
                        "src": "21325:34:9"
                      }
                    ],
                    "id": 2436,
                    "name": "ExpressionStatement",
                    "src": "21325:34:9"
                  }
                ],
                "id": 2437,
                "name": "Block",
                "src": "20597:767:9"
              }
            ],
            "id": 2438,
            "name": "FunctionDefinition",
            "src": "20528:836:9"
          },
          {
            "attributes": {
              "documentation": "@notice Gets the proposal identifiers of exchange proposals in the\nProposed or Approved state. Returns a version of activeProposalIdsSuperset\nwith inactive proposal IDs set as 0.\n@dev Elements with a proposal ID of 0 should be filtered out by the consumer.\n@return An array of active exchange proposals IDs.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getActiveProposalIds",
              "scope": 2699,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2439,
                "name": "ParameterList",
                "src": "21742:2:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2504,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2440,
                            "name": "ElementaryTypeName",
                            "src": "21768:7:9"
                          }
                        ],
                        "id": 2441,
                        "name": "ArrayTypeName",
                        "src": "21768:9:9"
                      }
                    ],
                    "id": 2442,
                    "name": "VariableDeclaration",
                    "src": "21768:16:9"
                  }
                ],
                "id": 2443,
                "name": "ParameterList",
                "src": "21767:18:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2447
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "activeProposalIds",
                          "scope": 2503,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2445,
                                "name": "ElementaryTypeName",
                                "src": "22035:7:9"
                              }
                            ],
                            "id": 2446,
                            "name": "ArrayTypeName",
                            "src": "22035:9:9"
                          }
                        ],
                        "id": 2447,
                        "name": "VariableDeclaration",
                        "src": "22035:34:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 2448,
                                    "name": "ElementaryTypeName",
                                    "src": "22076:7:9"
                                  }
                                ],
                                "id": 2449,
                                "name": "ArrayTypeName",
                                "src": "22076:9:9"
                              }
                            ],
                            "id": 2450,
                            "name": "NewExpression",
                            "src": "22072:13:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1728,
                                  "type": "uint256[] storage ref",
                                  "value": "activeProposalIdsSuperset"
                                },
                                "id": 2451,
                                "name": "Identifier",
                                "src": "22086:25:9"
                              }
                            ],
                            "id": 2452,
                            "name": "MemberAccess",
                            "src": "22086:32:9"
                          }
                        ],
                        "id": 2453,
                        "name": "FunctionCall",
                        "src": "22072:47:9"
                      }
                    ],
                    "id": 2454,
                    "name": "VariableDeclarationStatement",
                    "src": "22035:84:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            2456
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 2500,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 2455,
                                "name": "ElementaryTypeName",
                                "src": "22131:7:9"
                              }
                            ],
                            "id": 2456,
                            "name": "VariableDeclaration",
                            "src": "22131:9:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2457,
                            "name": "Literal",
                            "src": "22143:1:9"
                          }
                        ],
                        "id": 2458,
                        "name": "VariableDeclarationStatement",
                        "src": "22131:13:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2456,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 2459,
                            "name": "Identifier",
                            "src": "22146:1:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1728,
                                  "type": "uint256[] storage ref",
                                  "value": "activeProposalIdsSuperset"
                                },
                                "id": 2460,
                                "name": "Identifier",
                                "src": "22150:25:9"
                              }
                            ],
                            "id": 2461,
                            "name": "MemberAccess",
                            "src": "22150:32:9"
                          }
                        ],
                        "id": 2462,
                        "name": "BinaryOperation",
                        "src": "22146:36:9"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2456,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 2463,
                                "name": "Identifier",
                                "src": "22184:1:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 122,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2456,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 2464,
                                        "name": "Identifier",
                                        "src": "22188:1:9"
                                      }
                                    ],
                                    "id": 2465,
                                    "name": "MemberAccess",
                                    "src": "22188:5:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 2466,
                                    "name": "Literal",
                                    "src": "22194:1:9"
                                  }
                                ],
                                "id": 2467,
                                "name": "FunctionCall",
                                "src": "22188:8:9"
                              }
                            ],
                            "id": 2468,
                            "name": "Assignment",
                            "src": "22184:12:9"
                          }
                        ],
                        "id": 2469,
                        "name": "ExpressionStatement",
                        "src": "22184:12:9"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                2471
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "proposalId",
                                  "scope": 2499,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 2470,
                                    "name": "ElementaryTypeName",
                                    "src": "22206:7:9"
                                  }
                                ],
                                "id": 2471,
                                "name": "VariableDeclaration",
                                "src": "22206:18:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1728,
                                      "type": "uint256[] storage ref",
                                      "value": "activeProposalIdsSuperset"
                                    },
                                    "id": 2472,
                                    "name": "Identifier",
                                    "src": "22227:25:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2456,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 2473,
                                    "name": "Identifier",
                                    "src": "22253:1:9"
                                  }
                                ],
                                "id": 2474,
                                "name": "IndexAccess",
                                "src": "22227:28:9"
                              }
                            ],
                            "id": 2475,
                            "name": "VariableDeclarationStatement",
                            "src": "22206:49:9"
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "||",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                        "typeString": "enum GrandaMento.ExchangeProposalState"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "state",
                                          "referencedDeclaration": 1696,
                                          "type": "enum GrandaMento.ExchangeProposalState"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct GrandaMento.ExchangeProposal storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1725,
                                                  "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                                                  "value": "exchangeProposals"
                                                },
                                                "id": 2476,
                                                "name": "Identifier",
                                                "src": "22276:17:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2471,
                                                  "type": "uint256",
                                                  "value": "proposalId"
                                                },
                                                "id": 2477,
                                                "name": "Identifier",
                                                "src": "22294:10:9"
                                              }
                                            ],
                                            "id": 2478,
                                            "name": "IndexAccess",
                                            "src": "22276:29:9"
                                          }
                                        ],
                                        "id": 2479,
                                        "name": "MemberAccess",
                                        "src": "22276:35:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "Proposed",
                                          "referencedDeclaration": null,
                                          "type": "enum GrandaMento.ExchangeProposalState"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1685,
                                              "type": "type(enum GrandaMento.ExchangeProposalState)",
                                              "value": "ExchangeProposalState"
                                            },
                                            "id": 2480,
                                            "name": "Identifier",
                                            "src": "22315:21:9"
                                          }
                                        ],
                                        "id": 2481,
                                        "name": "MemberAccess",
                                        "src": "22315:30:9"
                                      }
                                    ],
                                    "id": 2482,
                                    "name": "BinaryOperation",
                                    "src": "22276:69:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_ExchangeProposalState_$1685",
                                        "typeString": "enum GrandaMento.ExchangeProposalState"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "state",
                                          "referencedDeclaration": 1696,
                                          "type": "enum GrandaMento.ExchangeProposalState"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct GrandaMento.ExchangeProposal storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1725,
                                                  "type": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)",
                                                  "value": "exchangeProposals"
                                                },
                                                "id": 2483,
                                                "name": "Identifier",
                                                "src": "22357:17:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2471,
                                                  "type": "uint256",
                                                  "value": "proposalId"
                                                },
                                                "id": 2484,
                                                "name": "Identifier",
                                                "src": "22375:10:9"
                                              }
                                            ],
                                            "id": 2485,
                                            "name": "IndexAccess",
                                            "src": "22357:29:9"
                                          }
                                        ],
                                        "id": 2486,
                                        "name": "MemberAccess",
                                        "src": "22357:35:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "Approved",
                                          "referencedDeclaration": null,
                                          "type": "enum GrandaMento.ExchangeProposalState"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1685,
                                              "type": "type(enum GrandaMento.ExchangeProposalState)",
                                              "value": "ExchangeProposalState"
                                            },
                                            "id": 2487,
                                            "name": "Identifier",
                                            "src": "22396:21:9"
                                          }
                                        ],
                                        "id": 2488,
                                        "name": "MemberAccess",
                                        "src": "22396:30:9"
                                      }
                                    ],
                                    "id": 2489,
                                    "name": "BinaryOperation",
                                    "src": "22357:69:9"
                                  }
                                ],
                                "id": 2490,
                                "name": "BinaryOperation",
                                "src": "22276:150:9"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2447,
                                                  "type": "uint256[] memory",
                                                  "value": "activeProposalIds"
                                                },
                                                "id": 2491,
                                                "name": "Identifier",
                                                "src": "22445:17:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2456,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 2492,
                                                "name": "Identifier",
                                                "src": "22463:1:9"
                                              }
                                            ],
                                            "id": 2493,
                                            "name": "IndexAccess",
                                            "src": "22445:20:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2471,
                                              "type": "uint256",
                                              "value": "proposalId"
                                            },
                                            "id": 2494,
                                            "name": "Identifier",
                                            "src": "22468:10:9"
                                          }
                                        ],
                                        "id": 2495,
                                        "name": "Assignment",
                                        "src": "22445:33:9"
                                      }
                                    ],
                                    "id": 2496,
                                    "name": "ExpressionStatement",
                                    "src": "22445:33:9"
                                  }
                                ],
                                "id": 2497,
                                "name": "Block",
                                "src": "22435:52:9"
                              }
                            ],
                            "id": 2498,
                            "name": "IfStatement",
                            "src": "22263:224:9"
                          }
                        ],
                        "id": 2499,
                        "name": "Block",
                        "src": "22198:295:9"
                      }
                    ],
                    "id": 2500,
                    "name": "ForStatement",
                    "src": "22126:367:9"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2443
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 2447,
                          "type": "uint256[] memory",
                          "value": "activeProposalIds"
                        },
                        "id": 2501,
                        "name": "Identifier",
                        "src": "22505:17:9"
                      }
                    ],
                    "id": 2502,
                    "name": "Return",
                    "src": "22498:24:9"
                  }
                ],
                "id": 2503,
                "name": "Block",
                "src": "21786:741:9"
              }
            ],
            "id": 2504,
            "name": "FunctionDefinition",
            "src": "21713:814:9"
          },
          {
            "attributes": {
              "documentation": "@notice Gets the oracle CELO price quoted in the stable token.\n@dev Reverts if there is not a rate for the provided stable token.\n@param stableToken The stable token to get the oracle price for.\n@return The oracle CELO price quoted in the stable token.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOracleExchangeRate",
              "scope": 2699,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "stableToken",
                      "scope": 2546,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2505,
                        "name": "ElementaryTypeName",
                        "src": "22847:7:9"
                      }
                    ],
                    "id": 2506,
                    "name": "VariableDeclaration",
                    "src": "22847:19:9"
                  }
                ],
                "id": 2507,
                "name": "ParameterList",
                "src": "22846:21:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2546,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct FixidityLib.Fraction",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "FixidityLib.Fraction",
                          "referencedDeclaration": 6931,
                          "type": "struct FixidityLib.Fraction"
                        },
                        "id": 2508,
                        "name": "UserDefinedTypeName",
                        "src": "22890:20:9"
                      }
                    ],
                    "id": 2509,
                    "name": "VariableDeclaration",
                    "src": "22890:27:9"
                  }
                ],
                "id": 2510,
                "name": "ParameterList",
                "src": "22889:29:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2512
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "rateNumerator",
                          "scope": 2545,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2511,
                            "name": "ElementaryTypeName",
                            "src": "22925:7:9"
                          }
                        ],
                        "id": 2512,
                        "name": "VariableDeclaration",
                        "src": "22925:21:9"
                      }
                    ],
                    "id": 2513,
                    "name": "VariableDeclarationStatement",
                    "src": "22925:21:9"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2515
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "rateDenominator",
                          "scope": 2545,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2514,
                            "name": "ElementaryTypeName",
                            "src": "22952:7:9"
                          }
                        ],
                        "id": 2515,
                        "name": "VariableDeclaration",
                        "src": "22952:23:9"
                      }
                    ],
                    "id": 2516,
                    "name": "VariableDeclarationStatement",
                    "src": "22952:23:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "tuple(uint256,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2512,
                                  "type": "uint256",
                                  "value": "rateNumerator"
                                },
                                "id": 2517,
                                "name": "Identifier",
                                "src": "22982:13:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2515,
                                  "type": "uint256",
                                  "value": "rateDenominator"
                                },
                                "id": 2518,
                                "name": "Identifier",
                                "src": "22997:15:9"
                              }
                            ],
                            "id": 2519,
                            "name": "TupleExpression",
                            "src": "22981:32:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "tuple(uint256,uint256)",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "medianRate",
                                  "referencedDeclaration": 14069,
                                  "type": "function (address) view external returns (uint256,uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract ISortedOracles",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10792,
                                          "type": "function () view returns (contract ISortedOracles)",
                                          "value": "getSortedOracles"
                                        },
                                        "id": 2520,
                                        "name": "Identifier",
                                        "src": "23016:16:9"
                                      }
                                    ],
                                    "id": 2521,
                                    "name": "FunctionCall",
                                    "src": "23016:18:9"
                                  }
                                ],
                                "id": 2522,
                                "name": "MemberAccess",
                                "src": "23016:29:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2506,
                                  "type": "address",
                                  "value": "stableToken"
                                },
                                "id": 2523,
                                "name": "Identifier",
                                "src": "23046:11:9"
                              }
                            ],
                            "id": 2524,
                            "name": "FunctionCall",
                            "src": "23016:42:9"
                          }
                        ],
                        "id": 2525,
                        "name": "Assignment",
                        "src": "22981:77:9"
                      }
                    ],
                    "id": 2526,
                    "name": "ExpressionStatement",
                    "src": "22981:77:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b7367d7d56c5f8cec11d2f702a1fadc61ae1a809eeeb3a70092f20e50e401cf7",
                                  "typeString": "literal_string \"No oracle rates present for token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2527,
                            "name": "Identifier",
                            "src": "23150:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2515,
                                  "type": "uint256",
                                  "value": "rateDenominator"
                                },
                                "id": 2528,
                                "name": "Identifier",
                                "src": "23158:15:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2529,
                                "name": "Literal",
                                "src": "23176:1:9"
                              }
                            ],
                            "id": 2530,
                            "name": "BinaryOperation",
                            "src": "23158:19:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"No oracle rates present for token\"",
                              "value": "No oracle rates present for token"
                            },
                            "id": 2531,
                            "name": "Literal",
                            "src": "23179:35:9"
                          }
                        ],
                        "id": 2532,
                        "name": "FunctionCall",
                        "src": "23150:65:9"
                      }
                    ],
                    "id": 2533,
                    "name": "ExpressionStatement",
                    "src": "23150:65:9"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2510
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct FixidityLib.Fraction memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "divide",
                              "referencedDeclaration": 7435,
                              "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct FixidityLib.Fraction memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "wrap",
                                      "referencedDeclaration": 6964,
                                      "type": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7530,
                                          "type": "type(library FixidityLib)",
                                          "value": "FixidityLib"
                                        },
                                        "id": 2534,
                                        "name": "Identifier",
                                        "src": "23228:11:9"
                                      }
                                    ],
                                    "id": 2535,
                                    "name": "MemberAccess",
                                    "src": "23228:16:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2512,
                                      "type": "uint256",
                                      "value": "rateNumerator"
                                    },
                                    "id": 2536,
                                    "name": "Identifier",
                                    "src": "23245:13:9"
                                  }
                                ],
                                "id": 2537,
                                "name": "FunctionCall",
                                "src": "23228:31:9"
                              }
                            ],
                            "id": 2538,
                            "name": "MemberAccess",
                            "src": "23228:38:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct FixidityLib.Fraction memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "wrap",
                                  "referencedDeclaration": 6964,
                                  "type": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7530,
                                      "type": "type(library FixidityLib)",
                                      "value": "FixidityLib"
                                    },
                                    "id": 2539,
                                    "name": "Identifier",
                                    "src": "23267:11:9"
                                  }
                                ],
                                "id": 2540,
                                "name": "MemberAccess",
                                "src": "23267:16:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2515,
                                  "type": "uint256",
                                  "value": "rateDenominator"
                                },
                                "id": 2541,
                                "name": "Identifier",
                                "src": "23284:15:9"
                              }
                            ],
                            "id": 2542,
                            "name": "FunctionCall",
                            "src": "23267:33:9"
                          }
                        ],
                        "id": 2543,
                        "name": "FunctionCall",
                        "src": "23228:73:9"
                      }
                    ],
                    "id": 2544,
                    "name": "Return",
                    "src": "23221:80:9"
                  }
                ],
                "id": 2545,
                "name": "Block",
                "src": "22919:387:9"
              }
            ],
            "id": 2546,
            "name": "FunctionDefinition",
            "src": "22816:490:9"
          },
          {
            "attributes": {
              "documentation": "@notice Gets the minimum and maximum amount of a stable token that can be\ninvolved in a single exchange.\n@dev Reverts if there is no explicit exchange limit for the stable token.\n@param stableTokenRegistryId The string registry ID for the stable token.\n@return Minimum exchange amount.\n@return Maximum exchange amount.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getStableTokenExchangeLimits",
              "scope": 2699,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "stableTokenRegistryId",
                      "scope": 2576,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2547,
                        "name": "ElementaryTypeName",
                        "src": "23709:6:9"
                      }
                    ],
                    "id": 2548,
                    "name": "VariableDeclaration",
                    "src": "23709:35:9"
                  }
                ],
                "id": 2549,
                "name": "ParameterList",
                "src": "23708:37:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2576,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2550,
                        "name": "ElementaryTypeName",
                        "src": "23767:7:9"
                      }
                    ],
                    "id": 2551,
                    "name": "VariableDeclaration",
                    "src": "23767:7:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2576,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2552,
                        "name": "ElementaryTypeName",
                        "src": "23776:7:9"
                      }
                    ],
                    "id": 2553,
                    "name": "VariableDeclaration",
                    "src": "23776:7:9"
                  }
                ],
                "id": 2554,
                "name": "ParameterList",
                "src": "23766:18:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        2556
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "exchangeLimits",
                          "scope": 2575,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct GrandaMento.ExchangeLimits",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "ExchangeLimits",
                              "referencedDeclaration": 1690,
                              "type": "struct GrandaMento.ExchangeLimits"
                            },
                            "id": 2555,
                            "name": "UserDefinedTypeName",
                            "src": "23791:14:9"
                          }
                        ],
                        "id": 2556,
                        "name": "VariableDeclaration",
                        "src": "23791:36:9"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct GrandaMento.ExchangeLimits storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1721,
                              "type": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)",
                              "value": "stableTokenExchangeLimits"
                            },
                            "id": 2557,
                            "name": "Identifier",
                            "src": "23830:25:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2548,
                              "type": "string memory",
                              "value": "stableTokenRegistryId"
                            },
                            "id": 2558,
                            "name": "Identifier",
                            "src": "23856:21:9"
                          }
                        ],
                        "id": 2559,
                        "name": "IndexAccess",
                        "src": "23830:48:9"
                      }
                    ],
                    "id": 2560,
                    "name": "VariableDeclarationStatement",
                    "src": "23791:87:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_79c687fe29e1c0c528f93c98d274726b3cd9195311965a3aaec2f4a0bc06595a",
                                  "typeString": "literal_string \"Max stable token exchange amount must be defined\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2561,
                            "name": "Identifier",
                            "src": "24044:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "maxExchangeAmount",
                                  "referencedDeclaration": 1689,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2556,
                                      "type": "struct GrandaMento.ExchangeLimits memory",
                                      "value": "exchangeLimits"
                                    },
                                    "id": 2562,
                                    "name": "Identifier",
                                    "src": "24052:14:9"
                                  }
                                ],
                                "id": 2563,
                                "name": "MemberAccess",
                                "src": "24052:32:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2564,
                                "name": "Literal",
                                "src": "24087:1:9"
                              }
                            ],
                            "id": 2565,
                            "name": "BinaryOperation",
                            "src": "24052:36:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Max stable token exchange amount must be defined\"",
                              "value": "Max stable token exchange amount must be defined"
                            },
                            "id": 2566,
                            "name": "Literal",
                            "src": "24090:50:9"
                          }
                        ],
                        "id": 2567,
                        "name": "FunctionCall",
                        "src": "24044:97:9"
                      }
                    ],
                    "id": 2568,
                    "name": "ExpressionStatement",
                    "src": "24044:97:9"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 2554
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(uint256,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "minExchangeAmount",
                              "referencedDeclaration": 1687,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2556,
                                  "type": "struct GrandaMento.ExchangeLimits memory",
                                  "value": "exchangeLimits"
                                },
                                "id": 2569,
                                "name": "Identifier",
                                "src": "24155:14:9"
                              }
                            ],
                            "id": 2570,
                            "name": "MemberAccess",
                            "src": "24155:32:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "maxExchangeAmount",
                              "referencedDeclaration": 1689,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2556,
                                  "type": "struct GrandaMento.ExchangeLimits memory",
                                  "value": "exchangeLimits"
                                },
                                "id": 2571,
                                "name": "Identifier",
                                "src": "24189:14:9"
                              }
                            ],
                            "id": 2572,
                            "name": "MemberAccess",
                            "src": "24189:32:9"
                          }
                        ],
                        "id": 2573,
                        "name": "TupleExpression",
                        "src": "24154:68:9"
                      }
                    ],
                    "id": 2574,
                    "name": "Return",
                    "src": "24147:75:9"
                  }
                ],
                "id": 2575,
                "name": "Block",
                "src": "23785:442:9"
              }
            ],
            "id": 2576,
            "name": "FunctionDefinition",
            "src": "23671:556:9"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the approver.\n@dev Sender must be owner. New approver is allowed to be address(0).\n@param newApprover The new value for the approver.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setApprover",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "newApprover",
                      "scope": 2592,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2577,
                        "name": "ElementaryTypeName",
                        "src": "24426:7:9"
                      }
                    ],
                    "id": 2578,
                    "name": "VariableDeclaration",
                    "src": "24426:19:9"
                  }
                ],
                "id": 2579,
                "name": "ParameterList",
                "src": "24425:21:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2582,
                "name": "ParameterList",
                "src": "24464:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 333,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2580,
                    "name": "Identifier",
                    "src": "24454:9:9"
                  }
                ],
                "id": 2581,
                "name": "ModifierInvocation",
                "src": "24454:9:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1711,
                              "type": "address",
                              "value": "approver"
                            },
                            "id": 2583,
                            "name": "Identifier",
                            "src": "24470:8:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2578,
                              "type": "address",
                              "value": "newApprover"
                            },
                            "id": 2584,
                            "name": "Identifier",
                            "src": "24481:11:9"
                          }
                        ],
                        "id": 2585,
                        "name": "Assignment",
                        "src": "24470:22:9"
                      }
                    ],
                    "id": 2586,
                    "name": "ExpressionStatement",
                    "src": "24470:22:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1659,
                              "type": "function (address)",
                              "value": "ApproverSet"
                            },
                            "id": 2587,
                            "name": "Identifier",
                            "src": "24503:11:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2578,
                              "type": "address",
                              "value": "newApprover"
                            },
                            "id": 2588,
                            "name": "Identifier",
                            "src": "24515:11:9"
                          }
                        ],
                        "id": 2589,
                        "name": "FunctionCall",
                        "src": "24503:24:9"
                      }
                    ],
                    "id": 2590,
                    "name": "EmitStatement",
                    "src": "24498:29:9"
                  }
                ],
                "id": 2591,
                "name": "Block",
                "src": "24464:68:9"
              }
            ],
            "id": 2592,
            "name": "FunctionDefinition",
            "src": "24405:127:9"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the maximum allowed change in the CELO/stable token price when\nan exchange proposal is being approved relative to the price when the proposal\nwas created.\n@dev Sender must be owner.\n@param newMaxApprovalExchangeRateChange The new value for maxApprovalExchangeRateChange\nto be wrapped.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setMaxApprovalExchangeRateChange",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "newMaxApprovalExchangeRateChange",
                      "scope": 2611,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2593,
                        "name": "ElementaryTypeName",
                        "src": "24918:7:9"
                      }
                    ],
                    "id": 2594,
                    "name": "VariableDeclaration",
                    "src": "24918:40:9"
                  }
                ],
                "id": 2595,
                "name": "ParameterList",
                "src": "24917:42:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2598,
                "name": "ParameterList",
                "src": "24977:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 333,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2596,
                    "name": "Identifier",
                    "src": "24967:9:9"
                  }
                ],
                "id": 2597,
                "name": "ModifierInvocation",
                "src": "24967:9:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct FixidityLib.Fraction storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1713,
                              "type": "struct FixidityLib.Fraction storage ref",
                              "value": "maxApprovalExchangeRateChange"
                            },
                            "id": 2599,
                            "name": "Identifier",
                            "src": "24983:29:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct FixidityLib.Fraction memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "wrap",
                                  "referencedDeclaration": 6964,
                                  "type": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7530,
                                      "type": "type(library FixidityLib)",
                                      "value": "FixidityLib"
                                    },
                                    "id": 2600,
                                    "name": "Identifier",
                                    "src": "25015:11:9"
                                  }
                                ],
                                "id": 2601,
                                "name": "MemberAccess",
                                "src": "25015:16:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2594,
                                  "type": "uint256",
                                  "value": "newMaxApprovalExchangeRateChange"
                                },
                                "id": 2602,
                                "name": "Identifier",
                                "src": "25032:32:9"
                              }
                            ],
                            "id": 2603,
                            "name": "FunctionCall",
                            "src": "25015:50:9"
                          }
                        ],
                        "id": 2604,
                        "name": "Assignment",
                        "src": "24983:82:9"
                      }
                    ],
                    "id": 2605,
                    "name": "ExpressionStatement",
                    "src": "24983:82:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1663,
                              "type": "function (uint256)",
                              "value": "MaxApprovalExchangeRateChangeSet"
                            },
                            "id": 2606,
                            "name": "Identifier",
                            "src": "25076:32:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2594,
                              "type": "uint256",
                              "value": "newMaxApprovalExchangeRateChange"
                            },
                            "id": 2607,
                            "name": "Identifier",
                            "src": "25109:32:9"
                          }
                        ],
                        "id": 2608,
                        "name": "FunctionCall",
                        "src": "25076:66:9"
                      }
                    ],
                    "id": 2609,
                    "name": "EmitStatement",
                    "src": "25071:71:9"
                  }
                ],
                "id": 2610,
                "name": "Block",
                "src": "24977:170:9"
              }
            ],
            "id": 2611,
            "name": "FunctionDefinition",
            "src": "24876:271:9"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the spread.\n@dev Sender must be owner.\n@param newSpread The new value for the spread to be wrapped. Must be <= fixed 1.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setSpread",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "newSpread",
                      "scope": 2641,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2612,
                        "name": "ElementaryTypeName",
                        "src": "25330:7:9"
                      }
                    ],
                    "id": 2613,
                    "name": "VariableDeclaration",
                    "src": "25330:17:9"
                  }
                ],
                "id": 2614,
                "name": "ParameterList",
                "src": "25329:19:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2617,
                "name": "ParameterList",
                "src": "25366:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 333,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2615,
                    "name": "Identifier",
                    "src": "25356:9:9"
                  }
                ],
                "id": 2616,
                "name": "ModifierInvocation",
                "src": "25356:9:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct FixidityLib.Fraction storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1715,
                              "type": "struct FixidityLib.Fraction storage ref",
                              "value": "spread"
                            },
                            "id": 2618,
                            "name": "Identifier",
                            "src": "25372:6:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct FixidityLib.Fraction memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "wrap",
                                  "referencedDeclaration": 6964,
                                  "type": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7530,
                                      "type": "type(library FixidityLib)",
                                      "value": "FixidityLib"
                                    },
                                    "id": 2619,
                                    "name": "Identifier",
                                    "src": "25381:11:9"
                                  }
                                ],
                                "id": 2620,
                                "name": "MemberAccess",
                                "src": "25381:16:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2613,
                                  "type": "uint256",
                                  "value": "newSpread"
                                },
                                "id": 2621,
                                "name": "Identifier",
                                "src": "25398:9:9"
                              }
                            ],
                            "id": 2622,
                            "name": "FunctionCall",
                            "src": "25381:27:9"
                          }
                        ],
                        "id": 2623,
                        "name": "Assignment",
                        "src": "25372:36:9"
                      }
                    ],
                    "id": 2624,
                    "name": "ExpressionStatement",
                    "src": "25372:36:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b8cd9288d85d45a1ac84eeea1a7f9ffb9fab81f22c951d7d7f489ccd85873d37",
                                  "typeString": "literal_string \"Spread must be less than or equal to 1\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2625,
                            "name": "Identifier",
                            "src": "25414:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Fraction_$6931_storage",
                                      "typeString": "struct FixidityLib.Fraction storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Fraction_$6931_memory_ptr",
                                      "typeString": "struct FixidityLib.Fraction memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "lte",
                                  "referencedDeclaration": 7499,
                                  "type": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7530,
                                      "type": "type(library FixidityLib)",
                                      "value": "FixidityLib"
                                    },
                                    "id": 2626,
                                    "name": "Identifier",
                                    "src": "25422:11:9"
                                  }
                                ],
                                "id": 2627,
                                "name": "MemberAccess",
                                "src": "25422:15:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1715,
                                  "type": "struct FixidityLib.Fraction storage ref",
                                  "value": "spread"
                                },
                                "id": 2628,
                                "name": "Identifier",
                                "src": "25438:6:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "struct FixidityLib.Fraction memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "fixed1",
                                      "referencedDeclaration": 6952,
                                      "type": "function () pure returns (struct FixidityLib.Fraction memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7530,
                                          "type": "type(library FixidityLib)",
                                          "value": "FixidityLib"
                                        },
                                        "id": 2629,
                                        "name": "Identifier",
                                        "src": "25446:11:9"
                                      }
                                    ],
                                    "id": 2630,
                                    "name": "MemberAccess",
                                    "src": "25446:18:9"
                                  }
                                ],
                                "id": 2631,
                                "name": "FunctionCall",
                                "src": "25446:20:9"
                              }
                            ],
                            "id": 2632,
                            "name": "FunctionCall",
                            "src": "25422:45:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "537072656164206d757374206265206c657373207468616e206f7220657175616c20746f2031",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Spread must be less than or equal to 1\"",
                              "value": "Spread must be less than or equal to 1"
                            },
                            "id": 2633,
                            "name": "Literal",
                            "src": "25469:40:9"
                          }
                        ],
                        "id": 2634,
                        "name": "FunctionCall",
                        "src": "25414:96:9"
                      }
                    ],
                    "id": 2635,
                    "name": "ExpressionStatement",
                    "src": "25414:96:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1667,
                              "type": "function (uint256)",
                              "value": "SpreadSet"
                            },
                            "id": 2636,
                            "name": "Identifier",
                            "src": "25521:9:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2613,
                              "type": "uint256",
                              "value": "newSpread"
                            },
                            "id": 2637,
                            "name": "Identifier",
                            "src": "25531:9:9"
                          }
                        ],
                        "id": 2638,
                        "name": "FunctionCall",
                        "src": "25521:20:9"
                      }
                    ],
                    "id": 2639,
                    "name": "EmitStatement",
                    "src": "25516:25:9"
                  }
                ],
                "id": 2640,
                "name": "Block",
                "src": "25366:180:9"
              }
            ],
            "id": 2641,
            "name": "FunctionDefinition",
            "src": "25311:235:9"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the minimum and maximum amount of the stable token an exchange can involve.\n@dev Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new\nexchange proposals for the token.\n@param stableTokenRegistryId The registry ID string for the stable token to set limits for.\n@param minExchangeAmount The new minimum exchange amount for the stable token.\n@param maxExchangeAmount The new maximum exchange amount for the stable token.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setStableTokenExchangeLimits",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "stableTokenRegistryId",
                      "scope": 2675,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2642,
                        "name": "ElementaryTypeName",
                        "src": "26095:6:9"
                      }
                    ],
                    "id": 2643,
                    "name": "VariableDeclaration",
                    "src": "26095:37:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "minExchangeAmount",
                      "scope": 2675,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2644,
                        "name": "ElementaryTypeName",
                        "src": "26138:7:9"
                      }
                    ],
                    "id": 2645,
                    "name": "VariableDeclaration",
                    "src": "26138:25:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "maxExchangeAmount",
                      "scope": 2675,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2646,
                        "name": "ElementaryTypeName",
                        "src": "26169:7:9"
                      }
                    ],
                    "id": 2647,
                    "name": "VariableDeclaration",
                    "src": "26169:25:9"
                  }
                ],
                "id": 2648,
                "name": "ParameterList",
                "src": "26089:109:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2651,
                "name": "ParameterList",
                "src": "26218:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 333,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2649,
                    "name": "Identifier",
                    "src": "26208:9:9"
                  }
                ],
                "id": 2650,
                "name": "ModifierInvocation",
                "src": "26208:9:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_55b505c4d68020c2e891038105b4f4ecd9a61ba2e1c7341c64d391411c6f4c2e",
                                  "typeString": "literal_string \"Min exchange amount must not be greater than max\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2652,
                            "name": "Identifier",
                            "src": "26224:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2645,
                                  "type": "uint256",
                                  "value": "minExchangeAmount"
                                },
                                "id": 2653,
                                "name": "Identifier",
                                "src": "26232:17:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2647,
                                  "type": "uint256",
                                  "value": "maxExchangeAmount"
                                },
                                "id": 2654,
                                "name": "Identifier",
                                "src": "26253:17:9"
                              }
                            ],
                            "id": 2655,
                            "name": "BinaryOperation",
                            "src": "26232:38:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d6178",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Min exchange amount must not be greater than max\"",
                              "value": "Min exchange amount must not be greater than max"
                            },
                            "id": 2656,
                            "name": "Literal",
                            "src": "26272:50:9"
                          }
                        ],
                        "id": 2657,
                        "name": "FunctionCall",
                        "src": "26224:99:9"
                      }
                    ],
                    "id": 2658,
                    "name": "ExpressionStatement",
                    "src": "26224:99:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct GrandaMento.ExchangeLimits storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct GrandaMento.ExchangeLimits storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1721,
                                  "type": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)",
                                  "value": "stableTokenExchangeLimits"
                                },
                                "id": 2659,
                                "name": "Identifier",
                                "src": "26329:25:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2643,
                                  "type": "string calldata",
                                  "value": "stableTokenRegistryId"
                                },
                                "id": 2660,
                                "name": "Identifier",
                                "src": "26355:21:9"
                              }
                            ],
                            "id": 2661,
                            "name": "IndexAccess",
                            "src": "26329:48:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "minExchangeAmount",
                                "maxExchangeAmount"
                              ],
                              "type": "struct GrandaMento.ExchangeLimits memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1690,
                                  "type": "type(struct GrandaMento.ExchangeLimits storage pointer)",
                                  "value": "ExchangeLimits"
                                },
                                "id": 2662,
                                "name": "Identifier",
                                "src": "26380:14:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2645,
                                  "type": "uint256",
                                  "value": "minExchangeAmount"
                                },
                                "id": 2663,
                                "name": "Identifier",
                                "src": "26422:17:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2647,
                                  "type": "uint256",
                                  "value": "maxExchangeAmount"
                                },
                                "id": 2664,
                                "name": "Identifier",
                                "src": "26466:17:9"
                              }
                            ],
                            "id": 2665,
                            "name": "FunctionCall",
                            "src": "26380:110:9"
                          }
                        ],
                        "id": 2666,
                        "name": "Assignment",
                        "src": "26329:161:9"
                      }
                    ],
                    "id": 2667,
                    "name": "ExpressionStatement",
                    "src": "26329:161:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1679,
                              "type": "function (string memory,uint256,uint256)",
                              "value": "StableTokenExchangeLimitsSet"
                            },
                            "id": 2668,
                            "name": "Identifier",
                            "src": "26501:28:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2643,
                              "type": "string calldata",
                              "value": "stableTokenRegistryId"
                            },
                            "id": 2669,
                            "name": "Identifier",
                            "src": "26530:21:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2645,
                              "type": "uint256",
                              "value": "minExchangeAmount"
                            },
                            "id": 2670,
                            "name": "Identifier",
                            "src": "26553:17:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2647,
                              "type": "uint256",
                              "value": "maxExchangeAmount"
                            },
                            "id": 2671,
                            "name": "Identifier",
                            "src": "26572:17:9"
                          }
                        ],
                        "id": 2672,
                        "name": "FunctionCall",
                        "src": "26501:89:9"
                      }
                    ],
                    "id": 2673,
                    "name": "EmitStatement",
                    "src": "26496:94:9"
                  }
                ],
                "id": 2674,
                "name": "Block",
                "src": "26218:377:9"
              }
            ],
            "id": 2675,
            "name": "FunctionDefinition",
            "src": "26052:543:9"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the veto period in seconds.\n@dev Sender must be owner.\n@param newVetoPeriodSeconds The new value for the veto period in seconds.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setVetoPeriodSeconds",
              "scope": 2699,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "newVetoPeriodSeconds",
                      "scope": 2698,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2676,
                        "name": "ElementaryTypeName",
                        "src": "26798:7:9"
                      }
                    ],
                    "id": 2677,
                    "name": "VariableDeclaration",
                    "src": "26798:28:9"
                  }
                ],
                "id": 2678,
                "name": "ParameterList",
                "src": "26797:30:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2681,
                "name": "ParameterList",
                "src": "26845:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 333,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2679,
                    "name": "Identifier",
                    "src": "26835:9:9"
                  }
                ],
                "id": 2680,
                "name": "ModifierInvocation",
                "src": "26835:9:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_dbb965376e8cf5f333b57ce44de7c4b8880c6cfb990bd33179bafc5d0b6bc178",
                                  "typeString": "literal_string \"Veto period cannot exceed 4 weeks\""
                                }
                              ],
                              "overloadedDeclarations": [
                                14226,
                                14227
                              ],
                              "referencedDeclaration": 14227,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2682,
                            "name": "Identifier",
                            "src": "27078:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2677,
                                  "type": "uint256",
                                  "value": "newVetoPeriodSeconds"
                                },
                                "id": 2683,
                                "name": "Identifier",
                                "src": "27086:20:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "34",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": "weeks",
                                  "token": "number",
                                  "type": "int_const 2419200",
                                  "value": "4"
                                },
                                "id": 2684,
                                "name": "Literal",
                                "src": "27110:7:9"
                              }
                            ],
                            "id": 2685,
                            "name": "BinaryOperation",
                            "src": "27086:31:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5665746f20706572696f642063616e6e6f74206578636565642034207765656b73",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Veto period cannot exceed 4 weeks\"",
                              "value": "Veto period cannot exceed 4 weeks"
                            },
                            "id": 2686,
                            "name": "Literal",
                            "src": "27119:35:9"
                          }
                        ],
                        "id": 2687,
                        "name": "FunctionCall",
                        "src": "27078:77:9"
                      }
                    ],
                    "id": 2688,
                    "name": "ExpressionStatement",
                    "src": "27078:77:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1717,
                              "type": "uint256",
                              "value": "vetoPeriodSeconds"
                            },
                            "id": 2689,
                            "name": "Identifier",
                            "src": "27161:17:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2677,
                              "type": "uint256",
                              "value": "newVetoPeriodSeconds"
                            },
                            "id": 2690,
                            "name": "Identifier",
                            "src": "27181:20:9"
                          }
                        ],
                        "id": 2691,
                        "name": "Assignment",
                        "src": "27161:40:9"
                      }
                    ],
                    "id": 2692,
                    "name": "ExpressionStatement",
                    "src": "27161:40:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1671,
                              "type": "function (uint256)",
                              "value": "VetoPeriodSecondsSet"
                            },
                            "id": 2693,
                            "name": "Identifier",
                            "src": "27212:20:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2677,
                              "type": "uint256",
                              "value": "newVetoPeriodSeconds"
                            },
                            "id": 2694,
                            "name": "Identifier",
                            "src": "27233:20:9"
                          }
                        ],
                        "id": 2695,
                        "name": "FunctionCall",
                        "src": "27212:42:9"
                      }
                    ],
                    "id": 2696,
                    "name": "EmitStatement",
                    "src": "27207:47:9"
                  }
                ],
                "id": 2697,
                "name": "Block",
                "src": "26845:414:9"
              }
            ],
            "id": 2698,
            "name": "FunctionDefinition",
            "src": "26768:491:9"
          }
        ],
        "id": 2699,
        "name": "ContractDefinition",
        "src": "471:26790:9"
      }
    ],
    "id": 2700,
    "name": "SourceUnit",
    "src": "0:27262:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:16.800Z",
  "devdoc": {
    "methods": {
      "approveExchangeProposal(uint256)": {
        "details": "Sender must be the approver. Exchange proposal must be in the Proposed state.",
        "params": {
          "proposalId": "The identifier of the proposal to approve."
        }
      },
      "cancelExchangeProposal(uint256)": {
        "details": "Only callable by the exchanger if the proposal is in the Proposed state or the owner if the proposal is in the Approved state.",
        "params": {
          "proposalId": "The identifier of the proposal to cancel."
        }
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization."
        }
      },
      "createExchangeProposal(string,uint256,bool)": {
        "details": "Stable token value amounts are used for the sellAmount, not unit amounts.",
        "params": {
          "sellAmount": "The amount of the sell token being sold.",
          "sellCelo": "Whether CELO is being sold.",
          "stableTokenRegistryId": "The string registry ID for the stable token involved in the exchange."
        },
        "return": "The proposal identifier for the newly created exchange proposal."
      },
      "executeExchangeProposal(uint256)": {
        "details": "Callable by anyone. Reverts if the proposal is not in the Approved state or proposal.vetoPeriodSeconds has not elapsed since approval.",
        "params": {
          "proposalId": "The identifier of the proposal to execute."
        }
      },
      "getActiveProposalIds()": {
        "details": "Elements with a proposal ID of 0 should be filtered out by the consumer.",
        "return": "An array of active exchange proposals IDs."
      },
      "getBuyAmount(uint256,uint256,bool)": {
        "details": "Stable token value amounts are used for the sellAmount, not unit amounts. Assumes both CELO and the stable token have 18 decimals.",
        "params": {
          "celoStableTokenExchangeRate": "The unwrapped fraction exchange rate of CELO quoted in the stable token.",
          "sellAmount": "The amount of the sell token being sold.",
          "sellCelo": "Whether CELO is being sold."
        },
        "return": "The amount of the asset being bought."
      },
      "getStableTokenExchangeLimits(string)": {
        "details": "Reverts if there is no explicit exchange limit for the stable token.",
        "params": {
          "stableTokenRegistryId": "The string registry ID for the stable token."
        },
        "return": "Minimum exchange amount.Maximum exchange amount."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "params": {
          "_approver": "The approver that has the ability to approve exchange proposals.",
          "_maxApprovalExchangeRateChange": "The maximum allowed change in CELO price between an exchange proposal's creation and approval.",
          "_registry": "The address of the registry.",
          "_spread": "The spread charged on exchanges.",
          "_vetoPeriodSeconds": "The length of the veto period in seconds."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeFromActiveProposalIdsSuperset(uint256)": {
        "details": "Anyone can call. Reverts if the exchange proposal is active.",
        "params": {
          "index": "The index of the proposal ID to remove from activeProposalIdsSuperset."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApprover(address)": {
        "details": "Sender must be owner. New approver is allowed to be address(0).",
        "params": {
          "newApprover": "The new value for the approver."
        }
      },
      "setMaxApprovalExchangeRateChange(uint256)": {
        "details": "Sender must be owner.",
        "params": {
          "newMaxApprovalExchangeRateChange": "The new value for maxApprovalExchangeRateChange to be wrapped."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setSpread(uint256)": {
        "details": "Sender must be owner.",
        "params": {
          "newSpread": "The new value for the spread to be wrapped. Must be <= fixed 1."
        }
      },
      "setStableTokenExchangeLimits(string,uint256,uint256)": {
        "details": "Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new exchange proposals for the token.",
        "params": {
          "maxExchangeAmount": "The new maximum exchange amount for the stable token.",
          "minExchangeAmount": "The new minimum exchange amount for the stable token.",
          "stableTokenRegistryId": "The registry ID string for the stable token to set limits for."
        }
      },
      "setVetoPeriodSeconds(uint256)": {
        "details": "Sender must be owner.",
        "params": {
          "newVetoPeriodSeconds": "The new value for the veto period in seconds."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Facilitates large exchanges between CELO stable tokens."
  },
  "userdoc": {
    "methods": {
      "approveExchangeProposal(uint256)": {
        "notice": "Approves an existing exchange proposal."
      },
      "cancelExchangeProposal(uint256)": {
        "notice": "Cancels an exchange proposal."
      },
      "constructor": "Sets initialized == true on implementation contracts.",
      "createExchangeProposal(string,uint256,bool)": {
        "notice": "Creates a new exchange proposal and deposits the tokens being sold."
      },
      "executeExchangeProposal(uint256)": {
        "notice": "Executes an exchange proposal that's been approved and not vetoed."
      },
      "getActiveProposalIds()": {
        "notice": "Gets the proposal identifiers of exchange proposals in the Proposed or Approved state. Returns a version of activeProposalIdsSuperset with inactive proposal IDs set as 0."
      },
      "getBuyAmount(uint256,uint256,bool)": {
        "notice": "Using the oracle price, charges the spread and calculates the amount of the asset being bought."
      },
      "getStableTokenExchangeLimits(string)": {
        "notice": "Gets the minimum and maximum amount of a stable token that can be involved in a single exchange."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "removeFromActiveProposalIdsSuperset(uint256)": {
        "notice": "Removes the proposal ID found at the provided index of activeProposalIdsSuperset if the exchange proposal is not active."
      },
      "setApprover(address)": {
        "notice": "Sets the approver."
      },
      "setMaxApprovalExchangeRateChange(uint256)": {
        "notice": "Sets the maximum allowed change in the CELO/stable token price when an exchange proposal is being approved relative to the price when the proposal was created."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setSpread(uint256)": {
        "notice": "Sets the spread."
      },
      "setStableTokenExchangeLimits(string,uint256,uint256)": {
        "notice": "Sets the minimum and maximum amount of the stable token an exchange can involve."
      },
      "setVetoPeriodSeconds(uint256)": {
        "notice": "Sets the veto period in seconds."
      }
    }
  }
}