{
  "contractName": "Freezer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "freeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "unfreeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"freeze(address)\":{\"params\":{\"target\":\"The address of the contract to freeze.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unfreeze(address)\":{\"params\":{\"target\":\"The address of the contract to freeze.\"}}}},\"userdoc\":{\"methods\":{\"constructor\":\"Sets initialized == true on implementation contracts\",\"freeze(address)\":{\"notice\":\"Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\"},\"unfreeze(address)\":{\"notice\":\"Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/lib/mento-core/contracts/common/Freezer.sol\":\"Freezer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"project:/lib/mento-core/contracts/common/Freezer.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\n\\nimport \\\"./Initializable.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\n\\ncontract Freezer is Ownable, Initializable, IFreezer {\\n    mapping(address => bool) public isFrozen;\\n\\n    /**\\n     * @notice Sets initialized == true on implementation contracts\\n     * @param test Set to true to skip implementation initialization\\n     */\\n    constructor(bool test) public Initializable(test) {}\\n\\n    function initialize() external initializer {\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /**\\n     * @notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\\n     * @param target The address of the contract to freeze.\\n     */\\n    function freeze(address target) external onlyOwner {\\n        isFrozen[target] = true;\\n    }\\n\\n    /**\\n     * @notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\\n     * @param target The address of the contract to freeze.\\n     */\\n    function unfreeze(address target) external onlyOwner {\\n        isFrozen[target] = false;\\n    }\\n}\\n\",\"keccak256\":\"0x2a2adbae7e5ff3aee9c8c5f765ad4e028f063152b1d36d9f3e5b85865d7c878d\"},\"project:/lib/mento-core/contracts/common/Initializable.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ncontract Initializable {\\n    bool public initialized;\\n\\n    constructor(bool testingDeployment) public {\\n        if (!testingDeployment) {\\n            initialized = true;\\n        }\\n    }\\n\\n    modifier initializer() {\\n        require(!initialized, \\\"contract already initialized\\\");\\n        initialized = true;\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xb0ecb1e982724eea55f4fff68ae425db6a5cb34e7a76ebefc6c30ddf858f80d6\"},\"project:/lib/mento-core/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IFreezer {\\n    function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd54bab5f4df0471c112b7274db5e4321cda98f9bd894afff16a9e8e9ef58daf4\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a06380380610a068339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600061005561011b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080610114576001600060146101000a81548160ff0219169083151502179055505b5050610123565b600033905090565b6108d4806101326000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638d1fdf2f116100665780638d1fdf2f146101125780638da5cb5b146101565780638f32d59b146101a0578063e5839836146101c2578063f2fde38b1461021e57610093565b8063158ef93e1461009857806345c8b1a6146100ba578063715018a6146100fe5780638129fc1c14610108575b600080fd5b6100a0610262565b604051808215151515815260200191505060405180910390f35b6100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610275565b005b61010661034a565b005b610110610483565b005b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052c565b005b61015e610600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a8610629565b604051808215151515815260200191505060405180910390f35b610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610687565b604051808215151515815260200191505060405180910390f35b6102606004803603602081101561023457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b005b600060149054906101000a900460ff1681565b61027d610629565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610352610629565b6103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061052a3361072d565b565b610534610629565b6105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661066b610871565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6106af610629565b610721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61072a8161072d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061087a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820f6fa5729aececa3b8586cd5bb2061269a91daf62db5f1fdbccfb10bb520a2faf64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638d1fdf2f116100665780638d1fdf2f146101125780638da5cb5b146101565780638f32d59b146101a0578063e5839836146101c2578063f2fde38b1461021e57610093565b8063158ef93e1461009857806345c8b1a6146100ba578063715018a6146100fe5780638129fc1c14610108575b600080fd5b6100a0610262565b604051808215151515815260200191505060405180910390f35b6100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610275565b005b61010661034a565b005b610110610483565b005b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052c565b005b61015e610600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a8610629565b604051808215151515815260200191505060405180910390f35b610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610687565b604051808215151515815260200191505060405180910390f35b6102606004803603602081101561023457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b005b600060149054906101000a900460ff1681565b61027d610629565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610352610629565b6103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061052a3361072d565b565b610534610629565b6105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661066b610871565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6106af610629565b610721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61072a8161072d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061087a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820f6fa5729aececa3b8586cd5bb2061269a91daf62db5f1fdbccfb10bb520a2faf64736f6c634300050d0032",
  "sourceMap": "158:922:21:-;;;417:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;417:52:21;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;417:52:21;;;;;;;;;;;;;;;;461:4;698:17:3;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;143:17:23;138:67;;190:4;176:11;;:18;;;;;;;;;;;;;;;;;;138:67;85:126;417:52:21;158:922;;788:96:0;833:15;867:10;860:17;;788:96;:::o;158:922:21:-;;;;;;;",
  "deployedSourceMap": "158:922:21:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:922:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55:23:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;984:94:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;984:94:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:3;;;:::i;:::-;;475:90:21;;;:::i;:::-;;732:91;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;732:91:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;899:77:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;217:40:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;217:40:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;55:23:23;;;;;;;;;;;;;:::o;984:94:21:-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:5:21;1047:8;:16;1056:6;1047:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;984:94;:::o;1684:137:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;475:90:21:-;259:11:23;;;;;;;;;;;258:12;250:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:4;313:11;;:18;;;;;;;;;;;;;;;;;;528:30:21;547:10;528:18;:30::i;:::-;475:90::o;732:91::-;1103:9:3;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;812:4:21;793:8;:16;802:6;793:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;732:91;:::o;899:77:3:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;217:40:21:-;;;;;;;;;;;;;;;;;;;;;;:::o;1970:107:3:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;2178:225::-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./Initializable.sol\";\nimport \"./interfaces/IFreezer.sol\";\n\ncontract Freezer is Ownable, Initializable, IFreezer {\n    mapping(address => bool) public isFrozen;\n\n    /**\n     * @notice Sets initialized == true on implementation contracts\n     * @param test Set to true to skip implementation initialization\n     */\n    constructor(bool test) public Initializable(test) {}\n\n    function initialize() external initializer {\n        _transferOwnership(msg.sender);\n    }\n\n    /**\n     * @notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n     * @param target The address of the contract to freeze.\n     */\n    function freeze(address target) external onlyOwner {\n        isFrozen[target] = true;\n    }\n\n    /**\n     * @notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n     * @param target The address of the contract to freeze.\n     */\n    function unfreeze(address target) external onlyOwner {\n        isFrozen[target] = false;\n    }\n}\n",
  "sourcePath": "/Users/beaver/Development/celo/celo-monorepo/packages/protocol/lib/mento-core/contracts/common/Freezer.sol",
  "ast": {
    "absolutePath": "project:/lib/mento-core/contracts/common/Freezer.sol",
    "exportedSymbols": {
      "Freezer": [
        7616
      ]
    },
    "id": 7617,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7554,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:21"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 7555,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 401,
        "src": "26:63:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/common/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 7556,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 8253,
        "src": "91:29:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/mento-core/contracts/common/interfaces/IFreezer.sol",
        "file": "./interfaces/IFreezer.sol",
        "id": 7557,
        "nodeType": "ImportDirective",
        "scope": 7617,
        "sourceUnit": 10831,
        "src": "121:35:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7558,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 400,
              "src": "178:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$400",
                "typeString": "contract Ownable"
              }
            },
            "id": 7559,
            "nodeType": "InheritanceSpecifier",
            "src": "178:7:21"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7560,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8252,
              "src": "187:13:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8252",
                "typeString": "contract Initializable"
              }
            },
            "id": 7561,
            "nodeType": "InheritanceSpecifier",
            "src": "187:13:21"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7562,
              "name": "IFreezer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10830,
              "src": "202:8:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFreezer_$10830",
                "typeString": "contract IFreezer"
              }
            },
            "id": 7563,
            "nodeType": "InheritanceSpecifier",
            "src": "202:8:21"
          }
        ],
        "contractDependencies": [
          26,
          400,
          8252,
          10830
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7616,
        "linearizedBaseContracts": [
          7616,
          10830,
          8252,
          400,
          26
        ],
        "name": "Freezer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7567,
            "name": "isFrozen",
            "nodeType": "VariableDeclaration",
            "scope": 7616,
            "src": "217:40:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7566,
              "keyType": {
                "id": 7564,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "225:7:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "217:24:21",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7565,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "236:4:21",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7575,
              "nodeType": "Block",
              "src": "467:2:21",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 7576,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7572,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7569,
                    "src": "461:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 7573,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7571,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8252,
                  "src": "447:13:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$8252_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "447:19:21"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7569,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 7576,
                  "src": "429:9:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7568,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "428:11:21"
            },
            "returnParameters": {
              "id": 7574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:21"
            },
            "scope": 7616,
            "src": "417:52:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7586,
              "nodeType": "Block",
              "src": "518:47:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7582,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14223,
                          "src": "547:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "547:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7581,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "528:18:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "528:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7585,
                  "nodeType": "ExpressionStatement",
                  "src": "528:30:21"
                }
              ]
            },
            "documentation": null,
            "id": 7587,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7579,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7578,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8251,
                  "src": "506:11:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "506:11:21"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:21"
            },
            "returnParameters": {
              "id": 7580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "518:0:21"
            },
            "scope": 7616,
            "src": "475:90:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7600,
              "nodeType": "Block",
              "src": "783:40:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7594,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7567,
                        "src": "793:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7596,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7595,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7589,
                        "src": "802:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "793:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:4:21",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "793:23:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7599,
                  "nodeType": "ExpressionStatement",
                  "src": "793:23:21"
                }
              ]
            },
            "documentation": "@notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 7601,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7592,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7591,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "773:9:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "773:9:21"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7589,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 7601,
                  "src": "748:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "747:16:21"
            },
            "returnParameters": {
              "id": 7593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:21"
            },
            "scope": 7616,
            "src": "732:91:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7614,
              "nodeType": "Block",
              "src": "1037:41:21",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7608,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7567,
                        "src": "1047:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 7610,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7609,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7603,
                        "src": "1056:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1047:16:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 7611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1066:5:21",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1047:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7613,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:24:21"
                }
              ]
            },
            "documentation": "@notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 7615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7606,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7605,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 333,
                  "src": "1027:9:21",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1027:9:21"
              }
            ],
            "name": "unfreeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7603,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 7615,
                  "src": "1002:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1001:16:21"
            },
            "returnParameters": {
              "id": 7607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1037:0:21"
            },
            "scope": 7616,
            "src": "984:94:21",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7617,
        "src": "158:922:21"
      }
    ],
    "src": "0:1081:21"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/lib/mento-core/contracts/common/Freezer.sol",
      "exportedSymbols": {
        "Freezer": [
          7616
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 7554,
        "name": "PragmaDirective",
        "src": "0:24:21"
      },
      {
        "attributes": {
          "SourceUnit": 401,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 7617,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7555,
        "name": "ImportDirective",
        "src": "26:63:21"
      },
      {
        "attributes": {
          "SourceUnit": 8253,
          "absolutePath": "project:/lib/mento-core/contracts/common/Initializable.sol",
          "file": "./Initializable.sol",
          "scope": 7617,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7556,
        "name": "ImportDirective",
        "src": "91:29:21"
      },
      {
        "attributes": {
          "SourceUnit": 10831,
          "absolutePath": "project:/lib/mento-core/contracts/common/interfaces/IFreezer.sol",
          "file": "./interfaces/IFreezer.sol",
          "scope": 7617,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7557,
        "name": "ImportDirective",
        "src": "121:35:21"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            400,
            8252,
            10830
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7616,
            10830,
            8252,
            400,
            26
          ],
          "name": "Freezer",
          "scope": 7617
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 400,
                  "type": "contract Ownable"
                },
                "id": 7558,
                "name": "UserDefinedTypeName",
                "src": "178:7:21"
              }
            ],
            "id": 7559,
            "name": "InheritanceSpecifier",
            "src": "178:7:21"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 8252,
                  "type": "contract Initializable"
                },
                "id": 7560,
                "name": "UserDefinedTypeName",
                "src": "187:13:21"
              }
            ],
            "id": 7561,
            "name": "InheritanceSpecifier",
            "src": "187:13:21"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IFreezer",
                  "referencedDeclaration": 10830,
                  "type": "contract IFreezer"
                },
                "id": 7562,
                "name": "UserDefinedTypeName",
                "src": "202:8:21"
              }
            ],
            "id": 7563,
            "name": "InheritanceSpecifier",
            "src": "202:8:21"
          },
          {
            "attributes": {
              "constant": false,
              "name": "isFrozen",
              "scope": 7616,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 7564,
                    "name": "ElementaryTypeName",
                    "src": "225:7:21"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7565,
                    "name": "ElementaryTypeName",
                    "src": "236:4:21"
                  }
                ],
                "id": 7566,
                "name": "Mapping",
                "src": "217:24:21"
              }
            ],
            "id": 7567,
            "name": "VariableDeclaration",
            "src": "217:40:21"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7616,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 7576,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7568,
                        "name": "ElementaryTypeName",
                        "src": "429:4:21"
                      }
                    ],
                    "id": 7569,
                    "name": "VariableDeclaration",
                    "src": "429:9:21"
                  }
                ],
                "id": 7570,
                "name": "ParameterList",
                "src": "428:11:21"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7574,
                "name": "ParameterList",
                "src": "467:0:21"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8252,
                      "type": "type(contract Initializable)",
                      "value": "Initializable"
                    },
                    "id": 7571,
                    "name": "Identifier",
                    "src": "447:13:21"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7569,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 7572,
                    "name": "Identifier",
                    "src": "461:4:21"
                  }
                ],
                "id": 7573,
                "name": "ModifierInvocation",
                "src": "447:19:21"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 7575,
                "name": "Block",
                "src": "467:2:21"
              }
            ],
            "id": 7576,
            "name": "FunctionDefinition",
            "src": "417:52:21"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 7616,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7577,
                "name": "ParameterList",
                "src": "494:2:21"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7580,
                "name": "ParameterList",
                "src": "518:0:21"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8251,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 7578,
                    "name": "Identifier",
                    "src": "506:11:21"
                  }
                ],
                "id": 7579,
                "name": "ModifierInvocation",
                "src": "506:11:21"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 399,
                              "type": "function (address)",
                              "value": "_transferOwnership"
                            },
                            "id": 7581,
                            "name": "Identifier",
                            "src": "528:18:21"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 14223,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7582,
                                "name": "Identifier",
                                "src": "547:3:21"
                              }
                            ],
                            "id": 7583,
                            "name": "MemberAccess",
                            "src": "547:10:21"
                          }
                        ],
                        "id": 7584,
                        "name": "FunctionCall",
                        "src": "528:30:21"
                      }
                    ],
                    "id": 7585,
                    "name": "ExpressionStatement",
                    "src": "528:30:21"
                  }
                ],
                "id": 7586,
                "name": "Block",
                "src": "518:47:21"
              }
            ],
            "id": 7587,
            "name": "FunctionDefinition",
            "src": "475:90:21"
          },
          {
            "attributes": {
              "documentation": "@notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "freeze",
              "scope": 7616,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "target",
                      "scope": 7601,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7588,
                        "name": "ElementaryTypeName",
                        "src": "748:7:21"
                      }
                    ],
                    "id": 7589,
                    "name": "VariableDeclaration",
                    "src": "748:14:21"
                  }
                ],
                "id": 7590,
                "name": "ParameterList",
                "src": "747:16:21"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7593,
                "name": "ParameterList",
                "src": "783:0:21"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 333,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 7591,
                    "name": "Identifier",
                    "src": "773:9:21"
                  }
                ],
                "id": 7592,
                "name": "ModifierInvocation",
                "src": "773:9:21"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7567,
                                  "type": "mapping(address => bool)",
                                  "value": "isFrozen"
                                },
                                "id": 7594,
                                "name": "Identifier",
                                "src": "793:8:21"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7589,
                                  "type": "address",
                                  "value": "target"
                                },
                                "id": 7595,
                                "name": "Identifier",
                                "src": "802:6:21"
                              }
                            ],
                            "id": 7596,
                            "name": "IndexAccess",
                            "src": "793:16:21"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7597,
                            "name": "Literal",
                            "src": "812:4:21"
                          }
                        ],
                        "id": 7598,
                        "name": "Assignment",
                        "src": "793:23:21"
                      }
                    ],
                    "id": 7599,
                    "name": "ExpressionStatement",
                    "src": "793:23:21"
                  }
                ],
                "id": 7600,
                "name": "Block",
                "src": "783:40:21"
              }
            ],
            "id": 7601,
            "name": "FunctionDefinition",
            "src": "732:91:21"
          },
          {
            "attributes": {
              "documentation": "@notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "unfreeze",
              "scope": 7616,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "target",
                      "scope": 7615,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7602,
                        "name": "ElementaryTypeName",
                        "src": "1002:7:21"
                      }
                    ],
                    "id": 7603,
                    "name": "VariableDeclaration",
                    "src": "1002:14:21"
                  }
                ],
                "id": 7604,
                "name": "ParameterList",
                "src": "1001:16:21"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7607,
                "name": "ParameterList",
                "src": "1037:0:21"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 333,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 7605,
                    "name": "Identifier",
                    "src": "1027:9:21"
                  }
                ],
                "id": 7606,
                "name": "ModifierInvocation",
                "src": "1027:9:21"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7567,
                                  "type": "mapping(address => bool)",
                                  "value": "isFrozen"
                                },
                                "id": 7608,
                                "name": "Identifier",
                                "src": "1047:8:21"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7603,
                                  "type": "address",
                                  "value": "target"
                                },
                                "id": 7609,
                                "name": "Identifier",
                                "src": "1056:6:21"
                              }
                            ],
                            "id": 7610,
                            "name": "IndexAccess",
                            "src": "1047:16:21"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 7611,
                            "name": "Literal",
                            "src": "1066:5:21"
                          }
                        ],
                        "id": 7612,
                        "name": "Assignment",
                        "src": "1047:24:21"
                      }
                    ],
                    "id": 7613,
                    "name": "ExpressionStatement",
                    "src": "1047:24:21"
                  }
                ],
                "id": 7614,
                "name": "Block",
                "src": "1037:41:21"
              }
            ],
            "id": 7615,
            "name": "FunctionDefinition",
            "src": "984:94:21"
          }
        ],
        "id": 7616,
        "name": "ContractDefinition",
        "src": "158:922:21"
      }
    ],
    "id": 7617,
    "name": "SourceUnit",
    "src": "0:1081:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2024-03-05T15:18:03.896Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "freeze(address)": {
        "params": {
          "target": "The address of the contract to freeze."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unfreeze(address)": {
        "params": {
          "target": "The address of the contract to freeze."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets initialized == true on implementation contracts",
      "freeze(address)": {
        "notice": "Freezes the target contract, disabling `onlyWhenNotFrozen` functions."
      },
      "unfreeze(address)": {
        "notice": "Unfreezes the contract, enabling `onlyWhenNotFrozen` functions."
      }
    }
  }
}