{
  "contractName": "Freezer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isFrozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "freeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "unfreeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFrozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"unfreeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"freeze(address)\":{\"params\":{\"target\":\"The address of the contract to freeze.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unfreeze(address)\":{\"params\":{\"target\":\"The address of the contract to freeze.\"}}}},\"userdoc\":{\"methods\":{\"constructor\":\"Sets initialized == true on implementation contracts\",\"freeze(address)\":{\"notice\":\"Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\"},\"unfreeze(address)\":{\"notice\":\"Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/common/Freezer.sol\":\"Freezer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"project:/contracts/common/Freezer.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\n\\nimport \\\"./Initializable.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\n\\ncontract Freezer is Ownable, Initializable, IFreezer {\\n  mapping(address => bool) public isFrozen;\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  function initialize() external initializer {\\n    _transferOwnership(msg.sender);\\n  }\\n\\n  /**\\n   * @notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\\n   * @param target The address of the contract to freeze.\\n   */\\n  function freeze(address target) external onlyOwner {\\n    isFrozen[target] = true;\\n  }\\n\\n  /**\\n   * @notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\\n   * @param target The address of the contract to freeze.\\n   */\\n  function unfreeze(address target) external onlyOwner {\\n    isFrozen[target] = false;\\n  }\\n}\\n\",\"keccak256\":\"0x31453a82abab4b381979878e4be42f64ea45b12abf9df58408434bb4266ffa47\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a06380380610a068339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600061005561011b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080610114576001600060146101000a81548160ff0219169083151502179055505b5050610123565b600033905090565b6108d4806101326000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638d1fdf2f116100665780638d1fdf2f146101125780638da5cb5b146101565780638f32d59b146101a0578063e5839836146101c2578063f2fde38b1461021e57610093565b8063158ef93e1461009857806345c8b1a6146100ba578063715018a6146100fe5780638129fc1c14610108575b600080fd5b6100a0610262565b604051808215151515815260200191505060405180910390f35b6100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610275565b005b61010661034a565b005b610110610483565b005b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052c565b005b61015e610600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a8610629565b604051808215151515815260200191505060405180910390f35b610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610687565b604051808215151515815260200191505060405180910390f35b6102606004803603602081101561023457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b005b600060149054906101000a900460ff1681565b61027d610629565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610352610629565b6103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061052a3361072d565b565b610534610629565b6105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661066b610871565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6106af610629565b610721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61072a8161072d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061087a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723158209fc97ee60fc7f6204f0bf321db7bc2d88ff52d0e752e7b76ff96c9414e408beb64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638d1fdf2f116100665780638d1fdf2f146101125780638da5cb5b146101565780638f32d59b146101a0578063e5839836146101c2578063f2fde38b1461021e57610093565b8063158ef93e1461009857806345c8b1a6146100ba578063715018a6146100fe5780638129fc1c14610108575b600080fd5b6100a0610262565b604051808215151515815260200191505060405180910390f35b6100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610275565b005b61010661034a565b005b610110610483565b005b6101546004803603602081101561012857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061052c565b005b61015e610600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a8610629565b604051808215151515815260200191505060405180910390f35b610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610687565b604051808215151515815260200191505060405180910390f35b6102606004803603602081101561023457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b005b600060149054906101000a900460ff1681565b61027d610629565b6102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610352610629565b6103c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060149054906101000a900460ff1615610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061052a3361072d565b565b610534610629565b6105a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661066b610871565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60016020528060005260406000206000915054906101000a900460ff1681565b6106af610629565b610721576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61072a8161072d565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061087a6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a723158209fc97ee60fc7f6204f0bf321db7bc2d88ff52d0e752e7b76ff96c9414e408beb64736f6c634300050d0032",
  "sourceMap": "158:870:26:-;;;405:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;405:52:26;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;405:52:26;;;;;;;;;;;;;;;;449:4;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;896:17:28;891:57;;937:4;923:11;;:18;;;;;;;;;;;;;;;;;;891:57;842:110;405:52:26;158:870;;788:96:0;833:15;867:10;860:17;;788:96;:::o;158:870:26:-;;;;;;;",
  "deployedSourceMap": "158:870:26:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:870:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:23:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;938:88:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;938:88:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:4;;;:::i;:::-;;461:84:26;;;:::i;:::-;;702:85;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;702:85:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;215:40:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;215:40:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;319:23:28;;;;;;;;;;;;;:::o;938:88:26:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:5:26;997:8;:16;1006:6;997:16;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;938:88;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;461:84:26:-;476:11:28;;;;;;;;;;;475:12;467:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:4;526:11;;:18;;;;;;;;;;;;;;;;;;510:30:26;529:10;510:18;:30::i;:::-;461:84::o;702:85::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:4:26;759:8;:16;768:6;759:16;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;702:85;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;215:40:26:-;;;;;;;;;;;;;;;;;;;;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;2178:225::-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./Initializable.sol\";\nimport \"./interfaces/IFreezer.sol\";\n\ncontract Freezer is Ownable, Initializable, IFreezer {\n  mapping(address => bool) public isFrozen;\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  function initialize() external initializer {\n    _transferOwnership(msg.sender);\n  }\n\n  /**\n   * @notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n   * @param target The address of the contract to freeze.\n   */\n  function freeze(address target) external onlyOwner {\n    isFrozen[target] = true;\n  }\n\n  /**\n   * @notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n   * @param target The address of the contract to freeze.\n   */\n  function unfreeze(address target) external onlyOwner {\n    isFrozen[target] = false;\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts/common/Freezer.sol",
  "ast": {
    "absolutePath": "project:/contracts/common/Freezer.sol",
    "exportedSymbols": {
      "Freezer": [
        8830
      ]
    },
    "id": 8831,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8768,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 8769,
        "nodeType": "ImportDirective",
        "scope": 8831,
        "sourceUnit": 482,
        "src": "26:63:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 8770,
        "nodeType": "ImportDirective",
        "scope": 8831,
        "sourceUnit": 9571,
        "src": "91:29:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/interfaces/IFreezer.sol",
        "file": "./interfaces/IFreezer.sol",
        "id": 8771,
        "nodeType": "ImportDirective",
        "scope": 8831,
        "sourceUnit": 14961,
        "src": "121:35:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8772,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 481,
              "src": "178:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$481",
                "typeString": "contract Ownable"
              }
            },
            "id": 8773,
            "nodeType": "InheritanceSpecifier",
            "src": "178:7:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8774,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9570,
              "src": "187:13:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9570",
                "typeString": "contract Initializable"
              }
            },
            "id": 8775,
            "nodeType": "InheritanceSpecifier",
            "src": "187:13:26"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8776,
              "name": "IFreezer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14960,
              "src": "202:8:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFreezer_$14960",
                "typeString": "contract IFreezer"
              }
            },
            "id": 8777,
            "nodeType": "InheritanceSpecifier",
            "src": "202:8:26"
          }
        ],
        "contractDependencies": [
          26,
          481,
          9570,
          14960
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8830,
        "linearizedBaseContracts": [
          8830,
          14960,
          9570,
          481,
          26
        ],
        "name": "Freezer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8781,
            "name": "isFrozen",
            "nodeType": "VariableDeclaration",
            "scope": 8830,
            "src": "215:40:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 8780,
              "keyType": {
                "id": 8778,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "223:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "215:24:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 8779,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "234:4:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8789,
              "nodeType": "Block",
              "src": "455:2:26",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 8790,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8786,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8783,
                    "src": "449:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 8787,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8785,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9570,
                  "src": "435:13:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$9570_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "435:19:26"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8783,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 8790,
                  "src": "417:9:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8782,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:4:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "416:11:26"
            },
            "returnParameters": {
              "id": 8788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:0:26"
            },
            "scope": 8830,
            "src": "405:52:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8800,
              "nodeType": "Block",
              "src": "504:41:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 8796,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "529:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "529:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8795,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "510:18:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "510:30:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8799,
                  "nodeType": "ExpressionStatement",
                  "src": "510:30:26"
                }
              ]
            },
            "documentation": null,
            "id": 8801,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8793,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8792,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9555,
                  "src": "492:11:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "492:11:26"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:2:26"
            },
            "returnParameters": {
              "id": 8794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:26"
            },
            "scope": 8830,
            "src": "461:84:26",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8814,
              "nodeType": "Block",
              "src": "753:34:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8808,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8781,
                        "src": "759:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8810,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8809,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8803,
                        "src": "768:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "759:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 8811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "778:4:26",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "759:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8813,
                  "nodeType": "ExpressionStatement",
                  "src": "759:23:26"
                }
              ]
            },
            "documentation": "@notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 8815,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8806,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8805,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "743:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:9:26"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8803,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 8815,
                  "src": "718:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "717:16:26"
            },
            "returnParameters": {
              "id": 8807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:0:26"
            },
            "scope": 8830,
            "src": "702:85:26",
            "stateMutability": "nonpayable",
            "superFunction": 14947,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8828,
              "nodeType": "Block",
              "src": "991:35:26",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8822,
                        "name": "isFrozen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8781,
                        "src": "997:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 8824,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8823,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8817,
                        "src": "1006:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "997:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 8825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1016:5:26",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "997:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8827,
                  "nodeType": "ExpressionStatement",
                  "src": "997:24:26"
                }
              ]
            },
            "documentation": "@notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
            "id": 8829,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8820,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8819,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "981:9:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "981:9:26"
              }
            ],
            "name": "unfreeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8817,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 8829,
                  "src": "956:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "955:16:26"
            },
            "returnParameters": {
              "id": 8821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "991:0:26"
            },
            "scope": 8830,
            "src": "938:88:26",
            "stateMutability": "nonpayable",
            "superFunction": 14952,
            "visibility": "external"
          }
        ],
        "scope": 8831,
        "src": "158:870:26"
      }
    ],
    "src": "0:1029:26"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/common/Freezer.sol",
      "exportedSymbols": {
        "Freezer": [
          8830
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 8768,
        "name": "PragmaDirective",
        "src": "0:24:26"
      },
      {
        "attributes": {
          "SourceUnit": 482,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 8831,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 8769,
        "name": "ImportDirective",
        "src": "26:63:26"
      },
      {
        "attributes": {
          "SourceUnit": 9571,
          "absolutePath": "project:/contracts/common/Initializable.sol",
          "file": "./Initializable.sol",
          "scope": 8831,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 8770,
        "name": "ImportDirective",
        "src": "91:29:26"
      },
      {
        "attributes": {
          "SourceUnit": 14961,
          "absolutePath": "project:/contracts/common/interfaces/IFreezer.sol",
          "file": "./interfaces/IFreezer.sol",
          "scope": 8831,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 8771,
        "name": "ImportDirective",
        "src": "121:35:26"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            9570,
            14960
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            8830,
            14960,
            9570,
            481,
            26
          ],
          "name": "Freezer",
          "scope": 8831
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 481,
                  "type": "contract Ownable"
                },
                "id": 8772,
                "name": "UserDefinedTypeName",
                "src": "178:7:26"
              }
            ],
            "id": 8773,
            "name": "InheritanceSpecifier",
            "src": "178:7:26"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 9570,
                  "type": "contract Initializable"
                },
                "id": 8774,
                "name": "UserDefinedTypeName",
                "src": "187:13:26"
              }
            ],
            "id": 8775,
            "name": "InheritanceSpecifier",
            "src": "187:13:26"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IFreezer",
                  "referencedDeclaration": 14960,
                  "type": "contract IFreezer"
                },
                "id": 8776,
                "name": "UserDefinedTypeName",
                "src": "202:8:26"
              }
            ],
            "id": 8777,
            "name": "InheritanceSpecifier",
            "src": "202:8:26"
          },
          {
            "attributes": {
              "constant": false,
              "name": "isFrozen",
              "scope": 8830,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 8778,
                    "name": "ElementaryTypeName",
                    "src": "223:7:26"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 8779,
                    "name": "ElementaryTypeName",
                    "src": "234:4:26"
                  }
                ],
                "id": 8780,
                "name": "Mapping",
                "src": "215:24:26"
              }
            ],
            "id": 8781,
            "name": "VariableDeclaration",
            "src": "215:40:26"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 8830,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 8790,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 8782,
                        "name": "ElementaryTypeName",
                        "src": "417:4:26"
                      }
                    ],
                    "id": 8783,
                    "name": "VariableDeclaration",
                    "src": "417:9:26"
                  }
                ],
                "id": 8784,
                "name": "ParameterList",
                "src": "416:11:26"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8788,
                "name": "ParameterList",
                "src": "455:0:26"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9570,
                      "type": "type(contract Initializable)",
                      "value": "Initializable"
                    },
                    "id": 8785,
                    "name": "Identifier",
                    "src": "435:13:26"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8783,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 8786,
                    "name": "Identifier",
                    "src": "449:4:26"
                  }
                ],
                "id": 8787,
                "name": "ModifierInvocation",
                "src": "435:19:26"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 8789,
                "name": "Block",
                "src": "455:2:26"
              }
            ],
            "id": 8790,
            "name": "FunctionDefinition",
            "src": "405:52:26"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 8830,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8791,
                "name": "ParameterList",
                "src": "480:2:26"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8794,
                "name": "ParameterList",
                "src": "504:0:26"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 9555,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 8792,
                    "name": "Identifier",
                    "src": "492:11:26"
                  }
                ],
                "id": 8793,
                "name": "ModifierInvocation",
                "src": "492:11:26"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 480,
                              "type": "function (address)",
                              "value": "_transferOwnership"
                            },
                            "id": 8795,
                            "name": "Identifier",
                            "src": "510:18:26"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 8796,
                                "name": "Identifier",
                                "src": "529:3:26"
                              }
                            ],
                            "id": 8797,
                            "name": "MemberAccess",
                            "src": "529:10:26"
                          }
                        ],
                        "id": 8798,
                        "name": "FunctionCall",
                        "src": "510:30:26"
                      }
                    ],
                    "id": 8799,
                    "name": "ExpressionStatement",
                    "src": "510:30:26"
                  }
                ],
                "id": 8800,
                "name": "Block",
                "src": "504:41:26"
              }
            ],
            "id": 8801,
            "name": "FunctionDefinition",
            "src": "461:84:26"
          },
          {
            "attributes": {
              "documentation": "@notice Freezes the target contract, disabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "freeze",
              "scope": 8830,
              "stateMutability": "nonpayable",
              "superFunction": 14947,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "target",
                      "scope": 8815,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 8802,
                        "name": "ElementaryTypeName",
                        "src": "718:7:26"
                      }
                    ],
                    "id": 8803,
                    "name": "VariableDeclaration",
                    "src": "718:14:26"
                  }
                ],
                "id": 8804,
                "name": "ParameterList",
                "src": "717:16:26"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8807,
                "name": "ParameterList",
                "src": "753:0:26"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 8805,
                    "name": "Identifier",
                    "src": "743:9:26"
                  }
                ],
                "id": 8806,
                "name": "ModifierInvocation",
                "src": "743:9:26"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8781,
                                  "type": "mapping(address => bool)",
                                  "value": "isFrozen"
                                },
                                "id": 8808,
                                "name": "Identifier",
                                "src": "759:8:26"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8803,
                                  "type": "address",
                                  "value": "target"
                                },
                                "id": 8809,
                                "name": "Identifier",
                                "src": "768:6:26"
                              }
                            ],
                            "id": 8810,
                            "name": "IndexAccess",
                            "src": "759:16:26"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 8811,
                            "name": "Literal",
                            "src": "778:4:26"
                          }
                        ],
                        "id": 8812,
                        "name": "Assignment",
                        "src": "759:23:26"
                      }
                    ],
                    "id": 8813,
                    "name": "ExpressionStatement",
                    "src": "759:23:26"
                  }
                ],
                "id": 8814,
                "name": "Block",
                "src": "753:34:26"
              }
            ],
            "id": 8815,
            "name": "FunctionDefinition",
            "src": "702:85:26"
          },
          {
            "attributes": {
              "documentation": "@notice Unfreezes the contract, enabling `onlyWhenNotFrozen` functions.\n@param target The address of the contract to freeze.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "unfreeze",
              "scope": 8830,
              "stateMutability": "nonpayable",
              "superFunction": 14952,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "target",
                      "scope": 8829,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 8816,
                        "name": "ElementaryTypeName",
                        "src": "956:7:26"
                      }
                    ],
                    "id": 8817,
                    "name": "VariableDeclaration",
                    "src": "956:14:26"
                  }
                ],
                "id": 8818,
                "name": "ParameterList",
                "src": "955:16:26"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8821,
                "name": "ParameterList",
                "src": "991:0:26"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 8819,
                    "name": "Identifier",
                    "src": "981:9:26"
                  }
                ],
                "id": 8820,
                "name": "ModifierInvocation",
                "src": "981:9:26"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8781,
                                  "type": "mapping(address => bool)",
                                  "value": "isFrozen"
                                },
                                "id": 8822,
                                "name": "Identifier",
                                "src": "997:8:26"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8817,
                                  "type": "address",
                                  "value": "target"
                                },
                                "id": 8823,
                                "name": "Identifier",
                                "src": "1006:6:26"
                              }
                            ],
                            "id": 8824,
                            "name": "IndexAccess",
                            "src": "997:16:26"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "66616c7365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "false"
                            },
                            "id": 8825,
                            "name": "Literal",
                            "src": "1016:5:26"
                          }
                        ],
                        "id": 8826,
                        "name": "Assignment",
                        "src": "997:24:26"
                      }
                    ],
                    "id": 8827,
                    "name": "ExpressionStatement",
                    "src": "997:24:26"
                  }
                ],
                "id": 8828,
                "name": "Block",
                "src": "991:35:26"
              }
            ],
            "id": 8829,
            "name": "FunctionDefinition",
            "src": "938:88:26"
          }
        ],
        "id": 8830,
        "name": "ContractDefinition",
        "src": "158:870:26"
      }
    ],
    "id": 8831,
    "name": "SourceUnit",
    "src": "0:1029:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:51.106Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "freeze(address)": {
        "params": {
          "target": "The address of the contract to freeze."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unfreeze(address)": {
        "params": {
          "target": "The address of the contract to freeze."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets initialized == true on implementation contracts",
      "freeze(address)": {
        "notice": "Freezes the target contract, disabling `onlyWhenNotFrozen` functions."
      },
      "unfreeze(address)": {
        "notice": "Unfreezes the contract, enabling `onlyWhenNotFrozen` functions."
      }
    }
  }
}