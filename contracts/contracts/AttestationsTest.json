{
  "contractName": "AttestationsTest",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "AttestationCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AttestationExpiryBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "attestationRequestFeeToken",
          "type": "address"
        }
      ],
      "name": "AttestationIssuerSelected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AttestationRequestFeeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "attestationsRequested",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "attestationRequestFeeToken",
          "type": "address"
        }
      ],
      "name": "AttestationsRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAccount",
          "type": "address"
        }
      ],
      "name": "AttestationsTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MaxAttestationsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SelectIssuersWaitBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "indentifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TransferApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "attestationExpiryBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "attestationRequestFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "identifiersToLookup",
          "type": "bytes32[]"
        }
      ],
      "name": "batchGetAttestationStats",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        },
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAttestationIssuers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getAttestationRequestFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "getAttestationState",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAttestationStats",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCompletableAttestations",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaxAttestations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getUnselectedRequest",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_attestationExpiryBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_selectIssuersWaitBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAttestations",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "attestationRequestFeeTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "attestationRequestFeeValues",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "lookupAccountsForIdentifier",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAttestations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "expected",
          "type": "uint32"
        }
      ],
      "name": "requireNAttestationsRequested",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selectIssuersWaitBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attestationExpiryBlocks",
          "type": "uint256"
        }
      ],
      "name": "setAttestationExpiryBlocks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setAttestationRequestFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxAttestations",
          "type": "uint256"
        }
      ],
      "name": "setMaxAttestations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_selectIssuersWaitBlocks",
          "type": "uint256"
        }
      ],
      "name": "setSelectIssuersWaitBlocks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "transferApprovals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "validateAttestationCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "attestationsRequested",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "attestationRequestFeeToken",
          "type": "address"
        }
      ],
      "name": "request",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "selectIssuers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "complete",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "validators",
          "type": "address[]"
        }
      ],
      "name": "__setValidators",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"AttestationCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AttestationExpiryBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"attestationRequestFeeToken\",\"type\":\"address\"}],\"name\":\"AttestationIssuerSelected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AttestationRequestFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"attestationsRequested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"attestationRequestFeeToken\",\"type\":\"address\"}],\"name\":\"AttestationsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"}],\"name\":\"AttestationsTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MaxAttestationsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SelectIssuersWaitBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"indentifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TransferApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"}],\"name\":\"__setValidators\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"attestationExpiryBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"attestationRequestFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"identifiersToLookup\",\"type\":\"bytes32[]\"}],\"name\":\"batchGetAttestationStats\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"complete\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAttestationIssuers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAttestationRequestFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"getAttestationState\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAttestationStats\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCompletableAttestations\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxAttestations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getUnselectedRequest\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_attestationExpiryBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_selectIssuersWaitBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAttestations\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"attestationRequestFeeTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"attestationRequestFeeValues\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"lookupAccountsForIdentifier\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAttestations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"attestationsRequested\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"attestationRequestFeeToken\",\"type\":\"address\"}],\"name\":\"request\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"expected\",\"type\":\"uint32\"}],\"name\":\"requireNAttestationsRequested\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"selectIssuers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectIssuersWaitBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_attestationExpiryBlocks\",\"type\":\"uint256\"}],\"name\":\"setAttestationExpiryBlocks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setAttestationRequestFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAttestations\",\"type\":\"uint256\"}],\"name\":\"setMaxAttestations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_selectIssuersWaitBlocks\",\"type\":\"uint256\"}],\"name\":\"setSelectIssuersWaitBlocks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transferApprovals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"validateAttestationCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"batchGetAttestationStats(bytes32[])\":{\"params\":{\"identifiersToLookup\":\"Array of n identifiers.\"},\"return\":\"[0] Array of number of matching accounts per identifier.[1] Array of sum([0]) matching walletAddresses.[2] Array of sum([0]) numbers indicating the completions for each account.[3] Array of sum([0]) numbers indicating the total number of requested attestations for each account.\"},\"complete(bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.\",\"params\":{\"identifier\":\"The hash of the identifier for this attestation.\",\"r\":\"Output value r of the ECDSA signature.\",\"s\":\"Output value s of the ECDSA signature.\",\"v\":\"The recovery id of the incoming ECDSA signature.\"}},\"getAttestationIssuers(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"Addresses of the selected attestation issuers.\"},\"getAttestationRequestFee(address)\":{\"params\":{\"token\":\"Address of the attestationRequestFeeToken.\"},\"return\":\"The fee.\"},\"getAttestationState(bytes32,address,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\",\"issuer\":\"Address of the issuer.\"},\"return\":\"status Status of the attestation.block Block number of request/completion the attestation.address Address of the token with which this attestation request was paid for.\"},\"getAttestationStats(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"completed Number of completed attestations.requested Number of total requested attestations.\"},\"getCompletableAttestations(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"Block number of request/completion the attestation.Address of the issuer.The length of each metadataURL string for each issuer.All strings concatenated.\"},\"getMaxAttestations()\":{\"return\":\"Maximum number of attestations that can be requested.\"},\"getUnselectedRequest(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"block Block number at which was requested.number Number of unselected requests.address Address of the token with which this attestation request was paid for.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"initialize(address,uint256,uint256,uint256,address[],uint256[])\":{\"params\":{\"_attestationExpiryBlocks\":\"The new limit on blocks allowed to come between requesting an attestation and completing it.\",\"_selectIssuersWaitBlocks\":\"The wait period in blocks to call selectIssuers on attestation requests.\",\"attestationRequestFeeTokens\":\"The address of tokens that fees should be payable in.\",\"attestationRequestFeeValues\":\"The corresponding fee values.\",\"registryAddress\":\"The address of the registry core smart contract.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"request(bytes32,uint256,address)\":{\"details\":\"Note that if an attestation expires before it is completed, the fee is forfeited. This is to prevent folks from attacking validators by requesting attestations that they do not complete, and to increase the cost of validators attempting to manipulate the attestations protocol.\",\"params\":{\"attestationRequestFeeToken\":\"The address of the token with which the attestation fee will be paid.\",\"attestationsRequested\":\"The number of requested attestations for this request.\",\"identifier\":\"The hash of the identifier to be attested.\"}},\"requireNAttestationsRequested(bytes32,address,uint32)\":{\"details\":\"It can be used when batching meta-transactions to validate attestation are requested as expected in untrusted scenarios\",\"params\":{\"account\":\"Address of the account.\",\"expected\":\"Number of expected attestations\",\"identifier\":\"Hash of the identifier.\"}},\"revoke(bytes32,uint256)\":{\"params\":{\"identifier\":\"The identifier for which to revoke.\",\"index\":\"The index of the account in the accounts array.\"}},\"selectIssuers(bytes32)\":{\"params\":{\"identifier\":\"The hash of the identifier to be attested.\"}},\"setAttestationExpiryBlocks(uint256)\":{\"params\":{\"_attestationExpiryBlocks\":\"The new limit on blocks allowed to come between requesting an attestation and completing it.\"}},\"setAttestationRequestFee(address,uint256)\":{\"params\":{\"fee\":\"The fee in 'token' that is required for each attestation.\",\"token\":\"The address of the attestationRequestFeeToken.\"}},\"setMaxAttestations(uint256)\":{\"params\":{\"_maxAttestations\":\"Maximum number of attestations that can be requested.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setSelectIssuersWaitBlocks(uint256)\":{\"params\":{\"_selectIssuersWaitBlocks\":\"The wait period in blocks to call selectIssuers on attestation                                requests.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)\":{\"details\":\"Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.\",\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"The hash of the identifier to be attested.\",\"r\":\"Output value r of the ECDSA signature.\",\"s\":\"Output value s of the ECDSA signature.\",\"v\":\"The recovery id of the incoming ECDSA signature.\"},\"return\":\"The issuer of the corresponding attestation.\"},\"withdraw(address)\":{\"details\":\"Throws if msg.sender does not have any rewards to withdraw.\",\"params\":{\"token\":\"The address of the token that will be withdrawn.\"}}}},\"userdoc\":{\"methods\":{\"batchGetAttestationStats(bytes32[])\":{\"notice\":\"Batch lookup function to determine attestation stats for a list of identifiers.\"},\"complete(bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Submit the secret message sent by the issuer to complete the attestation request.\"},\"getAttestationIssuers(bytes32,address)\":{\"notice\":\"Returns selected attestation issuers for a identifier/account pair.\"},\"getAttestationRequestFee(address)\":{\"notice\":\"Returns the fee set for a particular token.\"},\"getAttestationState(bytes32,address,address)\":{\"notice\":\"Returns the state of a specific attestation.\"},\"getAttestationStats(bytes32,address)\":{\"notice\":\"Returns attestation stats for a identifier/account pair.\"},\"getCompletableAttestations(bytes32,address)\":{\"notice\":\"Returns the state of all attestations that are completable\"},\"getMaxAttestations()\":{\"notice\":\"Query 'maxAttestations'\"},\"getUnselectedRequest(bytes32,address)\":{\"notice\":\"Returns the unselected attestation request for an identifier/account pair, if any.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize(address,uint256,uint256,uint256,address[],uint256[])\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"request(bytes32,uint256,address)\":{\"notice\":\"Commit to the attestation request of a hashed identifier.\"},\"requireNAttestationsRequested(bytes32,address,uint32)\":{\"notice\":\"Require that a given identifier/address pair has requested a specific number of attestations.\"},\"revoke(bytes32,uint256)\":{\"notice\":\"Revokes an account for an identifier.\"},\"selectIssuers(bytes32)\":{\"notice\":\"Selects the issuers for the most recent attestation request.\"},\"setAttestationExpiryBlocks(uint256)\":{\"notice\":\"Updates 'attestationExpiryBlocks'.\"},\"setAttestationRequestFee(address,uint256)\":{\"notice\":\"Updates the fee  for a particular token.\"},\"setMaxAttestations(uint256)\":{\"notice\":\"Updates 'maxAttestations'.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setSelectIssuersWaitBlocks(uint256)\":{\"notice\":\"Updates 'selectIssuersWaitBlocks'.\"},\"validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)\":{\"notice\":\"Validates the given attestation code.\"},\"withdraw(address)\":{\"notice\":\"Allows issuers to withdraw accumulated attestation rewards.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/identity/test/AttestationsTest.sol\":\"AttestationsTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * NOTE: This call _does not revert_ if the signature is invalid, or\\n     * if the signer is otherwise unable to be retrieved. In those scenarios,\\n     * the zero address is returned.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            return (address(0));\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return address(0);\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return address(0);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        return ecrecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"openzeppelin-solidity/contracts/utils/SafeCast.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and then downcasting.\\n *\\n * _Available since v2.5.0._\\n */\\nlibrary SafeCast {\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value < 2**128, \\\"SafeCast: value doesn\\\\'t fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value < 2**64, \\\"SafeCast: value doesn\\\\'t fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value < 2**32, \\\"SafeCast: value doesn\\\\'t fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value < 2**16, \\\"SafeCast: value doesn\\\\'t fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value < 2**8, \\\"SafeCast: value doesn\\\\'t fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n}\\n\",\"keccak256\":\"0xb7353a57c9e371c85983df8997caf9bb6fa60c3744b34b2bfcf4faa52d06eaec\"},\"project:/contracts-0.8/common/IsL2Check.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.8.20;\\n\\n/**\\n * @title Based on predeploy returns whether this is L1 or L2.\\n */\\ncontract IsL2Check {\\n  address constant proxyAdminAddress = 0x4200000000000000000000000000000000000018;\\n\\n  /**\\n   * @notice Throws if called on L2.\\n   */\\n  modifier onlyL1() {\\n    allowOnlyL1();\\n    _;\\n  }\\n\\n  /**\\n   * @notice Throws if called on L1.\\n   */\\n  modifier onlyL2() {\\n    if (!isL2()) {\\n      revert(\\\"This method is not supported in L1.\\\");\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice Checks to see if current network is Celo L2.\\n   * @return Whether or not the current network is a Celo L2.\\n   */\\n  function isL2() internal view returns (bool) {\\n    uint32 size;\\n    address _addr = proxyAdminAddress;\\n    assembly {\\n      size := extcodesize(_addr)\\n    }\\n    return (size > 0);\\n  }\\n\\n  /**\\n   * @notice Used to restrict usage of the parent function to L1 execution.\\n   * @dev Reverts if called on a Celo L2 network.\\n   */\\n  function allowOnlyL1() internal view {\\n    if (isL2()) {\\n      revert(\\\"This method is no longer supported in L2.\\\");\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x4629a6f2c4364780f5a6a5e2ad5c3675c0a1d3bea35cfd4426eeaebca60cac37\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\n/**\\n * @title Used with proxied contracts that have an `initialize` function.\\n * @notice Ensures the `initialize` function:\\n *         - gets called only once\\n *         - cannot be called on the logic contract.\\n */\\ncontract Initializable {\\n  bool public initialized;\\n\\n  /**\\n   * @notice Ensures the initializer function cannot be called more than once.\\n   */\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n\\n  /**\\n   * @notice By default, ensures that the `initialize` function cannot be called\\n   * on the logic contract.\\n   * @param testingDeployment When set to true, allows the `initialize` function\\n   * to be called, which is useful in testing when not setting up with a Proxy.\\n   */\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x8de2ab8706668982998c5a995bdc3d8ff20a1ec8519bf49cec9e464f62c57bb9\"},\"project:/contracts/common/Signatures.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\\";\\n\\nlibrary Signatures {\\n  /**\\n   * @notice Given a signed address, returns the signer of the address.\\n   * @param message The address that was signed.\\n   * @param v The recovery id of the incoming ECDSA signature.\\n   * @param r Output value r of the ECDSA signature.\\n   * @param s Output value s of the ECDSA signature.\\n   */\\n  function getSignerOfAddress(\\n    address message,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public pure returns (address) {\\n    bytes32 hash = keccak256(abi.encodePacked(message));\\n    return getSignerOfMessageHash(hash, v, r, s);\\n  }\\n\\n  /**\\n   * @notice Given a message hash, returns the signer of the address.\\n   * @param messageHash The hash of a message.\\n   * @param v The recovery id of the incoming ECDSA signature.\\n   * @param r Output value r of the ECDSA signature.\\n   * @param s Output value s of the ECDSA signature.\\n   */\\n  function getSignerOfMessageHash(\\n    bytes32 messageHash,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public pure returns (address) {\\n    bytes memory signature = new bytes(65);\\n    // Concatenate (r, s, v) into signature.\\n    assembly {\\n      mstore(add(signature, 32), r)\\n      mstore(add(signature, 64), s)\\n      mstore8(add(signature, 96), v)\\n    }\\n    bytes32 prefixedHash = ECDSA.toEthSignedMessageHash(messageHash);\\n    return ECDSA.recover(prefixedHash, signature);\\n  }\\n\\n  /**\\n   * @notice Given a domain separator and a structHash, construct the typed data hash\\n   * @param eip712DomainSeparator Context specific domain separator\\n   * @param structHash hash of the typed data struct\\n   * @return The EIP712 typed data hash\\n   */\\n  function toEthSignedTypedDataHash(\\n    bytes32 eip712DomainSeparator,\\n    bytes32 structHash\\n  ) public pure returns (bytes32) {\\n    return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", eip712DomainSeparator, structHash));\\n  }\\n\\n  /**\\n   * @notice Given a domain separator and a structHash and a signature return the signer\\n   * @param eip712DomainSeparator Context specific domain separator\\n   * @param structHash hash of the typed data struct\\n   * @param v The recovery id of the incoming ECDSA signature.\\n   * @param r Output value r of the ECDSA signature.\\n   * @param s Output value s of the ECDSA signature.\\n   */\\n  function getSignerOfTypedDataHash(\\n    bytes32 eip712DomainSeparator,\\n    bytes32 structHash,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public pure returns (address) {\\n    bytes memory signature = new bytes(65);\\n    // Concatenate (r, s, v) into signature.\\n    assembly {\\n      mstore(add(signature, 32), r)\\n      mstore(add(signature, 64), s)\\n      mstore8(add(signature, 96), v)\\n    }\\n    bytes32 prefixedHash = toEthSignedTypedDataHash(eip712DomainSeparator, structHash);\\n    return ECDSA.recover(prefixedHash, signature);\\n  }\\n}\\n\",\"keccak256\":\"0xab3210fef44d9563fbef063c4b1fef3b6ac5e5cceaf8469678aaea2cfb0fd095\"},\"project:/contracts/common/UsingPrecompiles.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\nimport \\\"../common/interfaces/IEpochManager.sol\\\";\\nimport \\\"../../contracts-0.8/common/IsL2Check.sol\\\";\\n\\ncontract UsingPrecompiles is IsL2Check {\\n  using SafeMath for uint256;\\n\\n  address constant TRANSFER = address(0xff - 2);\\n  address constant FRACTION_MUL = address(0xff - 3);\\n  address constant PROOF_OF_POSSESSION = address(0xff - 4);\\n  address constant GET_VALIDATOR = address(0xff - 5);\\n  address constant NUMBER_VALIDATORS = address(0xff - 6);\\n  address constant EPOCH_SIZE = address(0xff - 7);\\n  address constant BLOCK_NUMBER_FROM_HEADER = address(0xff - 8);\\n  address constant HASH_HEADER = address(0xff - 9);\\n  address constant GET_PARENT_SEAL_BITMAP = address(0xff - 10);\\n  address constant GET_VERIFIED_SEAL_BITMAP = address(0xff - 11);\\n  uint256 constant DAY = 86400;\\n\\n  /**\\n   * @notice calculate a * b^x for fractions a, b to `decimals` precision\\n   * @param aNumerator Numerator of first fraction\\n   * @param aDenominator Denominator of first fraction\\n   * @param bNumerator Numerator of exponentiated fraction\\n   * @param bDenominator Denominator of exponentiated fraction\\n   * @param exponent exponent to raise b to\\n   * @param _decimals precision\\n   * @return Numerator of the computed quantity (not reduced).\\n   * @return Denominator of the computed quantity (not reduced).\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function fractionMulExp(\\n    uint256 aNumerator,\\n    uint256 aDenominator,\\n    uint256 bNumerator,\\n    uint256 bDenominator,\\n    uint256 exponent,\\n    uint256 _decimals\\n  ) public view onlyL1 returns (uint256, uint256) {\\n    require(aDenominator != 0 && bDenominator != 0, \\\"a denominator is zero\\\");\\n    uint256 returnNumerator;\\n    uint256 returnDenominator;\\n    bool success;\\n    bytes memory out;\\n    (success, out) = FRACTION_MUL.staticcall(\\n      abi.encodePacked(aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)\\n    );\\n    require(success, \\\"error calling fractionMulExp precompile\\\");\\n    returnNumerator = getUint256FromBytes(out, 0);\\n    returnDenominator = getUint256FromBytes(out, 32);\\n    return (returnNumerator, returnDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the current epoch size in blocks.\\n   * @return The current epoch size in blocks.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochSize() public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = EPOCH_SIZE.staticcall(abi.encodePacked(true));\\n    require(success, \\\"error calling getEpochSize precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @return Epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumberOfBlock(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    return epochNumberOfBlock(blockNumber, getEpochSize());\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @return Current epoch number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getEpochNumber() public view onlyL1 returns (uint256) {\\n    return getEpochNumberOfBlock(block.number);\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromCurrentSet(\\n    uint256 index\\n  ) public view onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, uint256(block.number)));\\n    require(success, \\\"error calling validatorSignerAddressFromCurrentSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets a validator signer address from the validator set at the given block number.\\n   * @param index Index of requested validator in the validator set.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Address of validator signer at the requested index.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function validatorSignerAddressFromSet(\\n    uint256 index,\\n    uint256 blockNumber\\n  ) public view onlyL1 returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, blockNumber));\\n    require(success, \\\"error calling validatorSignerAddressFromSet precompile\\\");\\n    return address(uint160(getUint256FromBytes(out, 0)));\\n  }\\n\\n  /**\\n   * @notice Gets the size of the current elected validator set.\\n   * @return Size of the current elected validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInCurrentSet() public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(uint256(block.number)));\\n    require(success, \\\"error calling numberValidatorsInCurrentSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the size of the validator set that must sign the given block number.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Size of the validator set.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function numberValidatorsInSet(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling numberValidatorsInSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Checks a BLS proof of possession.\\n   * @param sender The address signed by the BLS key to generate the proof of possession.\\n   * @param blsKey The BLS public key that the validator is using for consensus, should pass proof\\n   *   of possession. 48 bytes.\\n   * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\\n   *   account address. 96 bytes.\\n   * @return True upon success.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function checkProofOfPossession(\\n    address sender,\\n    bytes memory blsKey,\\n    bytes memory blsPop\\n  ) public view onlyL1 returns (bool) {\\n    bool success;\\n    (success, ) = PROOF_OF_POSSESSION.staticcall(abi.encodePacked(sender, blsKey, blsPop));\\n    return success;\\n  }\\n\\n  /**\\n   * @notice Parses block number out of header.\\n   * @param header RLP encoded header\\n   * @return Block number.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getBlockNumberFromHeader(bytes memory header) public view onlyL1 returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = BLOCK_NUMBER_FROM_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getBlockNumberFromHeader precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Computes hash of header.\\n   * @param header RLP encoded header\\n   * @return Header hash.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function hashHeader(bytes memory header) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = HASH_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling hashHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the parent seal bitmap from the header at the given block number.\\n   * @param blockNumber Block number to retrieve. Must be within 4 epochs of the current number.\\n   * @return Bitmap parent seal with set bits at indices corresponding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getParentSealBitmap(uint256 blockNumber) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_PARENT_SEAL_BITMAP.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling getParentSealBitmap precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Verifies the BLS signature on the header and returns the seal bitmap.\\n   * The validator set used for verification is retrieved based on the parent hash field of the\\n   * header.  If the parent hash is not in the blockchain, verification fails.\\n   * @param header RLP encoded header\\n   * @return Bitmap parent seal with set bits at indices correspoinding to signing validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function getVerifiedSealBitmapFromHeader(\\n    bytes memory header\\n  ) public view onlyL1 returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VERIFIED_SEAL_BITMAP.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getVerifiedSealBitmapFromHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the minimum number of required signers for a given block number.\\n   * @dev Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSize(uint256 blockNumber) public view onlyL1 returns (uint256) {\\n    return numberValidatorsInSet(blockNumber).mul(2).add(2).div(3);\\n  }\\n\\n  /**\\n   * @notice Computes byzantine quorum from current validator set size\\n   * @return Byzantine quorum of validators.\\n   * @dev This function will be deprecated in L2.\\n   */\\n  function minQuorumSizeInCurrentSet() public view onlyL1 returns (uint256) {\\n    return minQuorumSize(block.number);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @param epochSize The epoch size in blocks.\\n   * @return Epoch number.\\n   */\\n  function epochNumberOfBlock(\\n    uint256 blockNumber,\\n    uint256 epochSize\\n  ) internal pure returns (uint256) {\\n    // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\\n    uint256 epochNumber = blockNumber / epochSize;\\n    if (blockNumber % epochSize == 0) {\\n      return epochNumber;\\n    } else {\\n      return epochNumber.add(1);\\n    }\\n  }\\n\\n  /**\\n   * @notice Converts bytes to uint256.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return uint256 data\\n   */\\n  function getUint256FromBytes(bytes memory bs, uint256 start) internal pure returns (uint256) {\\n    return uint256(getBytes32FromBytes(bs, start));\\n  }\\n\\n  /**\\n   * @notice Converts bytes to bytes32.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return bytes32 data\\n   */\\n  function getBytes32FromBytes(bytes memory bs, uint256 start) internal pure returns (bytes32) {\\n    require(bs.length >= start.add(32), \\\"slicing out of range\\\");\\n    bytes32 x;\\n    assembly {\\n      x := mload(add(bs, add(start, 32)))\\n    }\\n    return x;\\n  }\\n}\\n\",\"keccak256\":\"0x05d97764c5c59d311b7b9d8ccb48f73f4942602feb277bdcca39075cb022621f\"},\"project:/contracts/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IAccounts.sol\\\";\\nimport \\\"./interfaces/IEpochManager.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\nimport \\\"./interfaces/ICeloUnreleasedTreasury.sol\\\";\\n\\nimport \\\"../governance/interfaces/IElection.sol\\\";\\nimport \\\"../governance/interfaces/IEpochRewards.sol\\\";\\nimport \\\"../governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../governance/interfaces/ILockedCelo.sol\\\";\\nimport \\\"../governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../identity/interfaces/IRandom.sol\\\";\\nimport \\\"../identity/interfaces/IAttestations.sol\\\";\\n\\nimport \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"DoubleSigningSlasher\\\"));\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"FeeCurrencyWhitelist\\\"));\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"GovernanceSlasher\\\"));\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n\\n  bytes32 constant CELO_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"CeloToken\\\"));\\n  bytes32 constant LOCKED_CELO_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedCelo\\\"));\\n  bytes32 constant CELO_UNRELEASED_TREASURY_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"CeloUnreleasedTreasury\\\"));\\n  bytes32 constant EPOCH_REWARDS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochRewards\\\"));\\n  bytes32 constant EPOCH_MANAGER_ENABLER_REGISTRY_ID =\\n    keccak256(abi.encodePacked(\\\"EpochManagerEnabler\\\"));\\n  bytes32 constant EPOCH_MANAGER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"EpochManager\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  event RegistrySet(address indexed registryAddress);\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registry.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getExchange() internal view returns (IExchange) {\\n    return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n  function getCeloToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(CELO_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n  function getLockedCelo() internal view returns (ILockedCelo) {\\n    return ILockedCelo(registry.getAddressForOrDie(LOCKED_CELO_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registry.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  function getReserve() internal view returns (IReserve) {\\n    return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getStableToken() internal view returns (IStableToken) {\\n    return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n\\n  function getCeloUnreleasedTreasury() internal view returns (ICeloUnreleasedTreasury) {\\n    return\\n      ICeloUnreleasedTreasury(registry.getAddressForOrDie(CELO_UNRELEASED_TREASURY_REGISTRY_ID));\\n  }\\n\\n  function getEpochRewards() internal view returns (IEpochRewards) {\\n    return IEpochRewards(registry.getAddressForOrDie(EPOCH_REWARDS_REGISTRY_ID));\\n  }\\n\\n  function getEpochManager() internal view returns (IEpochManager) {\\n    return IEpochManager(registry.getAddressForOrDie(EPOCH_MANAGER_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x222b1e45ff35146f456cde2a44ab2990aaa303c8df848934a78f87af2776ccda\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata\\n  ) external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function setEip712DomainSeparator() external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function batchGetMetadataURL(\\n    address[] calldata\\n  ) external view returns (uint256[] memory, bytes memory);\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n\\n  function getName(address) external view returns (string memory);\\n\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd316739cfeeed50b89bd45a4596abf71fac174f10c2a24dbf352a53b2bab2dc1\"},\"project:/contracts/common/interfaces/ICeloUnreleasedTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloUnreleasedTreasury {\\n  /**\\n   * @notice Releases the Celo to the specified address.\\n   * @param to The address to release the amount to.\\n   * @param amount The amount to release.\\n   */\\n  function release(address to, uint256 amount) external;\\n\\n  function getRemainingBalanceToRelease() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41f4cda8fd14ba24261d9e6ef9c2f62ac15432ac78107e74045d2a880b50df82\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x3ce622e646f0bd7cce110045bf6cde1fd84242e9c8ee73a27e56956f0b1fb128\"},\"project:/contracts/common/interfaces/IEpochManager.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochManager {\\n  function initializeSystem(\\n    uint256 firstEpochNumber,\\n    uint256 firstEpochBlock,\\n    address[] calldata firstElected\\n  ) external;\\n  function startNextEpochProcess() external;\\n  function finishNextEpochProcess(\\n    address[] calldata groups,\\n    address[] calldata lessers,\\n    address[] calldata greaters\\n  ) external;\\n  function setToProcessGroups() external;\\n  function processGroup(address group, address lesser, address greater) external;\\n  function sendValidatorPayment(address) external;\\n  function getCurrentEpoch() external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByNumber(\\n    uint256 epochNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochByBlockNumber(\\n    uint256 blockNumber\\n  ) external view returns (uint256, uint256, uint256, uint256);\\n  function getEpochNumberOfBlock(uint256) external view returns (uint256);\\n  function getCurrentEpochNumber() external view returns (uint256);\\n  function numberOfElectedInCurrentSet() external view returns (uint256);\\n  function getElectedAccounts() external view returns (address[] memory);\\n  function getElectedAccountByIndex(uint256 index) external view returns (address);\\n  function getElectedSigners() external view returns (address[] memory);\\n  function getElectedSignerByIndex(uint256 index) external view returns (address);\\n  function epochDuration() external view returns (uint256);\\n  function firstKnownEpoch() external view returns (uint256);\\n  function getEpochProcessingState()\\n    external\\n    view\\n    returns (uint256, uint256, uint256, uint256, uint256);\\n  function systemAlreadyInitialized() external view returns (bool);\\n  function isBlocked() external view returns (bool);\\n  function isTimeForNextEpoch() external view returns (bool);\\n  function isOnEpochProcess() external view returns (bool);\\n  function getFirstBlockAtEpoch(uint256) external view returns (uint256);\\n  function getLastBlockAtEpoch(uint256) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc019958b7b5281fbfcd3c31b49d6ab29192ab4138de175a404bf0c17cccf9350\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function initialize() external;\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0xa732071c691bf1ba84774ac5301fa5b18e1ecf6ea6f6210ecac00f5130341621\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function freeze(address target) external;\\n  function unfreeze(address target) external;\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x31cee67b005413c61d6aa90d2899e6a37257cd4c026d8422249b397131a10755\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\"},\"project:/contracts/common/libraries/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.8.20;\\n\\n/**\\n * @title Helps contracts guard against reentrancy attacks.\\n * @author Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\\n * @dev If you mark a function `nonReentrant`, you should also\\n * mark it `external`.\\n */\\ncontract ReentrancyGuard {\\n  /// @dev counter to allow mutex lock with only one SSTORE operation\\n  uint256 private _guardCounter;\\n\\n  /**\\n   * @dev Prevents a contract from calling itself, directly or indirectly.\\n   * Calling a `nonReentrant` function from another `nonReentrant`\\n   * function is not supported. It is possible to prevent this from happening\\n   * by making the `nonReentrant` function external, and make it call a\\n   * `private` function that does the actual work.\\n   */\\n  modifier nonReentrant() {\\n    _guardCounter += 1;\\n    uint256 localCounter = _guardCounter;\\n    _;\\n    require(localCounter == _guardCounter, \\\"reentrant call\\\");\\n  }\\n\\n  constructor() public {\\n    // The counter starts at one to prevent changing it from zero to a non-zero\\n    // value, which is a more expensive operation.\\n    _guardCounter = 1;\\n  }\\n}\\n\",\"keccak256\":\"0x1ec3e88be2a2755c30b4a9ce19181f6e840f579ffa5094cb735760b3e6b45c4a\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n\\n  // view functions\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electValidatorAccounts() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function electNValidatorAccounts(uint256, uint256) external view returns (address[] memory);\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(\\n    address,\\n    uint256,\\n    uint256[] calldata\\n  ) external view returns (uint256);\\n  function getGroupEpochRewardsBasedOnScore(\\n    address group,\\n    uint256 totalEpochRewards,\\n    uint256 groupScore\\n  ) external view returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n  function owner() external view returns (address);\\n}\\n\",\"keccak256\":\"0x598e1f22422d01cd2feccff34c5c276c388209058d7fab3d770e25fa8dec9e59\"},\"project:/contracts/governance/interfaces/IEpochRewards.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IEpochRewards {\\n  function updateTargetVotingYield() external;\\n  function isReserveLow() external view returns (bool);\\n  function calculateTargetEpochRewards() external view returns (uint256, uint256, uint256, uint256);\\n  function getTargetVotingYieldParameters() external view returns (uint256, uint256, uint256);\\n  function getRewardsMultiplierParameters() external view returns (uint256, uint256, uint256);\\n  function getCommunityRewardFraction() external view returns (uint256);\\n  function getCarbonOffsettingFraction() external view returns (uint256);\\n  function getTargetVotingGoldFraction() external view returns (uint256);\\n  function getRewardsMultiplier() external view returns (uint256);\\n  function carbonOffsettingPartner() external view returns (address);\\n}\\n\",\"keccak256\":\"0xfa534a0dc188ffd55595c6edb28b2e4ac9f036022a644b3a61e6a12097e14788\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(\\n    address account,\\n    uint256 maxAmountAllowed\\n  ) external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function setConstitution(address destination, bytes4 functionId, uint256 threshold) external;\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(\\n    uint256 proposalId\\n  ) external view returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x8780295e0ecffc9870c59ed17fd4f50902117227157dd060db19d2ebbaaf3d2b\"},\"project:/contracts/governance/interfaces/ILockedCelo.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedCelo {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n  function getAccountTotalLockedCelo(address) external view returns (uint256);\\n  function getTotalLockedCelo() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedCelo(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x41cd5970ccc5612c9cd9cdf89a299a3cff0d8984d0b16ffad14da7670424920b\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function addSlasher(string calldata slasherIdentifier) external;\\n\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(\\n    address\\n  ) external view returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(\\n    address account,\\n    uint256 index\\n  ) external view returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x4ab7ee32f3cbac55e91ef1087ba3e8bbdd784833faa2b9b7e1d66ff662800227\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function registerValidatorNoBls(bytes calldata ecdsaPublicKey) external returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n  function setDowntimeGracePeriod(uint256 value) external;\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(\\n    address,\\n    address,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external returns (bool);\\n  function mintStableToEpochManager(uint256 amount) external;\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n  // view functions\\n  function maxGroupSize() external view returns (uint256);\\n  function downtimeGracePeriod() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(\\n    address\\n  ) external view returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(\\n    address account\\n  ) external view returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorsGroup(address account) external view returns (address affiliation);\\n  function getValidatorGroup(\\n    address\\n  )\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getTopGroupValidatorsAccounts(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(\\n    address[] calldata accounts\\n  ) external view returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n  function computeEpochReward(\\n    address account,\\n    uint256 score,\\n    uint256 maxPayment\\n  ) external view returns (uint256);\\n  function getMembershipHistoryLength() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x78a09c1b3e80fbb1a8fd907575a71e181d100a09d999ea5c032140efbeeeb90f\"},\"project:/contracts/identity/Attestations.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/utils/SafeCast.sol\\\";\\n\\nimport \\\"./interfaces/IAttestations.sol\\\";\\nimport \\\"../common/interfaces/IAccounts.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"../common/UsingRegistry.sol\\\";\\nimport \\\"../common/Signatures.sol\\\";\\nimport \\\"../common/UsingPrecompiles.sol\\\";\\nimport \\\"../common/libraries/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title Contract mapping identifiers to accounts\\n */\\ncontract Attestations is\\n  IAttestations,\\n  ICeloVersionedContract,\\n  Ownable,\\n  Initializable,\\n  UsingRegistry,\\n  ReentrancyGuard\\n{\\n  using SafeMath for uint256;\\n  using SafeCast for uint256;\\n\\n  enum AttestationStatus {\\n    None,\\n    Incomplete,\\n    Complete\\n  }\\n\\n  struct Attestation {\\n    AttestationStatus status;\\n    // For outstanding attestations, this is the block number of the request.\\n    // For completed attestations, this is the block number of the attestation completion.\\n    uint32 blockNumber;\\n    // The token with which attestation request fees were paid.\\n    address attestationRequestFeeToken;\\n  }\\n\\n  // Stores attestations state for a single (identifier, account address) pair.\\n  struct AttestedAddress {\\n    // Total number of requested attestations.\\n    uint32 requested;\\n    // Total number of completed attestations.\\n    uint32 completed;\\n    // List of selected issuers responsible for attestations. The length of this list\\n    // might be smaller than `requested` (which represents the total number of requested\\n    // attestations) if users are not calling `selectIssuers` on unselected requests.\\n    address[] selectedIssuers;\\n    // State of each attestation keyed by issuer.\\n    mapping(address => Attestation) issuedAttestations;\\n  }\\n\\n  struct UnselectedRequest {\\n    // The block at which the attestations were requested.\\n    uint32 blockNumber;\\n    // The number of attestations that were requested.\\n    uint32 attestationsRequested;\\n    // The token with which attestation request fees were paid in this request.\\n    address attestationRequestFeeToken;\\n  }\\n\\n  struct IdentifierState {\\n    // All account addresses associated with this identifier.\\n    address[] accounts;\\n    // Keeps the state of attestations for account addresses for this identifier.\\n    mapping(address => AttestedAddress) attestations;\\n    // Temporarily stores attestation requests for which issuers should be selected by the account.\\n    mapping(address => UnselectedRequest) unselectedRequests;\\n  }\\n\\n  mapping(bytes32 => IdentifierState) identifiers;\\n\\n  // The duration in blocks in which an attestation can be completed from the block in which the\\n  // attestation was requested.\\n  uint256 public attestationExpiryBlocks;\\n\\n  // The duration to wait until selectIssuers can be called for an attestation request.\\n  uint256 public selectIssuersWaitBlocks;\\n\\n  // Limit the maximum number of attestations that can be requested\\n  uint256 public maxAttestations;\\n\\n  // The fees that are associated with attestations for a particular token.\\n  mapping(address => uint256) public attestationRequestFees;\\n\\n  // Maps a token and attestation issuer to the amount that they're owed.\\n  mapping(address => mapping(address => uint256)) public pendingWithdrawals;\\n\\n  // Attestation transfer approvals, keyed by user and keccak(identifier, from, to)\\n  mapping(address => mapping(bytes32 => bool)) public transferApprovals;\\n\\n  event AttestationsRequested(\\n    bytes32 indexed identifier,\\n    address indexed account,\\n    uint256 attestationsRequested,\\n    address attestationRequestFeeToken\\n  );\\n\\n  event AttestationIssuerSelected(\\n    bytes32 indexed identifier,\\n    address indexed account,\\n    address indexed issuer,\\n    address attestationRequestFeeToken\\n  );\\n\\n  event AttestationCompleted(\\n    bytes32 indexed identifier,\\n    address indexed account,\\n    address indexed issuer\\n  );\\n\\n  event Withdrawal(address indexed account, address indexed token, uint256 amount);\\n  event AttestationExpiryBlocksSet(uint256 value);\\n  event AttestationRequestFeeSet(address indexed token, uint256 value);\\n  event SelectIssuersWaitBlocksSet(uint256 value);\\n  event MaxAttestationsSet(uint256 value);\\n  event AttestationsTransferred(\\n    bytes32 indexed identifier,\\n    address indexed fromAccount,\\n    address indexed toAccount\\n  );\\n  event TransferApproval(\\n    address indexed approver,\\n    bytes32 indexed indentifier,\\n    address from,\\n    address to,\\n    bool approved\\n  );\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param registryAddress The address of the registry core smart contract.\\n   * @param _attestationExpiryBlocks The new limit on blocks allowed to come between requesting\\n   * an attestation and completing it.\\n   * @param _selectIssuersWaitBlocks The wait period in blocks to call selectIssuers on attestation\\n   * requests.\\n   * @param attestationRequestFeeTokens The address of tokens that fees should be payable in.\\n   * @param attestationRequestFeeValues The corresponding fee values.\\n   */\\n  function initialize(\\n    address registryAddress,\\n    uint256 _attestationExpiryBlocks,\\n    uint256 _selectIssuersWaitBlocks,\\n    uint256 _maxAttestations,\\n    address[] calldata attestationRequestFeeTokens,\\n    uint256[] calldata attestationRequestFeeValues\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(registryAddress);\\n    setAttestationExpiryBlocks(_attestationExpiryBlocks);\\n    setSelectIssuersWaitBlocks(_selectIssuersWaitBlocks);\\n    setMaxAttestations(_maxAttestations);\\n\\n    require(\\n      attestationRequestFeeTokens.length > 0 &&\\n        attestationRequestFeeTokens.length == attestationRequestFeeValues.length,\\n      \\\"attestationRequestFeeTokens specification was invalid\\\"\\n    );\\n    for (uint256 i = 0; i < attestationRequestFeeTokens.length; i = i.add(1)) {\\n      setAttestationRequestFee(attestationRequestFeeTokens[i], attestationRequestFeeValues[i]);\\n    }\\n  }\\n\\n  /**\\n   * @notice Revokes an account for an identifier.\\n   * @param identifier The identifier for which to revoke.\\n   * @param index The index of the account in the accounts array.\\n   */\\n  function revoke(bytes32 identifier, uint256 index) external {\\n    uint256 numAccounts = identifiers[identifier].accounts.length;\\n    require(index < numAccounts, \\\"Index is invalid\\\");\\n    require(\\n      msg.sender == identifiers[identifier].accounts[index],\\n      \\\"Index does not match msg.sender\\\"\\n    );\\n\\n    uint256 newNumAccounts = numAccounts.sub(1);\\n    if (index != newNumAccounts) {\\n      identifiers[identifier].accounts[index] = identifiers[identifier].accounts[newNumAccounts];\\n    }\\n    identifiers[identifier].accounts[newNumAccounts] = address(0x0);\\n    identifiers[identifier].accounts.length = identifiers[identifier].accounts.length.sub(1);\\n  }\\n\\n  /**\\n   * @notice Allows issuers to withdraw accumulated attestation rewards.\\n   * @param token The address of the token that will be withdrawn.\\n   * @dev Throws if msg.sender does not have any rewards to withdraw.\\n   */\\n  function withdraw(address token) external {\\n    address issuer = getAccounts().attestationSignerToAccount(msg.sender);\\n    uint256 value = pendingWithdrawals[token][issuer];\\n    require(value > 0, \\\"value was negative/zero\\\");\\n    pendingWithdrawals[token][issuer] = 0;\\n    require(IERC20(token).transfer(issuer, value), \\\"token transfer failed\\\");\\n    emit Withdrawal(issuer, token, value);\\n  }\\n\\n  /**\\n   * @notice Returns the unselected attestation request for an identifier/account pair, if any.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @return block Block number at which was requested.\\n   * @return number Number of unselected requests.\\n   * @return address Address of the token with which this attestation request was paid for.\\n   */\\n  function getUnselectedRequest(\\n    bytes32 identifier,\\n    address account\\n  ) external view returns (uint32, uint32, address) {\\n    return (\\n      identifiers[identifier].unselectedRequests[account].blockNumber,\\n      identifiers[identifier].unselectedRequests[account].attestationsRequested,\\n      identifiers[identifier].unselectedRequests[account].attestationRequestFeeToken\\n    );\\n  }\\n\\n  /**\\n   * @notice Returns selected attestation issuers for a identifier/account pair.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @return Addresses of the selected attestation issuers.\\n   */\\n  function getAttestationIssuers(\\n    bytes32 identifier,\\n    address account\\n  ) external view returns (address[] memory) {\\n    return identifiers[identifier].attestations[account].selectedIssuers;\\n  }\\n\\n  /**\\n   * @notice Returns attestation stats for a identifier/account pair.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @return completed Number of completed attestations.\\n   * @return requested Number of total requested attestations.\\n   */\\n  function getAttestationStats(\\n    bytes32 identifier,\\n    address account\\n  ) external view returns (uint32, uint32) {\\n    return (\\n      identifiers[identifier].attestations[account].completed,\\n      identifiers[identifier].attestations[account].requested\\n    );\\n  }\\n\\n  /**\\n   * @notice Batch lookup function to determine attestation stats for a list of identifiers.\\n   * @param identifiersToLookup Array of n identifiers.\\n   * @return [0] Array of number of matching accounts per identifier.\\n   * @return [1] Array of sum([0]) matching walletAddresses.\\n   * @return [2] Array of sum([0]) numbers indicating the completions for each account.\\n   * @return [3] Array of sum([0]) numbers indicating the total number of requested\\n                 attestations for each account.\\n   */\\n  function batchGetAttestationStats(\\n    bytes32[] calldata identifiersToLookup\\n  ) external view returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory) {\\n    require(identifiersToLookup.length > 0, \\\"You have to pass at least one identifier\\\");\\n\\n    uint256[] memory matches;\\n    address[] memory addresses;\\n\\n    (matches, addresses) = batchlookupAccountsForIdentifier(identifiersToLookup);\\n\\n    uint64[] memory completed = new uint64[](addresses.length);\\n    uint64[] memory total = new uint64[](addresses.length);\\n\\n    uint256 currentIndex = 0;\\n    for (uint256 i = 0; i < identifiersToLookup.length; i = i.add(1)) {\\n      address[] memory addrs = identifiers[identifiersToLookup[i]].accounts;\\n      for (uint256 matchIndex = 0; matchIndex < matches[i]; matchIndex = matchIndex.add(1)) {\\n        addresses[currentIndex] = getAccounts().getWalletAddress(addrs[matchIndex]);\\n        completed[currentIndex] = identifiers[identifiersToLookup[i]]\\n          .attestations[addrs[matchIndex]]\\n          .completed;\\n        total[currentIndex] = identifiers[identifiersToLookup[i]]\\n          .attestations[addrs[matchIndex]]\\n          .requested;\\n        currentIndex = currentIndex.add(1);\\n      }\\n    }\\n\\n    return (matches, addresses, completed, total);\\n  }\\n\\n  /**\\n   * @notice Returns the state of a specific attestation.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @param issuer Address of the issuer.\\n   * @return status Status of the attestation.\\n   * @return block Block number of request/completion the attestation.\\n   * @return address Address of the token with which this attestation request was paid for.\\n   */\\n  function getAttestationState(\\n    bytes32 identifier,\\n    address account,\\n    address issuer\\n  ) external view returns (uint8, uint32, address) {\\n    Attestation storage attestation = identifiers[identifier]\\n      .attestations[account]\\n      .issuedAttestations[issuer];\\n    return (\\n      uint8(attestation.status),\\n      attestation.blockNumber,\\n      attestation.attestationRequestFeeToken\\n    );\\n  }\\n\\n  /**\\n   * @notice Returns the state of all attestations that are completable\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @return Block number of request/completion the attestation.\\n   * @return Address of the issuer.\\n   * @return The length of each metadataURL string for each issuer.\\n   * @return All strings concatenated.\\n   */\\n  function getCompletableAttestations(\\n    bytes32 identifier,\\n    address account\\n  ) external view returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory) {\\n    AttestedAddress storage state = identifiers[identifier].attestations[account];\\n    address[] storage issuers = state.selectedIssuers;\\n\\n    uint256 num = 0;\\n    for (uint256 i = 0; i < issuers.length; i = i.add(1)) {\\n      if (isAttestationCompletable(state.issuedAttestations[issuers[i]])) {\\n        num = num.add(1);\\n      }\\n    }\\n\\n    uint32[] memory blockNumbers = new uint32[](num);\\n    address[] memory completableIssuers = new address[](num);\\n\\n    uint256 pointer = 0;\\n    for (uint256 i = 0; i < issuers.length; i = i.add(1)) {\\n      if (isAttestationCompletable(state.issuedAttestations[issuers[i]])) {\\n        blockNumbers[pointer] = state.issuedAttestations[issuers[i]].blockNumber;\\n        completableIssuers[pointer] = issuers[i];\\n        pointer = pointer.add(1);\\n      }\\n    }\\n\\n    uint256[] memory stringLengths;\\n    bytes memory stringData;\\n    (stringLengths, stringData) = getAccounts().batchGetMetadataURL(completableIssuers);\\n    return (blockNumbers, completableIssuers, stringLengths, stringData);\\n  }\\n\\n  /**\\n   * @notice Returns the fee set for a particular token.\\n   * @param token Address of the attestationRequestFeeToken.\\n   * @return The fee.\\n   */\\n  function getAttestationRequestFee(address token) external view returns (uint256) {\\n    return attestationRequestFees[token];\\n  }\\n\\n  /**\\n   * @notice Query 'maxAttestations'\\n   * @return Maximum number of attestations that can be requested.\\n   */\\n  function getMaxAttestations() external view returns (uint256) {\\n    return maxAttestations;\\n  }\\n\\n  function lookupAccountsForIdentifier(\\n    bytes32 identifier\\n  ) external view returns (address[] memory) {\\n    return identifiers[identifier].accounts;\\n  }\\n\\n  /**\\n   * @notice Require that a given identifier/address pair has\\n   * requested a specific number of attestations.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @param expected Number of expected attestations\\n   * @dev It can be used when batching meta-transactions to validate\\n   * attestation are requested as expected in untrusted scenarios\\n   */\\n  function requireNAttestationsRequested(\\n    bytes32 identifier,\\n    address account,\\n    uint32 expected\\n  ) external view {\\n    uint256 requested = identifiers[identifier].attestations[account].requested;\\n    require(requested == expected, \\\"requested attestations does not match expected\\\");\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 3, 0, 0);\\n  }\\n\\n  /**\\n   * @notice Updates the fee  for a particular token.\\n   * @param token The address of the attestationRequestFeeToken.\\n   * @param fee The fee in 'token' that is required for each attestation.\\n   */\\n  function setAttestationRequestFee(address token, uint256 fee) public onlyOwner {\\n    require(fee > 0, \\\"You have to specify a fee greater than 0\\\");\\n    attestationRequestFees[token] = fee;\\n    emit AttestationRequestFeeSet(token, fee);\\n  }\\n\\n  /**\\n   * @notice Updates 'attestationExpiryBlocks'.\\n   * @param _attestationExpiryBlocks The new limit on blocks allowed to come between requesting\\n   * an attestation and completing it.\\n   */\\n  function setAttestationExpiryBlocks(uint256 _attestationExpiryBlocks) public onlyOwner {\\n    require(_attestationExpiryBlocks > 0, \\\"attestationExpiryBlocks has to be greater than 0\\\");\\n    attestationExpiryBlocks = _attestationExpiryBlocks;\\n    emit AttestationExpiryBlocksSet(_attestationExpiryBlocks);\\n  }\\n\\n  /**\\n   * @notice Updates 'selectIssuersWaitBlocks'.\\n   * @param _selectIssuersWaitBlocks The wait period in blocks to call selectIssuers on attestation\\n   *                                 requests.\\n   */\\n  function setSelectIssuersWaitBlocks(uint256 _selectIssuersWaitBlocks) public onlyOwner {\\n    require(_selectIssuersWaitBlocks > 0, \\\"selectIssuersWaitBlocks has to be greater than 0\\\");\\n    selectIssuersWaitBlocks = _selectIssuersWaitBlocks;\\n    emit SelectIssuersWaitBlocksSet(_selectIssuersWaitBlocks);\\n  }\\n\\n  /**\\n   * @notice Updates 'maxAttestations'.\\n   * @param _maxAttestations Maximum number of attestations that can be requested.\\n   */\\n  function setMaxAttestations(uint256 _maxAttestations) public onlyOwner {\\n    require(_maxAttestations > 0, \\\"maxAttestations has to be greater than 0\\\");\\n    maxAttestations = _maxAttestations;\\n    emit MaxAttestationsSet(_maxAttestations);\\n  }\\n\\n  /**\\n   * @notice Validates the given attestation code.\\n   * @param identifier The hash of the identifier to be attested.\\n   * @param account Address of the account.\\n   * @param v The recovery id of the incoming ECDSA signature.\\n   * @param r Output value r of the ECDSA signature.\\n   * @param s Output value s of the ECDSA signature.\\n   * @return The issuer of the corresponding attestation.\\n   * @dev Throws if there is no matching outstanding attestation request.\\n   * @dev Throws if the attestation window has passed.\\n   */\\n  function validateAttestationCode(\\n    bytes32 identifier,\\n    address account,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public view returns (address) {\\n    bytes32 codehash = keccak256(abi.encodePacked(identifier, account));\\n    address signer = Signatures.getSignerOfMessageHash(codehash, v, r, s);\\n    address issuer = getAccounts().attestationSignerToAccount(signer);\\n\\n    Attestation storage attestation = identifiers[identifier]\\n      .attestations[account]\\n      .issuedAttestations[issuer];\\n\\n    require(\\n      attestation.status == AttestationStatus.Incomplete,\\n      \\\"Attestation code does not match any outstanding attestation\\\"\\n    );\\n    require(!isAttestationExpired(attestation.blockNumber), \\\"Attestation timed out\\\");\\n\\n    return issuer;\\n  }\\n\\n  /**\\n   * @notice Helper function for batchGetAttestationStats to calculate the\\n             total number of addresses that have >0 complete attestations for the identifiers.\\n   * @param identifiersToLookup Array of n identifiers.\\n   * @return Array of numbers that indicate the number of matching addresses per identifier.\\n   * @return Array of addresses preallocated for total number of matches.\\n   */\\n  function batchlookupAccountsForIdentifier(\\n    bytes32[] memory identifiersToLookup\\n  ) internal view returns (uint256[] memory, address[] memory) {\\n    require(identifiersToLookup.length > 0, \\\"You have to pass at least one identifier\\\");\\n    uint256 totalAddresses = 0;\\n    uint256[] memory matches = new uint256[](identifiersToLookup.length);\\n\\n    for (uint256 i = 0; i < identifiersToLookup.length; i = i.add(1)) {\\n      uint256 count = identifiers[identifiersToLookup[i]].accounts.length;\\n\\n      totalAddresses = totalAddresses.add(count);\\n      matches[i] = count;\\n    }\\n\\n    return (matches, new address[](totalAddresses));\\n  }\\n\\n  function isAttestationExpired(uint32 attestationRequestBlock) internal view returns (bool) {\\n    return block.number >= uint256(attestationRequestBlock).add(attestationExpiryBlocks);\\n  }\\n\\n  function isAttestationCompletable(Attestation storage attestation) internal view returns (bool) {\\n    return (attestation.status == AttestationStatus.Incomplete &&\\n      !isAttestationExpired(attestation.blockNumber));\\n  }\\n\\n  function isAttestationRequestSelectable(\\n    uint256 attestationRequestBlock\\n  ) internal view returns (bool) {\\n    return block.number < attestationRequestBlock.add(getRandom().randomnessBlockRetentionWindow());\\n  }\\n}\\n\",\"keccak256\":\"0xf038f738f9bbd90fb11d802e5d51b68df00b9fe5d08936fc91c173169b65f2d4\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(\\n    bytes32[] calldata\\n  ) external view returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(\\n    bytes32,\\n    address,\\n    address\\n  ) external view returns (uint8, uint32, address);\\n  function getCompletableAttestations(\\n    bytes32,\\n    address\\n  ) external view returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(\\n    bytes32,\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32\\n  ) external view returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n}\\n\",\"keccak256\":\"0x6afd5f303e153798b15448e0206ed5e645b6e2f2e46762cb17c5b665e256cdb2\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\"},\"project:/contracts/identity/test/AttestationsTest.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"../Attestations.sol\\\";\\n\\n/*\\n * We need a test contract that behaves like the actual Attestations contract,\\n * but mocks the implementations of the validator set getters. Otherwise we\\n * couldn't test `request` with the current ganache local testnet.\\n */\\ncontract AttestationsTest is Attestations(true) {\\n  address[] private __testValidators;\\n\\n  // some deprecated functions are mocked here to ensure that the tests for\\n  // revoke and withdraw can still run\\n\\n  /**\\n   * @notice Commit to the attestation request of a hashed identifier.\\n   * @param identifier The hash of the identifier to be attested.\\n   * @param attestationsRequested The number of requested attestations for this request.\\n   * @param attestationRequestFeeToken The address of the token with which the attestation fee will\\n   * be paid.\\n   * @dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\\n   * to prevent folks from attacking validators by requesting attestations that they do not\\n   * complete, and to increase the cost of validators attempting to manipulate the attestations\\n   * protocol.\\n   */\\n  function request(\\n    bytes32 identifier,\\n    uint256 attestationsRequested,\\n    address attestationRequestFeeToken\\n  ) external nonReentrant {\\n    require(\\n      attestationRequestFees[attestationRequestFeeToken] > 0,\\n      \\\"Invalid attestationRequestFeeToken\\\"\\n    );\\n    require(\\n      IERC20(attestationRequestFeeToken).transferFrom(\\n        msg.sender,\\n        address(this),\\n        attestationRequestFees[attestationRequestFeeToken].mul(attestationsRequested)\\n      ),\\n      \\\"Transfer of attestation request fees failed\\\"\\n    );\\n\\n    require(attestationsRequested > 0, \\\"You have to request at least 1 attestation\\\");\\n    require(attestationsRequested <= maxAttestations, \\\"Too many attestations requested\\\");\\n\\n    IdentifierState storage state = identifiers[identifier];\\n\\n    require(\\n      state.unselectedRequests[msg.sender].blockNumber == 0 ||\\n        isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber) ||\\n        !isAttestationRequestSelectable(state.unselectedRequests[msg.sender].blockNumber),\\n      \\\"There exists an unexpired, unselected attestation request\\\"\\n    );\\n\\n    state.unselectedRequests[msg.sender].blockNumber = block.number.toUint32();\\n    state.unselectedRequests[msg.sender].attestationsRequested = attestationsRequested.toUint32();\\n    state.unselectedRequests[msg.sender].attestationRequestFeeToken = attestationRequestFeeToken;\\n\\n    state.attestations[msg.sender].requested = uint256(state.attestations[msg.sender].requested)\\n      .add(attestationsRequested)\\n      .toUint32();\\n\\n    emit AttestationsRequested(\\n      identifier,\\n      msg.sender,\\n      attestationsRequested,\\n      attestationRequestFeeToken\\n    );\\n  }\\n\\n  /**\\n   * @notice Selects the issuers for the most recent attestation request.\\n   * @param identifier The hash of the identifier to be attested.\\n   */\\n  function selectIssuers(bytes32 identifier) external {\\n    IdentifierState storage state = identifiers[identifier];\\n\\n    require(\\n      state.unselectedRequests[msg.sender].blockNumber > 0,\\n      \\\"No unselected attestation request to select issuers for\\\"\\n    );\\n\\n    require(\\n      !isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber),\\n      \\\"The attestation request has expired\\\"\\n    );\\n\\n    addIncompleteAttestations(identifier);\\n    delete state.unselectedRequests[msg.sender];\\n  }\\n\\n  /**\\n   * @notice Submit the secret message sent by the issuer to complete the attestation request.\\n   * @param identifier The hash of the identifier for this attestation.\\n   * @param v The recovery id of the incoming ECDSA signature.\\n   * @param r Output value r of the ECDSA signature.\\n   * @param s Output value s of the ECDSA signature.\\n   * @dev Throws if there is no matching outstanding attestation request.\\n   * @dev Throws if the attestation window has passed.\\n   */\\n  function complete(bytes32 identifier, uint8 v, bytes32 r, bytes32 s) external {\\n    address issuer = validateAttestationCode(identifier, msg.sender, v, r, s);\\n\\n    Attestation storage attestation = identifiers[identifier]\\n      .attestations[msg.sender]\\n      .issuedAttestations[issuer];\\n\\n    address token = attestation.attestationRequestFeeToken;\\n\\n    // solhint-disable-next-line not-rely-on-time\\n    attestation.blockNumber = block.number.toUint32();\\n    attestation.status = AttestationStatus.Complete;\\n    delete attestation.attestationRequestFeeToken;\\n    AttestedAddress storage attestedAddress = identifiers[identifier].attestations[msg.sender];\\n    require(\\n      attestedAddress.completed < attestedAddress.completed + 1,\\n      \\\"SafeMath32 integer overflow\\\"\\n    );\\n    attestedAddress.completed = attestedAddress.completed + 1;\\n\\n    pendingWithdrawals[token][issuer] = pendingWithdrawals[token][issuer].add(\\n      attestationRequestFees[token]\\n    );\\n\\n    IdentifierState storage state = identifiers[identifier];\\n    if (identifiers[identifier].attestations[msg.sender].completed == 1) {\\n      state.accounts.push(msg.sender);\\n    }\\n\\n    emit AttestationCompleted(identifier, msg.sender, issuer);\\n  }\\n\\n  function __setValidators(address[] memory validators) public {\\n    __testValidators = validators;\\n  }\\n\\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\\n    return __testValidators.length;\\n  }\\n\\n  function validatorSignerAddressFromCurrentSet(uint256 index) public view returns (address) {\\n    return __testValidators[index];\\n  }\\n\\n  /**\\n   * @notice Adds additional attestations given the current randomness.\\n   * @param identifier The hash of the identifier to be attested.\\n   */\\n  function addIncompleteAttestations(bytes32 identifier) internal {\\n    AttestedAddress storage state = identifiers[identifier].attestations[msg.sender];\\n    UnselectedRequest storage unselectedRequest = identifiers[identifier].unselectedRequests[\\n      msg.sender\\n    ];\\n\\n    bytes32 seed = getRandom().getBlockRandomness(\\n      uint256(unselectedRequest.blockNumber).add(selectIssuersWaitBlocks)\\n    );\\n    IAccounts accounts = getAccounts();\\n    uint256 issuersLength = numberValidatorsInCurrentSet();\\n    uint256[] memory issuers = new uint256[](issuersLength);\\n    for (uint256 i = 0; i < issuersLength; i = i.add(1)) issuers[i] = i;\\n\\n    require(unselectedRequest.attestationsRequested <= issuersLength, \\\"not enough issuers\\\");\\n\\n    uint256 currentIndex = 0;\\n\\n    // The length of the list (variable issuersLength) is decremented in each round,\\n    // so the loop always terminates\\n    while (currentIndex < unselectedRequest.attestationsRequested) {\\n      require(issuersLength > 0, \\\"not enough issuers\\\");\\n      seed = keccak256(abi.encodePacked(seed));\\n      uint256 idx = uint256(seed) % issuersLength;\\n      address signer = validatorSignerAddressFromCurrentSet(issuers[idx]);\\n      address issuer = accounts.signerToAccount(signer);\\n\\n      Attestation storage attestation = state.issuedAttestations[issuer];\\n\\n      if (\\n        attestation.status == AttestationStatus.None &&\\n        accounts.hasAuthorizedAttestationSigner(issuer)\\n      ) {\\n        currentIndex = currentIndex.add(1);\\n        attestation.status = AttestationStatus.Incomplete;\\n        attestation.blockNumber = unselectedRequest.blockNumber;\\n        attestation.attestationRequestFeeToken = unselectedRequest.attestationRequestFeeToken;\\n        state.selectedIssuers.push(issuer);\\n\\n        emit AttestationIssuerSelected(\\n          identifier,\\n          msg.sender,\\n          issuer,\\n          unselectedRequest.attestationRequestFeeToken\\n        );\\n      }\\n\\n      // Remove the validator that was selected from the list,\\n      // by replacing it by the last element in the list\\n      issuersLength = issuersLength.sub(1);\\n      issuers[idx] = issuers[issuersLength];\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xaaeb295e51eb64adc8892c5cca6166fc31056287d49aa317d7cf8e8cd28b7b75\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102325760003560e01c80638f32d59b11610130578063be2c47a6116100b8578063e831be581161007c578063e831be5814610f69578063f2fde38b14610fe1578063f3ff26c614611025578063fb6a2e5314611073578063fd536f5d146110c257610232565b8063be2c47a614610dd3578063d02e0f0c14610e01578063e02659ce14610e59578063e221932e14610e87578063e3d0f66f14610eb557610232565b8063a91ee0dc116100ff578063a91ee0dc14610c13578063b45eb7da14610c57578063b5599cc614610c75578063bb46942f14610d43578063bd93f99814610d7b57610232565b80638f32d59b146109bf57806396357c0a146109e1578063a6437e7314610b87578063a762825a14610bb557610232565b80635fc5c916116101be5780638218c6fe116101825780638218c6fe146108b557806384a1a4fc146108d357806387ee8a0f1461093957806389d35286146109575780638da5cb5b1461097557610232565b80635fc5c91614610748578063623d5931146107eb578063715018a6146108435780637796a6841461084d5780637b1039991461086b57610232565b80634eef7e85116102055780634eef7e851461040257806351cff8d9146105a157806354255be0146105e5578063596abea5146106185780635ce9bc071461069957610232565b806303cc1aff1461023757806306cbc788146102ba578063123633ea14610372578063158ef93e146103e0575b600080fd5b6102636004803603602081101561024d57600080fd5b81019080803590602001909291905050506111ce565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102a657808201518184015260208101905061028b565b505050509050019250505060405180910390f35b610370600480360360208110156102d057600080fd5b81019080803590602001906401000000008111156102ed57600080fd5b8201836020820111156102ff57600080fd5b8035906020019184602083028401116401000000008311171561032157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611272565b005b61039e6004803603602081101561038857600080fd5b810190808035906020019092919050505061128c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103e86112cd565b604051808215151515815260200191505060405180910390f35b61044e6004803603604081101561041857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112e0565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561049d578082015181840152602081019050610482565b50505050905001858103845288818151815260200191508051906020019060200280838360005b838110156104df5780820151818401526020810190506104c4565b50505050905001858103835287818151815260200191508051906020019060200280838360005b83811015610521578082015181840152602081019050610506565b50505050905001858103825286818151815260200191508051906020019080838360005b83811015610560578082015181840152602081019050610545565b50505050905090810190601f16801561058d5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6105e3600480360360208110156105b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c4565b005b6105ed611c9e565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6106646004803603604081101561062e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cc5565b604051808363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390f35b610706600480360360a08110156106af57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611da1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107946004803603604081101561075e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061212a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107d75780820151818401526020810190506107bc565b505050509050019250505060405180910390f35b61082d6004803603602081101561080157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061220f565b6040518082815260200191505060405180910390f35b61084b612258565b005b610855612391565b6040518082815260200191505060405180910390f35b61087361239b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108bd6123c1565b6040518082815260200191505060405180910390f35b61091f600480360360408110156108e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506123c7565b604051808215151515815260200191505060405180910390f35b6109416123f6565b6040518082815260200191505060405180910390f35b61095f612403565b6040518082815260200191505060405180910390f35b61097d612409565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109c7612432565b604051808215151515815260200191505060405180910390f35b610a58600480360360208110156109f757600080fd5b8101908080359060200190640100000000811115610a1457600080fd5b820183602082011115610a2657600080fd5b80359060200191846020830284011164010000000083111715610a4857600080fd5b9091929391929390505050612490565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b83811015610aa7578082015181840152602081019050610a8c565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015610ae9578082015181840152602081019050610ace565b50505050905001858103835287818151815260200191508051906020019060200280838360005b83811015610b2b578082015181840152602081019050610b10565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015610b6d578082015181840152602081019050610b52565b505050509050019850505050505050505060405180910390f35b610bb360048036036020811015610b9d57600080fd5b810190808035906020019092919050505061299a565b005b610c1160048036036060811015610bcb57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050612aae565b005b610c5560048036036020811015610c2957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b83565b005b610c5f612d27565b6040518082815260200191505060405180910390f35b610ce160048036036060811015610c8b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d2d565b604051808460ff1660ff1681526020018363ffffffff1663ffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b610d7960048036036040811015610d5957600080fd5b810190808035906020019092919080359060200190929190505050612e2f565b005b610dbd60048036036020811015610d9157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613143565b6040518082815260200191505060405180910390f35b610dff60048036036020811015610de957600080fd5b810190808035906020019092919050505061315b565b005b610e5760048036036060811015610e1757600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061326f565b005b610e8560048036036020811015610e6f57600080fd5b8101908080359060200190929190505050613a56565b005b610eb360048036036020811015610e9d57600080fd5b8101908080359060200190929190505050613b6a565b005b610f0160048036036040811015610ecb57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613d8d565b604051808463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b610fcb60048036036040811015610f7f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613ee4565b6040518082815260200191505060405180910390f35b61102360048036036020811015610ff757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613f09565b005b6110716004803603604081101561103b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613f8f565b005b6110c06004803603608081101561108957600080fd5b8101908080359060200190929190803560ff16906020019092919080359060200190929190803590602001909291905050506140f8565b005b6111cc600480360360c08110156110d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019064010000000081111561113357600080fd5b82018360208201111561114557600080fd5b8035906020019184602083028401116401000000008311171561116757600080fd5b90919293919293908035906020019064010000000081111561118857600080fd5b82018360208201111561119a57600080fd5b803590602001918460208302840111640100000000831117156111bc57600080fd5b9091929391929390505050614627565b005b60606003600083815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561126657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161121c575b50505050509050919050565b80600a90805190602001906112889291906157eb565b5050565b6000600a828154811061129b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060149054906101000a900460ff1681565b60608060608060006003600088815260200190815260200160002060010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816001019050600080905060008090505b8280549050811015611412576113db84600201600085848154811061137157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206147da565b156113f7576113f460018361483490919063ffffffff16565b91505b61140b60018261483490919063ffffffff16565b9050611350565b506060816040519080825280602002602001820160405280156114445781602001602082028038833980820191505090505b5090506060826040519080825280602002602001820160405280156114785781602001602082028038833980820191505090505b509050600080905060008090505b8580549050811015611676576115118760020160008884815481106114a757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206147da565b1561165b5786600201600087838154811061152857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900463ffffffff168483815181106115ad57fe5b602002602001019063ffffffff16908163ffffffff16815250508581815481106115d357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811061160a57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061165860018361483490919063ffffffff16565b91505b61166f60018261483490919063ffffffff16565b9050611486565b506060806116826148bc565b73ffffffffffffffffffffffffffffffffffffffff16638adaf96f856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b838110156116f05780820151818401526020810190506116d5565b505050509050019250505060006040518083038186803b15801561171357600080fd5b505afa158015611727573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250604081101561175157600080fd5b810190808051604051939291908464010000000082111561177157600080fd5b8382019150602082018581111561178757600080fd5b82518660208202830111640100000000821117156117a457600080fd5b8083526020830192505050908051906020019060200280838360005b838110156117db5780820151818401526020810190506117c0565b505050509050016040526020018051604051939291908464010000000082111561180457600080fd5b8382019150602082018581111561181a57600080fd5b825186600182028301116401000000008211171561183757600080fd5b8083526020830192505050908051906020019080838360005b8381101561186b578082015181840152602081019050611850565b50505050905090810190601f1680156118985780820380516001836020036101000a031916815260200191505b506040525050508092508193505050848483839b509b509b509b50505050505050505092959194509250565b60006118ce6148bc565b73ffffffffffffffffffffffffffffffffffffffff16637b2434cb336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561194a57600080fd5b505afa15801561195e573d6000803e3d6000fd5b505050506040513d602081101561197457600080fd5b810190808051906020019092919050505090506000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111611a7e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f76616c756520776173206e656761746976652f7a65726f00000000000000000081525060200191505060405180910390fd5b6000600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611b8757600080fd5b505af1158015611b9b573d6000803e3d6000fd5b505050506040513d6020811015611bb157600080fd5b8101908080519060200190929190505050611c34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398836040518082815260200191505060405180910390a3505050565b60008060008060016003600080839350829250819150809050935093509350935090919293565b6000806003600085815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900463ffffffff166003600086815260200190815260200160002060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff16915091509250929050565b6000808686604051602001808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140192505050604051602081830303815290604052805190602001209050600073__Signatures____________________________63b3abdb0c838888886040518563ffffffff1660e01b8152600401808581526020018460ff1660ff16815260200183815260200182815260200194505050505060206040518083038186803b158015611e7357600080fd5b505af4158015611e87573d6000803e3d6000fd5b505050506040513d6020811015611e9d57600080fd5b810190808051906020019092919050505090506000611eba6148bc565b73ffffffffffffffffffffffffffffffffffffffff16637b2434cb836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611f3657600080fd5b505afa158015611f4a573d6000803e3d6000fd5b505050506040513d6020811015611f6057600080fd5b810190808051906020019092919050505090506000600360008b815260200190815260200160002060010160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506001600281111561201757fe5b8160000160009054906101000a900460ff16600281111561203457fe5b1461208a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180615a93603b913960400191505060405180910390fd5b6120a78160000160019054906101000a900463ffffffff166149b7565b1561211a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4174746573746174696f6e2074696d6564206f7574000000000000000000000081525060200191505060405180910390fd5b8194505050505095945050505050565b60606003600084815260200190815260200160002060010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561220257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121b8575b5050505050905092915050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b612260612432565b6122d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600654905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60096020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600a80549050905090565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166124746149de565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606080606080600086869050116124f2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180615b1a6028913960400191505060405180910390fd5b60608061253f888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506149e6565b8092508193505050606081516040519080825280602002602001820160405280156125795781602001602082028038833980820191505090505b509050606082516040519080825280602002602001820160405280156125ae5781602001602082028038833980820191505090505b509050600080905060008090505b8b8b905081101561297f576060600360008e8e858181106125d957fe5b90506020020135815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561267157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612627575b5050505050905060008090505b87838151811061268a57fe5b6020026020010151811015612962576126a16148bc565b73ffffffffffffffffffffffffffffffffffffffff16631fd9afa58383815181106126c857fe5b60200260200101516040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561273057600080fd5b505afa158015612744573d6000803e3d6000fd5b505050506040513d602081101561275a57600080fd5b810190808051906020019092919050505087858151811061277757fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600360008f8f868181106127c157fe5b90506020020135815260200190815260200160002060010160008383815181106127e757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900463ffffffff1663ffffffff1686858151811061284f57fe5b602002602001019067ffffffffffffffff16908167ffffffffffffffff1681525050600360008f8f8681811061288157fe5b90506020020135815260200190815260200160002060010160008383815181106128a757fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1685858151811061290f57fe5b602002602001019067ffffffffffffffff16908167ffffffffffffffff168152505061294560018561483490919063ffffffff16565b935061295b60018261483490919063ffffffff16565b905061267e565b505061297860018261483490919063ffffffff16565b90506125bc565b50848484849850985098509850505050505092959194509250565b6129a2612432565b612a14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008111612a6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180615a396030913960400191505060405180910390fd5b806004819055507f4fbe976a07a9260091c2d347f8780c4bc636392e34d5b249b367baf8a5c7ca69816040518082815260200191505060405180910390a150565b60006003600085815260200190815260200160002060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1690508163ffffffff168114612b7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061590a602e913960400191505060405180910390fd5b50505050565b612b8b612432565b612bfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ca0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b60045481565b6000806000806003600088815260200190815260200160002060010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900460ff166002811115612de557fe5b8160000160019054906101000a900463ffffffff168260000160059054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350935093505093509350939050565b600060036000848152602001908152602001600020600001805490509050808210612ec2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e64657820697320696e76616c69640000000000000000000000000000000081525060200191505060405180910390fd5b600360008481526020019081526020016000206000018281548110612ee357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612fae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f496e64657820646f6573206e6f74206d61746368206d73672e73656e6465720081525060200191505060405180910390fd5b6000612fc4600183614b4790919063ffffffff16565b905080831461308357600360008581526020019081526020016000206000018181548110612fee57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660036000868152602001908152602001600020600001848154811061303a57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60006003600086815260200190815260200160002060000182815481106130a657fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061311b60016003600087815260200190815260200160002060000180549050614b4790919063ffffffff16565b600360008681526020019081526020016000206000018161313c9190615875565b5050505050565b60076020528060005260406000206000915090505481565b613163612432565b6131d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000811161322e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806159386028913960400191505060405180910390fd5b806006819055507fc1f217a1246a98ce04e938768309107630ed86c1e0e9f9995af28e23a9c06178816040518082815260200191505060405180910390a150565b6001600260008282540192505081905550600060025490506000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161331f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806159606022913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd333061338f87600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054614b9190919063ffffffff16565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561342b57600080fd5b505af115801561343f573d6000803e3d6000fd5b505050506040513d602081101561345557600080fd5b81019080805190602001909291905050506134bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180615ace602b913960400191505060405180910390fd5b60008311613514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615a69602a913960400191505060405180910390fd5b60065483111561358c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f546f6f206d616e79206174746573746174696f6e73207265717565737465640081525060200191505060405180910390fd5b600060036000868152602001908152602001600020905060008160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16148061366557506136648160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff166149b7565b5b806136d057506136ce8160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16614c17565b155b613725576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806159d86039913960400191505060405180910390fd5b61372e43614cbc565b8160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff16021790555061379984614cbc565b8160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160046101000a81548163ffffffff021916908363ffffffff160217905550828160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506138f36138ee858360010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1661483490919063ffffffff16565b614cbc565b8160010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548163ffffffff021916908363ffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16857f381545d9b1fffcb94ffbbd0bccfff9f1fb3acd474d34f7d59112a5c9973fee498686604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a3506002548114613a50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b50505050565b613a5e612432565b613ad0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008111613b29576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806159826030913960400191505060405180910390fd5b806005819055507f954fa47fa6f4e8017b99f93c73f4fbe599d786f9f5da73fe9086ab473fb455d8816040518082815260200191505060405180910390a150565b600060036000838152602001908152602001600020905060008160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1611613c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180615b9a6037913960400191505060405180910390fd5b613c918160020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff166149b7565b15613ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615b776023913960400191505060405180910390fd5b613cf082614d23565b8060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549063ffffffff02191690556000820160046101000a81549063ffffffff02191690556000820160086101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550505050565b60008060006003600086815260200190815260200160002060020160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff166003600087815260200190815260200160002060020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900463ffffffff166003600088815260200190815260200160002060020160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925092509250925092565b6008602052816000526040600020602052806000526040600020600091509150505481565b613f11612432565b613f83576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b613f8c816154ec565b50565b613f97612432565b614009576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008111614062576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180615a116028913960400191505060405180910390fd5b80600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f7cf8b633f218e9f9bc2c06107bcaddcfee6b90580863768acdcfd4f05d7af394826040518082815260200191505060405180910390a25050565b60006141078533868686611da1565b905060006003600087815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160059054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506141d243614cbc565b8260000160016101000a81548163ffffffff021916908363ffffffff16021790555060028260000160006101000a81548160ff0219169083600281111561421557fe5b02179055508160000160056101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006003600089815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160000160049054906101000a900463ffffffff160163ffffffff168160000160049054906101000a900463ffffffff1663ffffffff1610614344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d617468333220696e7465676572206f766572666c6f77000000000081525060200191505060405180910390fd5b60018160000160049054906101000a900463ffffffff16018160000160046101000a81548163ffffffff021916908363ffffffff16021790555061444c600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461483490919063ffffffff16565b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360008a815260200190815260200160002090506001600360008b815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160049054906101000a900463ffffffff1663ffffffff1614156145c157806000013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168a7f414ff2c18c092697c4b8de49f515ac44f8bebc19b24553cf58ace913a6ac639d60405160405180910390a4505050505050505050565b600060149054906101000a900460ff16156146aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506146ce336154ec565b6146d788612b83565b6146e08761299a565b6146e986613a56565b6146f28561315b565b60008484905011801561470a57508181905084849050145b61475f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180615b426035913960400191505060405180910390fd5b60008090505b848490508110156147cf576147b485858381811061477f57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff168484848181106147a857fe5b90506020020135613f8f565b6147c860018261483490919063ffffffff16565b9050614765565b505050505050505050565b6000600160028111156147e957fe5b8260000160009054906101000a900460ff16600281111561480657fe5b14801561482d575061482b8260000160019054906101000a900463ffffffff166149b7565b155b9050919050565b6000808284019050838110156148b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4163636f756e74730000000000000000000000000000000000000000000000008152506008019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561497757600080fd5b505afa15801561498b573d6000803e3d6000fd5b505050506040513d60208110156149a157600080fd5b8101908080519060200190929190505050905090565b60006149d46004548363ffffffff1661483490919063ffffffff16565b4310159050919050565b600033905090565b6060806000835111614a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180615b1a6028913960400191505060405180910390fd5b600080905060608451604051908082528060200260200182016040528015614a7a5781602001602082028038833980820191505090505b50905060008090505b8551811015614b0757600060036000888481518110614a9e57fe5b60200260200101518152602001908152602001600020600001805490509050614ad0818561483490919063ffffffff16565b935080838381518110614adf57fe5b60200260200101818152505050614b0060018261483490919063ffffffff16565b9050614a83565b508082604051908082528060200260200182016040528015614b385781602001602082028038833980820191505090505b50809050935093505050915091565b6000614b8983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250615630565b905092915050565b600080831415614ba45760009050614c11565b6000828402905082848281614bb557fe5b0414614c0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180615af96021913960400191505060405180910390fd5b809150505b92915050565b6000614cb3614c246156f0565b73ffffffffffffffffffffffffffffffffffffffff1663e45def956040518163ffffffff1660e01b815260040160206040518083038186803b158015614c6957600080fd5b505afa158015614c7d573d6000803e3d6000fd5b505050506040513d6020811015614c9357600080fd5b81019080805190602001909291905050508361483490919063ffffffff16565b43109050919050565b60006401000000008210614d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180615bd16026913960400191505060405180910390fd5b819050919050565b60006003600083815260200190815260200160002060010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006003600084815260200190815260200160002060020160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000614ddb6156f0565b73ffffffffffffffffffffffffffffffffffffffff1663fc484726614e256005548560000160009054906101000a900463ffffffff1663ffffffff1661483490919063ffffffff16565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015614e5957600080fd5b505afa158015614e6d573d6000803e3d6000fd5b505050506040513d6020811015614e8357600080fd5b810190808051906020019092919050505090506000614ea06148bc565b90506000614eac6123f6565b9050606081604051908082528060200260200182016040528015614edf5781602001602082028038833980820191505090505b50905060008090505b82811015614f245780828281518110614efd57fe5b602002602001018181525050614f1d60018261483490919063ffffffff16565b9050614ee8565b50818560000160049054906101000a900463ffffffff1663ffffffff161115614fb5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6e6f7420656e6f7567682069737375657273000000000000000000000000000081525060200191505060405180910390fd5b60008090505b8560000160049054906101000a900463ffffffff1663ffffffff168110156154e25760008311615053576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6e6f7420656e6f7567682069737375657273000000000000000000000000000081525060200191505060405180910390fd5b84604051602001808281526020019150506040516020818303038152906040528051906020012094506000838660001c8161508a57fe5b06905060006150ab84838151811061509e57fe5b602002602001015161128c565b905060008673ffffffffffffffffffffffffffffffffffffffff166393c5c487836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561512c57600080fd5b505afa158015615140573d6000803e3d6000fd5b505050506040513d602081101561515657600080fd5b8101908080519060200190929190505050905060008a60020160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600060028111156151bb57fe5b8160000160009054906101000a900460ff1660028111156151d857fe5b14801561529957508773ffffffffffffffffffffffffffffffffffffffff1663c2e0ee20836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561525d57600080fd5b505afa158015615271573d6000803e3d6000fd5b505050506040513d602081101561528757600080fd5b81019080805190602001909291905050505b15615497576152b260018661483490919063ffffffff16565b945060018160000160006101000a81548160ff021916908360028111156152d557fe5b02179055508960000160009054906101000a900463ffffffff168160000160016101000a81548163ffffffff021916908363ffffffff1602179055508960000160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160056101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508a6001018290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168d7faf7f470b643316cf44c1f2898328a075e7602945b4f8584f48ba4ad2d8a2ea9d8d60000160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a45b6154ab600188614b4790919063ffffffff16565b96508587815181106154b957fe5b60200260200101518685815181106154cd57fe5b60200260200101818152505050505050614fbb565b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415615572576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806159b26026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008383111582906156dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156156a2578082015181840152602081019050615687565b50505050905090810190601f1680156156cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52616e646f6d00000000000000000000000000000000000000000000000000008152506006019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156157ab57600080fd5b505afa1580156157bf573d6000803e3d6000fd5b505050506040513d60208110156157d557600080fd5b8101908080519060200190929190505050905090565b828054828255906000526020600020908101928215615864579160200282015b828111156158635782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061580b565b5b50905061587191906158a1565b5090565b81548183558181111561589c5781836000526020600020918201910161589b91906158e4565b5b505050565b6158e191905b808211156158dd57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016158a7565b5090565b90565b61590691905b808211156159025760008160009055506001016158ea565b5090565b9056fe726571756573746564206174746573746174696f6e7320646f6573206e6f74206d617463682065787065637465646d61784174746573746174696f6e732068617320746f2062652067726561746572207468616e2030496e76616c6964206174746573746174696f6e52657175657374466565546f6b656e73656c6563744973737565727357616974426c6f636b732068617320746f2062652067726561746572207468616e20304f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737354686572652065786973747320616e20756e657870697265642c20756e73656c6563746564206174746573746174696f6e2072657175657374596f75206861766520746f20737065636966792061206665652067726561746572207468616e20306174746573746174696f6e457870697279426c6f636b732068617320746f2062652067726561746572207468616e2030596f75206861766520746f2072657175657374206174206c656173742031206174746573746174696f6e4174746573746174696f6e20636f646520646f6573206e6f74206d6174636820616e79206f75747374616e64696e67206174746573746174696f6e5472616e73666572206f66206174746573746174696f6e20726571756573742066656573206661696c6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77596f75206861766520746f2070617373206174206c65617374206f6e65206964656e7469666965726174746573746174696f6e52657175657374466565546f6b656e732073706563696669636174696f6e2077617320696e76616c6964546865206174746573746174696f6e20726571756573742068617320657870697265644e6f20756e73656c6563746564206174746573746174696f6e207265717565737420746f2073656c656374206973737565727320666f7253616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473a265627a7a723158200124cbd391f6583fded8564ada5c746edf8a07140068bcdcf5fc6571cf97de2564736f6c634300050d0032",
  "sourceMap": "286:7542:180:-;;;328:4;4837::159;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;896:17:28;891:57;;937:4;923:11;;:18;;;;;;;;;;;;;;;;;;891:57;842:110;1130:1:73;1114:13;:17;;;;4793:52:159;286:7542:180;;788:96:0;833:15;867:10;860:17;;788:96;:::o;286:7542:180:-;;;;;;;",
  "deployedSourceMap": "286:7542:180:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;286:7542:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14338:156:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14338:156:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14338:156:159;;;;;;;;;;;;;;;;;5167:101:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5167:101:180;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5167:101:180;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5167:101:180;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5167:101:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5167:101:180;;;;;;;;;;;;;;;:::i;:::-;;5387:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5387:132:180;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;319:23:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12631:1204:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12631:1204:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12631:1204:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12631:1204:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12631:1204:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12631:1204:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7437:391;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7437:391:159;;;;;;;;;;;;;;;;;;;:::i;:::-;;15473:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9364:267;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9364:267:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17973:759;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;17973:759:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8867:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8867:200:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;8867:200:159;;;;;;;;;;;;;;;;;13991:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13991:128:159;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:4;;;:::i;:::-;;14239:95:159;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3352:25:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3119:30:159;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3528:69;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3528:69:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5272:111:180;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3008:38:159;;;:::i;:::-;;;;;;;;;;;;;;;;;;;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10147:1275:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10147:1275:159;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10147:1275:159;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10147:1275:159;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;10147:1275:159;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10147:1275:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10147:1275:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10147:1275:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10147:1275:159;;;;;;;;;;;;;;;;;;;;;;;16236:306;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16236:306:159;;;;;;;;;;;;;;;;;:::i;:::-;;14901:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14901:295:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3956:230:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3956:230:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;2877:38:159;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11839:405;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11839:405:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6552:659;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6552:659:159;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3230:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3230:57:159;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17198:242;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17198:242:159;;;;;;;;;;;;;;;;;:::i;:::-;;1148:1666:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1148:1666:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16753:306:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16753:306:159;;;;;;;;;;;;;;;;;:::i;:::-;;2970:500:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2970:500:180;;;;;;;;;;;;;;;;;:::i;:::-;;8230:389:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8230:389:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3366:73;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3366:73:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;15799:238:159;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15799:238:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3951:1212:180;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3951:1212:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5448:912:159;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5448:912:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5448:912:159;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5448:912:159;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5448:912:159;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5448:912:159;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5448:912:159;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5448:912:159;;;;;;;;;;;;:::i;:::-;;14338:156;14426:16;14457:11;:23;14469:10;14457:23;;;;;;;;;;;:32;;14450:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14338:156;;;:::o;5167:101:180:-;5253:10;5234:16;:29;;;;;;;;;;;;:::i;:::-;;5167:101;:::o;5387:132::-;5469:7;5491:16;5508:5;5491:23;;;;;;;;;;;;;;;;;;;;;;;;;5484:30;;5387:132;;;:::o;319:23:28:-;;;;;;;;;;;;;:::o;12631:1204:159:-;12739:15;12756:16;12774;12792:12;12812:29;12844:11;:23;12856:10;12844:23;;;;;;;;;;;:36;;:45;12881:7;12844:45;;;;;;;;;;;;;;;12812:77;;12895:25;12923:5;:21;;12895:49;;12951:11;12965:1;12951:15;;12977:9;12989:1;12977:13;;12972:171;12996:7;:14;;;;12992:1;:18;12972:171;;;13038:62;13063:5;:24;;:36;13088:7;13096:1;13088:10;;;;;;;;;;;;;;;;;;;;;;;;;13063:36;;;;;;;;;;;;;;;13038:24;:62::i;:::-;13034:103;;;13118:10;13126:1;13118:3;:7;;:10;;;;:::i;:::-;13112:16;;13034:103;13016:8;13022:1;13016;:5;;:8;;;;:::i;:::-;13012:12;;12972:171;;;;13149:28;13193:3;13180:17;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13180:17:159;;;;13149:48;;13203:35;13255:3;13241:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13241:18:159;;;;13203:56;;13266:15;13284:1;13266:19;;13296:9;13308:1;13296:13;;13291:311;13315:7;:14;;;;13311:1;:18;13291:311;;;13357:62;13382:5;:24;;:36;13407:7;13415:1;13407:10;;;;;;;;;;;;;;;;;;;;;;;;;13382:36;;;;;;;;;;;;;;;13357:24;:62::i;:::-;13353:243;;;13455:5;:24;;:36;13480:7;13488:1;13480:10;;;;;;;;;;;;;;;;;;;;;;;;;13455:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;13431:12;13444:7;13431:21;;;;;;;;;;;;;:72;;;;;;;;;;;13543:7;13551:1;13543:10;;;;;;;;;;;;;;;;;;;;;;;;;13513:18;13532:7;13513:27;;;;;;;;;;;;;:40;;;;;;;;;;;13573:14;13585:1;13573:7;:11;;:14;;;;:::i;:::-;13563:24;;13353:243;13335:8;13341:1;13335;:5;;:8;;;;:::i;:::-;13331:12;;13291:311;;;;13608:30;13644:23;13703:13;:11;:13::i;:::-;:33;;;13737:18;13703:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13703:53:159;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13703:53:159;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13703:53:159;;;;;;39:16:-1;36:1;17:17;2:54;13703:53:159;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13703:53:159;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;13703:53:159;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13703:53:159;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;13703:53:159;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13703:53:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13673:83;;;;;;;;13770:12;13784:18;13804:13;13819:10;13762:68;;;;;;;;;;;;;;;;12631:1204;;;;;;;:::o;7437:391::-;7485:14;7502:13;:11;:13::i;:::-;:40;;;7543:10;7502:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7502:52:159;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7502:52:159;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7502:52:159;;;;;;;;;;;;;;;;7485:69;;7560:13;7576:18;:25;7595:5;7576:25;;;;;;;;;;;;;;;:33;7602:6;7576:33;;;;;;;;;;;;;;;;7560:49;;7631:1;7623:5;:9;7615:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7702:1;7666:18;:25;7685:5;7666:25;;;;;;;;;;;;;;;:33;7692:6;7666:33;;;;;;;;;;;;;;;:37;;;;7724:5;7717:22;;;7740:6;7748:5;7717:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7717:37:159;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7717:37:159;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7717:37:159;;;;;;;;;;;;;;;;7709:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7810:5;7791:32;;7802:6;7791:32;;;7817:5;7791:32;;;;;;;;;;;;;;;;;;7437:391;;;:::o;15473:117::-;15524:7;15533;15542;15551;15574:1;15577;15580;15583;15566:19;;;;;;;;;;;;;;;;;;;;15473:117;;;;:::o;9364:267::-;9465:6;9473;9502:11;:23;9514:10;9502:23;;;;;;;;;;;:36;;:45;9539:7;9502:45;;;;;;;;;;;;;;;:55;;;;;;;;;;;;9565:11;:23;9577:10;9565:23;;;;;;;;;;;:36;;:45;9602:7;9565:45;;;;;;;;;;;;;;;:55;;;;;;;;;;;;9487:139;;;;9364:267;;;;;:::o;17973:759::-;18119:7;18134:16;18180:10;18192:7;18163:37;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;18163:37:159;;;18153:48;;;;;;18134:67;;18207:14;18224:10;:33;18258:8;18268:1;18271;18274;18224:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18224:52:159;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18224:52:159;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18224:52:159;;;;;;;;;;;;;;;;18207:69;;18282:14;18299:13;:11;:13::i;:::-;:40;;;18340:6;18299:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18299:48:159;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18299:48:159;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18299:48:159;;;;;;;;;;;;;;;;18282:65;;18354:31;18388:11;:23;18400:10;18388:23;;;;;;;;;;;:43;;:52;18432:7;18388:52;;;;;;;;;;;;;;;:78;;:86;18467:6;18388:86;;;;;;;;;;;;;;;18354:120;;18518:28;18496:50;;;;;;;;:11;:18;;;;;;;;;;;;:50;;;;;;;;;18481:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18636:45;18657:11;:23;;;;;;;;;;;;18636:20;:45::i;:::-;18635:46;18627:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18721:6;18714:13;;;;;;17973:759;;;;;;;:::o;8867:200::-;8970:16;9001:11;:23;9013:10;9001:23;;;;;;;;;;;:36;;:45;9038:7;9001:45;;;;;;;;;;;;;;;:61;;8994:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8867:200;;;;:::o;13991:128::-;14063:7;14085:22;:29;14108:5;14085:29;;;;;;;;;;;;;;;;14078:36;;13991:128;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;14239:95:159:-;14292:7;14314:15;;14307:22;;14239:95;:::o;3352:25:41:-;;;;;;;;;;;;;:::o;3119:30:159:-;;;;:::o;3528:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5272:111:180:-;5333:7;5355:16;:23;;;;5348:30;;5272:111;:::o;3008:38:159:-;;;;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;10147:1275:159:-;10252:16;10270;10288:15;10305;10365:1;10336:19;;:26;;:30;10328:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10418:24;10448:26;10504:53;10537:19;;10504:53;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10504:53:159;;;;;;:32;:53::i;:::-;10481:76;;;;;;;;10564:25;10605:9;:16;10592:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;10592:30:159;;;;10564:58;;10628:21;10665:9;:16;10652:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;10652:30:159;;;;10628:54;;10689:20;10712:1;10689:24;;10724:9;10736:1;10724:13;;10719:647;10743:19;;:26;;10739:1;:30;10719:647;;;10793:22;10818:11;:35;10830:19;;10850:1;10830:22;;;;;;;;;;;;;10818:35;;;;;;;;;;;:44;;10793:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10875:18;10896:1;10875:22;;10870:490;10912:7;10920:1;10912:10;;;;;;;;;;;;;;10899;:23;10870:490;;;10992:13;:11;:13::i;:::-;:30;;;11023:5;11029:10;11023:17;;;;;;;;;;;;;;10992:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10992:49:159;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10992:49:159;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10992:49:159;;;;;;;;;;;;;;;;10966:9;10976:12;10966:23;;;;;;;;;;;;;:75;;;;;;;;;;;11077:11;:35;11089:19;;11109:1;11089:22;;;;;;;;;;;;;11077:35;;;;;;;;;;;:59;;:78;11137:5;11143:10;11137:17;;;;;;;;;;;;;;11077:78;;;;;;;;;;;;;;;:99;;;;;;;;;;;;11051:125;;:9;11061:12;11051:23;;;;;;;;;;;;;:125;;;;;;;;;;;11208:11;:35;11220:19;;11240:1;11220:22;;;;;;;;;;;;;11208:35;;;;;;;;;;;:59;;:78;11268:5;11274:10;11268:17;;;;;;;;;;;;;;11208:78;;;;;;;;;;;;;;;:99;;;;;;;;;;;;11186:121;;:5;11192:12;11186:19;;;;;;;;;;;;;:121;;;;;;;;;;;11332:19;11349:1;11332:12;:16;;:19;;;;:::i;:::-;11317:34;;10937:17;10952:1;10937:10;:14;;:17;;;;:::i;:::-;10924:30;;10870:490;;;;10719:647;10775:8;10781:1;10775;:5;;:8;;;;:::i;:::-;10771:12;;10719:647;;;;11380:7;11389:9;11400;11411:5;11372:45;;;;;;;;;;;;;10147:1275;;;;;;;:::o;16236:306::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16364:1:159;16337:24;:28;16329:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16450:24;16424:23;:50;;;;16485:52;16512:24;16485:52;;;;;;;;;;;;;;;;;;16236:306;:::o;14901:295::-;15030:17;15050:11;:23;15062:10;15050:23;;;;;;;;;;;:36;;:45;15087:7;15050:45;;;;;;;;;;;;;;;:55;;;;;;;;;;;;15030:75;;;;15132:8;15119:21;;:9;:21;15111:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14901:295;;;;:::o;3956:230:41:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:1:41;4033:29;;:15;:29;;;;4025:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4126:15;4105:8;;:37;;;;;;;;;;;;;;;;;;4165:15;4153:28;;;;;;;;;;;;3956:230;:::o;2877:38:159:-;;;;:::o;11839:405::-;11960:5;11967:6;11975:7;11990:31;12024:11;:23;12036:10;12024:23;;;;;;;;;;;:43;;:52;12068:7;12024:52;;;;;;;;;;;;;;;:78;;:86;12103:6;12024:86;;;;;;;;;;;;;;;11990:120;;12137:11;:18;;;;;;;;;;;;12131:25;;;;;;;;12164:11;:23;;;;;;;;;;;;12195:11;:38;;;;;;;;;;;;12116:123;;;;;;;11839:405;;;;;;;:::o;6552:659::-;6618:19;6640:11;:23;6652:10;6640:23;;;;;;;;;;;:32;;:39;;;;6618:61;;6701:11;6693:5;:19;6685:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6768:11;:23;6780:10;6768:23;;;;;;;;;;;:32;;6801:5;6768:39;;;;;;;;;;;;;;;;;;;;;;;;;6754:53;;:10;:53;;;6739:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6861:22;6886:18;6902:1;6886:11;:15;;:18;;;;:::i;:::-;6861:43;;6923:14;6914:5;:23;6910:134;;6989:11;:23;7001:10;6989:23;;;;;;;;;;;:32;;7022:14;6989:48;;;;;;;;;;;;;;;;;;;;;;;;;6947:11;:23;6959:10;6947:23;;;;;;;;;;;:32;;6980:5;6947:39;;;;;;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;6910:134;7108:3;7049:11;:23;7061:10;7049:23;;;;;;;;;;;:32;;7082:14;7049:48;;;;;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;7160:46;7204:1;7160:11;:23;7172:10;7160:23;;;;;;;;;;;:32;;:39;;;;:43;;:46;;;;:::i;:::-;7118:11;:23;7130:10;7118:23;;;;;;;;;;;:32;;:88;;;;;:::i;:::-;;6552:659;;;;:::o;3230:57::-;;;;;;;;;;;;;;;;;:::o;17198:242::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17302:1:159;17283:16;:20;17275:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17372:16;17354:15;:34;;;;17399:36;17418:16;17399:36;;;;;;;;;;;;;;;;;;17198:242;:::o;1148:1666:180:-;835:1:73;818:13;;:18;;;;;;;;;;;842:20;865:13;;842:36;;1364:1:180;1311:22;:50;1334:26;1311:50;;;;;;;;;;;;;;;;:54;1296:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1443:26;1436:47;;;1493:10;1521:4;1536:77;1591:21;1536:22;:50;1559:26;1536:50;;;;;;;;;;;;;;;;:54;;:77;;;;:::i;:::-;1436:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1436:185:180;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1436:185:180;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1436:185:180;;;;;;;;;;;;;;;;1421:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:1;1695:21;:25;1687:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1806:15;;1781:21;:40;;1773:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:29;1896:11;:23;1908:10;1896:23;;;;;;;;;;;1864:55;;1993:1;1941:5;:24;;:36;1966:10;1941:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:53;;;:135;;;;2006:70;2027:5;:24;;:36;2052:10;2027:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;2006:20;:70::i;:::-;1941:135;:228;;;;2089:80;2120:5;:24;;:36;2145:10;2120:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;2089:80;;:30;:80::i;:::-;2088:81;1941:228;1926:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2300:23;:12;:21;:23::i;:::-;2249:5;:24;;:36;2274:10;2249:36;;;;;;;;;;;;;;;:48;;;:74;;;;;;;;;;;;;;;;;;2390:32;:21;:30;:32::i;:::-;2329:5;:24;;:36;2354:10;2329:36;;;;;;;;;;;;;;;:58;;;:93;;;;;;;;;;;;;;;;;;2494:26;2428:5;:24;;:36;2453:10;2428:36;;;;;;;;;;;;;;;:63;;;:92;;;;;;;;;;;;;;;;;;2570:101;:83;2631:21;2578:5;:18;;:30;2597:10;2578:30;;;;;;;;;;;;;;;:40;;;;;;;;;;;;2570:49;;:60;;:83;;;;:::i;:::-;:99;:101::i;:::-;2527:5;:18;;:30;2546:10;2527:30;;;;;;;;;;;;;;;:40;;;:144;;;;;;;;;;;;;;;;;;2730:10;2683:126;;2712:10;2683:126;2748:21;2777:26;2683:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:1:73;915:13;;899:12;:29;891:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:1666:180;;;;:::o;16753:306:159:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16881:1:159;16854:24;:28;16846:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16967:24;16941:23;:50;;;;17002:52;17029:24;17002:52;;;;;;;;;;;;;;;;;;16753:306;:::o;2970:500:180:-;3028:29;3060:11;:23;3072:10;3060:23;;;;;;;;;;;3028:55;;3156:1;3105:5;:24;;:36;3130:10;3105:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:52;;;3090:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:70;3272:5;:24;;:36;3297:10;3272:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;3251:20;:70::i;:::-;3250:71;3235:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3379:37;3405:10;3379:25;:37::i;:::-;3429:5;:24;;:36;3454:10;3429:36;;;;;;;;;;;;;;;;3422:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:500;;:::o;8230:389:159:-;8332:6;8340;8348:7;8378:11;:23;8390:10;8378:23;;;;;;;;;;;:42;;:51;8421:7;8378:51;;;;;;;;;;;;;;;:63;;;;;;;;;;;;8449:11;:23;8461:10;8449:23;;;;;;;;;;;:42;;:51;8492:7;8449:51;;;;;;;;;;;;;;;:73;;;;;;;;;;;;8530:11;:23;8542:10;8530:23;;;;;;;;;;;:42;;:51;8573:7;8530:51;;;;;;;;;;;;;;;:78;;;;;;;;;;;;8363:251;;;;;;8230:389;;;;;:::o;3366:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;15799:238:159:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15898:1:159;15892:3;:7;15884:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15982:3;15950:22;:29;15973:5;15950:29;;;;;;;;;;;;;;;:35;;;;16021:5;15996:36;;;16028:3;15996:36;;;;;;;;;;;;;;;;;;15799:238;;:::o;3951:1212:180:-;4035:14;4052:56;4076:10;4088;4100:1;4103;4106;4052:23;:56::i;:::-;4035:73;;4115:31;4149:11;:23;4161:10;4149:23;;;;;;;;;;;:43;;:55;4193:10;4149:55;;;;;;;;;;;;;;;:81;;:89;4231:6;4149:89;;;;;;;;;;;;;;;4115:123;;4245:13;4261:11;:38;;;;;;;;;;;;4245:54;;4382:23;:12;:21;:23::i;:::-;4356:11;:23;;;:49;;;;;;;;;;;;;;;;;;4432:26;4411:11;:18;;;:47;;;;;;;;;;;;;;;;;;;;;;;;4471:11;:38;;;4464:45;;;;;;;;;;;4515:39;4557:11;:23;4569:10;4557:23;;;;;;;;;;;:36;;:48;4594:10;4557:48;;;;;;;;;;;;;;;4515:90;;4682:1;4654:15;:25;;;;;;;;;;;;:29;4626:57;;:15;:25;;;;;;;;;;;;:57;;;4611:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4788:1;4760:15;:25;;;;;;;;;;;;:29;4732:15;:25;;;:57;;;;;;;;;;;;;;;;;;4832:80;4877:22;:29;4900:5;4877:29;;;;;;;;;;;;;;;;4832:18;:25;4851:5;4832:25;;;;;;;;;;;;;;;:33;4858:6;4832:33;;;;;;;;;;;;;;;;:37;;:80;;;;:::i;:::-;4796:18;:25;4815:5;4796:25;;;;;;;;;;;;;;;:33;4822:6;4796:33;;;;;;;;;;;;;;;:116;;;;4919:29;4951:11;:23;4963:10;4951:23;;;;;;;;;;;4919:55;;5046:1;4984:11;:23;4996:10;4984:23;;;;;;;;;;;:36;;:48;5021:10;4984:48;;;;;;;;;;;;;;;:58;;;;;;;;;;;;:63;;;4980:115;;;5057:5;:14;;5077:10;5057:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5057:31:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:115;5151:6;5106:52;;5139:10;5106:52;;5127:10;5106:52;;;;;;;;;;3951:1212;;;;;;;;;:::o;5448:912:159:-;476:11:28;;;;;;;;;;;475:12;467:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:4;526:11;;:18;;;;;;;;;;;;;;;;;;5738:30:159;5757:10;5738:18;:30::i;:::-;5774:28;5786:15;5774:11;:28::i;:::-;5808:52;5835:24;5808:26;:52::i;:::-;5866;5893:24;5866:26;:52::i;:::-;5924:36;5943:16;5924:18;:36::i;:::-;6019:1;5982:27;;:34;;:38;:122;;;;;6070:27;;:34;;6032:27;;:34;;:72;5982:122;5967:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6184:9;6196:1;6184:13;;6179:177;6203:27;;:34;;6199:1;:38;6179:177;;;6261:88;6286:27;;6314:1;6286:30;;;;;;;;;;;;;;;6318:27;;6346:1;6318:30;;;;;;;;;;;;;6261:24;:88::i;:::-;6243:8;6249:1;6243;:5;;:8;;;;:::i;:::-;6239:12;;6179:177;;;;5448:912;;;;;;;;:::o;19967:222::-;20057:4;20099:28;20077:50;;;;;;;;:11;:18;;;;;;;;;;;;:50;;;;;;;;;:106;;;;;20138:45;20159:11;:23;;;;;;;;;;;;20138:20;:45::i;:::-;20137:46;20077:106;20069:115;;19967:222;;;:::o;834:176:3:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;4190:135:41:-;4236:9;4270:8;;;;;;;;;;;:27;;;1234:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1234:28:41;;;1224:39;;;;;;4270:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4270:49:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4270:49:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4270:49:41;;;;;;;;;;;;;;;;4253:67;;4190:135;:::o;19777:186:159:-;19862:4;19897:61;19934:23;;19905;19897:32;;:36;;:61;;;;:::i;:::-;19881:12;:77;;19874:84;;19777:186;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;19141:632:159:-;19252:16;19270;19331:1;19302:19;:26;:30;19294:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19383:22;19408:1;19383:26;;19415:24;19456:19;:26;19442:41;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19442:41:159;;;;19415:68;;19495:9;19507:1;19495:13;;19490:225;19514:19;:26;19510:1;:30;19490:225;;;19564:13;19580:11;:35;19592:19;19612:1;19592:22;;;;;;;;;;;;;;19580:35;;;;;;;;;;;:44;;:51;;;;19564:67;;19657:25;19676:5;19657:14;:18;;:25;;;;:::i;:::-;19640:42;;19703:5;19690:7;19698:1;19690:10;;;;;;;;;;;;;:18;;;;;19490:225;19546:8;19552:1;19546;:5;;:8;;;;:::i;:::-;19542:12;;19490:225;;;;19729:7;19752:14;19738:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19738:29:159;;;;19721:47;;;;;;;;;19141:632;;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;2159:459::-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;20193:216:159:-;20297:4;20331:73;20359:11;:9;:11::i;:::-;:42;;;:44;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20359:44:159;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20359:44:159;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20359:44:159;;;;;;;;;;;;;;;;20331:23;:27;;:73;;;;:::i;:::-;20316:12;:88;20309:95;;20193:216;;;:::o;1961:176:10:-;2017:6;2051:5;2043;:13;2035:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:5;2110:20;;1961:176;;;:::o;5673:2153:180:-;5743:29;5775:11;:23;5787:10;5775:23;;;;;;;;;;;:36;;:48;5812:10;5775:48;;;;;;;;;;;;;;;5743:80;;5829:43;5875:11;:23;5887:10;5875:23;;;;;;;;;;;:42;;:66;5925:10;5875:66;;;;;;;;;;;;;;;5829:112;;5948:12;5963:11;:9;:11::i;:::-;:30;;;6001:67;6044:23;;6009:17;:29;;;;;;;;;;;;6001:38;;:42;;:67;;;;:::i;:::-;5963:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5963:111:180;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5963:111:180;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5963:111:180;;;;;;;;;;;;;;;;5948:126;;6080:18;6101:13;:11;:13::i;:::-;6080:34;;6120:21;6144:30;:28;:30::i;:::-;6120:54;;6180:24;6221:13;6207:28;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6207:28:180;;;;6180:55;;6246:9;6258:1;6246:13;;6241:67;6265:13;6261:1;:17;6241:67;;;6307:1;6294:7;6302:1;6294:10;;;;;;;;;;;;;:14;;;;;6284:8;6290:1;6284;:5;;:8;;;;:::i;:::-;6280:12;;6241:67;;;;6366:13;6323:17;:39;;;;;;;;;;;;:56;;;;6315:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6409:20;6432:1;6409:24;;6562:1260;6584:17;:39;;;;;;;;;;;;6569:54;;:12;:54;6562:1260;;;6657:1;6641:13;:17;6633:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6723:4;6706:22;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6706:22:180;;;6696:33;;;;;;6689:40;;6737:11;6767:13;6759:4;6751:13;;:29;;;;;;6737:43;;6788:14;6805:50;6842:7;6850:3;6842:12;;;;;;;;;;;;;;6805:36;:50::i;:::-;6788:67;;6863:14;6880:8;:24;;;6905:6;6880:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6880:32:180;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6880:32:180;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6880:32:180;;;;;;;;;;;;;;;;6863:49;;6921:31;6955:5;:24;;:32;6980:6;6955:32;;;;;;;;;;;;;;;6921:66;;7031:22;7009:44;;;;;;;;:11;:18;;;;;;;;;;;;:44;;;;;;;;;:103;;;;;7065:8;:39;;;7105:6;7065:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7065:47:180;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7065:47:180;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7065:47:180;;;;;;;;;;;;;;;;7009:103;6996:610;;;7146:19;7163:1;7146:12;:16;;:19;;;;:::i;:::-;7131:34;;7196:28;7175:11;:18;;;:49;;;;;;;;;;;;;;;;;;;;;;;;7260:17;:29;;;;;;;;;;;;7234:11;:23;;;:55;;;;;;;;;;;;;;;;;;7340:17;:44;;;;;;;;;;;;7299:11;:38;;;:85;;;;;;;;;;;;;;;;;;7394:5;:21;;7421:6;7394:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7394:34:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7525:6;7444:153;;7503:10;7444:153;;7481:10;7444:153;7543:17;:44;;;;;;;;;;;;7444:153;;;;;;;;;;;;;;;;;;;;;;6996:610;7750:20;7768:1;7750:13;:17;;:20;;;;:::i;:::-;7734:36;;7793:7;7801:13;7793:22;;;;;;;;;;;;;;7778:7;7786:3;7778:12;;;;;;;;;;;;;:37;;;;;6562:1260;;;;;;;5673:2153;;;;;;;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1732:187:3:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;5807:127:41:-;5851:7;5881:8;;;;;;;;;;;:27;;;2425:26;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2425:26:41;;;2415:37;;;;;;5881:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5881:47:41;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5881:47:41;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5881:47:41;;;;;;;;;;;;;;;;5866:63;;5807:127;:::o;286:7542:180:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../Attestations.sol\";\n\n/*\n * We need a test contract that behaves like the actual Attestations contract,\n * but mocks the implementations of the validator set getters. Otherwise we\n * couldn't test `request` with the current ganache local testnet.\n */\ncontract AttestationsTest is Attestations(true) {\n  address[] private __testValidators;\n\n  // some deprecated functions are mocked here to ensure that the tests for\n  // revoke and withdraw can still run\n\n  /**\n   * @notice Commit to the attestation request of a hashed identifier.\n   * @param identifier The hash of the identifier to be attested.\n   * @param attestationsRequested The number of requested attestations for this request.\n   * @param attestationRequestFeeToken The address of the token with which the attestation fee will\n   * be paid.\n   * @dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\n   * to prevent folks from attacking validators by requesting attestations that they do not\n   * complete, and to increase the cost of validators attempting to manipulate the attestations\n   * protocol.\n   */\n  function request(\n    bytes32 identifier,\n    uint256 attestationsRequested,\n    address attestationRequestFeeToken\n  ) external nonReentrant {\n    require(\n      attestationRequestFees[attestationRequestFeeToken] > 0,\n      \"Invalid attestationRequestFeeToken\"\n    );\n    require(\n      IERC20(attestationRequestFeeToken).transferFrom(\n        msg.sender,\n        address(this),\n        attestationRequestFees[attestationRequestFeeToken].mul(attestationsRequested)\n      ),\n      \"Transfer of attestation request fees failed\"\n    );\n\n    require(attestationsRequested > 0, \"You have to request at least 1 attestation\");\n    require(attestationsRequested <= maxAttestations, \"Too many attestations requested\");\n\n    IdentifierState storage state = identifiers[identifier];\n\n    require(\n      state.unselectedRequests[msg.sender].blockNumber == 0 ||\n        isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber) ||\n        !isAttestationRequestSelectable(state.unselectedRequests[msg.sender].blockNumber),\n      \"There exists an unexpired, unselected attestation request\"\n    );\n\n    state.unselectedRequests[msg.sender].blockNumber = block.number.toUint32();\n    state.unselectedRequests[msg.sender].attestationsRequested = attestationsRequested.toUint32();\n    state.unselectedRequests[msg.sender].attestationRequestFeeToken = attestationRequestFeeToken;\n\n    state.attestations[msg.sender].requested = uint256(state.attestations[msg.sender].requested)\n      .add(attestationsRequested)\n      .toUint32();\n\n    emit AttestationsRequested(\n      identifier,\n      msg.sender,\n      attestationsRequested,\n      attestationRequestFeeToken\n    );\n  }\n\n  /**\n   * @notice Selects the issuers for the most recent attestation request.\n   * @param identifier The hash of the identifier to be attested.\n   */\n  function selectIssuers(bytes32 identifier) external {\n    IdentifierState storage state = identifiers[identifier];\n\n    require(\n      state.unselectedRequests[msg.sender].blockNumber > 0,\n      \"No unselected attestation request to select issuers for\"\n    );\n\n    require(\n      !isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber),\n      \"The attestation request has expired\"\n    );\n\n    addIncompleteAttestations(identifier);\n    delete state.unselectedRequests[msg.sender];\n  }\n\n  /**\n   * @notice Submit the secret message sent by the issuer to complete the attestation request.\n   * @param identifier The hash of the identifier for this attestation.\n   * @param v The recovery id of the incoming ECDSA signature.\n   * @param r Output value r of the ECDSA signature.\n   * @param s Output value s of the ECDSA signature.\n   * @dev Throws if there is no matching outstanding attestation request.\n   * @dev Throws if the attestation window has passed.\n   */\n  function complete(bytes32 identifier, uint8 v, bytes32 r, bytes32 s) external {\n    address issuer = validateAttestationCode(identifier, msg.sender, v, r, s);\n\n    Attestation storage attestation = identifiers[identifier]\n      .attestations[msg.sender]\n      .issuedAttestations[issuer];\n\n    address token = attestation.attestationRequestFeeToken;\n\n    // solhint-disable-next-line not-rely-on-time\n    attestation.blockNumber = block.number.toUint32();\n    attestation.status = AttestationStatus.Complete;\n    delete attestation.attestationRequestFeeToken;\n    AttestedAddress storage attestedAddress = identifiers[identifier].attestations[msg.sender];\n    require(\n      attestedAddress.completed < attestedAddress.completed + 1,\n      \"SafeMath32 integer overflow\"\n    );\n    attestedAddress.completed = attestedAddress.completed + 1;\n\n    pendingWithdrawals[token][issuer] = pendingWithdrawals[token][issuer].add(\n      attestationRequestFees[token]\n    );\n\n    IdentifierState storage state = identifiers[identifier];\n    if (identifiers[identifier].attestations[msg.sender].completed == 1) {\n      state.accounts.push(msg.sender);\n    }\n\n    emit AttestationCompleted(identifier, msg.sender, issuer);\n  }\n\n  function __setValidators(address[] memory validators) public {\n    __testValidators = validators;\n  }\n\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\n    return __testValidators.length;\n  }\n\n  function validatorSignerAddressFromCurrentSet(uint256 index) public view returns (address) {\n    return __testValidators[index];\n  }\n\n  /**\n   * @notice Adds additional attestations given the current randomness.\n   * @param identifier The hash of the identifier to be attested.\n   */\n  function addIncompleteAttestations(bytes32 identifier) internal {\n    AttestedAddress storage state = identifiers[identifier].attestations[msg.sender];\n    UnselectedRequest storage unselectedRequest = identifiers[identifier].unselectedRequests[\n      msg.sender\n    ];\n\n    bytes32 seed = getRandom().getBlockRandomness(\n      uint256(unselectedRequest.blockNumber).add(selectIssuersWaitBlocks)\n    );\n    IAccounts accounts = getAccounts();\n    uint256 issuersLength = numberValidatorsInCurrentSet();\n    uint256[] memory issuers = new uint256[](issuersLength);\n    for (uint256 i = 0; i < issuersLength; i = i.add(1)) issuers[i] = i;\n\n    require(unselectedRequest.attestationsRequested <= issuersLength, \"not enough issuers\");\n\n    uint256 currentIndex = 0;\n\n    // The length of the list (variable issuersLength) is decremented in each round,\n    // so the loop always terminates\n    while (currentIndex < unselectedRequest.attestationsRequested) {\n      require(issuersLength > 0, \"not enough issuers\");\n      seed = keccak256(abi.encodePacked(seed));\n      uint256 idx = uint256(seed) % issuersLength;\n      address signer = validatorSignerAddressFromCurrentSet(issuers[idx]);\n      address issuer = accounts.signerToAccount(signer);\n\n      Attestation storage attestation = state.issuedAttestations[issuer];\n\n      if (\n        attestation.status == AttestationStatus.None &&\n        accounts.hasAuthorizedAttestationSigner(issuer)\n      ) {\n        currentIndex = currentIndex.add(1);\n        attestation.status = AttestationStatus.Incomplete;\n        attestation.blockNumber = unselectedRequest.blockNumber;\n        attestation.attestationRequestFeeToken = unselectedRequest.attestationRequestFeeToken;\n        state.selectedIssuers.push(issuer);\n\n        emit AttestationIssuerSelected(\n          identifier,\n          msg.sender,\n          issuer,\n          unselectedRequest.attestationRequestFeeToken\n        );\n      }\n\n      // Remove the validator that was selected from the list,\n      // by replacing it by the last element in the list\n      issuersLength = issuersLength.sub(1);\n      issuers[idx] = issuers[issuersLength];\n    }\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/temp/celo-monorepo/packages/protocol/contracts/identity/test/AttestationsTest.sol",
  "ast": {
    "absolutePath": "project:/contracts/identity/test/AttestationsTest.sol",
    "exportedSymbols": {
      "AttestationsTest": [
        51915
      ]
    },
    "id": 51916,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 51311,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:180"
      },
      {
        "absolutePath": "project:/contracts/identity/Attestations.sol",
        "file": "../Attestations.sol",
        "id": 51312,
        "nodeType": "ImportDirective",
        "scope": 51916,
        "sourceUnit": 47634,
        "src": "26:29:180",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 51314,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "328:4:180",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 51313,
              "name": "Attestations",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 47633,
              "src": "315:12:180",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Attestations_$47633",
                "typeString": "contract Attestations"
              }
            },
            "id": 51315,
            "nodeType": "InheritanceSpecifier",
            "src": "315:18:180"
          }
        ],
        "contractDependencies": [
          26,
          481,
          9570,
          13582,
          14594,
          19736,
          47633,
          50978
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 51915,
        "linearizedBaseContracts": [
          51915,
          47633,
          19736,
          13582,
          9570,
          481,
          26,
          14594,
          50978
        ],
        "name": "AttestationsTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 51318,
            "name": "__testValidators",
            "nodeType": "VariableDeclaration",
            "scope": 51915,
            "src": "338:34:180",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 51316,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "338:7:180",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 51317,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "338:9:180",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 51474,
              "nodeType": "Block",
              "src": "1290:1524:180",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 51330,
                            "name": "attestationRequestFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46448,
                            "src": "1311:22:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 51332,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51331,
                            "name": "attestationRequestFeeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51324,
                            "src": "1334:26:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1311:50:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 51333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1364:1:180",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1311:54:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206174746573746174696f6e52657175657374466565546f6b656e",
                        "id": 51335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1373:36:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fbab06e34ed13c693595be2183c86d3418ffc9113774673c63c7f72797b67ec",
                          "typeString": "literal_string \"Invalid attestationRequestFeeToken\""
                        },
                        "value": "Invalid attestationRequestFeeToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fbab06e34ed13c693595be2183c86d3418ffc9113774673c63c7f72797b67ec",
                          "typeString": "literal_string \"Invalid attestationRequestFeeToken\""
                        }
                      ],
                      "id": 51329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "1296:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:119:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51337,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:119:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 51343,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59923,
                              "src": "1493:3:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 51344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1493:10:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51346,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60319,
                                "src": "1521:4:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AttestationsTest_$51915",
                                  "typeString": "contract AttestationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AttestationsTest_$51915",
                                  "typeString": "contract AttestationsTest"
                                }
                              ],
                              "id": 51345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1513:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 51347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1513:13:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51352,
                                "name": "attestationsRequested",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51322,
                                "src": "1591:21:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 51348,
                                  "name": "attestationRequestFees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46448,
                                  "src": "1536:22:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 51350,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 51349,
                                  "name": "attestationRequestFeeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51324,
                                  "src": "1559:26:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1536:50:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 280,
                              "src": "1536:54:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 51353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1536:77:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51340,
                                "name": "attestationRequestFeeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51324,
                                "src": "1443:26:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51339,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "1436:6:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$955_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 51341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1436:34:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 51342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 938,
                          "src": "1436:47:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 51354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1436:185:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206f66206174746573746174696f6e20726571756573742066656573206661696c6564",
                        "id": 51355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1629:45:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5394185b740e608ff56aadc9b35a71ad0bd15ed5fd197afb4e85372abf8f00",
                          "typeString": "literal_string \"Transfer of attestation request fees failed\""
                        },
                        "value": "Transfer of attestation request fees failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5394185b740e608ff56aadc9b35a71ad0bd15ed5fd197afb4e85372abf8f00",
                          "typeString": "literal_string \"Transfer of attestation request fees failed\""
                        }
                      ],
                      "id": 51338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "1421:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:259:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51357,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:259:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 51359,
                          "name": "attestationsRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51322,
                          "src": "1695:21:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 51360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1719:1:180",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1695:25:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206861766520746f2072657175657374206174206c656173742031206174746573746174696f6e",
                        "id": 51362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1722:44:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6339f4898dba82a980125bd68be7797a9a8a24b1641e6a0bad0facf975bdb393",
                          "typeString": "literal_string \"You have to request at least 1 attestation\""
                        },
                        "value": "You have to request at least 1 attestation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6339f4898dba82a980125bd68be7797a9a8a24b1641e6a0bad0facf975bdb393",
                          "typeString": "literal_string \"You have to request at least 1 attestation\""
                        }
                      ],
                      "id": 51358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "1687:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:80:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51364,
                  "nodeType": "ExpressionStatement",
                  "src": "1687:80:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 51366,
                          "name": "attestationsRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51322,
                          "src": "1781:21:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51367,
                          "name": "maxAttestations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46444,
                          "src": "1806:15:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1781:40:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e79206174746573746174696f6e7320726571756573746564",
                        "id": 51369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1823:33:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559f027ce8dce93c172edfe918d5248da9b0bbe7254143b010c3b7511882dd37",
                          "typeString": "literal_string \"Too many attestations requested\""
                        },
                        "value": "Too many attestations requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559f027ce8dce93c172edfe918d5248da9b0bbe7254143b010c3b7511882dd37",
                          "typeString": "literal_string \"Too many attestations requested\""
                        }
                      ],
                      "id": 51365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "1773:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:84:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51371,
                  "nodeType": "ExpressionStatement",
                  "src": "1773:84:180"
                },
                {
                  "assignments": [
                    51373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51373,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51474,
                      "src": "1864:29:180",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                        "typeString": "struct Attestations.IdentifierState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51372,
                        "name": "IdentifierState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46434,
                        "src": "1864:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                          "typeString": "struct Attestations.IdentifierState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51377,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 51374,
                      "name": "identifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46438,
                      "src": "1896:11:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                        "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                      }
                    },
                    "id": 51376,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51375,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51320,
                      "src": "1908:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1896:23:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                      "typeString": "struct Attestations.IdentifierState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1864:55:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 51405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 51395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 51386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51379,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51373,
                                    "src": "1941:5:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                                      "typeString": "struct Attestations.IdentifierState storage pointer"
                                    }
                                  },
                                  "id": 51380,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unselectedRequests",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46433,
                                  "src": "1941:24:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                                    "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                  }
                                },
                                "id": 51383,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51381,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59923,
                                    "src": "1966:3:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 51382,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1966:10:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1941:36:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                                  "typeString": "struct Attestations.UnselectedRequest storage ref"
                                }
                              },
                              "id": 51384,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "blockNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46417,
                              "src": "1941:48:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1993:1:180",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1941:53:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51388,
                                      "name": "state",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51373,
                                      "src": "2027:5:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                                        "typeString": "struct Attestations.IdentifierState storage pointer"
                                      }
                                    },
                                    "id": 51389,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "unselectedRequests",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46433,
                                    "src": "2027:24:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                                      "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    }
                                  },
                                  "id": 51392,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51390,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59923,
                                      "src": "2052:3:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 51391,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2052:10:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2027:36:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                                    "typeString": "struct Attestations.UnselectedRequest storage ref"
                                  }
                                },
                                "id": 51393,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46417,
                                "src": "2027:48:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 51387,
                              "name": "isAttestationExpired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47592,
                              "src": "2006:20:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                                "typeString": "function (uint32) view returns (bool)"
                              }
                            },
                            "id": 51394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2006:70:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1941:135:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2088:81:180",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51397,
                                      "name": "state",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51373,
                                      "src": "2120:5:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                                        "typeString": "struct Attestations.IdentifierState storage pointer"
                                      }
                                    },
                                    "id": 51398,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "unselectedRequests",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46433,
                                    "src": "2120:24:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                                      "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    }
                                  },
                                  "id": 51401,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51399,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59923,
                                      "src": "2145:3:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 51400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2145:10:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2120:36:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                                    "typeString": "struct Attestations.UnselectedRequest storage ref"
                                  }
                                },
                                "id": 51402,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46417,
                                "src": "2120:48:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 51396,
                              "name": "isAttestationRequestSelectable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47632,
                              "src": "2089:30:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 51403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2089:80:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1941:228:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686572652065786973747320616e20756e657870697265642c20756e73656c6563746564206174746573746174696f6e2072657175657374",
                        "id": 51406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2177:59:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_258b2694618df46c97b26596a48755d13ebcf705afc06b4350a78047cd959c93",
                          "typeString": "literal_string \"There exists an unexpired, unselected attestation request\""
                        },
                        "value": "There exists an unexpired, unselected attestation request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_258b2694618df46c97b26596a48755d13ebcf705afc06b4350a78047cd959c93",
                          "typeString": "literal_string \"There exists an unexpired, unselected attestation request\""
                        }
                      ],
                      "id": 51378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "1926:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:316:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51408,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:316:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51409,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51373,
                            "src": "2249:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51413,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unselectedRequests",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46433,
                          "src": "2249:24:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                            "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                          }
                        },
                        "id": 51414,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51411,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59923,
                            "src": "2274:3:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2274:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2249:36:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                          "typeString": "struct Attestations.UnselectedRequest storage ref"
                        }
                      },
                      "id": 51415,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46417,
                      "src": "2249:48:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51416,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59913,
                            "src": "2300:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2300:12:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "2300:21:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2300:23:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2249:74:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51421,
                  "nodeType": "ExpressionStatement",
                  "src": "2249:74:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51422,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51373,
                            "src": "2329:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51426,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unselectedRequests",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46433,
                          "src": "2329:24:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                            "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                          }
                        },
                        "id": 51427,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51424,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59923,
                            "src": "2354:3:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2354:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2329:36:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                          "typeString": "struct Attestations.UnselectedRequest storage ref"
                        }
                      },
                      "id": 51428,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "attestationsRequested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46419,
                      "src": "2329:58:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 51429,
                          "name": "attestationsRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51322,
                          "src": "2390:21:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "2390:30:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2390:32:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2329:93:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51433,
                  "nodeType": "ExpressionStatement",
                  "src": "2329:93:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51434,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51373,
                            "src": "2428:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51438,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unselectedRequests",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46433,
                          "src": "2428:24:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                            "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                          }
                        },
                        "id": 51439,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59923,
                            "src": "2453:3:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2453:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2428:36:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                          "typeString": "struct Attestations.UnselectedRequest storage ref"
                        }
                      },
                      "id": 51440,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "attestationRequestFeeToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46421,
                      "src": "2428:63:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51441,
                      "name": "attestationRequestFeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51324,
                      "src": "2494:26:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2428:92:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51443,
                  "nodeType": "ExpressionStatement",
                  "src": "2428:92:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51444,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51373,
                            "src": "2527:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51448,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46429,
                          "src": "2527:18:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46415_storage_$",
                            "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                          }
                        },
                        "id": 51449,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51446,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59923,
                            "src": "2546:3:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2546:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2527:30:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage",
                          "typeString": "struct Attestations.AttestedAddress storage ref"
                        }
                      },
                      "id": 51450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46405,
                      "src": "2527:40:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 51460,
                              "name": "attestationsRequested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51322,
                              "src": "2631:21:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 51452,
                                        "name": "state",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 51373,
                                        "src": "2578:5:180",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                                          "typeString": "struct Attestations.IdentifierState storage pointer"
                                        }
                                      },
                                      "id": 51453,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "attestations",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 46429,
                                      "src": "2578:18:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46415_storage_$",
                                        "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                      }
                                    },
                                    "id": 51456,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 51454,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59923,
                                        "src": "2597:3:180",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 51455,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "2597:10:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2578:30:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage",
                                      "typeString": "struct Attestations.AttestedAddress storage ref"
                                    }
                                  },
                                  "id": 51457,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "requested",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46405,
                                  "src": "2578:40:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "id": 51451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2570:7:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 51458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2570:49:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 51459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "2570:60:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 51461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2570:83:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "2570:99:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2570:101:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2527:144:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51465,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:144:180"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51467,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51320,
                        "src": "2712:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51468,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "2730:3:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2730:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51470,
                        "name": "attestationsRequested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51322,
                        "src": "2748:21:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51471,
                        "name": "attestationRequestFeeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51324,
                        "src": "2777:26:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51466,
                      "name": "AttestationsRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46470,
                      "src": "2683:21:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,address)"
                      }
                    },
                    "id": 51472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2683:126:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51473,
                  "nodeType": "EmitStatement",
                  "src": "2678:131:180"
                }
              ]
            },
            "documentation": "@notice Commit to the attestation request of a hashed identifier.\n@param identifier The hash of the identifier to be attested.\n@param attestationsRequested The number of requested attestations for this request.\n@param attestationRequestFeeToken The address of the token with which the attestation fee will\nbe paid.\n@dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\nto prevent folks from attacking validators by requesting attestations that they do not\ncomplete, and to increase the cost of validators attempting to manipulate the attestations\nprotocol.",
            "id": 51475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 51327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51326,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 19727,
                  "src": "1277:12:180",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1277:12:180"
              }
            ],
            "name": "request",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51320,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "1170:18:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51319,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51322,
                  "name": "attestationsRequested",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "1194:29:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1194:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51324,
                  "name": "attestationRequestFeeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "1229:34:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:180",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1164:103:180"
            },
            "returnParameters": {
              "id": 51328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1290:0:180"
            },
            "scope": 51915,
            "src": "1148:1666:180",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 51522,
              "nodeType": "Block",
              "src": "3022:448:180",
              "statements": [
                {
                  "assignments": [
                    51481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51481,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51522,
                      "src": "3028:29:180",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                        "typeString": "struct Attestations.IdentifierState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51480,
                        "name": "IdentifierState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46434,
                        "src": "3028:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                          "typeString": "struct Attestations.IdentifierState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51485,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 51482,
                      "name": "identifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46438,
                      "src": "3060:11:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                        "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                      }
                    },
                    "id": 51484,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51483,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51477,
                      "src": "3072:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3060:23:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                      "typeString": "struct Attestations.IdentifierState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3028:55:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 51494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51487,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51481,
                                "src": "3105:5:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                                  "typeString": "struct Attestations.IdentifierState storage pointer"
                                }
                              },
                              "id": 51488,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "unselectedRequests",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46433,
                              "src": "3105:24:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                                "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                              }
                            },
                            "id": 51491,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51489,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59923,
                                "src": "3130:3:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 51490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3130:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3105:36:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                              "typeString": "struct Attestations.UnselectedRequest storage ref"
                            }
                          },
                          "id": 51492,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockNumber",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46417,
                          "src": "3105:48:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 51493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3156:1:180",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3105:52:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20756e73656c6563746564206174746573746174696f6e207265717565737420746f2073656c656374206973737565727320666f72",
                        "id": 51495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3165:57:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2336bcc88f66654106a02094418f163fe78eff0542e86c1e6abfe990b3a169",
                          "typeString": "literal_string \"No unselected attestation request to select issuers for\""
                        },
                        "value": "No unselected attestation request to select issuers for"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf2336bcc88f66654106a02094418f163fe78eff0542e86c1e6abfe990b3a169",
                          "typeString": "literal_string \"No unselected attestation request to select issuers for\""
                        }
                      ],
                      "id": 51486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "3090:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:138:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51497,
                  "nodeType": "ExpressionStatement",
                  "src": "3090:138:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3250:71:180",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51500,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51481,
                                    "src": "3272:5:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                                      "typeString": "struct Attestations.IdentifierState storage pointer"
                                    }
                                  },
                                  "id": 51501,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unselectedRequests",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46433,
                                  "src": "3272:24:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                                    "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                  }
                                },
                                "id": 51504,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51502,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59923,
                                    "src": "3297:3:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 51503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3297:10:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3272:36:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                                  "typeString": "struct Attestations.UnselectedRequest storage ref"
                                }
                              },
                              "id": 51505,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "blockNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46417,
                              "src": "3272:48:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 51499,
                            "name": "isAttestationExpired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47592,
                            "src": "3251:20:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                              "typeString": "function (uint32) view returns (bool)"
                            }
                          },
                          "id": 51506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3251:70:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206174746573746174696f6e2072657175657374206861732065787069726564",
                        "id": 51508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3329:37:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0f527738e002968b2ccbb3a0e21bea4cc9d35abeeb3a84053f4cccd53b5eb9f",
                          "typeString": "literal_string \"The attestation request has expired\""
                        },
                        "value": "The attestation request has expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0f527738e002968b2ccbb3a0e21bea4cc9d35abeeb3a84053f4cccd53b5eb9f",
                          "typeString": "literal_string \"The attestation request has expired\""
                        }
                      ],
                      "id": 51498,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "3235:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3235:137:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51510,
                  "nodeType": "ExpressionStatement",
                  "src": "3235:137:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51512,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51477,
                        "src": "3405:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51511,
                      "name": "addIncompleteAttestations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51914,
                      "src": "3379:25:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 51513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3379:37:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51514,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:37:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3422:43:180",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51515,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51481,
                          "src": "3429:5:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                            "typeString": "struct Attestations.IdentifierState storage pointer"
                          }
                        },
                        "id": 51516,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "unselectedRequests",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46433,
                        "src": "3429:24:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                          "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                        }
                      },
                      "id": 51519,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51517,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "3454:3:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3454:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3429:36:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                        "typeString": "struct Attestations.UnselectedRequest storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51521,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:43:180"
                }
              ]
            },
            "documentation": "@notice Selects the issuers for the most recent attestation request.\n@param identifier The hash of the identifier to be attested.",
            "id": 51523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectIssuers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51477,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51523,
                  "src": "2993:18:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51476,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2992:20:180"
            },
            "returnParameters": {
              "id": 51479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3022:0:180"
            },
            "scope": 51915,
            "src": "2970:500:180",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 51664,
              "nodeType": "Block",
              "src": "4029:1134:180",
              "statements": [
                {
                  "assignments": [
                    51535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51535,
                      "name": "issuer",
                      "nodeType": "VariableDeclaration",
                      "scope": 51664,
                      "src": "4035:14:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51534,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4035:7:180",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51544,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51537,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51525,
                        "src": "4076:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51538,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "4088:3:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4088:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51540,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51527,
                        "src": "4100:1:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51541,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51529,
                        "src": "4103:1:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51542,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51531,
                        "src": "4106:1:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51536,
                      "name": "validateAttestationCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47490,
                      "src": "4052:23:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,address,uint8,bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 51543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4052:56:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4035:73:180"
                },
                {
                  "assignments": [
                    51546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51546,
                      "name": "attestation",
                      "nodeType": "VariableDeclaration",
                      "scope": 51664,
                      "src": "4115:31:180",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                        "typeString": "struct Attestations.Attestation"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51545,
                        "name": "Attestation",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46403,
                        "src": "4115:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                          "typeString": "struct Attestations.Attestation"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51557,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51547,
                              "name": "identifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46438,
                              "src": "4149:11:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                                "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                              }
                            },
                            "id": 51549,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51548,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51525,
                              "src": "4161:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4149:23:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                              "typeString": "struct Attestations.IdentifierState storage ref"
                            }
                          },
                          "id": 51550,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46429,
                          "src": "4149:43:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46415_storage_$",
                            "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                          }
                        },
                        "id": 51553,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51551,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59923,
                            "src": "4193:3:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4193:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4149:55:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage",
                          "typeString": "struct Attestations.AttestedAddress storage ref"
                        }
                      },
                      "id": 51554,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuedAttestations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46414,
                      "src": "4149:81:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Attestation_$46403_storage_$",
                        "typeString": "mapping(address => struct Attestations.Attestation storage ref)"
                      }
                    },
                    "id": 51556,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51555,
                      "name": "issuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51535,
                      "src": "4231:6:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4149:89:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Attestation_$46403_storage",
                      "typeString": "struct Attestations.Attestation storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4115:123:180"
                },
                {
                  "assignments": [
                    51559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51559,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 51664,
                      "src": "4245:13:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51558,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4245:7:180",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51562,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 51560,
                      "name": "attestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51546,
                      "src": "4261:11:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                        "typeString": "struct Attestations.Attestation storage pointer"
                      }
                    },
                    "id": 51561,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "attestationRequestFeeToken",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 46402,
                    "src": "4261:38:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4245:54:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51563,
                        "name": "attestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51546,
                        "src": "4356:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                          "typeString": "struct Attestations.Attestation storage pointer"
                        }
                      },
                      "id": 51565,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46400,
                      "src": "4356:23:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51566,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59913,
                            "src": "4382:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4382:12:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "4382:21:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4382:23:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4356:49:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51571,
                  "nodeType": "ExpressionStatement",
                  "src": "4356:49:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51572,
                        "name": "attestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51546,
                        "src": "4411:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                          "typeString": "struct Attestations.Attestation storage pointer"
                        }
                      },
                      "id": 51574,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46398,
                      "src": "4411:18:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                        "typeString": "enum Attestations.AttestationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51575,
                        "name": "AttestationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46396,
                        "src": "4432:17:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AttestationStatus_$46396_$",
                          "typeString": "type(enum Attestations.AttestationStatus)"
                        }
                      },
                      "id": 51576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Complete",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4432:26:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                        "typeString": "enum Attestations.AttestationStatus"
                      }
                    },
                    "src": "4411:47:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                      "typeString": "enum Attestations.AttestationStatus"
                    }
                  },
                  "id": 51578,
                  "nodeType": "ExpressionStatement",
                  "src": "4411:47:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4464:45:180",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51579,
                        "name": "attestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51546,
                        "src": "4471:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                          "typeString": "struct Attestations.Attestation storage pointer"
                        }
                      },
                      "id": 51580,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "attestationRequestFeeToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46402,
                      "src": "4471:38:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51582,
                  "nodeType": "ExpressionStatement",
                  "src": "4464:45:180"
                },
                {
                  "assignments": [
                    51584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51584,
                      "name": "attestedAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 51664,
                      "src": "4515:39:180",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                        "typeString": "struct Attestations.AttestedAddress"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51583,
                        "name": "AttestedAddress",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46415,
                        "src": "4515:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                          "typeString": "struct Attestations.AttestedAddress"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51592,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51585,
                          "name": "identifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46438,
                          "src": "4557:11:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                            "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                          }
                        },
                        "id": 51587,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51586,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51525,
                          "src": "4569:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4557:23:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                          "typeString": "struct Attestations.IdentifierState storage ref"
                        }
                      },
                      "id": 51588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attestations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46429,
                      "src": "4557:36:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46415_storage_$",
                        "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                      }
                    },
                    "id": 51591,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51589,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59923,
                        "src": "4594:3:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4594:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4557:48:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage",
                      "typeString": "struct Attestations.AttestedAddress storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4515:90:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 51600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51594,
                            "name": "attestedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51584,
                            "src": "4626:15:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                              "typeString": "struct Attestations.AttestedAddress storage pointer"
                            }
                          },
                          "id": 51595,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "completed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46407,
                          "src": "4626:25:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 51599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 51596,
                              "name": "attestedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51584,
                              "src": "4654:15:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                                "typeString": "struct Attestations.AttestedAddress storage pointer"
                              }
                            },
                            "id": 51597,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "completed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46407,
                            "src": "4654:25:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 51598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4682:1:180",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4654:29:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4626:57:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d617468333220696e7465676572206f766572666c6f77",
                        "id": 51601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4691:29:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b25ca52c150c885152a41d16b8c6680148452eaf44111476e6e69ba5a1f167fd",
                          "typeString": "literal_string \"SafeMath32 integer overflow\""
                        },
                        "value": "SafeMath32 integer overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b25ca52c150c885152a41d16b8c6680148452eaf44111476e6e69ba5a1f167fd",
                          "typeString": "literal_string \"SafeMath32 integer overflow\""
                        }
                      ],
                      "id": 51593,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "4611:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4611:115:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51603,
                  "nodeType": "ExpressionStatement",
                  "src": "4611:115:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51604,
                        "name": "attestedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51584,
                        "src": "4732:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                          "typeString": "struct Attestations.AttestedAddress storage pointer"
                        }
                      },
                      "id": 51606,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46407,
                      "src": "4732:25:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 51610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51607,
                          "name": "attestedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51584,
                          "src": "4760:15:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                            "typeString": "struct Attestations.AttestedAddress storage pointer"
                          }
                        },
                        "id": 51608,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "completed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46407,
                        "src": "4760:25:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 51609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4788:1:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4760:29:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4732:57:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51612,
                  "nodeType": "ExpressionStatement",
                  "src": "4732:57:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51613,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46454,
                          "src": "4796:18:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 51616,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51614,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51559,
                          "src": "4815:5:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4796:25:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51617,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 51615,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51535,
                        "src": "4822:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4796:33:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 51624,
                            "name": "attestationRequestFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46448,
                            "src": "4877:22:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 51626,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51625,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51559,
                            "src": "4900:5:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4877:29:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51618,
                              "name": "pendingWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46454,
                              "src": "4832:18:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 51620,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51619,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51559,
                              "src": "4851:5:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4832:25:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 51622,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51621,
                            "name": "issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51535,
                            "src": "4858:6:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4832:33:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 203,
                        "src": "4832:37:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 51627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4832:80:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4796:116:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51629,
                  "nodeType": "ExpressionStatement",
                  "src": "4796:116:180"
                },
                {
                  "assignments": [
                    51631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51631,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51664,
                      "src": "4919:29:180",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                        "typeString": "struct Attestations.IdentifierState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51630,
                        "name": "IdentifierState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46434,
                        "src": "4919:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                          "typeString": "struct Attestations.IdentifierState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51635,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 51632,
                      "name": "identifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46438,
                      "src": "4951:11:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                        "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                      }
                    },
                    "id": 51634,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51633,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51525,
                      "src": "4963:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4951:23:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                      "typeString": "struct Attestations.IdentifierState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4919:55:180"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 51645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51636,
                              "name": "identifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46438,
                              "src": "4984:11:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                                "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                              }
                            },
                            "id": 51638,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51637,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51525,
                              "src": "4996:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4984:23:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                              "typeString": "struct Attestations.IdentifierState storage ref"
                            }
                          },
                          "id": 51639,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46429,
                          "src": "4984:36:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46415_storage_$",
                            "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                          }
                        },
                        "id": 51642,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51640,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59923,
                            "src": "5021:3:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5021:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4984:48:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage",
                          "typeString": "struct Attestations.AttestedAddress storage ref"
                        }
                      },
                      "id": 51643,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46407,
                      "src": "4984:58:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 51644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5046:1:180",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4984:63:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 51656,
                  "nodeType": "IfStatement",
                  "src": "4980:115:180",
                  "trueBody": {
                    "id": 51655,
                    "nodeType": "Block",
                    "src": "5049:46:180",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51651,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59923,
                                "src": "5077:3:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 51652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5077:10:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51646,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51631,
                                "src": "5057:5:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IdentifierState_$46434_storage_ptr",
                                  "typeString": "struct Attestations.IdentifierState storage pointer"
                                }
                              },
                              "id": 51649,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accounts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46425,
                              "src": "5057:14:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 51650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5057:19:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) returns (uint256)"
                            }
                          },
                          "id": 51653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5057:31:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51654,
                        "nodeType": "ExpressionStatement",
                        "src": "5057:31:180"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51658,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51525,
                        "src": "5127:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51659,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59923,
                          "src": "5139:3:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5139:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51661,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51535,
                        "src": "5151:6:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51657,
                      "name": "AttestationCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46488,
                      "src": "5106:20:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 51662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5106:52:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51663,
                  "nodeType": "EmitStatement",
                  "src": "5101:57:180"
                }
              ]
            },
            "documentation": "@notice Submit the secret message sent by the issuer to complete the attestation request.\n@param identifier The hash of the identifier for this attestation.\n@param v The recovery id of the incoming ECDSA signature.\n@param r Output value r of the ECDSA signature.\n@param s Output value s of the ECDSA signature.\n@dev Throws if there is no matching outstanding attestation request.\n@dev Throws if the attestation window has passed.",
            "id": 51665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "complete",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51525,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51665,
                  "src": "3969:18:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51524,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3969:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51527,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 51665,
                  "src": "3989:7:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 51526,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:5:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51529,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 51665,
                  "src": "3998:9:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3998:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51531,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 51665,
                  "src": "4009:9:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51530,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4009:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3968:51:180"
            },
            "returnParameters": {
              "id": 51533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4029:0:180"
            },
            "scope": 51915,
            "src": "3951:1212:180",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 51675,
              "nodeType": "Block",
              "src": "5228:40:180",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 51671,
                      "name": "__testValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51318,
                      "src": "5234:16:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51672,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51668,
                      "src": "5253:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "5234:29:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 51674,
                  "nodeType": "ExpressionStatement",
                  "src": "5234:29:180"
                }
              ]
            },
            "documentation": null,
            "id": 51676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__setValidators",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51668,
                  "name": "validators",
                  "nodeType": "VariableDeclaration",
                  "scope": 51676,
                  "src": "5192:27:180",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51666,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5192:7:180",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 51667,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5192:9:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5191:29:180"
            },
            "returnParameters": {
              "id": 51670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5228:0:180"
            },
            "scope": 51915,
            "src": "5167:101:180",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51684,
              "nodeType": "Block",
              "src": "5342:41:180",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 51681,
                      "name": "__testValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51318,
                      "src": "5355:16:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 51682,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5355:23:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 51680,
                  "id": 51683,
                  "nodeType": "Return",
                  "src": "5348:30:180"
                }
              ]
            },
            "documentation": null,
            "id": 51685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5309:2:180"
            },
            "returnParameters": {
              "id": 51680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51679,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51685,
                  "src": "5333:7:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5333:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5332:9:180"
            },
            "scope": 51915,
            "src": "5272:111:180",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51696,
              "nodeType": "Block",
              "src": "5478:41:180",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 51692,
                      "name": "__testValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51318,
                      "src": "5491:16:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 51694,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51693,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51687,
                      "src": "5508:5:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5491:23:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 51691,
                  "id": 51695,
                  "nodeType": "Return",
                  "src": "5484:30:180"
                }
              ]
            },
            "documentation": null,
            "id": 51697,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatorSignerAddressFromCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51687,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 51697,
                  "src": "5433:13:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5433:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5432:15:180"
            },
            "returnParameters": {
              "id": 51691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51690,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 51697,
                  "src": "5469:7:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5469:7:180",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5468:9:180"
            },
            "scope": 51915,
            "src": "5387:132:180",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51913,
              "nodeType": "Block",
              "src": "5737:2089:180",
              "statements": [
                {
                  "assignments": [
                    51703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51703,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51913,
                      "src": "5743:29:180",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                        "typeString": "struct Attestations.AttestedAddress"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51702,
                        "name": "AttestedAddress",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46415,
                        "src": "5743:15:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                          "typeString": "struct Attestations.AttestedAddress"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51711,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51704,
                          "name": "identifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46438,
                          "src": "5775:11:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                            "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                          }
                        },
                        "id": 51706,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51705,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51699,
                          "src": "5787:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5775:23:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                          "typeString": "struct Attestations.IdentifierState storage ref"
                        }
                      },
                      "id": 51707,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attestations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46429,
                      "src": "5775:36:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46415_storage_$",
                        "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                      }
                    },
                    "id": 51710,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51708,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59923,
                        "src": "5812:3:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5812:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5775:48:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage",
                      "typeString": "struct Attestations.AttestedAddress storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5743:80:180"
                },
                {
                  "assignments": [
                    51713
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51713,
                      "name": "unselectedRequest",
                      "nodeType": "VariableDeclaration",
                      "scope": 51913,
                      "src": "5829:43:180",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                        "typeString": "struct Attestations.UnselectedRequest"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51712,
                        "name": "UnselectedRequest",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46422,
                        "src": "5829:17:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                          "typeString": "struct Attestations.UnselectedRequest"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51721,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51714,
                          "name": "identifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46438,
                          "src": "5875:11:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46434_storage_$",
                            "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                          }
                        },
                        "id": 51716,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51715,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51699,
                          "src": "5887:10:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5875:23:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46434_storage",
                          "typeString": "struct Attestations.IdentifierState storage ref"
                        }
                      },
                      "id": 51717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unselectedRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46433,
                      "src": "5875:42:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46422_storage_$",
                        "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                      }
                    },
                    "id": 51720,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51718,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59923,
                        "src": "5925:3:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5925:10:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5875:66:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage",
                      "typeString": "struct Attestations.UnselectedRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5829:112:180"
                },
                {
                  "assignments": [
                    51723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51723,
                      "name": "seed",
                      "nodeType": "VariableDeclaration",
                      "scope": 51913,
                      "src": "5948:12:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 51722,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5948:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51735,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 51732,
                            "name": "selectIssuersWaitBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46442,
                            "src": "6044:23:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 51728,
                                  "name": "unselectedRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51713,
                                  "src": "6009:17:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                                    "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                  }
                                },
                                "id": 51729,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46417,
                                "src": "6009:29:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 51727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6001:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 51730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6001:38:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 203,
                          "src": "6001:42:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 51733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6001:67:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 51724,
                          "name": "getRandom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13490,
                          "src": "5963:9:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IRandom_$51271_$",
                            "typeString": "function () view returns (contract IRandom)"
                          }
                        },
                        "id": 51725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5963:11:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRandom_$51271",
                          "typeString": "contract IRandom"
                        }
                      },
                      "id": 51726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBlockRandomness",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51270,
                      "src": "5963:30:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) view external returns (bytes32)"
                      }
                    },
                    "id": 51734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5963:111:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5948:126:180"
                },
                {
                  "assignments": [
                    51737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51737,
                      "name": "accounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 51913,
                      "src": "6080:18:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccounts_$14468",
                        "typeString": "contract IAccounts"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51736,
                        "name": "IAccounts",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 14468,
                        "src": "6080:9:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccounts_$14468",
                          "typeString": "contract IAccounts"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51740,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51738,
                      "name": "getAccounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13347,
                      "src": "6101:11:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAccounts_$14468_$",
                        "typeString": "function () view returns (contract IAccounts)"
                      }
                    },
                    "id": 51739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6101:13:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccounts_$14468",
                      "typeString": "contract IAccounts"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6080:34:180"
                },
                {
                  "assignments": [
                    51742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51742,
                      "name": "issuersLength",
                      "nodeType": "VariableDeclaration",
                      "scope": 51913,
                      "src": "6120:21:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6120:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51745,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51743,
                      "name": "numberValidatorsInCurrentSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51685,
                      "src": "6144:28:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 51744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6144:30:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6120:54:180"
                },
                {
                  "assignments": [
                    51749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51749,
                      "name": "issuers",
                      "nodeType": "VariableDeclaration",
                      "scope": 51913,
                      "src": "6180:24:180",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 51747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6180:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51748,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6180:9:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51755,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51753,
                        "name": "issuersLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51742,
                        "src": "6221:13:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6207:13:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 51750,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6211:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51751,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6211:9:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 51754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6207:28:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6180:55:180"
                },
                {
                  "body": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 51774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51770,
                          "name": "issuers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51749,
                          "src": "6294:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 51772,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51771,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51757,
                          "src": "6302:1:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6294:10:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 51773,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51757,
                        "src": "6307:1:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6294:14:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51775,
                    "nodeType": "ExpressionStatement",
                    "src": "6294:14:180"
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 51760,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51757,
                      "src": "6261:1:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 51761,
                      "name": "issuersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51742,
                      "src": "6265:13:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6261:17:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51776,
                  "initializationExpression": {
                    "assignments": [
                      51757
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 51757,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 51776,
                        "src": "6246:9:180",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6246:7:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 51759,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 51758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6258:1:180",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6246:13:180"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 51768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 51763,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51757,
                        "src": "6280:1:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 51766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6290:1:180",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 51764,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51757,
                            "src": "6284:1:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 203,
                          "src": "6284:5:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 51767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6284:8:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6280:12:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51769,
                    "nodeType": "ExpressionStatement",
                    "src": "6280:12:180"
                  },
                  "nodeType": "ForStatement",
                  "src": "6241:67:180"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51778,
                            "name": "unselectedRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51713,
                            "src": "6323:17:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                              "typeString": "struct Attestations.UnselectedRequest storage pointer"
                            }
                          },
                          "id": 51779,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestationsRequested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46419,
                          "src": "6323:39:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51780,
                          "name": "issuersLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51742,
                          "src": "6366:13:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6323:56:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682069737375657273",
                        "id": 51782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6381:20:180",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                          "typeString": "literal_string \"not enough issuers\""
                        },
                        "value": "not enough issuers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                          "typeString": "literal_string \"not enough issuers\""
                        }
                      ],
                      "id": 51777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59926,
                        59927
                      ],
                      "referencedDeclaration": 59927,
                      "src": "6315:7:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6315:87:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51784,
                  "nodeType": "ExpressionStatement",
                  "src": "6315:87:180"
                },
                {
                  "assignments": [
                    51786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51786,
                      "name": "currentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 51913,
                      "src": "6409:20:180",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51785,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6409:7:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51788,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 51787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6432:1:180",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6409:24:180"
                },
                {
                  "body": {
                    "id": 51911,
                    "nodeType": "Block",
                    "src": "6625:1197:180",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 51794,
                                "name": "issuersLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51742,
                                "src": "6641:13:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 51795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6657:1:180",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6641:17:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f7567682069737375657273",
                              "id": 51797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6660:20:180",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                "typeString": "literal_string \"not enough issuers\""
                              },
                              "value": "not enough issuers"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                "typeString": "literal_string \"not enough issuers\""
                              }
                            ],
                            "id": 51793,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              59926,
                              59927
                            ],
                            "referencedDeclaration": 59927,
                            "src": "6633:7:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 51798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6633:48:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51799,
                        "nodeType": "ExpressionStatement",
                        "src": "6633:48:180"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 51800,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51723,
                            "src": "6689:4:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 51804,
                                    "name": "seed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51723,
                                    "src": "6723:4:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51802,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59910,
                                    "src": "6706:3:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 51803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6706:16:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 51805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6706:22:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 51801,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59917,
                              "src": "6696:9:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 51806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6696:33:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6689:40:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 51808,
                        "nodeType": "ExpressionStatement",
                        "src": "6689:40:180"
                      },
                      {
                        "assignments": [
                          51810
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51810,
                            "name": "idx",
                            "nodeType": "VariableDeclaration",
                            "scope": 51911,
                            "src": "6737:11:180",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51809,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6737:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51816,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51812,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51723,
                                "src": "6759:4:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 51811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6751:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 51813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6751:13:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 51814,
                            "name": "issuersLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51742,
                            "src": "6767:13:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6751:29:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6737:43:180"
                      },
                      {
                        "assignments": [
                          51818
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51818,
                            "name": "signer",
                            "nodeType": "VariableDeclaration",
                            "scope": 51911,
                            "src": "6788:14:180",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 51817,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6788:7:180",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51824,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 51820,
                                "name": "issuers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51749,
                                "src": "6842:7:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 51822,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 51821,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51810,
                                "src": "6850:3:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6842:12:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 51819,
                            "name": "validatorSignerAddressFromCurrentSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51697,
                            "src": "6805:36:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 51823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6805:50:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6788:67:180"
                      },
                      {
                        "assignments": [
                          51826
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51826,
                            "name": "issuer",
                            "nodeType": "VariableDeclaration",
                            "scope": 51911,
                            "src": "6863:14:180",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 51825,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6863:7:180",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51831,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 51829,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51818,
                              "src": "6905:6:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 51827,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51737,
                              "src": "6880:8:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccounts_$14468",
                                "typeString": "contract IAccounts"
                              }
                            },
                            "id": 51828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "signerToAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14366,
                            "src": "6880:24:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 51830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6880:32:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6863:49:180"
                      },
                      {
                        "assignments": [
                          51833
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51833,
                            "name": "attestation",
                            "nodeType": "VariableDeclaration",
                            "scope": 51911,
                            "src": "6921:31:180",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                              "typeString": "struct Attestations.Attestation"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 51832,
                              "name": "Attestation",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 46403,
                              "src": "6921:11:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                                "typeString": "struct Attestations.Attestation"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51838,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 51834,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51703,
                              "src": "6955:5:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                                "typeString": "struct Attestations.AttestedAddress storage pointer"
                              }
                            },
                            "id": 51835,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issuedAttestations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46414,
                            "src": "6955:24:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Attestation_$46403_storage_$",
                              "typeString": "mapping(address => struct Attestations.Attestation storage ref)"
                            }
                          },
                          "id": 51837,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51836,
                            "name": "issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51826,
                            "src": "6980:6:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6955:32:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$46403_storage",
                            "typeString": "struct Attestations.Attestation storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6921:66:180"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 51848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                              "typeString": "enum Attestations.AttestationStatus"
                            },
                            "id": 51843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51839,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51833,
                                "src": "7009:11:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                                  "typeString": "struct Attestations.Attestation storage pointer"
                                }
                              },
                              "id": 51840,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46398,
                              "src": "7009:18:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                                "typeString": "enum Attestations.AttestationStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51841,
                                "name": "AttestationStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46396,
                                "src": "7031:17:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AttestationStatus_$46396_$",
                                  "typeString": "type(enum Attestations.AttestationStatus)"
                                }
                              },
                              "id": 51842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "None",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7031:22:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                                "typeString": "enum Attestations.AttestationStatus"
                              }
                            },
                            "src": "7009:44:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51846,
                                "name": "issuer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51826,
                                "src": "7105:6:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 51844,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51737,
                                "src": "7065:8:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAccounts_$14468",
                                  "typeString": "contract IAccounts"
                                }
                              },
                              "id": 51845,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasAuthorizedAttestationSigner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14408,
                              "src": "7065:39:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 51847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7065:47:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7009:103:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 51895,
                        "nodeType": "IfStatement",
                        "src": "6996:610:180",
                        "trueBody": {
                          "id": 51894,
                          "nodeType": "Block",
                          "src": "7121:485:180",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 51849,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51786,
                                  "src": "7131:12:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 51852,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7163:1:180",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51850,
                                      "name": "currentIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51786,
                                      "src": "7146:12:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 51851,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 203,
                                    "src": "7146:16:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 51853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7146:19:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7131:34:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51855,
                              "nodeType": "ExpressionStatement",
                              "src": "7131:34:180"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51856,
                                    "name": "attestation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51833,
                                    "src": "7175:11:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                                      "typeString": "struct Attestations.Attestation storage pointer"
                                    }
                                  },
                                  "id": 51858,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46398,
                                  "src": "7175:18:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                                    "typeString": "enum Attestations.AttestationStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51859,
                                    "name": "AttestationStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46396,
                                    "src": "7196:17:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_AttestationStatus_$46396_$",
                                      "typeString": "type(enum Attestations.AttestationStatus)"
                                    }
                                  },
                                  "id": 51860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Incomplete",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7196:28:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                                    "typeString": "enum Attestations.AttestationStatus"
                                  }
                                },
                                "src": "7175:49:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                                  "typeString": "enum Attestations.AttestationStatus"
                                }
                              },
                              "id": 51862,
                              "nodeType": "ExpressionStatement",
                              "src": "7175:49:180"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51863,
                                    "name": "attestation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51833,
                                    "src": "7234:11:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                                      "typeString": "struct Attestations.Attestation storage pointer"
                                    }
                                  },
                                  "id": 51865,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "blockNumber",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46400,
                                  "src": "7234:23:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51866,
                                    "name": "unselectedRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51713,
                                    "src": "7260:17:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                                      "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                    }
                                  },
                                  "id": 51867,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "blockNumber",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46417,
                                  "src": "7260:29:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "7234:55:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 51869,
                              "nodeType": "ExpressionStatement",
                              "src": "7234:55:180"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51870,
                                    "name": "attestation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51833,
                                    "src": "7299:11:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Attestation_$46403_storage_ptr",
                                      "typeString": "struct Attestations.Attestation storage pointer"
                                    }
                                  },
                                  "id": 51872,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "attestationRequestFeeToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46402,
                                  "src": "7299:38:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51873,
                                    "name": "unselectedRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51713,
                                    "src": "7340:17:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                                      "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                    }
                                  },
                                  "id": 51874,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "attestationRequestFeeToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46421,
                                  "src": "7340:44:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7299:85:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 51876,
                              "nodeType": "ExpressionStatement",
                              "src": "7299:85:180"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 51882,
                                    "name": "issuer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51826,
                                    "src": "7421:6:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51877,
                                      "name": "state",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51703,
                                      "src": "7394:5:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AttestedAddress_$46415_storage_ptr",
                                        "typeString": "struct Attestations.AttestedAddress storage pointer"
                                      }
                                    },
                                    "id": 51880,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selectedIssuers",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46410,
                                    "src": "7394:21:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 51881,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7394:26:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) returns (uint256)"
                                  }
                                },
                                "id": 51883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7394:34:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51884,
                              "nodeType": "ExpressionStatement",
                              "src": "7394:34:180"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 51886,
                                    "name": "identifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51699,
                                    "src": "7481:10:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51887,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59923,
                                      "src": "7503:3:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 51888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "7503:10:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 51889,
                                    "name": "issuer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51826,
                                    "src": "7525:6:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51890,
                                      "name": "unselectedRequest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51713,
                                      "src": "7543:17:180",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                                        "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                      }
                                    },
                                    "id": 51891,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "attestationRequestFeeToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46421,
                                    "src": "7543:44:180",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 51885,
                                  "name": "AttestationIssuerSelected",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46480,
                                  "src": "7444:25:180",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address,address)"
                                  }
                                },
                                "id": 51892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7444:153:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 51893,
                              "nodeType": "EmitStatement",
                              "src": "7439:158:180"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 51896,
                            "name": "issuersLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51742,
                            "src": "7734:13:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 51899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7768:1:180",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 51897,
                                "name": "issuersLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51742,
                                "src": "7750:13:180",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 219,
                              "src": "7750:17:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 51900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7750:20:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7734:36:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51902,
                        "nodeType": "ExpressionStatement",
                        "src": "7734:36:180"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51903,
                              "name": "issuers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51749,
                              "src": "7778:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 51905,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51904,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51810,
                              "src": "7786:3:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7778:12:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51906,
                              "name": "issuers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51749,
                              "src": "7793:7:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 51908,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51907,
                              "name": "issuersLength",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51742,
                              "src": "7801:13:180",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7793:22:180",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7778:37:180",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51910,
                        "nodeType": "ExpressionStatement",
                        "src": "7778:37:180"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 51789,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51786,
                      "src": "6569:12:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51790,
                        "name": "unselectedRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51713,
                        "src": "6584:17:180",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46422_storage_ptr",
                          "typeString": "struct Attestations.UnselectedRequest storage pointer"
                        }
                      },
                      "id": 51791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attestationsRequested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46419,
                      "src": "6584:39:180",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6569:54:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51912,
                  "nodeType": "WhileStatement",
                  "src": "6562:1260:180"
                }
              ]
            },
            "documentation": "@notice Adds additional attestations given the current randomness.\n@param identifier The hash of the identifier to be attested.",
            "id": 51914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addIncompleteAttestations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51699,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51914,
                  "src": "5708:18:180",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51698,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5708:7:180",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5707:20:180"
            },
            "returnParameters": {
              "id": 51701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5737:0:180"
            },
            "scope": 51915,
            "src": "5673:2153:180",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 51916,
        "src": "286:7542:180"
      }
    ],
    "src": "0:7829:180"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/identity/test/AttestationsTest.sol",
      "exportedSymbols": {
        "AttestationsTest": [
          51915
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 51311,
        "name": "PragmaDirective",
        "src": "0:24:180"
      },
      {
        "attributes": {
          "SourceUnit": 47634,
          "absolutePath": "project:/contracts/identity/Attestations.sol",
          "file": "../Attestations.sol",
          "scope": 51916,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 51312,
        "name": "ImportDirective",
        "src": "26:29:180"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            9570,
            13582,
            14594,
            19736,
            47633,
            50978
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            51915,
            47633,
            19736,
            13582,
            9570,
            481,
            26,
            14594,
            50978
          ],
          "name": "AttestationsTest",
          "scope": 51916
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Attestations",
                  "referencedDeclaration": 47633,
                  "type": "contract Attestations"
                },
                "id": 51313,
                "name": "UserDefinedTypeName",
                "src": "315:12:180"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "74727565",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "bool",
                  "type": "bool",
                  "value": "true"
                },
                "id": 51314,
                "name": "Literal",
                "src": "328:4:180"
              }
            ],
            "id": 51315,
            "name": "InheritanceSpecifier",
            "src": "315:18:180"
          },
          {
            "attributes": {
              "constant": false,
              "name": "__testValidators",
              "scope": 51915,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 51316,
                    "name": "ElementaryTypeName",
                    "src": "338:7:180"
                  }
                ],
                "id": 51317,
                "name": "ArrayTypeName",
                "src": "338:9:180"
              }
            ],
            "id": 51318,
            "name": "VariableDeclaration",
            "src": "338:34:180"
          },
          {
            "attributes": {
              "documentation": "@notice Commit to the attestation request of a hashed identifier.\n@param identifier The hash of the identifier to be attested.\n@param attestationsRequested The number of requested attestations for this request.\n@param attestationRequestFeeToken The address of the token with which the attestation fee will\nbe paid.\n@dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\nto prevent folks from attacking validators by requesting attestations that they do not\ncomplete, and to increase the cost of validators attempting to manipulate the attestations\nprotocol.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "request",
              "scope": 51915,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51475,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51319,
                        "name": "ElementaryTypeName",
                        "src": "1170:7:180"
                      }
                    ],
                    "id": 51320,
                    "name": "VariableDeclaration",
                    "src": "1170:18:180"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "attestationsRequested",
                      "scope": 51475,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 51321,
                        "name": "ElementaryTypeName",
                        "src": "1194:7:180"
                      }
                    ],
                    "id": 51322,
                    "name": "VariableDeclaration",
                    "src": "1194:29:180"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "attestationRequestFeeToken",
                      "scope": 51475,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 51323,
                        "name": "ElementaryTypeName",
                        "src": "1229:7:180"
                      }
                    ],
                    "id": 51324,
                    "name": "VariableDeclaration",
                    "src": "1229:34:180"
                  }
                ],
                "id": 51325,
                "name": "ParameterList",
                "src": "1164:103:180"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51328,
                "name": "ParameterList",
                "src": "1290:0:180"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 19727,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 51326,
                    "name": "Identifier",
                    "src": "1277:12:180"
                  }
                ],
                "id": 51327,
                "name": "ModifierInvocation",
                "src": "1277:12:180"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0fbab06e34ed13c693595be2183c86d3418ffc9113774673c63c7f72797b67ec",
                                  "typeString": "literal_string \"Invalid attestationRequestFeeToken\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51329,
                            "name": "Identifier",
                            "src": "1296:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46448,
                                      "type": "mapping(address => uint256)",
                                      "value": "attestationRequestFees"
                                    },
                                    "id": 51330,
                                    "name": "Identifier",
                                    "src": "1311:22:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51324,
                                      "type": "address",
                                      "value": "attestationRequestFeeToken"
                                    },
                                    "id": 51331,
                                    "name": "Identifier",
                                    "src": "1334:26:180"
                                  }
                                ],
                                "id": 51332,
                                "name": "IndexAccess",
                                "src": "1311:50:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 51333,
                                "name": "Literal",
                                "src": "1364:1:180"
                              }
                            ],
                            "id": 51334,
                            "name": "BinaryOperation",
                            "src": "1311:54:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "496e76616c6964206174746573746174696f6e52657175657374466565546f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Invalid attestationRequestFeeToken\"",
                              "value": "Invalid attestationRequestFeeToken"
                            },
                            "id": 51335,
                            "name": "Literal",
                            "src": "1373:36:180"
                          }
                        ],
                        "id": 51336,
                        "name": "FunctionCall",
                        "src": "1296:119:180"
                      }
                    ],
                    "id": 51337,
                    "name": "ExpressionStatement",
                    "src": "1296:119:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8f5394185b740e608ff56aadc9b35a71ad0bd15ed5fd197afb4e85372abf8f00",
                                  "typeString": "literal_string \"Transfer of attestation request fees failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51338,
                            "name": "Identifier",
                            "src": "1421:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 938,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract IERC20",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 955,
                                          "type": "type(contract IERC20)",
                                          "value": "IERC20"
                                        },
                                        "id": 51339,
                                        "name": "Identifier",
                                        "src": "1436:6:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51324,
                                          "type": "address",
                                          "value": "attestationRequestFeeToken"
                                        },
                                        "id": 51340,
                                        "name": "Identifier",
                                        "src": "1443:26:180"
                                      }
                                    ],
                                    "id": 51341,
                                    "name": "FunctionCall",
                                    "src": "1436:34:180"
                                  }
                                ],
                                "id": 51342,
                                "name": "MemberAccess",
                                "src": "1436:47:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59923,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 51343,
                                    "name": "Identifier",
                                    "src": "1493:3:180"
                                  }
                                ],
                                "id": 51344,
                                "name": "MemberAccess",
                                "src": "1493:10:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_AttestationsTest_$51915",
                                          "typeString": "contract AttestationsTest"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 51345,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1513:7:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 60319,
                                      "type": "contract AttestationsTest",
                                      "value": "this"
                                    },
                                    "id": 51346,
                                    "name": "Identifier",
                                    "src": "1521:4:180"
                                  }
                                ],
                                "id": 51347,
                                "name": "FunctionCall",
                                "src": "1513:13:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "mul",
                                      "referencedDeclaration": 280,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46448,
                                              "type": "mapping(address => uint256)",
                                              "value": "attestationRequestFees"
                                            },
                                            "id": 51348,
                                            "name": "Identifier",
                                            "src": "1536:22:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51324,
                                              "type": "address",
                                              "value": "attestationRequestFeeToken"
                                            },
                                            "id": 51349,
                                            "name": "Identifier",
                                            "src": "1559:26:180"
                                          }
                                        ],
                                        "id": 51350,
                                        "name": "IndexAccess",
                                        "src": "1536:50:180"
                                      }
                                    ],
                                    "id": 51351,
                                    "name": "MemberAccess",
                                    "src": "1536:54:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51322,
                                      "type": "uint256",
                                      "value": "attestationsRequested"
                                    },
                                    "id": 51352,
                                    "name": "Identifier",
                                    "src": "1591:21:180"
                                  }
                                ],
                                "id": 51353,
                                "name": "FunctionCall",
                                "src": "1536:77:180"
                              }
                            ],
                            "id": 51354,
                            "name": "FunctionCall",
                            "src": "1436:185:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5472616e73666572206f66206174746573746174696f6e20726571756573742066656573206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Transfer of attestation request fees failed\"",
                              "value": "Transfer of attestation request fees failed"
                            },
                            "id": 51355,
                            "name": "Literal",
                            "src": "1629:45:180"
                          }
                        ],
                        "id": 51356,
                        "name": "FunctionCall",
                        "src": "1421:259:180"
                      }
                    ],
                    "id": 51357,
                    "name": "ExpressionStatement",
                    "src": "1421:259:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6339f4898dba82a980125bd68be7797a9a8a24b1641e6a0bad0facf975bdb393",
                                  "typeString": "literal_string \"You have to request at least 1 attestation\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51358,
                            "name": "Identifier",
                            "src": "1687:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51322,
                                  "type": "uint256",
                                  "value": "attestationsRequested"
                                },
                                "id": 51359,
                                "name": "Identifier",
                                "src": "1695:21:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 51360,
                                "name": "Literal",
                                "src": "1719:1:180"
                              }
                            ],
                            "id": 51361,
                            "name": "BinaryOperation",
                            "src": "1695:25:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "596f75206861766520746f2072657175657374206174206c656173742031206174746573746174696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"You have to request at least 1 attestation\"",
                              "value": "You have to request at least 1 attestation"
                            },
                            "id": 51362,
                            "name": "Literal",
                            "src": "1722:44:180"
                          }
                        ],
                        "id": 51363,
                        "name": "FunctionCall",
                        "src": "1687:80:180"
                      }
                    ],
                    "id": 51364,
                    "name": "ExpressionStatement",
                    "src": "1687:80:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_559f027ce8dce93c172edfe918d5248da9b0bbe7254143b010c3b7511882dd37",
                                  "typeString": "literal_string \"Too many attestations requested\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51365,
                            "name": "Identifier",
                            "src": "1773:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51322,
                                  "type": "uint256",
                                  "value": "attestationsRequested"
                                },
                                "id": 51366,
                                "name": "Identifier",
                                "src": "1781:21:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46444,
                                  "type": "uint256",
                                  "value": "maxAttestations"
                                },
                                "id": 51367,
                                "name": "Identifier",
                                "src": "1806:15:180"
                              }
                            ],
                            "id": 51368,
                            "name": "BinaryOperation",
                            "src": "1781:40:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546f6f206d616e79206174746573746174696f6e7320726571756573746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Too many attestations requested\"",
                              "value": "Too many attestations requested"
                            },
                            "id": 51369,
                            "name": "Literal",
                            "src": "1823:33:180"
                          }
                        ],
                        "id": 51370,
                        "name": "FunctionCall",
                        "src": "1773:84:180"
                      }
                    ],
                    "id": 51371,
                    "name": "ExpressionStatement",
                    "src": "1773:84:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51373
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51474,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.IdentifierState",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IdentifierState",
                              "referencedDeclaration": 46434,
                              "type": "struct Attestations.IdentifierState"
                            },
                            "id": 51372,
                            "name": "UserDefinedTypeName",
                            "src": "1864:15:180"
                          }
                        ],
                        "id": 51373,
                        "name": "VariableDeclaration",
                        "src": "1864:29:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.IdentifierState storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46438,
                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                              "value": "identifiers"
                            },
                            "id": 51374,
                            "name": "Identifier",
                            "src": "1896:11:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51320,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51375,
                            "name": "Identifier",
                            "src": "1908:10:180"
                          }
                        ],
                        "id": 51376,
                        "name": "IndexAccess",
                        "src": "1896:23:180"
                      }
                    ],
                    "id": 51377,
                    "name": "VariableDeclarationStatement",
                    "src": "1864:55:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_258b2694618df46c97b26596a48755d13ebcf705afc06b4350a78047cd959c93",
                                  "typeString": "literal_string \"There exists an unexpired, unselected attestation request\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51378,
                            "name": "Identifier",
                            "src": "1926:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "||",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "||",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46417,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Attestations.UnselectedRequest storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "unselectedRequests",
                                                  "referencedDeclaration": 46433,
                                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51373,
                                                      "type": "struct Attestations.IdentifierState storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51379,
                                                    "name": "Identifier",
                                                    "src": "1941:5:180"
                                                  }
                                                ],
                                                "id": 51380,
                                                "name": "MemberAccess",
                                                "src": "1941:24:180"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 59923,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 51381,
                                                    "name": "Identifier",
                                                    "src": "1966:3:180"
                                                  }
                                                ],
                                                "id": 51382,
                                                "name": "MemberAccess",
                                                "src": "1966:10:180"
                                              }
                                            ],
                                            "id": 51383,
                                            "name": "IndexAccess",
                                            "src": "1941:36:180"
                                          }
                                        ],
                                        "id": 51384,
                                        "name": "MemberAccess",
                                        "src": "1941:48:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 51385,
                                        "name": "Literal",
                                        "src": "1993:1:180"
                                      }
                                    ],
                                    "id": 51386,
                                    "name": "BinaryOperation",
                                    "src": "1941:53:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 47592,
                                          "type": "function (uint32) view returns (bool)",
                                          "value": "isAttestationExpired"
                                        },
                                        "id": 51387,
                                        "name": "Identifier",
                                        "src": "2006:20:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46417,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Attestations.UnselectedRequest storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "unselectedRequests",
                                                  "referencedDeclaration": 46433,
                                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51373,
                                                      "type": "struct Attestations.IdentifierState storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51388,
                                                    "name": "Identifier",
                                                    "src": "2027:5:180"
                                                  }
                                                ],
                                                "id": 51389,
                                                "name": "MemberAccess",
                                                "src": "2027:24:180"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 59923,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 51390,
                                                    "name": "Identifier",
                                                    "src": "2052:3:180"
                                                  }
                                                ],
                                                "id": 51391,
                                                "name": "MemberAccess",
                                                "src": "2052:10:180"
                                              }
                                            ],
                                            "id": 51392,
                                            "name": "IndexAccess",
                                            "src": "2027:36:180"
                                          }
                                        ],
                                        "id": 51393,
                                        "name": "MemberAccess",
                                        "src": "2027:48:180"
                                      }
                                    ],
                                    "id": 51394,
                                    "name": "FunctionCall",
                                    "src": "2006:70:180"
                                  }
                                ],
                                "id": 51395,
                                "name": "BinaryOperation",
                                "src": "1941:135:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 47632,
                                          "type": "function (uint256) view returns (bool)",
                                          "value": "isAttestationRequestSelectable"
                                        },
                                        "id": 51396,
                                        "name": "Identifier",
                                        "src": "2089:30:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46417,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Attestations.UnselectedRequest storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "unselectedRequests",
                                                  "referencedDeclaration": 46433,
                                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51373,
                                                      "type": "struct Attestations.IdentifierState storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51397,
                                                    "name": "Identifier",
                                                    "src": "2120:5:180"
                                                  }
                                                ],
                                                "id": 51398,
                                                "name": "MemberAccess",
                                                "src": "2120:24:180"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 59923,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 51399,
                                                    "name": "Identifier",
                                                    "src": "2145:3:180"
                                                  }
                                                ],
                                                "id": 51400,
                                                "name": "MemberAccess",
                                                "src": "2145:10:180"
                                              }
                                            ],
                                            "id": 51401,
                                            "name": "IndexAccess",
                                            "src": "2120:36:180"
                                          }
                                        ],
                                        "id": 51402,
                                        "name": "MemberAccess",
                                        "src": "2120:48:180"
                                      }
                                    ],
                                    "id": 51403,
                                    "name": "FunctionCall",
                                    "src": "2089:80:180"
                                  }
                                ],
                                "id": 51404,
                                "name": "UnaryOperation",
                                "src": "2088:81:180"
                              }
                            ],
                            "id": 51405,
                            "name": "BinaryOperation",
                            "src": "1941:228:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686572652065786973747320616e20756e657870697265642c20756e73656c6563746564206174746573746174696f6e2072657175657374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"There exists an unexpired, unselected attestation request\"",
                              "value": "There exists an unexpired, unselected attestation request"
                            },
                            "id": 51406,
                            "name": "Literal",
                            "src": "2177:59:180"
                          }
                        ],
                        "id": 51407,
                        "name": "FunctionCall",
                        "src": "1926:316:180"
                      }
                    ],
                    "id": 51408,
                    "name": "ExpressionStatement",
                    "src": "1926:316:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "blockNumber",
                              "referencedDeclaration": 46417,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.UnselectedRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "unselectedRequests",
                                      "referencedDeclaration": 46433,
                                      "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51373,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51409,
                                        "name": "Identifier",
                                        "src": "2249:5:180"
                                      }
                                    ],
                                    "id": 51413,
                                    "name": "MemberAccess",
                                    "src": "2249:24:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51411,
                                        "name": "Identifier",
                                        "src": "2274:3:180"
                                      }
                                    ],
                                    "id": 51412,
                                    "name": "MemberAccess",
                                    "src": "2274:10:180"
                                  }
                                ],
                                "id": 51414,
                                "name": "IndexAccess",
                                "src": "2249:36:180"
                              }
                            ],
                            "id": 51415,
                            "name": "MemberAccess",
                            "src": "2249:48:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59913,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 51416,
                                        "name": "Identifier",
                                        "src": "2300:5:180"
                                      }
                                    ],
                                    "id": 51417,
                                    "name": "MemberAccess",
                                    "src": "2300:12:180"
                                  }
                                ],
                                "id": 51418,
                                "name": "MemberAccess",
                                "src": "2300:21:180"
                              }
                            ],
                            "id": 51419,
                            "name": "FunctionCall",
                            "src": "2300:23:180"
                          }
                        ],
                        "id": 51420,
                        "name": "Assignment",
                        "src": "2249:74:180"
                      }
                    ],
                    "id": 51421,
                    "name": "ExpressionStatement",
                    "src": "2249:74:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "attestationsRequested",
                              "referencedDeclaration": 46419,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.UnselectedRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "unselectedRequests",
                                      "referencedDeclaration": 46433,
                                      "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51373,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51422,
                                        "name": "Identifier",
                                        "src": "2329:5:180"
                                      }
                                    ],
                                    "id": 51426,
                                    "name": "MemberAccess",
                                    "src": "2329:24:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51424,
                                        "name": "Identifier",
                                        "src": "2354:3:180"
                                      }
                                    ],
                                    "id": 51425,
                                    "name": "MemberAccess",
                                    "src": "2354:10:180"
                                  }
                                ],
                                "id": 51427,
                                "name": "IndexAccess",
                                "src": "2329:36:180"
                              }
                            ],
                            "id": 51428,
                            "name": "MemberAccess",
                            "src": "2329:58:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51322,
                                      "type": "uint256",
                                      "value": "attestationsRequested"
                                    },
                                    "id": 51429,
                                    "name": "Identifier",
                                    "src": "2390:21:180"
                                  }
                                ],
                                "id": 51430,
                                "name": "MemberAccess",
                                "src": "2390:30:180"
                              }
                            ],
                            "id": 51431,
                            "name": "FunctionCall",
                            "src": "2390:32:180"
                          }
                        ],
                        "id": 51432,
                        "name": "Assignment",
                        "src": "2329:93:180"
                      }
                    ],
                    "id": 51433,
                    "name": "ExpressionStatement",
                    "src": "2329:93:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "attestationRequestFeeToken",
                              "referencedDeclaration": 46421,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.UnselectedRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "unselectedRequests",
                                      "referencedDeclaration": 46433,
                                      "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51373,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51434,
                                        "name": "Identifier",
                                        "src": "2428:5:180"
                                      }
                                    ],
                                    "id": 51438,
                                    "name": "MemberAccess",
                                    "src": "2428:24:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51436,
                                        "name": "Identifier",
                                        "src": "2453:3:180"
                                      }
                                    ],
                                    "id": 51437,
                                    "name": "MemberAccess",
                                    "src": "2453:10:180"
                                  }
                                ],
                                "id": 51439,
                                "name": "IndexAccess",
                                "src": "2428:36:180"
                              }
                            ],
                            "id": 51440,
                            "name": "MemberAccess",
                            "src": "2428:63:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51324,
                              "type": "address",
                              "value": "attestationRequestFeeToken"
                            },
                            "id": 51441,
                            "name": "Identifier",
                            "src": "2494:26:180"
                          }
                        ],
                        "id": 51442,
                        "name": "Assignment",
                        "src": "2428:92:180"
                      }
                    ],
                    "id": 51443,
                    "name": "ExpressionStatement",
                    "src": "2428:92:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "requested",
                              "referencedDeclaration": 46405,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.AttestedAddress storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "attestations",
                                      "referencedDeclaration": 46429,
                                      "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51373,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51444,
                                        "name": "Identifier",
                                        "src": "2527:5:180"
                                      }
                                    ],
                                    "id": 51448,
                                    "name": "MemberAccess",
                                    "src": "2527:18:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51446,
                                        "name": "Identifier",
                                        "src": "2546:3:180"
                                      }
                                    ],
                                    "id": 51447,
                                    "name": "MemberAccess",
                                    "src": "2546:10:180"
                                  }
                                ],
                                "id": 51449,
                                "name": "IndexAccess",
                                "src": "2527:30:180"
                              }
                            ],
                            "id": 51450,
                            "name": "MemberAccess",
                            "src": "2527:40:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "add",
                                          "referencedDeclaration": 203,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint32",
                                                      "typeString": "uint32"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(uint256)",
                                                  "value": "uint256"
                                                },
                                                "id": 51451,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "2570:7:180"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "requested",
                                                  "referencedDeclaration": 46405,
                                                  "type": "uint32"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Attestations.AttestedAddress storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "attestations",
                                                          "referencedDeclaration": 46429,
                                                          "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 51373,
                                                              "type": "struct Attestations.IdentifierState storage pointer",
                                                              "value": "state"
                                                            },
                                                            "id": 51452,
                                                            "name": "Identifier",
                                                            "src": "2578:5:180"
                                                          }
                                                        ],
                                                        "id": 51453,
                                                        "name": "MemberAccess",
                                                        "src": "2578:18:180"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "sender",
                                                          "referencedDeclaration": null,
                                                          "type": "address payable"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 59923,
                                                              "type": "msg",
                                                              "value": "msg"
                                                            },
                                                            "id": 51454,
                                                            "name": "Identifier",
                                                            "src": "2597:3:180"
                                                          }
                                                        ],
                                                        "id": 51455,
                                                        "name": "MemberAccess",
                                                        "src": "2597:10:180"
                                                      }
                                                    ],
                                                    "id": 51456,
                                                    "name": "IndexAccess",
                                                    "src": "2578:30:180"
                                                  }
                                                ],
                                                "id": 51457,
                                                "name": "MemberAccess",
                                                "src": "2578:40:180"
                                              }
                                            ],
                                            "id": 51458,
                                            "name": "FunctionCall",
                                            "src": "2570:49:180"
                                          }
                                        ],
                                        "id": 51459,
                                        "name": "MemberAccess",
                                        "src": "2570:60:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51322,
                                          "type": "uint256",
                                          "value": "attestationsRequested"
                                        },
                                        "id": 51460,
                                        "name": "Identifier",
                                        "src": "2631:21:180"
                                      }
                                    ],
                                    "id": 51461,
                                    "name": "FunctionCall",
                                    "src": "2570:83:180"
                                  }
                                ],
                                "id": 51462,
                                "name": "MemberAccess",
                                "src": "2570:99:180"
                              }
                            ],
                            "id": 51463,
                            "name": "FunctionCall",
                            "src": "2570:101:180"
                          }
                        ],
                        "id": 51464,
                        "name": "Assignment",
                        "src": "2527:144:180"
                      }
                    ],
                    "id": 51465,
                    "name": "ExpressionStatement",
                    "src": "2527:144:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46470,
                              "type": "function (bytes32,address,uint256,address)",
                              "value": "AttestationsRequested"
                            },
                            "id": 51466,
                            "name": "Identifier",
                            "src": "2683:21:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51320,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51467,
                            "name": "Identifier",
                            "src": "2712:10:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51468,
                                "name": "Identifier",
                                "src": "2730:3:180"
                              }
                            ],
                            "id": 51469,
                            "name": "MemberAccess",
                            "src": "2730:10:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51322,
                              "type": "uint256",
                              "value": "attestationsRequested"
                            },
                            "id": 51470,
                            "name": "Identifier",
                            "src": "2748:21:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51324,
                              "type": "address",
                              "value": "attestationRequestFeeToken"
                            },
                            "id": 51471,
                            "name": "Identifier",
                            "src": "2777:26:180"
                          }
                        ],
                        "id": 51472,
                        "name": "FunctionCall",
                        "src": "2683:126:180"
                      }
                    ],
                    "id": 51473,
                    "name": "EmitStatement",
                    "src": "2678:131:180"
                  }
                ],
                "id": 51474,
                "name": "Block",
                "src": "1290:1524:180"
              }
            ],
            "id": 51475,
            "name": "FunctionDefinition",
            "src": "1148:1666:180"
          },
          {
            "attributes": {
              "documentation": "@notice Selects the issuers for the most recent attestation request.\n@param identifier The hash of the identifier to be attested.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "selectIssuers",
              "scope": 51915,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51523,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51476,
                        "name": "ElementaryTypeName",
                        "src": "2993:7:180"
                      }
                    ],
                    "id": 51477,
                    "name": "VariableDeclaration",
                    "src": "2993:18:180"
                  }
                ],
                "id": 51478,
                "name": "ParameterList",
                "src": "2992:20:180"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51479,
                "name": "ParameterList",
                "src": "3022:0:180"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        51481
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51522,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.IdentifierState",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IdentifierState",
                              "referencedDeclaration": 46434,
                              "type": "struct Attestations.IdentifierState"
                            },
                            "id": 51480,
                            "name": "UserDefinedTypeName",
                            "src": "3028:15:180"
                          }
                        ],
                        "id": 51481,
                        "name": "VariableDeclaration",
                        "src": "3028:29:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.IdentifierState storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46438,
                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                              "value": "identifiers"
                            },
                            "id": 51482,
                            "name": "Identifier",
                            "src": "3060:11:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51477,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51483,
                            "name": "Identifier",
                            "src": "3072:10:180"
                          }
                        ],
                        "id": 51484,
                        "name": "IndexAccess",
                        "src": "3060:23:180"
                      }
                    ],
                    "id": 51485,
                    "name": "VariableDeclarationStatement",
                    "src": "3028:55:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bf2336bcc88f66654106a02094418f163fe78eff0542e86c1e6abfe990b3a169",
                                  "typeString": "literal_string \"No unselected attestation request to select issuers for\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51486,
                            "name": "Identifier",
                            "src": "3090:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "blockNumber",
                                  "referencedDeclaration": 46417,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Attestations.UnselectedRequest storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "unselectedRequests",
                                          "referencedDeclaration": 46433,
                                          "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51481,
                                              "type": "struct Attestations.IdentifierState storage pointer",
                                              "value": "state"
                                            },
                                            "id": 51487,
                                            "name": "Identifier",
                                            "src": "3105:5:180"
                                          }
                                        ],
                                        "id": 51488,
                                        "name": "MemberAccess",
                                        "src": "3105:24:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 59923,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 51489,
                                            "name": "Identifier",
                                            "src": "3130:3:180"
                                          }
                                        ],
                                        "id": 51490,
                                        "name": "MemberAccess",
                                        "src": "3130:10:180"
                                      }
                                    ],
                                    "id": 51491,
                                    "name": "IndexAccess",
                                    "src": "3105:36:180"
                                  }
                                ],
                                "id": 51492,
                                "name": "MemberAccess",
                                "src": "3105:48:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 51493,
                                "name": "Literal",
                                "src": "3156:1:180"
                              }
                            ],
                            "id": 51494,
                            "name": "BinaryOperation",
                            "src": "3105:52:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f20756e73656c6563746564206174746573746174696f6e207265717565737420746f2073656c656374206973737565727320666f72",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"No unselected attestation request to select issuers for\"",
                              "value": "No unselected attestation request to select issuers for"
                            },
                            "id": 51495,
                            "name": "Literal",
                            "src": "3165:57:180"
                          }
                        ],
                        "id": 51496,
                        "name": "FunctionCall",
                        "src": "3090:138:180"
                      }
                    ],
                    "id": 51497,
                    "name": "ExpressionStatement",
                    "src": "3090:138:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b0f527738e002968b2ccbb3a0e21bea4cc9d35abeeb3a84053f4cccd53b5eb9f",
                                  "typeString": "literal_string \"The attestation request has expired\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51498,
                            "name": "Identifier",
                            "src": "3235:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 47592,
                                      "type": "function (uint32) view returns (bool)",
                                      "value": "isAttestationExpired"
                                    },
                                    "id": 51499,
                                    "name": "Identifier",
                                    "src": "3251:20:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "blockNumber",
                                      "referencedDeclaration": 46417,
                                      "type": "uint32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Attestations.UnselectedRequest storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "unselectedRequests",
                                              "referencedDeclaration": 46433,
                                              "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51481,
                                                  "type": "struct Attestations.IdentifierState storage pointer",
                                                  "value": "state"
                                                },
                                                "id": 51500,
                                                "name": "Identifier",
                                                "src": "3272:5:180"
                                              }
                                            ],
                                            "id": 51501,
                                            "name": "MemberAccess",
                                            "src": "3272:24:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 59923,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 51502,
                                                "name": "Identifier",
                                                "src": "3297:3:180"
                                              }
                                            ],
                                            "id": 51503,
                                            "name": "MemberAccess",
                                            "src": "3297:10:180"
                                          }
                                        ],
                                        "id": 51504,
                                        "name": "IndexAccess",
                                        "src": "3272:36:180"
                                      }
                                    ],
                                    "id": 51505,
                                    "name": "MemberAccess",
                                    "src": "3272:48:180"
                                  }
                                ],
                                "id": 51506,
                                "name": "FunctionCall",
                                "src": "3251:70:180"
                              }
                            ],
                            "id": 51507,
                            "name": "UnaryOperation",
                            "src": "3250:71:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546865206174746573746174696f6e2072657175657374206861732065787069726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The attestation request has expired\"",
                              "value": "The attestation request has expired"
                            },
                            "id": 51508,
                            "name": "Literal",
                            "src": "3329:37:180"
                          }
                        ],
                        "id": 51509,
                        "name": "FunctionCall",
                        "src": "3235:137:180"
                      }
                    ],
                    "id": 51510,
                    "name": "ExpressionStatement",
                    "src": "3235:137:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51914,
                              "type": "function (bytes32)",
                              "value": "addIncompleteAttestations"
                            },
                            "id": 51511,
                            "name": "Identifier",
                            "src": "3379:25:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51477,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51512,
                            "name": "Identifier",
                            "src": "3405:10:180"
                          }
                        ],
                        "id": 51513,
                        "name": "FunctionCall",
                        "src": "3379:37:180"
                      }
                    ],
                    "id": 51514,
                    "name": "ExpressionStatement",
                    "src": "3379:37:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Attestations.UnselectedRequest storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "unselectedRequests",
                                  "referencedDeclaration": 46433,
                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51481,
                                      "type": "struct Attestations.IdentifierState storage pointer",
                                      "value": "state"
                                    },
                                    "id": 51515,
                                    "name": "Identifier",
                                    "src": "3429:5:180"
                                  }
                                ],
                                "id": 51516,
                                "name": "MemberAccess",
                                "src": "3429:24:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59923,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 51517,
                                    "name": "Identifier",
                                    "src": "3454:3:180"
                                  }
                                ],
                                "id": 51518,
                                "name": "MemberAccess",
                                "src": "3454:10:180"
                              }
                            ],
                            "id": 51519,
                            "name": "IndexAccess",
                            "src": "3429:36:180"
                          }
                        ],
                        "id": 51520,
                        "name": "UnaryOperation",
                        "src": "3422:43:180"
                      }
                    ],
                    "id": 51521,
                    "name": "ExpressionStatement",
                    "src": "3422:43:180"
                  }
                ],
                "id": 51522,
                "name": "Block",
                "src": "3022:448:180"
              }
            ],
            "id": 51523,
            "name": "FunctionDefinition",
            "src": "2970:500:180"
          },
          {
            "attributes": {
              "documentation": "@notice Submit the secret message sent by the issuer to complete the attestation request.\n@param identifier The hash of the identifier for this attestation.\n@param v The recovery id of the incoming ECDSA signature.\n@param r Output value r of the ECDSA signature.\n@param s Output value s of the ECDSA signature.\n@dev Throws if there is no matching outstanding attestation request.\n@dev Throws if the attestation window has passed.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "complete",
              "scope": 51915,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51665,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51524,
                        "name": "ElementaryTypeName",
                        "src": "3969:7:180"
                      }
                    ],
                    "id": 51525,
                    "name": "VariableDeclaration",
                    "src": "3969:18:180"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "v",
                      "scope": 51665,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 51526,
                        "name": "ElementaryTypeName",
                        "src": "3989:5:180"
                      }
                    ],
                    "id": 51527,
                    "name": "VariableDeclaration",
                    "src": "3989:7:180"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "r",
                      "scope": 51665,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51528,
                        "name": "ElementaryTypeName",
                        "src": "3998:7:180"
                      }
                    ],
                    "id": 51529,
                    "name": "VariableDeclaration",
                    "src": "3998:9:180"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "s",
                      "scope": 51665,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51530,
                        "name": "ElementaryTypeName",
                        "src": "4009:7:180"
                      }
                    ],
                    "id": 51531,
                    "name": "VariableDeclaration",
                    "src": "4009:9:180"
                  }
                ],
                "id": 51532,
                "name": "ParameterList",
                "src": "3968:51:180"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51533,
                "name": "ParameterList",
                "src": "4029:0:180"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        51535
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "issuer",
                          "scope": 51664,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 51534,
                            "name": "ElementaryTypeName",
                            "src": "4035:7:180"
                          }
                        ],
                        "id": 51535,
                        "name": "VariableDeclaration",
                        "src": "4035:14:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 47490,
                              "type": "function (bytes32,address,uint8,bytes32,bytes32) view returns (address)",
                              "value": "validateAttestationCode"
                            },
                            "id": 51536,
                            "name": "Identifier",
                            "src": "4052:23:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51525,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51537,
                            "name": "Identifier",
                            "src": "4076:10:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51538,
                                "name": "Identifier",
                                "src": "4088:3:180"
                              }
                            ],
                            "id": 51539,
                            "name": "MemberAccess",
                            "src": "4088:10:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51527,
                              "type": "uint8",
                              "value": "v"
                            },
                            "id": 51540,
                            "name": "Identifier",
                            "src": "4100:1:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51529,
                              "type": "bytes32",
                              "value": "r"
                            },
                            "id": 51541,
                            "name": "Identifier",
                            "src": "4103:1:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51531,
                              "type": "bytes32",
                              "value": "s"
                            },
                            "id": 51542,
                            "name": "Identifier",
                            "src": "4106:1:180"
                          }
                        ],
                        "id": 51543,
                        "name": "FunctionCall",
                        "src": "4052:56:180"
                      }
                    ],
                    "id": 51544,
                    "name": "VariableDeclarationStatement",
                    "src": "4035:73:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51546
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "attestation",
                          "scope": 51664,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.Attestation",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Attestation",
                              "referencedDeclaration": 46403,
                              "type": "struct Attestations.Attestation"
                            },
                            "id": 51545,
                            "name": "UserDefinedTypeName",
                            "src": "4115:11:180"
                          }
                        ],
                        "id": 51546,
                        "name": "VariableDeclaration",
                        "src": "4115:31:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.Attestation storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "issuedAttestations",
                              "referencedDeclaration": 46414,
                              "type": "mapping(address => struct Attestations.Attestation storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.AttestedAddress storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "attestations",
                                      "referencedDeclaration": 46429,
                                      "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Attestations.IdentifierState storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46438,
                                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                              "value": "identifiers"
                                            },
                                            "id": 51547,
                                            "name": "Identifier",
                                            "src": "4149:11:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51525,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 51548,
                                            "name": "Identifier",
                                            "src": "4161:10:180"
                                          }
                                        ],
                                        "id": 51549,
                                        "name": "IndexAccess",
                                        "src": "4149:23:180"
                                      }
                                    ],
                                    "id": 51550,
                                    "name": "MemberAccess",
                                    "src": "4149:43:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51551,
                                        "name": "Identifier",
                                        "src": "4193:3:180"
                                      }
                                    ],
                                    "id": 51552,
                                    "name": "MemberAccess",
                                    "src": "4193:10:180"
                                  }
                                ],
                                "id": 51553,
                                "name": "IndexAccess",
                                "src": "4149:55:180"
                              }
                            ],
                            "id": 51554,
                            "name": "MemberAccess",
                            "src": "4149:81:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51535,
                              "type": "address",
                              "value": "issuer"
                            },
                            "id": 51555,
                            "name": "Identifier",
                            "src": "4231:6:180"
                          }
                        ],
                        "id": 51556,
                        "name": "IndexAccess",
                        "src": "4149:89:180"
                      }
                    ],
                    "id": 51557,
                    "name": "VariableDeclarationStatement",
                    "src": "4115:123:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51559
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "token",
                          "scope": 51664,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 51558,
                            "name": "ElementaryTypeName",
                            "src": "4245:7:180"
                          }
                        ],
                        "id": 51559,
                        "name": "VariableDeclaration",
                        "src": "4245:13:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "attestationRequestFeeToken",
                          "referencedDeclaration": 46402,
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51546,
                              "type": "struct Attestations.Attestation storage pointer",
                              "value": "attestation"
                            },
                            "id": 51560,
                            "name": "Identifier",
                            "src": "4261:11:180"
                          }
                        ],
                        "id": 51561,
                        "name": "MemberAccess",
                        "src": "4261:38:180"
                      }
                    ],
                    "id": 51562,
                    "name": "VariableDeclarationStatement",
                    "src": "4245:54:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "blockNumber",
                              "referencedDeclaration": 46400,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51546,
                                  "type": "struct Attestations.Attestation storage pointer",
                                  "value": "attestation"
                                },
                                "id": 51563,
                                "name": "Identifier",
                                "src": "4356:11:180"
                              }
                            ],
                            "id": 51565,
                            "name": "MemberAccess",
                            "src": "4356:23:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59913,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 51566,
                                        "name": "Identifier",
                                        "src": "4382:5:180"
                                      }
                                    ],
                                    "id": 51567,
                                    "name": "MemberAccess",
                                    "src": "4382:12:180"
                                  }
                                ],
                                "id": 51568,
                                "name": "MemberAccess",
                                "src": "4382:21:180"
                              }
                            ],
                            "id": 51569,
                            "name": "FunctionCall",
                            "src": "4382:23:180"
                          }
                        ],
                        "id": 51570,
                        "name": "Assignment",
                        "src": "4356:49:180"
                      }
                    ],
                    "id": 51571,
                    "name": "ExpressionStatement",
                    "src": "4356:49:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Attestations.AttestationStatus"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 46398,
                              "type": "enum Attestations.AttestationStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51546,
                                  "type": "struct Attestations.Attestation storage pointer",
                                  "value": "attestation"
                                },
                                "id": 51572,
                                "name": "Identifier",
                                "src": "4411:11:180"
                              }
                            ],
                            "id": 51574,
                            "name": "MemberAccess",
                            "src": "4411:18:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Complete",
                              "referencedDeclaration": null,
                              "type": "enum Attestations.AttestationStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46396,
                                  "type": "type(enum Attestations.AttestationStatus)",
                                  "value": "AttestationStatus"
                                },
                                "id": 51575,
                                "name": "Identifier",
                                "src": "4432:17:180"
                              }
                            ],
                            "id": 51576,
                            "name": "MemberAccess",
                            "src": "4432:26:180"
                          }
                        ],
                        "id": 51577,
                        "name": "Assignment",
                        "src": "4411:47:180"
                      }
                    ],
                    "id": 51578,
                    "name": "ExpressionStatement",
                    "src": "4411:47:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "attestationRequestFeeToken",
                              "referencedDeclaration": 46402,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51546,
                                  "type": "struct Attestations.Attestation storage pointer",
                                  "value": "attestation"
                                },
                                "id": 51579,
                                "name": "Identifier",
                                "src": "4471:11:180"
                              }
                            ],
                            "id": 51580,
                            "name": "MemberAccess",
                            "src": "4471:38:180"
                          }
                        ],
                        "id": 51581,
                        "name": "UnaryOperation",
                        "src": "4464:45:180"
                      }
                    ],
                    "id": 51582,
                    "name": "ExpressionStatement",
                    "src": "4464:45:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51584
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "attestedAddress",
                          "scope": 51664,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.AttestedAddress",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "AttestedAddress",
                              "referencedDeclaration": 46415,
                              "type": "struct Attestations.AttestedAddress"
                            },
                            "id": 51583,
                            "name": "UserDefinedTypeName",
                            "src": "4515:15:180"
                          }
                        ],
                        "id": 51584,
                        "name": "VariableDeclaration",
                        "src": "4515:39:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.AttestedAddress storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "attestations",
                              "referencedDeclaration": 46429,
                              "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.IdentifierState storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46438,
                                      "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                      "value": "identifiers"
                                    },
                                    "id": 51585,
                                    "name": "Identifier",
                                    "src": "4557:11:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51525,
                                      "type": "bytes32",
                                      "value": "identifier"
                                    },
                                    "id": 51586,
                                    "name": "Identifier",
                                    "src": "4569:10:180"
                                  }
                                ],
                                "id": 51587,
                                "name": "IndexAccess",
                                "src": "4557:23:180"
                              }
                            ],
                            "id": 51588,
                            "name": "MemberAccess",
                            "src": "4557:36:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51589,
                                "name": "Identifier",
                                "src": "4594:3:180"
                              }
                            ],
                            "id": 51590,
                            "name": "MemberAccess",
                            "src": "4594:10:180"
                          }
                        ],
                        "id": 51591,
                        "name": "IndexAccess",
                        "src": "4557:48:180"
                      }
                    ],
                    "id": 51592,
                    "name": "VariableDeclarationStatement",
                    "src": "4515:90:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b25ca52c150c885152a41d16b8c6680148452eaf44111476e6e69ba5a1f167fd",
                                  "typeString": "literal_string \"SafeMath32 integer overflow\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51593,
                            "name": "Identifier",
                            "src": "4611:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "completed",
                                  "referencedDeclaration": 46407,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51584,
                                      "type": "struct Attestations.AttestedAddress storage pointer",
                                      "value": "attestedAddress"
                                    },
                                    "id": 51594,
                                    "name": "Identifier",
                                    "src": "4626:15:180"
                                  }
                                ],
                                "id": 51595,
                                "name": "MemberAccess",
                                "src": "4626:25:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "completed",
                                      "referencedDeclaration": 46407,
                                      "type": "uint32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51584,
                                          "type": "struct Attestations.AttestedAddress storage pointer",
                                          "value": "attestedAddress"
                                        },
                                        "id": 51596,
                                        "name": "Identifier",
                                        "src": "4654:15:180"
                                      }
                                    ],
                                    "id": 51597,
                                    "name": "MemberAccess",
                                    "src": "4654:25:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 51598,
                                    "name": "Literal",
                                    "src": "4682:1:180"
                                  }
                                ],
                                "id": 51599,
                                "name": "BinaryOperation",
                                "src": "4654:29:180"
                              }
                            ],
                            "id": 51600,
                            "name": "BinaryOperation",
                            "src": "4626:57:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536166654d617468333220696e7465676572206f766572666c6f77",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"SafeMath32 integer overflow\"",
                              "value": "SafeMath32 integer overflow"
                            },
                            "id": 51601,
                            "name": "Literal",
                            "src": "4691:29:180"
                          }
                        ],
                        "id": 51602,
                        "name": "FunctionCall",
                        "src": "4611:115:180"
                      }
                    ],
                    "id": 51603,
                    "name": "ExpressionStatement",
                    "src": "4611:115:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "completed",
                              "referencedDeclaration": 46407,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51584,
                                  "type": "struct Attestations.AttestedAddress storage pointer",
                                  "value": "attestedAddress"
                                },
                                "id": 51604,
                                "name": "Identifier",
                                "src": "4732:15:180"
                              }
                            ],
                            "id": 51606,
                            "name": "MemberAccess",
                            "src": "4732:25:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "completed",
                                  "referencedDeclaration": 46407,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51584,
                                      "type": "struct Attestations.AttestedAddress storage pointer",
                                      "value": "attestedAddress"
                                    },
                                    "id": 51607,
                                    "name": "Identifier",
                                    "src": "4760:15:180"
                                  }
                                ],
                                "id": 51608,
                                "name": "MemberAccess",
                                "src": "4760:25:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 51609,
                                "name": "Literal",
                                "src": "4788:1:180"
                              }
                            ],
                            "id": 51610,
                            "name": "BinaryOperation",
                            "src": "4760:29:180"
                          }
                        ],
                        "id": 51611,
                        "name": "Assignment",
                        "src": "4732:57:180"
                      }
                    ],
                    "id": 51612,
                    "name": "ExpressionStatement",
                    "src": "4732:57:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(address => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46454,
                                      "type": "mapping(address => mapping(address => uint256))",
                                      "value": "pendingWithdrawals"
                                    },
                                    "id": 51613,
                                    "name": "Identifier",
                                    "src": "4796:18:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51559,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 51614,
                                    "name": "Identifier",
                                    "src": "4815:5:180"
                                  }
                                ],
                                "id": 51616,
                                "name": "IndexAccess",
                                "src": "4796:25:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51535,
                                  "type": "address",
                                  "value": "issuer"
                                },
                                "id": 51615,
                                "name": "Identifier",
                                "src": "4822:6:180"
                              }
                            ],
                            "id": 51617,
                            "name": "IndexAccess",
                            "src": "4796:33:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 203,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(address => uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46454,
                                              "type": "mapping(address => mapping(address => uint256))",
                                              "value": "pendingWithdrawals"
                                            },
                                            "id": 51618,
                                            "name": "Identifier",
                                            "src": "4832:18:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51559,
                                              "type": "address",
                                              "value": "token"
                                            },
                                            "id": 51619,
                                            "name": "Identifier",
                                            "src": "4851:5:180"
                                          }
                                        ],
                                        "id": 51620,
                                        "name": "IndexAccess",
                                        "src": "4832:25:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51535,
                                          "type": "address",
                                          "value": "issuer"
                                        },
                                        "id": 51621,
                                        "name": "Identifier",
                                        "src": "4858:6:180"
                                      }
                                    ],
                                    "id": 51622,
                                    "name": "IndexAccess",
                                    "src": "4832:33:180"
                                  }
                                ],
                                "id": 51623,
                                "name": "MemberAccess",
                                "src": "4832:37:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46448,
                                      "type": "mapping(address => uint256)",
                                      "value": "attestationRequestFees"
                                    },
                                    "id": 51624,
                                    "name": "Identifier",
                                    "src": "4877:22:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51559,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 51625,
                                    "name": "Identifier",
                                    "src": "4900:5:180"
                                  }
                                ],
                                "id": 51626,
                                "name": "IndexAccess",
                                "src": "4877:29:180"
                              }
                            ],
                            "id": 51627,
                            "name": "FunctionCall",
                            "src": "4832:80:180"
                          }
                        ],
                        "id": 51628,
                        "name": "Assignment",
                        "src": "4796:116:180"
                      }
                    ],
                    "id": 51629,
                    "name": "ExpressionStatement",
                    "src": "4796:116:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51631
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51664,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.IdentifierState",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IdentifierState",
                              "referencedDeclaration": 46434,
                              "type": "struct Attestations.IdentifierState"
                            },
                            "id": 51630,
                            "name": "UserDefinedTypeName",
                            "src": "4919:15:180"
                          }
                        ],
                        "id": 51631,
                        "name": "VariableDeclaration",
                        "src": "4919:29:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.IdentifierState storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46438,
                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                              "value": "identifiers"
                            },
                            "id": 51632,
                            "name": "Identifier",
                            "src": "4951:11:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51525,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51633,
                            "name": "Identifier",
                            "src": "4963:10:180"
                          }
                        ],
                        "id": 51634,
                        "name": "IndexAccess",
                        "src": "4951:23:180"
                      }
                    ],
                    "id": 51635,
                    "name": "VariableDeclarationStatement",
                    "src": "4919:55:180"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "completed",
                              "referencedDeclaration": 46407,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.AttestedAddress storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "attestations",
                                      "referencedDeclaration": 46429,
                                      "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Attestations.IdentifierState storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46438,
                                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                              "value": "identifiers"
                                            },
                                            "id": 51636,
                                            "name": "Identifier",
                                            "src": "4984:11:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51525,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 51637,
                                            "name": "Identifier",
                                            "src": "4996:10:180"
                                          }
                                        ],
                                        "id": 51638,
                                        "name": "IndexAccess",
                                        "src": "4984:23:180"
                                      }
                                    ],
                                    "id": 51639,
                                    "name": "MemberAccess",
                                    "src": "4984:36:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51640,
                                        "name": "Identifier",
                                        "src": "5021:3:180"
                                      }
                                    ],
                                    "id": 51641,
                                    "name": "MemberAccess",
                                    "src": "5021:10:180"
                                  }
                                ],
                                "id": 51642,
                                "name": "IndexAccess",
                                "src": "4984:48:180"
                              }
                            ],
                            "id": 51643,
                            "name": "MemberAccess",
                            "src": "4984:58:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 51644,
                            "name": "Literal",
                            "src": "5046:1:180"
                          }
                        ],
                        "id": 51645,
                        "name": "BinaryOperation",
                        "src": "4984:63:180"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (address) returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "accounts",
                                          "referencedDeclaration": 46425,
                                          "type": "address[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51631,
                                              "type": "struct Attestations.IdentifierState storage pointer",
                                              "value": "state"
                                            },
                                            "id": 51646,
                                            "name": "Identifier",
                                            "src": "5057:5:180"
                                          }
                                        ],
                                        "id": 51649,
                                        "name": "MemberAccess",
                                        "src": "5057:14:180"
                                      }
                                    ],
                                    "id": 51650,
                                    "name": "MemberAccess",
                                    "src": "5057:19:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59923,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51651,
                                        "name": "Identifier",
                                        "src": "5077:3:180"
                                      }
                                    ],
                                    "id": 51652,
                                    "name": "MemberAccess",
                                    "src": "5077:10:180"
                                  }
                                ],
                                "id": 51653,
                                "name": "FunctionCall",
                                "src": "5057:31:180"
                              }
                            ],
                            "id": 51654,
                            "name": "ExpressionStatement",
                            "src": "5057:31:180"
                          }
                        ],
                        "id": 51655,
                        "name": "Block",
                        "src": "5049:46:180"
                      }
                    ],
                    "id": 51656,
                    "name": "IfStatement",
                    "src": "4980:115:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46488,
                              "type": "function (bytes32,address,address)",
                              "value": "AttestationCompleted"
                            },
                            "id": 51657,
                            "name": "Identifier",
                            "src": "5106:20:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51525,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51658,
                            "name": "Identifier",
                            "src": "5127:10:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51659,
                                "name": "Identifier",
                                "src": "5139:3:180"
                              }
                            ],
                            "id": 51660,
                            "name": "MemberAccess",
                            "src": "5139:10:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51535,
                              "type": "address",
                              "value": "issuer"
                            },
                            "id": 51661,
                            "name": "Identifier",
                            "src": "5151:6:180"
                          }
                        ],
                        "id": 51662,
                        "name": "FunctionCall",
                        "src": "5106:52:180"
                      }
                    ],
                    "id": 51663,
                    "name": "EmitStatement",
                    "src": "5101:57:180"
                  }
                ],
                "id": 51664,
                "name": "Block",
                "src": "4029:1134:180"
              }
            ],
            "id": 51665,
            "name": "FunctionDefinition",
            "src": "3951:1212:180"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "__setValidators",
              "scope": 51915,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "validators",
                      "scope": 51676,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 51666,
                            "name": "ElementaryTypeName",
                            "src": "5192:7:180"
                          }
                        ],
                        "id": 51667,
                        "name": "ArrayTypeName",
                        "src": "5192:9:180"
                      }
                    ],
                    "id": 51668,
                    "name": "VariableDeclaration",
                    "src": "5192:27:180"
                  }
                ],
                "id": 51669,
                "name": "ParameterList",
                "src": "5191:29:180"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51670,
                "name": "ParameterList",
                "src": "5228:0:180"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51318,
                              "type": "address[] storage ref",
                              "value": "__testValidators"
                            },
                            "id": 51671,
                            "name": "Identifier",
                            "src": "5234:16:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51668,
                              "type": "address[] memory",
                              "value": "validators"
                            },
                            "id": 51672,
                            "name": "Identifier",
                            "src": "5253:10:180"
                          }
                        ],
                        "id": 51673,
                        "name": "Assignment",
                        "src": "5234:29:180"
                      }
                    ],
                    "id": 51674,
                    "name": "ExpressionStatement",
                    "src": "5234:29:180"
                  }
                ],
                "id": 51675,
                "name": "Block",
                "src": "5228:40:180"
              }
            ],
            "id": 51676,
            "name": "FunctionDefinition",
            "src": "5167:101:180"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "numberValidatorsInCurrentSet",
              "scope": 51915,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51677,
                "name": "ParameterList",
                "src": "5309:2:180"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 51685,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 51678,
                        "name": "ElementaryTypeName",
                        "src": "5333:7:180"
                      }
                    ],
                    "id": 51679,
                    "name": "VariableDeclaration",
                    "src": "5333:7:180"
                  }
                ],
                "id": 51680,
                "name": "ParameterList",
                "src": "5332:9:180"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 51680
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51318,
                              "type": "address[] storage ref",
                              "value": "__testValidators"
                            },
                            "id": 51681,
                            "name": "Identifier",
                            "src": "5355:16:180"
                          }
                        ],
                        "id": 51682,
                        "name": "MemberAccess",
                        "src": "5355:23:180"
                      }
                    ],
                    "id": 51683,
                    "name": "Return",
                    "src": "5348:30:180"
                  }
                ],
                "id": 51684,
                "name": "Block",
                "src": "5342:41:180"
              }
            ],
            "id": 51685,
            "name": "FunctionDefinition",
            "src": "5272:111:180"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "validatorSignerAddressFromCurrentSet",
              "scope": 51915,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 51697,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 51686,
                        "name": "ElementaryTypeName",
                        "src": "5433:7:180"
                      }
                    ],
                    "id": 51687,
                    "name": "VariableDeclaration",
                    "src": "5433:13:180"
                  }
                ],
                "id": 51688,
                "name": "ParameterList",
                "src": "5432:15:180"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 51697,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 51689,
                        "name": "ElementaryTypeName",
                        "src": "5469:7:180"
                      }
                    ],
                    "id": 51690,
                    "name": "VariableDeclaration",
                    "src": "5469:7:180"
                  }
                ],
                "id": 51691,
                "name": "ParameterList",
                "src": "5468:9:180"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 51691
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51318,
                              "type": "address[] storage ref",
                              "value": "__testValidators"
                            },
                            "id": 51692,
                            "name": "Identifier",
                            "src": "5491:16:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51687,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 51693,
                            "name": "Identifier",
                            "src": "5508:5:180"
                          }
                        ],
                        "id": 51694,
                        "name": "IndexAccess",
                        "src": "5491:23:180"
                      }
                    ],
                    "id": 51695,
                    "name": "Return",
                    "src": "5484:30:180"
                  }
                ],
                "id": 51696,
                "name": "Block",
                "src": "5478:41:180"
              }
            ],
            "id": 51697,
            "name": "FunctionDefinition",
            "src": "5387:132:180"
          },
          {
            "attributes": {
              "documentation": "@notice Adds additional attestations given the current randomness.\n@param identifier The hash of the identifier to be attested.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addIncompleteAttestations",
              "scope": 51915,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51914,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51698,
                        "name": "ElementaryTypeName",
                        "src": "5708:7:180"
                      }
                    ],
                    "id": 51699,
                    "name": "VariableDeclaration",
                    "src": "5708:18:180"
                  }
                ],
                "id": 51700,
                "name": "ParameterList",
                "src": "5707:20:180"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51701,
                "name": "ParameterList",
                "src": "5737:0:180"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        51703
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51913,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.AttestedAddress",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "AttestedAddress",
                              "referencedDeclaration": 46415,
                              "type": "struct Attestations.AttestedAddress"
                            },
                            "id": 51702,
                            "name": "UserDefinedTypeName",
                            "src": "5743:15:180"
                          }
                        ],
                        "id": 51703,
                        "name": "VariableDeclaration",
                        "src": "5743:29:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.AttestedAddress storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "attestations",
                              "referencedDeclaration": 46429,
                              "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.IdentifierState storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46438,
                                      "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                      "value": "identifiers"
                                    },
                                    "id": 51704,
                                    "name": "Identifier",
                                    "src": "5775:11:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51699,
                                      "type": "bytes32",
                                      "value": "identifier"
                                    },
                                    "id": 51705,
                                    "name": "Identifier",
                                    "src": "5787:10:180"
                                  }
                                ],
                                "id": 51706,
                                "name": "IndexAccess",
                                "src": "5775:23:180"
                              }
                            ],
                            "id": 51707,
                            "name": "MemberAccess",
                            "src": "5775:36:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51708,
                                "name": "Identifier",
                                "src": "5812:3:180"
                              }
                            ],
                            "id": 51709,
                            "name": "MemberAccess",
                            "src": "5812:10:180"
                          }
                        ],
                        "id": 51710,
                        "name": "IndexAccess",
                        "src": "5775:48:180"
                      }
                    ],
                    "id": 51711,
                    "name": "VariableDeclarationStatement",
                    "src": "5743:80:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51713
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "unselectedRequest",
                          "scope": 51913,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.UnselectedRequest",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "UnselectedRequest",
                              "referencedDeclaration": 46422,
                              "type": "struct Attestations.UnselectedRequest"
                            },
                            "id": 51712,
                            "name": "UserDefinedTypeName",
                            "src": "5829:17:180"
                          }
                        ],
                        "id": 51713,
                        "name": "VariableDeclaration",
                        "src": "5829:43:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.UnselectedRequest storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "unselectedRequests",
                              "referencedDeclaration": 46433,
                              "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.IdentifierState storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46438,
                                      "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                      "value": "identifiers"
                                    },
                                    "id": 51714,
                                    "name": "Identifier",
                                    "src": "5875:11:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51699,
                                      "type": "bytes32",
                                      "value": "identifier"
                                    },
                                    "id": 51715,
                                    "name": "Identifier",
                                    "src": "5887:10:180"
                                  }
                                ],
                                "id": 51716,
                                "name": "IndexAccess",
                                "src": "5875:23:180"
                              }
                            ],
                            "id": 51717,
                            "name": "MemberAccess",
                            "src": "5875:42:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59923,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51718,
                                "name": "Identifier",
                                "src": "5925:3:180"
                              }
                            ],
                            "id": 51719,
                            "name": "MemberAccess",
                            "src": "5925:10:180"
                          }
                        ],
                        "id": 51720,
                        "name": "IndexAccess",
                        "src": "5875:66:180"
                      }
                    ],
                    "id": 51721,
                    "name": "VariableDeclarationStatement",
                    "src": "5829:112:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51723
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "seed",
                          "scope": 51913,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 51722,
                            "name": "ElementaryTypeName",
                            "src": "5948:7:180"
                          }
                        ],
                        "id": 51723,
                        "name": "VariableDeclaration",
                        "src": "5948:12:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getBlockRandomness",
                              "referencedDeclaration": 51270,
                              "type": "function (uint256) view external returns (bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IRandom",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 13490,
                                      "type": "function () view returns (contract IRandom)",
                                      "value": "getRandom"
                                    },
                                    "id": 51724,
                                    "name": "Identifier",
                                    "src": "5963:9:180"
                                  }
                                ],
                                "id": 51725,
                                "name": "FunctionCall",
                                "src": "5963:11:180"
                              }
                            ],
                            "id": 51726,
                            "name": "MemberAccess",
                            "src": "5963:30:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 203,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 51727,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "6001:7:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46417,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51713,
                                              "type": "struct Attestations.UnselectedRequest storage pointer",
                                              "value": "unselectedRequest"
                                            },
                                            "id": 51728,
                                            "name": "Identifier",
                                            "src": "6009:17:180"
                                          }
                                        ],
                                        "id": 51729,
                                        "name": "MemberAccess",
                                        "src": "6009:29:180"
                                      }
                                    ],
                                    "id": 51730,
                                    "name": "FunctionCall",
                                    "src": "6001:38:180"
                                  }
                                ],
                                "id": 51731,
                                "name": "MemberAccess",
                                "src": "6001:42:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46442,
                                  "type": "uint256",
                                  "value": "selectIssuersWaitBlocks"
                                },
                                "id": 51732,
                                "name": "Identifier",
                                "src": "6044:23:180"
                              }
                            ],
                            "id": 51733,
                            "name": "FunctionCall",
                            "src": "6001:67:180"
                          }
                        ],
                        "id": 51734,
                        "name": "FunctionCall",
                        "src": "5963:111:180"
                      }
                    ],
                    "id": 51735,
                    "name": "VariableDeclarationStatement",
                    "src": "5948:126:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51737
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "accounts",
                          "scope": 51913,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IAccounts",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IAccounts",
                              "referencedDeclaration": 14468,
                              "type": "contract IAccounts"
                            },
                            "id": 51736,
                            "name": "UserDefinedTypeName",
                            "src": "6080:9:180"
                          }
                        ],
                        "id": 51737,
                        "name": "VariableDeclaration",
                        "src": "6080:18:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IAccounts",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13347,
                              "type": "function () view returns (contract IAccounts)",
                              "value": "getAccounts"
                            },
                            "id": 51738,
                            "name": "Identifier",
                            "src": "6101:11:180"
                          }
                        ],
                        "id": 51739,
                        "name": "FunctionCall",
                        "src": "6101:13:180"
                      }
                    ],
                    "id": 51740,
                    "name": "VariableDeclarationStatement",
                    "src": "6080:34:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51742
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "issuersLength",
                          "scope": 51913,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 51741,
                            "name": "ElementaryTypeName",
                            "src": "6120:7:180"
                          }
                        ],
                        "id": 51742,
                        "name": "VariableDeclaration",
                        "src": "6120:21:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51685,
                              "type": "function () view returns (uint256)",
                              "value": "numberValidatorsInCurrentSet"
                            },
                            "id": 51743,
                            "name": "Identifier",
                            "src": "6144:28:180"
                          }
                        ],
                        "id": 51744,
                        "name": "FunctionCall",
                        "src": "6144:30:180"
                      }
                    ],
                    "id": 51745,
                    "name": "VariableDeclarationStatement",
                    "src": "6120:54:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51749
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "issuers",
                          "scope": 51913,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 51747,
                                "name": "ElementaryTypeName",
                                "src": "6180:7:180"
                              }
                            ],
                            "id": 51748,
                            "name": "ArrayTypeName",
                            "src": "6180:9:180"
                          }
                        ],
                        "id": 51749,
                        "name": "VariableDeclaration",
                        "src": "6180:24:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 51750,
                                    "name": "ElementaryTypeName",
                                    "src": "6211:7:180"
                                  }
                                ],
                                "id": 51751,
                                "name": "ArrayTypeName",
                                "src": "6211:9:180"
                              }
                            ],
                            "id": 51752,
                            "name": "NewExpression",
                            "src": "6207:13:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51742,
                              "type": "uint256",
                              "value": "issuersLength"
                            },
                            "id": 51753,
                            "name": "Identifier",
                            "src": "6221:13:180"
                          }
                        ],
                        "id": 51754,
                        "name": "FunctionCall",
                        "src": "6207:28:180"
                      }
                    ],
                    "id": 51755,
                    "name": "VariableDeclarationStatement",
                    "src": "6180:55:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            51757
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 51776,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 51756,
                                "name": "ElementaryTypeName",
                                "src": "6246:7:180"
                              }
                            ],
                            "id": 51757,
                            "name": "VariableDeclaration",
                            "src": "6246:9:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 51758,
                            "name": "Literal",
                            "src": "6258:1:180"
                          }
                        ],
                        "id": 51759,
                        "name": "VariableDeclarationStatement",
                        "src": "6246:13:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51757,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 51760,
                            "name": "Identifier",
                            "src": "6261:1:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51742,
                              "type": "uint256",
                              "value": "issuersLength"
                            },
                            "id": 51761,
                            "name": "Identifier",
                            "src": "6265:13:180"
                          }
                        ],
                        "id": 51762,
                        "name": "BinaryOperation",
                        "src": "6261:17:180"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51757,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 51763,
                                "name": "Identifier",
                                "src": "6280:1:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 203,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51757,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 51764,
                                        "name": "Identifier",
                                        "src": "6284:1:180"
                                      }
                                    ],
                                    "id": 51765,
                                    "name": "MemberAccess",
                                    "src": "6284:5:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 51766,
                                    "name": "Literal",
                                    "src": "6290:1:180"
                                  }
                                ],
                                "id": 51767,
                                "name": "FunctionCall",
                                "src": "6284:8:180"
                              }
                            ],
                            "id": 51768,
                            "name": "Assignment",
                            "src": "6280:12:180"
                          }
                        ],
                        "id": 51769,
                        "name": "ExpressionStatement",
                        "src": "6280:12:180"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51749,
                                      "type": "uint256[] memory",
                                      "value": "issuers"
                                    },
                                    "id": 51770,
                                    "name": "Identifier",
                                    "src": "6294:7:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51757,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 51771,
                                    "name": "Identifier",
                                    "src": "6302:1:180"
                                  }
                                ],
                                "id": 51772,
                                "name": "IndexAccess",
                                "src": "6294:10:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51757,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 51773,
                                "name": "Identifier",
                                "src": "6307:1:180"
                              }
                            ],
                            "id": 51774,
                            "name": "Assignment",
                            "src": "6294:14:180"
                          }
                        ],
                        "id": 51775,
                        "name": "ExpressionStatement",
                        "src": "6294:14:180"
                      }
                    ],
                    "id": 51776,
                    "name": "ForStatement",
                    "src": "6241:67:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                  "typeString": "literal_string \"not enough issuers\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59926,
                                59927
                              ],
                              "referencedDeclaration": 59927,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51777,
                            "name": "Identifier",
                            "src": "6315:7:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "attestationsRequested",
                                  "referencedDeclaration": 46419,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51713,
                                      "type": "struct Attestations.UnselectedRequest storage pointer",
                                      "value": "unselectedRequest"
                                    },
                                    "id": 51778,
                                    "name": "Identifier",
                                    "src": "6323:17:180"
                                  }
                                ],
                                "id": 51779,
                                "name": "MemberAccess",
                                "src": "6323:39:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51742,
                                  "type": "uint256",
                                  "value": "issuersLength"
                                },
                                "id": 51780,
                                "name": "Identifier",
                                "src": "6366:13:180"
                              }
                            ],
                            "id": 51781,
                            "name": "BinaryOperation",
                            "src": "6323:56:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6e6f7420656e6f7567682069737375657273",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"not enough issuers\"",
                              "value": "not enough issuers"
                            },
                            "id": 51782,
                            "name": "Literal",
                            "src": "6381:20:180"
                          }
                        ],
                        "id": 51783,
                        "name": "FunctionCall",
                        "src": "6315:87:180"
                      }
                    ],
                    "id": 51784,
                    "name": "ExpressionStatement",
                    "src": "6315:87:180"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51786
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "currentIndex",
                          "scope": 51913,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 51785,
                            "name": "ElementaryTypeName",
                            "src": "6409:7:180"
                          }
                        ],
                        "id": 51786,
                        "name": "VariableDeclaration",
                        "src": "6409:20:180"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 51787,
                        "name": "Literal",
                        "src": "6432:1:180"
                      }
                    ],
                    "id": 51788,
                    "name": "VariableDeclarationStatement",
                    "src": "6409:24:180"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51786,
                              "type": "uint256",
                              "value": "currentIndex"
                            },
                            "id": 51789,
                            "name": "Identifier",
                            "src": "6569:12:180"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "attestationsRequested",
                              "referencedDeclaration": 46419,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51713,
                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                  "value": "unselectedRequest"
                                },
                                "id": 51790,
                                "name": "Identifier",
                                "src": "6584:17:180"
                              }
                            ],
                            "id": 51791,
                            "name": "MemberAccess",
                            "src": "6584:39:180"
                          }
                        ],
                        "id": 51792,
                        "name": "BinaryOperation",
                        "src": "6569:54:180"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                          "typeString": "literal_string \"not enough issuers\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        59926,
                                        59927
                                      ],
                                      "referencedDeclaration": 59927,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 51793,
                                    "name": "Identifier",
                                    "src": "6633:7:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51742,
                                          "type": "uint256",
                                          "value": "issuersLength"
                                        },
                                        "id": 51794,
                                        "name": "Identifier",
                                        "src": "6641:13:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 51795,
                                        "name": "Literal",
                                        "src": "6657:1:180"
                                      }
                                    ],
                                    "id": 51796,
                                    "name": "BinaryOperation",
                                    "src": "6641:17:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "6e6f7420656e6f7567682069737375657273",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"not enough issuers\"",
                                      "value": "not enough issuers"
                                    },
                                    "id": 51797,
                                    "name": "Literal",
                                    "src": "6660:20:180"
                                  }
                                ],
                                "id": 51798,
                                "name": "FunctionCall",
                                "src": "6633:48:180"
                              }
                            ],
                            "id": 51799,
                            "name": "ExpressionStatement",
                            "src": "6633:48:180"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "bytes32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51723,
                                      "type": "bytes32",
                                      "value": "seed"
                                    },
                                    "id": 51800,
                                    "name": "Identifier",
                                    "src": "6689:4:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59917,
                                          "type": "function (bytes memory) pure returns (bytes32)",
                                          "value": "keccak256"
                                        },
                                        "id": 51801,
                                        "name": "Identifier",
                                        "src": "6696:9:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "encodePacked",
                                              "referencedDeclaration": null,
                                              "type": "function () pure returns (bytes memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 59910,
                                                  "type": "abi",
                                                  "value": "abi"
                                                },
                                                "id": 51802,
                                                "name": "Identifier",
                                                "src": "6706:3:180"
                                              }
                                            ],
                                            "id": 51803,
                                            "name": "MemberAccess",
                                            "src": "6706:16:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51723,
                                              "type": "bytes32",
                                              "value": "seed"
                                            },
                                            "id": 51804,
                                            "name": "Identifier",
                                            "src": "6723:4:180"
                                          }
                                        ],
                                        "id": 51805,
                                        "name": "FunctionCall",
                                        "src": "6706:22:180"
                                      }
                                    ],
                                    "id": 51806,
                                    "name": "FunctionCall",
                                    "src": "6696:33:180"
                                  }
                                ],
                                "id": 51807,
                                "name": "Assignment",
                                "src": "6689:40:180"
                              }
                            ],
                            "id": 51808,
                            "name": "ExpressionStatement",
                            "src": "6689:40:180"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51810
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "idx",
                                  "scope": 51911,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 51809,
                                    "name": "ElementaryTypeName",
                                    "src": "6737:7:180"
                                  }
                                ],
                                "id": 51810,
                                "name": "VariableDeclaration",
                                "src": "6737:11:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "%",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 51811,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "6751:7:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51723,
                                          "type": "bytes32",
                                          "value": "seed"
                                        },
                                        "id": 51812,
                                        "name": "Identifier",
                                        "src": "6759:4:180"
                                      }
                                    ],
                                    "id": 51813,
                                    "name": "FunctionCall",
                                    "src": "6751:13:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51742,
                                      "type": "uint256",
                                      "value": "issuersLength"
                                    },
                                    "id": 51814,
                                    "name": "Identifier",
                                    "src": "6767:13:180"
                                  }
                                ],
                                "id": 51815,
                                "name": "BinaryOperation",
                                "src": "6751:29:180"
                              }
                            ],
                            "id": 51816,
                            "name": "VariableDeclarationStatement",
                            "src": "6737:43:180"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51818
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "signer",
                                  "scope": 51911,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 51817,
                                    "name": "ElementaryTypeName",
                                    "src": "6788:7:180"
                                  }
                                ],
                                "id": 51818,
                                "name": "VariableDeclaration",
                                "src": "6788:14:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51697,
                                      "type": "function (uint256) view returns (address)",
                                      "value": "validatorSignerAddressFromCurrentSet"
                                    },
                                    "id": 51819,
                                    "name": "Identifier",
                                    "src": "6805:36:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51749,
                                          "type": "uint256[] memory",
                                          "value": "issuers"
                                        },
                                        "id": 51820,
                                        "name": "Identifier",
                                        "src": "6842:7:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51810,
                                          "type": "uint256",
                                          "value": "idx"
                                        },
                                        "id": 51821,
                                        "name": "Identifier",
                                        "src": "6850:3:180"
                                      }
                                    ],
                                    "id": 51822,
                                    "name": "IndexAccess",
                                    "src": "6842:12:180"
                                  }
                                ],
                                "id": 51823,
                                "name": "FunctionCall",
                                "src": "6805:50:180"
                              }
                            ],
                            "id": 51824,
                            "name": "VariableDeclarationStatement",
                            "src": "6788:67:180"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51826
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "issuer",
                                  "scope": 51911,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 51825,
                                    "name": "ElementaryTypeName",
                                    "src": "6863:7:180"
                                  }
                                ],
                                "id": 51826,
                                "name": "VariableDeclaration",
                                "src": "6863:14:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "signerToAccount",
                                      "referencedDeclaration": 14366,
                                      "type": "function (address) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51737,
                                          "type": "contract IAccounts",
                                          "value": "accounts"
                                        },
                                        "id": 51827,
                                        "name": "Identifier",
                                        "src": "6880:8:180"
                                      }
                                    ],
                                    "id": 51828,
                                    "name": "MemberAccess",
                                    "src": "6880:24:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51818,
                                      "type": "address",
                                      "value": "signer"
                                    },
                                    "id": 51829,
                                    "name": "Identifier",
                                    "src": "6905:6:180"
                                  }
                                ],
                                "id": 51830,
                                "name": "FunctionCall",
                                "src": "6880:32:180"
                              }
                            ],
                            "id": 51831,
                            "name": "VariableDeclarationStatement",
                            "src": "6863:49:180"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51833
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "attestation",
                                  "scope": 51911,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct Attestations.Attestation",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "Attestation",
                                      "referencedDeclaration": 46403,
                                      "type": "struct Attestations.Attestation"
                                    },
                                    "id": 51832,
                                    "name": "UserDefinedTypeName",
                                    "src": "6921:11:180"
                                  }
                                ],
                                "id": 51833,
                                "name": "VariableDeclaration",
                                "src": "6921:31:180"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.Attestation storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "issuedAttestations",
                                      "referencedDeclaration": 46414,
                                      "type": "mapping(address => struct Attestations.Attestation storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51703,
                                          "type": "struct Attestations.AttestedAddress storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51834,
                                        "name": "Identifier",
                                        "src": "6955:5:180"
                                      }
                                    ],
                                    "id": 51835,
                                    "name": "MemberAccess",
                                    "src": "6955:24:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51826,
                                      "type": "address",
                                      "value": "issuer"
                                    },
                                    "id": 51836,
                                    "name": "Identifier",
                                    "src": "6980:6:180"
                                  }
                                ],
                                "id": 51837,
                                "name": "IndexAccess",
                                "src": "6955:32:180"
                              }
                            ],
                            "id": 51838,
                            "name": "VariableDeclarationStatement",
                            "src": "6921:66:180"
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_AttestationStatus_$46396",
                                        "typeString": "enum Attestations.AttestationStatus"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "status",
                                          "referencedDeclaration": 46398,
                                          "type": "enum Attestations.AttestationStatus"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51833,
                                              "type": "struct Attestations.Attestation storage pointer",
                                              "value": "attestation"
                                            },
                                            "id": 51839,
                                            "name": "Identifier",
                                            "src": "7009:11:180"
                                          }
                                        ],
                                        "id": 51840,
                                        "name": "MemberAccess",
                                        "src": "7009:18:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "None",
                                          "referencedDeclaration": null,
                                          "type": "enum Attestations.AttestationStatus"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46396,
                                              "type": "type(enum Attestations.AttestationStatus)",
                                              "value": "AttestationStatus"
                                            },
                                            "id": 51841,
                                            "name": "Identifier",
                                            "src": "7031:17:180"
                                          }
                                        ],
                                        "id": 51842,
                                        "name": "MemberAccess",
                                        "src": "7031:22:180"
                                      }
                                    ],
                                    "id": 51843,
                                    "name": "BinaryOperation",
                                    "src": "7009:44:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "hasAuthorizedAttestationSigner",
                                          "referencedDeclaration": 14408,
                                          "type": "function (address) view external returns (bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51737,
                                              "type": "contract IAccounts",
                                              "value": "accounts"
                                            },
                                            "id": 51844,
                                            "name": "Identifier",
                                            "src": "7065:8:180"
                                          }
                                        ],
                                        "id": 51845,
                                        "name": "MemberAccess",
                                        "src": "7065:39:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51826,
                                          "type": "address",
                                          "value": "issuer"
                                        },
                                        "id": 51846,
                                        "name": "Identifier",
                                        "src": "7105:6:180"
                                      }
                                    ],
                                    "id": 51847,
                                    "name": "FunctionCall",
                                    "src": "7065:47:180"
                                  }
                                ],
                                "id": 51848,
                                "name": "BinaryOperation",
                                "src": "7009:103:180"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51786,
                                              "type": "uint256",
                                              "value": "currentIndex"
                                            },
                                            "id": 51849,
                                            "name": "Identifier",
                                            "src": "7131:12:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_1_by_1",
                                                      "typeString": "int_const 1"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "add",
                                                  "referencedDeclaration": 203,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51786,
                                                      "type": "uint256",
                                                      "value": "currentIndex"
                                                    },
                                                    "id": 51850,
                                                    "name": "Identifier",
                                                    "src": "7146:12:180"
                                                  }
                                                ],
                                                "id": 51851,
                                                "name": "MemberAccess",
                                                "src": "7146:16:180"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
                                                "id": 51852,
                                                "name": "Literal",
                                                "src": "7163:1:180"
                                              }
                                            ],
                                            "id": 51853,
                                            "name": "FunctionCall",
                                            "src": "7146:19:180"
                                          }
                                        ],
                                        "id": 51854,
                                        "name": "Assignment",
                                        "src": "7131:34:180"
                                      }
                                    ],
                                    "id": 51855,
                                    "name": "ExpressionStatement",
                                    "src": "7131:34:180"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "enum Attestations.AttestationStatus"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "status",
                                              "referencedDeclaration": 46398,
                                              "type": "enum Attestations.AttestationStatus"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51833,
                                                  "type": "struct Attestations.Attestation storage pointer",
                                                  "value": "attestation"
                                                },
                                                "id": 51856,
                                                "name": "Identifier",
                                                "src": "7175:11:180"
                                              }
                                            ],
                                            "id": 51858,
                                            "name": "MemberAccess",
                                            "src": "7175:18:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "Incomplete",
                                              "referencedDeclaration": null,
                                              "type": "enum Attestations.AttestationStatus"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 46396,
                                                  "type": "type(enum Attestations.AttestationStatus)",
                                                  "value": "AttestationStatus"
                                                },
                                                "id": 51859,
                                                "name": "Identifier",
                                                "src": "7196:17:180"
                                              }
                                            ],
                                            "id": 51860,
                                            "name": "MemberAccess",
                                            "src": "7196:28:180"
                                          }
                                        ],
                                        "id": 51861,
                                        "name": "Assignment",
                                        "src": "7175:49:180"
                                      }
                                    ],
                                    "id": 51862,
                                    "name": "ExpressionStatement",
                                    "src": "7175:49:180"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "blockNumber",
                                              "referencedDeclaration": 46400,
                                              "type": "uint32"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51833,
                                                  "type": "struct Attestations.Attestation storage pointer",
                                                  "value": "attestation"
                                                },
                                                "id": 51863,
                                                "name": "Identifier",
                                                "src": "7234:11:180"
                                              }
                                            ],
                                            "id": 51865,
                                            "name": "MemberAccess",
                                            "src": "7234:23:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "blockNumber",
                                              "referencedDeclaration": 46417,
                                              "type": "uint32"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51713,
                                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                                  "value": "unselectedRequest"
                                                },
                                                "id": 51866,
                                                "name": "Identifier",
                                                "src": "7260:17:180"
                                              }
                                            ],
                                            "id": 51867,
                                            "name": "MemberAccess",
                                            "src": "7260:29:180"
                                          }
                                        ],
                                        "id": 51868,
                                        "name": "Assignment",
                                        "src": "7234:55:180"
                                      }
                                    ],
                                    "id": 51869,
                                    "name": "ExpressionStatement",
                                    "src": "7234:55:180"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "attestationRequestFeeToken",
                                              "referencedDeclaration": 46402,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51833,
                                                  "type": "struct Attestations.Attestation storage pointer",
                                                  "value": "attestation"
                                                },
                                                "id": 51870,
                                                "name": "Identifier",
                                                "src": "7299:11:180"
                                              }
                                            ],
                                            "id": 51872,
                                            "name": "MemberAccess",
                                            "src": "7299:38:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "attestationRequestFeeToken",
                                              "referencedDeclaration": 46421,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51713,
                                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                                  "value": "unselectedRequest"
                                                },
                                                "id": 51873,
                                                "name": "Identifier",
                                                "src": "7340:17:180"
                                              }
                                            ],
                                            "id": 51874,
                                            "name": "MemberAccess",
                                            "src": "7340:44:180"
                                          }
                                        ],
                                        "id": 51875,
                                        "name": "Assignment",
                                        "src": "7299:85:180"
                                      }
                                    ],
                                    "id": 51876,
                                    "name": "ExpressionStatement",
                                    "src": "7299:85:180"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "push",
                                              "referencedDeclaration": null,
                                              "type": "function (address) returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "selectedIssuers",
                                                  "referencedDeclaration": 46410,
                                                  "type": "address[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51703,
                                                      "type": "struct Attestations.AttestedAddress storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51877,
                                                    "name": "Identifier",
                                                    "src": "7394:5:180"
                                                  }
                                                ],
                                                "id": 51880,
                                                "name": "MemberAccess",
                                                "src": "7394:21:180"
                                              }
                                            ],
                                            "id": 51881,
                                            "name": "MemberAccess",
                                            "src": "7394:26:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51826,
                                              "type": "address",
                                              "value": "issuer"
                                            },
                                            "id": 51882,
                                            "name": "Identifier",
                                            "src": "7421:6:180"
                                          }
                                        ],
                                        "id": 51883,
                                        "name": "FunctionCall",
                                        "src": "7394:34:180"
                                      }
                                    ],
                                    "id": 51884,
                                    "name": "ExpressionStatement",
                                    "src": "7394:34:180"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46480,
                                              "type": "function (bytes32,address,address,address)",
                                              "value": "AttestationIssuerSelected"
                                            },
                                            "id": 51885,
                                            "name": "Identifier",
                                            "src": "7444:25:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51699,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 51886,
                                            "name": "Identifier",
                                            "src": "7481:10:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 59923,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 51887,
                                                "name": "Identifier",
                                                "src": "7503:3:180"
                                              }
                                            ],
                                            "id": 51888,
                                            "name": "MemberAccess",
                                            "src": "7503:10:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51826,
                                              "type": "address",
                                              "value": "issuer"
                                            },
                                            "id": 51889,
                                            "name": "Identifier",
                                            "src": "7525:6:180"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "attestationRequestFeeToken",
                                              "referencedDeclaration": 46421,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51713,
                                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                                  "value": "unselectedRequest"
                                                },
                                                "id": 51890,
                                                "name": "Identifier",
                                                "src": "7543:17:180"
                                              }
                                            ],
                                            "id": 51891,
                                            "name": "MemberAccess",
                                            "src": "7543:44:180"
                                          }
                                        ],
                                        "id": 51892,
                                        "name": "FunctionCall",
                                        "src": "7444:153:180"
                                      }
                                    ],
                                    "id": 51893,
                                    "name": "EmitStatement",
                                    "src": "7439:158:180"
                                  }
                                ],
                                "id": 51894,
                                "name": "Block",
                                "src": "7121:485:180"
                              }
                            ],
                            "id": 51895,
                            "name": "IfStatement",
                            "src": "6996:610:180"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51742,
                                      "type": "uint256",
                                      "value": "issuersLength"
                                    },
                                    "id": 51896,
                                    "name": "Identifier",
                                    "src": "7734:13:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sub",
                                          "referencedDeclaration": 219,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51742,
                                              "type": "uint256",
                                              "value": "issuersLength"
                                            },
                                            "id": 51897,
                                            "name": "Identifier",
                                            "src": "7750:13:180"
                                          }
                                        ],
                                        "id": 51898,
                                        "name": "MemberAccess",
                                        "src": "7750:17:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 51899,
                                        "name": "Literal",
                                        "src": "7768:1:180"
                                      }
                                    ],
                                    "id": 51900,
                                    "name": "FunctionCall",
                                    "src": "7750:20:180"
                                  }
                                ],
                                "id": 51901,
                                "name": "Assignment",
                                "src": "7734:36:180"
                              }
                            ],
                            "id": 51902,
                            "name": "ExpressionStatement",
                            "src": "7734:36:180"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51749,
                                          "type": "uint256[] memory",
                                          "value": "issuers"
                                        },
                                        "id": 51903,
                                        "name": "Identifier",
                                        "src": "7778:7:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51810,
                                          "type": "uint256",
                                          "value": "idx"
                                        },
                                        "id": 51904,
                                        "name": "Identifier",
                                        "src": "7786:3:180"
                                      }
                                    ],
                                    "id": 51905,
                                    "name": "IndexAccess",
                                    "src": "7778:12:180"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51749,
                                          "type": "uint256[] memory",
                                          "value": "issuers"
                                        },
                                        "id": 51906,
                                        "name": "Identifier",
                                        "src": "7793:7:180"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51742,
                                          "type": "uint256",
                                          "value": "issuersLength"
                                        },
                                        "id": 51907,
                                        "name": "Identifier",
                                        "src": "7801:13:180"
                                      }
                                    ],
                                    "id": 51908,
                                    "name": "IndexAccess",
                                    "src": "7793:22:180"
                                  }
                                ],
                                "id": 51909,
                                "name": "Assignment",
                                "src": "7778:37:180"
                              }
                            ],
                            "id": 51910,
                            "name": "ExpressionStatement",
                            "src": "7778:37:180"
                          }
                        ],
                        "id": 51911,
                        "name": "Block",
                        "src": "6625:1197:180"
                      }
                    ],
                    "id": 51912,
                    "name": "WhileStatement",
                    "src": "6562:1260:180"
                  }
                ],
                "id": 51913,
                "name": "Block",
                "src": "5737:2089:180"
              }
            ],
            "id": 51914,
            "name": "FunctionDefinition",
            "src": "5673:2153:180"
          }
        ],
        "id": 51915,
        "name": "ContractDefinition",
        "src": "286:7542:180"
      }
    ],
    "id": 51916,
    "name": "SourceUnit",
    "src": "0:7829:180"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2025-05-05T17:49:51.522Z",
  "devdoc": {
    "methods": {
      "batchGetAttestationStats(bytes32[])": {
        "params": {
          "identifiersToLookup": "Array of n identifiers."
        },
        "return": "[0] Array of number of matching accounts per identifier.[1] Array of sum([0]) matching walletAddresses.[2] Array of sum([0]) numbers indicating the completions for each account.[3] Array of sum([0]) numbers indicating the total number of requested attestations for each account."
      },
      "complete(bytes32,uint8,bytes32,bytes32)": {
        "details": "Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.",
        "params": {
          "identifier": "The hash of the identifier for this attestation.",
          "r": "Output value r of the ECDSA signature.",
          "s": "Output value s of the ECDSA signature.",
          "v": "The recovery id of the incoming ECDSA signature."
        }
      },
      "getAttestationIssuers(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "Addresses of the selected attestation issuers."
      },
      "getAttestationRequestFee(address)": {
        "params": {
          "token": "Address of the attestationRequestFeeToken."
        },
        "return": "The fee."
      },
      "getAttestationState(bytes32,address,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier.",
          "issuer": "Address of the issuer."
        },
        "return": "status Status of the attestation.block Block number of request/completion the attestation.address Address of the token with which this attestation request was paid for."
      },
      "getAttestationStats(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "completed Number of completed attestations.requested Number of total requested attestations."
      },
      "getCompletableAttestations(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "Block number of request/completion the attestation.Address of the issuer.The length of each metadataURL string for each issuer.All strings concatenated."
      },
      "getMaxAttestations()": {
        "return": "Maximum number of attestations that can be requested."
      },
      "getUnselectedRequest(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "block Block number at which was requested.number Number of unselected requests.address Address of the token with which this attestation request was paid for."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "initialize(address,uint256,uint256,uint256,address[],uint256[])": {
        "params": {
          "_attestationExpiryBlocks": "The new limit on blocks allowed to come between requesting an attestation and completing it.",
          "_selectIssuersWaitBlocks": "The wait period in blocks to call selectIssuers on attestation requests.",
          "attestationRequestFeeTokens": "The address of tokens that fees should be payable in.",
          "attestationRequestFeeValues": "The corresponding fee values.",
          "registryAddress": "The address of the registry core smart contract."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "request(bytes32,uint256,address)": {
        "details": "Note that if an attestation expires before it is completed, the fee is forfeited. This is to prevent folks from attacking validators by requesting attestations that they do not complete, and to increase the cost of validators attempting to manipulate the attestations protocol.",
        "params": {
          "attestationRequestFeeToken": "The address of the token with which the attestation fee will be paid.",
          "attestationsRequested": "The number of requested attestations for this request.",
          "identifier": "The hash of the identifier to be attested."
        }
      },
      "requireNAttestationsRequested(bytes32,address,uint32)": {
        "details": "It can be used when batching meta-transactions to validate attestation are requested as expected in untrusted scenarios",
        "params": {
          "account": "Address of the account.",
          "expected": "Number of expected attestations",
          "identifier": "Hash of the identifier."
        }
      },
      "revoke(bytes32,uint256)": {
        "params": {
          "identifier": "The identifier for which to revoke.",
          "index": "The index of the account in the accounts array."
        }
      },
      "selectIssuers(bytes32)": {
        "params": {
          "identifier": "The hash of the identifier to be attested."
        }
      },
      "setAttestationExpiryBlocks(uint256)": {
        "params": {
          "_attestationExpiryBlocks": "The new limit on blocks allowed to come between requesting an attestation and completing it."
        }
      },
      "setAttestationRequestFee(address,uint256)": {
        "params": {
          "fee": "The fee in 'token' that is required for each attestation.",
          "token": "The address of the attestationRequestFeeToken."
        }
      },
      "setMaxAttestations(uint256)": {
        "params": {
          "_maxAttestations": "Maximum number of attestations that can be requested."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setSelectIssuersWaitBlocks(uint256)": {
        "params": {
          "_selectIssuersWaitBlocks": "The wait period in blocks to call selectIssuers on attestation                                requests."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)": {
        "details": "Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.",
        "params": {
          "account": "Address of the account.",
          "identifier": "The hash of the identifier to be attested.",
          "r": "Output value r of the ECDSA signature.",
          "s": "Output value s of the ECDSA signature.",
          "v": "The recovery id of the incoming ECDSA signature."
        },
        "return": "The issuer of the corresponding attestation."
      },
      "withdraw(address)": {
        "details": "Throws if msg.sender does not have any rewards to withdraw.",
        "params": {
          "token": "The address of the token that will be withdrawn."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "batchGetAttestationStats(bytes32[])": {
        "notice": "Batch lookup function to determine attestation stats for a list of identifiers."
      },
      "complete(bytes32,uint8,bytes32,bytes32)": {
        "notice": "Submit the secret message sent by the issuer to complete the attestation request."
      },
      "getAttestationIssuers(bytes32,address)": {
        "notice": "Returns selected attestation issuers for a identifier/account pair."
      },
      "getAttestationRequestFee(address)": {
        "notice": "Returns the fee set for a particular token."
      },
      "getAttestationState(bytes32,address,address)": {
        "notice": "Returns the state of a specific attestation."
      },
      "getAttestationStats(bytes32,address)": {
        "notice": "Returns attestation stats for a identifier/account pair."
      },
      "getCompletableAttestations(bytes32,address)": {
        "notice": "Returns the state of all attestations that are completable"
      },
      "getMaxAttestations()": {
        "notice": "Query 'maxAttestations'"
      },
      "getUnselectedRequest(bytes32,address)": {
        "notice": "Returns the unselected attestation request for an identifier/account pair, if any."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize(address,uint256,uint256,uint256,address[],uint256[])": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "request(bytes32,uint256,address)": {
        "notice": "Commit to the attestation request of a hashed identifier."
      },
      "requireNAttestationsRequested(bytes32,address,uint32)": {
        "notice": "Require that a given identifier/address pair has requested a specific number of attestations."
      },
      "revoke(bytes32,uint256)": {
        "notice": "Revokes an account for an identifier."
      },
      "selectIssuers(bytes32)": {
        "notice": "Selects the issuers for the most recent attestation request."
      },
      "setAttestationExpiryBlocks(uint256)": {
        "notice": "Updates 'attestationExpiryBlocks'."
      },
      "setAttestationRequestFee(address,uint256)": {
        "notice": "Updates the fee  for a particular token."
      },
      "setMaxAttestations(uint256)": {
        "notice": "Updates 'maxAttestations'."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setSelectIssuersWaitBlocks(uint256)": {
        "notice": "Updates 'selectIssuersWaitBlocks'."
      },
      "validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)": {
        "notice": "Validates the given attestation code."
      },
      "withdraw(address)": {
        "notice": "Allows issuers to withdraw accumulated attestation rewards."
      }
    }
  }
}