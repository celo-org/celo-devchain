{
  "contractName": "AttestationsTest",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "AttestationCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AttestationExpiryBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "attestationRequestFeeToken",
          "type": "address"
        }
      ],
      "name": "AttestationIssuerSelected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AttestationRequestFeeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "attestationsRequested",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "attestationRequestFeeToken",
          "type": "address"
        }
      ],
      "name": "AttestationsRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAccount",
          "type": "address"
        }
      ],
      "name": "AttestationsTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "MaxAttestationsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SelectIssuersWaitBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "indentifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "TransferApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "attestationExpiryBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "attestationRequestFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "identifiersToLookup",
          "type": "bytes32[]"
        }
      ],
      "name": "batchGetAttestationStats",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        },
        {
          "internalType": "uint64[]",
          "name": "",
          "type": "uint64[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAttestationIssuers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getAttestationRequestFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        }
      ],
      "name": "getAttestationState",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAttestationStats",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getCompletableAttestations",
      "outputs": [
        {
          "internalType": "uint32[]",
          "name": "",
          "type": "uint32[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaxAttestations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getUnselectedRequest",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_attestationExpiryBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_selectIssuersWaitBlocks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAttestations",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "attestationRequestFeeTokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "attestationRequestFeeValues",
          "type": "uint256[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "lookupAccountsForIdentifier",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAttestations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "expected",
          "type": "uint32"
        }
      ],
      "name": "requireNAttestationsRequested",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "selectIssuersWaitBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attestationExpiryBlocks",
          "type": "uint256"
        }
      ],
      "name": "setAttestationExpiryBlocks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setAttestationRequestFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxAttestations",
          "type": "uint256"
        }
      ],
      "name": "setMaxAttestations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_selectIssuersWaitBlocks",
          "type": "uint256"
        }
      ],
      "name": "setSelectIssuersWaitBlocks",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "transferApprovals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "validateAttestationCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "validators",
          "type": "address[]"
        }
      ],
      "name": "__setValidators",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "attestationsRequested",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "attestationRequestFeeToken",
          "type": "address"
        }
      ],
      "name": "request",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "selectIssuers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "complete",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"AttestationCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AttestationExpiryBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"attestationRequestFeeToken\",\"type\":\"address\"}],\"name\":\"AttestationIssuerSelected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AttestationRequestFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"attestationsRequested\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"attestationRequestFeeToken\",\"type\":\"address\"}],\"name\":\"AttestationsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"}],\"name\":\"AttestationsTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MaxAttestationsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SelectIssuersWaitBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"indentifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"TransferApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"}],\"name\":\"__setValidators\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"attestationExpiryBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"attestationRequestFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"identifiersToLookup\",\"type\":\"bytes32[]\"}],\"name\":\"batchGetAttestationStats\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"complete\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAttestationIssuers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getAttestationRequestFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"getAttestationState\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAttestationStats\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCompletableAttestations\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMaxAttestations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getUnselectedRequest\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_attestationExpiryBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_selectIssuersWaitBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAttestations\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"attestationRequestFeeTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"attestationRequestFeeValues\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"lookupAccountsForIdentifier\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAttestations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"attestationsRequested\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"attestationRequestFeeToken\",\"type\":\"address\"}],\"name\":\"request\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"expected\",\"type\":\"uint32\"}],\"name\":\"requireNAttestationsRequested\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"selectIssuers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"selectIssuersWaitBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_attestationExpiryBlocks\",\"type\":\"uint256\"}],\"name\":\"setAttestationExpiryBlocks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setAttestationRequestFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAttestations\",\"type\":\"uint256\"}],\"name\":\"setMaxAttestations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_selectIssuersWaitBlocks\",\"type\":\"uint256\"}],\"name\":\"setSelectIssuersWaitBlocks\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transferApprovals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"validateAttestationCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"batchGetAttestationStats(bytes32[])\":{\"params\":{\"identifiersToLookup\":\"Array of n identifiers.\"},\"return\":\"[0] Array of number of matching accounts per identifier.[1] Array of sum([0]) matching walletAddresses.[2] Array of sum([0]) numbers indicating the completions for each account.[3] Array of sum([0]) numbers indicating the total number of requested attestations for each account.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"complete(bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.\",\"params\":{\"identifier\":\"The hash of the identifier for this attestation.\",\"r\":\"Output value r of the ECDSA signature.\",\"s\":\"Output value s of the ECDSA signature.\",\"v\":\"The recovery id of the incoming ECDSA signature.\"}},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"Numerator of the computed quantity (not reduced).Denominator of the computed quantity (not reduced).\"},\"getAttestationIssuers(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"Addresses of the selected attestation issuers.\"},\"getAttestationRequestFee(address)\":{\"params\":{\"token\":\"Address of the attestationRequestFeeToken.\"},\"return\":\"The fee.\"},\"getAttestationState(bytes32,address,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\",\"issuer\":\"Address of the issuer.\"},\"return\":\"status Status of the attestation.block Block number of request/completion the attestation.address Address of the token with which this attestation request was paid for.\"},\"getAttestationStats(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"completed Number of completed attestations.requested Number of total requested attestations.\"},\"getBlockNumberFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Block number.\"},\"getCompletableAttestations(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"Block number of request/completion the attestation.Address of the issuer.The length of each metadataURL string for each issuer.All strings concatenated.\"},\"getEpochNumber()\":{\"return\":\"Current epoch number.\"},\"getEpochNumberOfBlock(uint256)\":{\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"return\":\"Epoch number.\"},\"getEpochSize()\":{\"return\":\"The current epoch size in blocks.\"},\"getMaxAttestations()\":{\"return\":\"Maximum number of attestations that can be requested.\"},\"getParentSealBitmap(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"return\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"},\"getUnselectedRequest(bytes32,address)\":{\"params\":{\"account\":\"Address of the account.\",\"identifier\":\"Hash of the identifier.\"},\"return\":\"block Block number at which was requested.number Number of unselected requests.address Address of the token with which this attestation request was paid for.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"hashHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Header hash.\"},\"initialize(address,uint256,uint256,uint256,address[],uint256[])\":{\"params\":{\"_attestationExpiryBlocks\":\"The new limit on blocks allowed to come between requesting an attestation and completing it.\",\"_selectIssuersWaitBlocks\":\"The wait period in blocks to call selectIssuers on attestation requests.\",\"attestationRequestFeeTokens\":\"The address of tokens that fees should be payable in.\",\"attestationRequestFeeValues\":\"The corresponding fee values.\",\"registryAddress\":\"The address of the registry core smart contract.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\"},\"minQuorumSizeInCurrentSet()\":{\"return\":\"Byzantine quorum of validators.\"},\"numberValidatorsInSet(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"return\":\"Size of the validator set.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"request(bytes32,uint256,address)\":{\"details\":\"Note that if an attestation expires before it is completed, the fee is forfeited. This is to prevent folks from attacking validators by requesting attestations that they do not complete, and to increase the cost of validators attempting to manipulate the attestations protocol.\",\"params\":{\"attestationRequestFeeToken\":\"The address of the token with which the attestation fee will be paid.\",\"attestationsRequested\":\"The number of requested attestations for this request.\",\"identifier\":\"The hash of the identifier to be attested.\"}},\"requireNAttestationsRequested(bytes32,address,uint32)\":{\"details\":\"It can be used when batching meta-transactions to validate attestation are requested as expected in untrusted scenarios\",\"params\":{\"account\":\"Address of the account.\",\"expected\":\"Number of expected attestations\",\"identifier\":\"Hash of the identifier.\"}},\"revoke(bytes32,uint256)\":{\"params\":{\"identifier\":\"The identifier for which to revoke.\",\"index\":\"The index of the account in the accounts array.\"}},\"selectIssuers(bytes32)\":{\"params\":{\"identifier\":\"The hash of the identifier to be attested.\"}},\"setAttestationExpiryBlocks(uint256)\":{\"params\":{\"_attestationExpiryBlocks\":\"The new limit on blocks allowed to come between requesting an attestation and completing it.\"}},\"setAttestationRequestFee(address,uint256)\":{\"params\":{\"fee\":\"The fee in 'token' that is required for each attestation.\",\"token\":\"The address of the attestationRequestFeeToken.\"}},\"setMaxAttestations(uint256)\":{\"params\":{\"_maxAttestations\":\"Maximum number of attestations that can be requested.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setSelectIssuersWaitBlocks(uint256)\":{\"params\":{\"_selectIssuersWaitBlocks\":\"The wait period in blocks to call selectIssuers on attestation                                requests.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)\":{\"details\":\"Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.\",\"params\":{\"account\":\"Address of the account. \",\"identifier\":\"The hash of the identifier to be attested.\",\"r\":\"Output value r of the ECDSA signature.\",\"s\":\"Output value s of the ECDSA signature.\",\"v\":\"The recovery id of the incoming ECDSA signature.\"},\"return\":\"The issuer of the corresponding attestation.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"},\"withdraw(address)\":{\"details\":\"Throws if msg.sender does not have any rewards to withdraw.\",\"params\":{\"token\":\"The address of the token that will be withdrawn.\"}}}},\"userdoc\":{\"methods\":{\"batchGetAttestationStats(bytes32[])\":{\"notice\":\"Batch lookup function to determine attestation stats for a list of identifiers.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"complete(bytes32,uint8,bytes32,bytes32)\":{\"notice\":\"Submit the secret message sent by the issuer to complete the attestation request.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getAttestationIssuers(bytes32,address)\":{\"notice\":\"Returns selected attestation issuers for a identifier/account pair.\"},\"getAttestationRequestFee(address)\":{\"notice\":\"Returns the fee set for a particular token.\"},\"getAttestationState(bytes32,address,address)\":{\"notice\":\"Returns the state of a specific attestation.\"},\"getAttestationStats(bytes32,address)\":{\"notice\":\"Returns attestation stats for a identifier/account pair.\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getCompletableAttestations(bytes32,address)\":{\"notice\":\"Returns the state of all attestations that are completable\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getMaxAttestations()\":{\"notice\":\"Query 'maxAttestations'\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getUnselectedRequest(bytes32,address)\":{\"notice\":\"Returns the unselected attestation request for an identifier/account pair, if any.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"initialize(address,uint256,uint256,uint256,address[],uint256[])\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"request(bytes32,uint256,address)\":{\"notice\":\"Commit to the attestation request of a hashed identifier.\"},\"requireNAttestationsRequested(bytes32,address,uint32)\":{\"notice\":\"Require that a given identifier/address pair has requested a specific number of attestations.\"},\"revoke(bytes32,uint256)\":{\"notice\":\"Revokes an account for an identifier.\"},\"selectIssuers(bytes32)\":{\"notice\":\"Selects the issuers for the most recent attestation request.\"},\"setAttestationExpiryBlocks(uint256)\":{\"notice\":\"Updates 'attestationExpiryBlocks'.\"},\"setAttestationRequestFee(address,uint256)\":{\"notice\":\"Updates the fee  for a particular token.\"},\"setMaxAttestations(uint256)\":{\"notice\":\"Updates 'maxAttestations'.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setSelectIssuersWaitBlocks(uint256)\":{\"notice\":\"Updates 'selectIssuersWaitBlocks'.\"},\"validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)\":{\"notice\":\"Validates the given attestation code.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator address from the validator set at the given block number.\"},\"withdraw(address)\":{\"notice\":\"Allows issuers to withdraw accumulated attestation rewards.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/identity/test/AttestationsTest.sol\":\"AttestationsTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * NOTE: This call _does not revert_ if the signature is invalid, or\\n     * if the signer is otherwise unable to be retrieved. In those scenarios,\\n     * the zero address is returned.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        // Check the signature length\\n        if (signature.length != 65) {\\n            return (address(0));\\n        }\\n\\n        // Divide the signature in r, s and v variables\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        // ecrecover takes the signature parameters, and the only way to get them\\n        // currently is to use assembly.\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            r := mload(add(signature, 0x20))\\n            s := mload(add(signature, 0x40))\\n            v := byte(0, mload(add(signature, 0x60)))\\n        }\\n\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (281): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (282): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return address(0);\\n        }\\n\\n        if (v != 27 && v != 28) {\\n            return address(0);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        return ecrecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * replicates the behavior of the\\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\\n     * JSON-RPC method.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n}\\n\",\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\\n * the optional functions; to access them see {ERC20Detailed}.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\"},\"openzeppelin-solidity/contracts/utils/SafeCast.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n\\n/**\\n * @dev Wrappers over Solidity's uintXX casting operators with added overflow\\n * checks.\\n *\\n * Downcasting from uint256 in Solidity does not revert on overflow. This can\\n * easily result in undesired exploitation or bugs, since developers usually\\n * assume that overflows raise errors. `SafeCast` restores this intuition by\\n * reverting the transaction when such an operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n *\\n * Can be combined with {SafeMath} to extend it to smaller types, by performing\\n * all math on `uint256` and then downcasting.\\n *\\n * _Available since v2.5.0._\\n */\\nlibrary SafeCast {\\n\\n    /**\\n     * @dev Returns the downcasted uint128 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint128).\\n     *\\n     * Counterpart to Solidity's `uint128` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 128 bits\\n     */\\n    function toUint128(uint256 value) internal pure returns (uint128) {\\n        require(value < 2**128, \\\"SafeCast: value doesn\\\\'t fit in 128 bits\\\");\\n        return uint128(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(value < 2**64, \\\"SafeCast: value doesn\\\\'t fit in 64 bits\\\");\\n        return uint64(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint32 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint32).\\n     *\\n     * Counterpart to Solidity's `uint32` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 32 bits\\n     */\\n    function toUint32(uint256 value) internal pure returns (uint32) {\\n        require(value < 2**32, \\\"SafeCast: value doesn\\\\'t fit in 32 bits\\\");\\n        return uint32(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint16 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint16).\\n     *\\n     * Counterpart to Solidity's `uint16` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 16 bits\\n     */\\n    function toUint16(uint256 value) internal pure returns (uint16) {\\n        require(value < 2**16, \\\"SafeCast: value doesn\\\\'t fit in 16 bits\\\");\\n        return uint16(value);\\n    }\\n\\n    /**\\n     * @dev Returns the downcasted uint8 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint8).\\n     *\\n     * Counterpart to Solidity's `uint8` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 8 bits.\\n     */\\n    function toUint8(uint256 value) internal pure returns (uint8) {\\n        require(value < 2**8, \\\"SafeCast: value doesn\\\\'t fit in 8 bits\\\");\\n        return uint8(value);\\n    }\\n}\\n\",\"keccak256\":\"0xb7353a57c9e371c85983df8997caf9bb6fa60c3744b34b2bfcf4faa52d06eaec\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract Initializable {\\n  bool public initialized;\\n\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x27277d9f2c894659833be45eeca368a6d5ff060d944f0ad335e31003bf6477ed\"},\"project:/contracts/common/Signatures.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/cryptography/ECDSA.sol\\\";\\n\\nlibrary Signatures {\\n  /**\\n  * @notice Given a signed address, returns the signer of the address.\\n  * @param message The address that was signed.\\n  * @param v The recovery id of the incoming ECDSA signature.\\n  * @param r Output value r of the ECDSA signature.\\n  * @param s Output value s of the ECDSA signature.\\n  */\\n  function getSignerOfAddress(address message, uint8 v, bytes32 r, bytes32 s)\\n    public\\n    pure\\n    returns (address)\\n  {\\n    bytes32 hash = keccak256(abi.encodePacked(message));\\n    return getSignerOfMessageHash(hash, v, r, s);\\n  }\\n\\n  /**\\n  * @notice Given a message hash, returns the signer of the address.\\n  * @param messageHash The hash of a message.\\n  * @param v The recovery id of the incoming ECDSA signature.\\n  * @param r Output value r of the ECDSA signature.\\n  * @param s Output value s of the ECDSA signature.\\n  */\\n  function getSignerOfMessageHash(bytes32 messageHash, uint8 v, bytes32 r, bytes32 s)\\n    public\\n    pure\\n    returns (address)\\n  {\\n    bytes memory signature = new bytes(65);\\n    // Concatenate (r, s, v) into signature.\\n    assembly {\\n      mstore(add(signature, 32), r)\\n      mstore(add(signature, 64), s)\\n      mstore8(add(signature, 96), v)\\n    }\\n    bytes32 prefixedHash = ECDSA.toEthSignedMessageHash(messageHash);\\n    return ECDSA.recover(prefixedHash, signature);\\n  }\\n\\n  /**\\n  * @notice Given a domain separator and a structHash, construct the typed data hash\\n  * @param eip712DomainSeparator Context specific domain separator\\n  * @param structHash hash of the typed data struct\\n  * @return The EIP712 typed data hash\\n  */\\n  function toEthSignedTypedDataHash(bytes32 eip712DomainSeparator, bytes32 structHash)\\n    public\\n    pure\\n    returns (bytes32)\\n  {\\n    return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", eip712DomainSeparator, structHash));\\n  }\\n\\n  /**\\n  * @notice Given a domain separator and a structHash and a signature return the signer\\n  * @param eip712DomainSeparator Context specific domain separator\\n  * @param structHash hash of the typed data struct\\n  * @param v The recovery id of the incoming ECDSA signature.\\n  * @param r Output value r of the ECDSA signature.\\n  * @param s Output value s of the ECDSA signature.\\n  */\\n  function getSignerOfTypedDataHash(\\n    bytes32 eip712DomainSeparator,\\n    bytes32 structHash,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public pure returns (address) {\\n    bytes memory signature = new bytes(65);\\n    // Concatenate (r, s, v) into signature.\\n    assembly {\\n      mstore(add(signature, 32), r)\\n      mstore(add(signature, 64), s)\\n      mstore8(add(signature, 96), v)\\n    }\\n    bytes32 prefixedHash = toEthSignedTypedDataHash(eip712DomainSeparator, structHash);\\n    return ECDSA.recover(prefixedHash, signature);\\n  }\\n}\\n\",\"keccak256\":\"0xb11ccc01ac5d81c5496828a92536cfc07378e87c0517fe6f8b429a96c41cb21e\"},\"project:/contracts/common/UsingPrecompiles.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\ncontract UsingPrecompiles {\\n  using SafeMath for uint256;\\n\\n  address constant TRANSFER = address(0xff - 2);\\n  address constant FRACTION_MUL = address(0xff - 3);\\n  address constant PROOF_OF_POSSESSION = address(0xff - 4);\\n  address constant GET_VALIDATOR = address(0xff - 5);\\n  address constant NUMBER_VALIDATORS = address(0xff - 6);\\n  address constant EPOCH_SIZE = address(0xff - 7);\\n  address constant BLOCK_NUMBER_FROM_HEADER = address(0xff - 8);\\n  address constant HASH_HEADER = address(0xff - 9);\\n  address constant GET_PARENT_SEAL_BITMAP = address(0xff - 10);\\n  address constant GET_VERIFIED_SEAL_BITMAP = address(0xff - 11);\\n\\n  /**\\n   * @notice calculate a * b^x for fractions a, b to `decimals` precision\\n   * @param aNumerator Numerator of first fraction\\n   * @param aDenominator Denominator of first fraction\\n   * @param bNumerator Numerator of exponentiated fraction\\n   * @param bDenominator Denominator of exponentiated fraction\\n   * @param exponent exponent to raise b to\\n   * @param _decimals precision\\n   * @return Numerator of the computed quantity (not reduced).\\n   * @return Denominator of the computed quantity (not reduced).\\n   */\\n  function fractionMulExp(\\n    uint256 aNumerator,\\n    uint256 aDenominator,\\n    uint256 bNumerator,\\n    uint256 bDenominator,\\n    uint256 exponent,\\n    uint256 _decimals\\n  ) public view returns (uint256, uint256) {\\n    require(aDenominator != 0 && bDenominator != 0, \\\"a denominator is zero\\\");\\n    uint256 returnNumerator;\\n    uint256 returnDenominator;\\n    bool success;\\n    bytes memory out;\\n    (success, out) = FRACTION_MUL.staticcall(\\n      abi.encodePacked(aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)\\n    );\\n    require(success, \\\"error calling fractionMulExp precompile\\\");\\n    returnNumerator = getUint256FromBytes(out, 0);\\n    returnDenominator = getUint256FromBytes(out, 32);\\n    return (returnNumerator, returnDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the current epoch size in blocks.\\n   * @return The current epoch size in blocks.\\n   */\\n  function getEpochSize() public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = EPOCH_SIZE.staticcall(abi.encodePacked());\\n    require(success, \\\"error calling getEpochSize precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @return Epoch number.\\n   */\\n  function getEpochNumberOfBlock(uint256 blockNumber) public view returns (uint256) {\\n    return epochNumberOfBlock(blockNumber, getEpochSize());\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @return Current epoch number.\\n   */\\n  function getEpochNumber() public view returns (uint256) {\\n    return getEpochNumberOfBlock(block.number);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @param epochSize The epoch size in blocks.\\n   * @return Epoch number.\\n   */\\n  function epochNumberOfBlock(uint256 blockNumber, uint256 epochSize)\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\\n    uint256 epochNumber = blockNumber / epochSize;\\n    if (blockNumber % epochSize == 0) {\\n      return epochNumber;\\n    } else {\\n      return epochNumber.add(1);\\n    }\\n  }\\n\\n  /**\\n   * @notice Gets a validator address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator at the requested index.\\n   */\\n  // TODO: (soloseng) add to precompiles\\n  function validatorSignerAddressFromCurrentSet(uint256 index) public view returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, uint256(block.number)));\\n    require(success, \\\"error calling validatorSignerAddressFromCurrentSet precompile\\\");\\n    return address(getUint256FromBytes(out, 0));\\n  }\\n\\n  /**\\n   * @notice Gets a validator address from the validator set at the given block number.\\n   * @param index Index of requested validator in the validator set.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Address of validator at the requested index.\\n   */\\n  function validatorSignerAddressFromSet(uint256 index, uint256 blockNumber)\\n    public\\n    view\\n    returns (address)\\n  {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, blockNumber));\\n    require(success, \\\"error calling validatorSignerAddressFromSet precompile\\\");\\n    return address(getUint256FromBytes(out, 0));\\n  }\\n\\n  /**\\n   * @notice Gets the size of the current elected validator set.\\n   * @return Size of the current elected validator set.\\n   */\\n  // TODO:(soloseng) add to precompiles.\\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(uint256(block.number)));\\n    require(success, \\\"error calling numberValidatorsInCurrentSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the size of the validator set that must sign the given block number.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Size of the validator set.\\n   */\\n  function numberValidatorsInSet(uint256 blockNumber) public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling numberValidatorsInSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Checks a BLS proof of possession.\\n   * @param sender The address signed by the BLS key to generate the proof of possession.\\n   * @param blsKey The BLS public key that the validator is using for consensus, should pass proof\\n   *   of possession. 48 bytes.\\n   * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\\n   *   account address. 96 bytes.\\n   * @return True upon success.\\n   */\\n  function checkProofOfPossession(address sender, bytes memory blsKey, bytes memory blsPop)\\n    public\\n    view\\n    returns (bool)\\n  {\\n    bool success;\\n    (success, ) = PROOF_OF_POSSESSION.staticcall(abi.encodePacked(sender, blsKey, blsPop));\\n    return success;\\n  }\\n\\n  /**\\n   * @notice Parses block number out of header.\\n   * @param header RLP encoded header\\n   * @return Block number.\\n   */\\n  function getBlockNumberFromHeader(bytes memory header) public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = BLOCK_NUMBER_FROM_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getBlockNumberFromHeader precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Computes hash of header.\\n   * @param header RLP encoded header\\n   * @return Header hash.\\n   */\\n  function hashHeader(bytes memory header) public view returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = HASH_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling hashHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the parent seal bitmap from the header at the given block number.\\n   * @param blockNumber Block number to retrieve. Must be within 4 epochs of the current number.\\n   * @return Bitmap parent seal with set bits at indices corresponding to signing validators.\\n   */\\n  function getParentSealBitmap(uint256 blockNumber) public view returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_PARENT_SEAL_BITMAP.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling getParentSealBitmap precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Verifies the BLS signature on the header and returns the seal bitmap.\\n   * The validator set used for verification is retrieved based on the parent hash field of the\\n   * header.  If the parent hash is not in the blockchain, verification fails.\\n   * @param header RLP encoded header\\n   * @return Bitmap parent seal with set bits at indices correspoinding to signing validators.\\n   */\\n  function getVerifiedSealBitmapFromHeader(bytes memory header) public view returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VERIFIED_SEAL_BITMAP.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getVerifiedSealBitmapFromHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Converts bytes to uint256.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return uint256 data\\n   */\\n  function getUint256FromBytes(bytes memory bs, uint256 start) internal pure returns (uint256) {\\n    return uint256(getBytes32FromBytes(bs, start));\\n  }\\n\\n  /**\\n   * @notice Converts bytes to bytes32.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return bytes32 data\\n   */\\n  function getBytes32FromBytes(bytes memory bs, uint256 start) internal pure returns (bytes32) {\\n    require(bs.length >= start.add(32), \\\"slicing out of range\\\");\\n    bytes32 x;\\n    assembly {\\n      x := mload(add(bs, add(start, 32)))\\n    }\\n    return x;\\n  }\\n\\n  /**\\n   * @notice Returns the minimum number of required signers for a given block number.\\n   * @dev Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\\n   */\\n  function minQuorumSize(uint256 blockNumber) public view returns (uint256) {\\n    return numberValidatorsInSet(blockNumber).mul(2).add(2).div(3);\\n  }\\n\\n  /**\\n   * @notice Computes byzantine quorum from current validator set size\\n   * @return Byzantine quorum of validators.\\n   */\\n  function minQuorumSizeInCurrentSet() public view returns (uint256) {\\n    return minQuorumSize(block.number);\\n  }\\n}\\n\",\"keccak256\":\"0xd46e05170295a0aed352f8fab6798fb37c72e487734b2c0762c8212ed88aa4c2\"},\"project:/contracts/common/UsingRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./interfaces/IAccounts.sol\\\";\\nimport \\\"./interfaces/IFeeCurrencyWhitelist.sol\\\";\\nimport \\\"./interfaces/IFreezer.sol\\\";\\nimport \\\"./interfaces/IRegistry.sol\\\";\\n\\nimport \\\"../governance/interfaces/IElection.sol\\\";\\nimport \\\"../governance/interfaces/IGovernance.sol\\\";\\nimport \\\"../governance/interfaces/ILockedGold.sol\\\";\\nimport \\\"../governance/interfaces/IValidators.sol\\\";\\n\\nimport \\\"../identity/interfaces/IRandom.sol\\\";\\nimport \\\"../identity/interfaces/IAttestations.sol\\\";\\n\\nimport \\\"../../lib/mento-core/contracts/interfaces/IExchange.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IReserve.sol\\\";\\nimport \\\"../../lib/mento-core/contracts/interfaces/IStableToken.sol\\\";\\nimport \\\"../stability/interfaces/ISortedOracles.sol\\\";\\n\\ncontract UsingRegistry is Ownable {\\n  event RegistrySet(address indexed registryAddress);\\n\\n  // solhint-disable state-visibility\\n  bytes32 constant ACCOUNTS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Accounts\\\"));\\n  bytes32 constant ATTESTATIONS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Attestations\\\"));\\n  bytes32 constant DOWNTIME_SLASHER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"DowntimeSlasher\\\"));\\n  bytes32 constant DOUBLE_SIGNING_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"DoubleSigningSlasher\\\")\\n  );\\n  bytes32 constant ELECTION_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Election\\\"));\\n  bytes32 constant EXCHANGE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Exchange\\\"));\\n  bytes32 constant FEE_CURRENCY_WHITELIST_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"FeeCurrencyWhitelist\\\")\\n  );\\n  bytes32 constant FREEZER_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Freezer\\\"));\\n  bytes32 constant GOLD_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"GoldToken\\\"));\\n  bytes32 constant GOVERNANCE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Governance\\\"));\\n  bytes32 constant GOVERNANCE_SLASHER_REGISTRY_ID = keccak256(\\n    abi.encodePacked(\\\"GovernanceSlasher\\\")\\n  );\\n  bytes32 constant LOCKED_GOLD_REGISTRY_ID = keccak256(abi.encodePacked(\\\"LockedGold\\\"));\\n  bytes32 constant RESERVE_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Reserve\\\"));\\n  bytes32 constant RANDOM_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Random\\\"));\\n  bytes32 constant SORTED_ORACLES_REGISTRY_ID = keccak256(abi.encodePacked(\\\"SortedOracles\\\"));\\n  bytes32 constant STABLE_TOKEN_REGISTRY_ID = keccak256(abi.encodePacked(\\\"StableToken\\\"));\\n  bytes32 constant VALIDATORS_REGISTRY_ID = keccak256(abi.encodePacked(\\\"Validators\\\"));\\n  // solhint-enable state-visibility\\n\\n  IRegistry public registry;\\n\\n  modifier onlyRegisteredContract(bytes32 identifierHash) {\\n    require(registry.getAddressForOrDie(identifierHash) == msg.sender, \\\"only registered contract\\\");\\n    _;\\n  }\\n\\n  modifier onlyRegisteredContracts(bytes32[] memory identifierHashes) {\\n    require(registry.isOneOf(identifierHashes, msg.sender), \\\"only registered contracts\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Updates the address pointing to a Registry contract.\\n   * @param registryAddress The address of a registry contract for routing to other contracts.\\n   */\\n  function setRegistry(address registryAddress) public onlyOwner {\\n    require(registryAddress != address(0), \\\"Cannot register the null address\\\");\\n    registry = IRegistry(registryAddress);\\n    emit RegistrySet(registryAddress);\\n  }\\n\\n  function getAccounts() internal view returns (IAccounts) {\\n    return IAccounts(registry.getAddressForOrDie(ACCOUNTS_REGISTRY_ID));\\n  }\\n\\n  function getAttestations() internal view returns (IAttestations) {\\n    return IAttestations(registry.getAddressForOrDie(ATTESTATIONS_REGISTRY_ID));\\n  }\\n\\n  function getElection() internal view returns (IElection) {\\n    return IElection(registry.getAddressForOrDie(ELECTION_REGISTRY_ID));\\n  }\\n\\n  function getExchange() internal view returns (IExchange) {\\n    return IExchange(registry.getAddressForOrDie(EXCHANGE_REGISTRY_ID));\\n  }\\n\\n  function getFeeCurrencyWhitelistRegistry() internal view returns (IFeeCurrencyWhitelist) {\\n    return IFeeCurrencyWhitelist(registry.getAddressForOrDie(FEE_CURRENCY_WHITELIST_REGISTRY_ID));\\n  }\\n\\n  function getFreezer() internal view returns (IFreezer) {\\n    return IFreezer(registry.getAddressForOrDie(FREEZER_REGISTRY_ID));\\n  }\\n\\n  function getGoldToken() internal view returns (IERC20) {\\n    return IERC20(registry.getAddressForOrDie(GOLD_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getGovernance() internal view returns (IGovernance) {\\n    return IGovernance(registry.getAddressForOrDie(GOVERNANCE_REGISTRY_ID));\\n  }\\n\\n  function getLockedGold() internal view returns (ILockedGold) {\\n    return ILockedGold(registry.getAddressForOrDie(LOCKED_GOLD_REGISTRY_ID));\\n  }\\n\\n  function getRandom() internal view returns (IRandom) {\\n    return IRandom(registry.getAddressForOrDie(RANDOM_REGISTRY_ID));\\n  }\\n\\n  function getReserve() internal view returns (IReserve) {\\n    return IReserve(registry.getAddressForOrDie(RESERVE_REGISTRY_ID));\\n  }\\n\\n  function getSortedOracles() internal view returns (ISortedOracles) {\\n    return ISortedOracles(registry.getAddressForOrDie(SORTED_ORACLES_REGISTRY_ID));\\n  }\\n\\n  function getStableToken() internal view returns (IStableToken) {\\n    return IStableToken(registry.getAddressForOrDie(STABLE_TOKEN_REGISTRY_ID));\\n  }\\n\\n  function getValidators() internal view returns (IValidators) {\\n    return IValidators(registry.getAddressForOrDie(VALIDATORS_REGISTRY_ID));\\n  }\\n}\\n\",\"keccak256\":\"0x31ec0f16867a35046f9e1211ac3457198e39abc2362d2d559f4ccc4a3985a9ac\"},\"project:/contracts/common/interfaces/IAccounts.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAccounts {\\n  function isAccount(address) external view returns (bool);\\n  function voteSignerToAccount(address) external view returns (address);\\n  function validatorSignerToAccount(address) external view returns (address);\\n  function attestationSignerToAccount(address) external view returns (address);\\n  function signerToAccount(address) external view returns (address);\\n  function getAttestationSigner(address) external view returns (address);\\n  function getValidatorSigner(address) external view returns (address);\\n  function getVoteSigner(address) external view returns (address);\\n  function hasAuthorizedVoteSigner(address) external view returns (bool);\\n  function hasAuthorizedValidatorSigner(address) external view returns (bool);\\n  function hasAuthorizedAttestationSigner(address) external view returns (bool);\\n\\n  function setAccountDataEncryptionKey(bytes calldata) external;\\n  function setMetadataURL(string calldata) external;\\n  function setName(string calldata) external;\\n  function setWalletAddress(address, uint8, bytes32, bytes32) external;\\n  function setAccount(string calldata, bytes calldata, address, uint8, bytes32, bytes32) external;\\n\\n  function getDataEncryptionKey(address) external view returns (bytes memory);\\n  function getWalletAddress(address) external view returns (address);\\n  function getMetadataURL(address) external view returns (string memory);\\n  function batchGetMetadataURL(address[] calldata)\\n    external\\n    view\\n    returns (uint256[] memory, bytes memory);\\n  function getName(address) external view returns (string memory);\\n\\n  function authorizeVoteSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSigner(address, uint8, bytes32, bytes32) external;\\n  function authorizeValidatorSignerWithPublicKey(address, uint8, bytes32, bytes32, bytes calldata)\\n    external;\\n  function authorizeValidatorSignerWithKeys(\\n    address,\\n    uint8,\\n    bytes32,\\n    bytes32,\\n    bytes calldata,\\n    bytes calldata,\\n    bytes calldata\\n  ) external;\\n  function authorizeAttestationSigner(address, uint8, bytes32, bytes32) external;\\n  function createAccount() external returns (bool);\\n\\n  function setPaymentDelegation(address, uint256) external;\\n  function getPaymentDelegation(address) external view returns (address, uint256);\\n  function isSigner(address, address, bytes32) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x17a0ff4b1c2da32f5de9c0fe230fcb325b2bbabcf51980cfb425cec75f678f5e\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n    * @return Storage version of the contract.\\n    * @return Major version of the contract.\\n    * @return Minor version of the contract.\\n    * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x27f0b14472db998eb8e4b529bbfd6a5879cbd842f8db8aa6c06ed7d2e0b17ac1\"},\"project:/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFeeCurrencyWhitelist {\\n  function addToken(address) external;\\n  function getWhitelist() external view returns (address[] memory);\\n}\\n\",\"keccak256\":\"0x4a91e634d22e8b8c36ef16113d7403029f334affb38f2453f0453f4ba06a925e\"},\"project:/contracts/common/interfaces/IFreezer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IFreezer {\\n  function isFrozen(address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x6c34df21ba7ae83d9b47153bec2ffdb74128c11c0a9f20edaca927967fda4786\"},\"project:/contracts/common/interfaces/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRegistry {\\n  function setAddressFor(string calldata, address) external;\\n  function getAddressForOrDie(bytes32) external view returns (address);\\n  function getAddressFor(bytes32) external view returns (address);\\n  function getAddressForStringOrDie(string calldata identifier) external view returns (address);\\n  function getAddressForString(string calldata identifier) external view returns (address);\\n  function isOneOf(bytes32[] calldata, address) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7737cbda6f3519bf6a4108e07b2c991a655e8731a4c040a3681e9629cfc4b52d\"},\"project:/contracts/common/libraries/ReentrancyGuard.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title Helps contracts guard against reentrancy attacks.\\n * @author Remco Bloemen <remco@2\\u03c0.com>, Eenae <alexey@mixbytes.io>\\n * @dev If you mark a function `nonReentrant`, you should also\\n * mark it `external`.\\n */\\ncontract ReentrancyGuard {\\n  /// @dev counter to allow mutex lock with only one SSTORE operation\\n  uint256 private _guardCounter;\\n\\n  constructor() internal {\\n    // The counter starts at one to prevent changing it from zero to a non-zero\\n    // value, which is a more expensive operation.\\n    _guardCounter = 1;\\n  }\\n\\n  /**\\n   * @dev Prevents a contract from calling itself, directly or indirectly.\\n   * Calling a `nonReentrant` function from another `nonReentrant`\\n   * function is not supported. It is possible to prevent this from happening\\n   * by making the `nonReentrant` function external, and make it call a\\n   * `private` function that does the actual work.\\n   */\\n  modifier nonReentrant() {\\n    _guardCounter += 1;\\n    uint256 localCounter = _guardCounter;\\n    _;\\n    require(localCounter == _guardCounter, \\\"reentrant call\\\");\\n  }\\n}\\n\",\"keccak256\":\"0xa2584554532d7004ca3d2d168cd9dfb7694605f1a32431af4d1b7d834fa6b08d\"},\"project:/contracts/governance/interfaces/IElection.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IElection {\\n  function electValidatorSigners() external view returns (address[] memory);\\n  function electNValidatorSigners(uint256, uint256) external view returns (address[] memory);\\n  function vote(address, uint256, address, address) external returns (bool);\\n  function activate(address) external returns (bool);\\n  function revokeActive(address, uint256, address, address, uint256) external returns (bool);\\n  function revokeAllActive(address, address, address, uint256) external returns (bool);\\n  function revokePending(address, uint256, address, address, uint256) external returns (bool);\\n  function markGroupIneligible(address) external;\\n  function markGroupEligible(address, address, address) external;\\n  function allowedToVoteOverMaxNumberOfGroups(address) external returns (bool);\\n  function forceDecrementVotes(\\n    address,\\n    uint256,\\n    address[] calldata,\\n    address[] calldata,\\n    uint256[] calldata\\n  ) external returns (uint256);\\n  function setAllowedToVoteOverMaxNumberOfGroups(bool flag) external;\\n\\n  // view functions\\n  function getElectableValidators() external view returns (uint256, uint256);\\n  function getElectabilityThreshold() external view returns (uint256);\\n  function getNumVotesReceivable(address) external view returns (uint256);\\n  function getTotalVotes() external view returns (uint256);\\n  function getActiveVotes() external view returns (uint256);\\n  function getTotalVotesByAccount(address) external view returns (uint256);\\n  function getPendingVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroupByAccount(address, address) external view returns (uint256);\\n  function getActiveVoteUnitsForGroupByAccount(address, address) external view returns (uint256);\\n  function getTotalVotesForGroup(address) external view returns (uint256);\\n  function getActiveVotesForGroup(address) external view returns (uint256);\\n  function getPendingVotesForGroup(address) external view returns (uint256);\\n  function getGroupEligibility(address) external view returns (bool);\\n  function getGroupEpochRewards(address, uint256, uint256[] calldata)\\n    external\\n    view\\n    returns (uint256);\\n  function getGroupsVotedForByAccount(address) external view returns (address[] memory);\\n  function getEligibleValidatorGroups() external view returns (address[] memory);\\n  function getTotalVotesForEligibleValidatorGroups()\\n    external\\n    view\\n    returns (address[] memory, uint256[] memory);\\n  function getCurrentValidatorSigners() external view returns (address[] memory);\\n  function canReceiveVotes(address, uint256) external view returns (bool);\\n  function hasActivatablePendingVotes(address, address) external view returns (bool);\\n  function validatorSignerAddressFromCurrentSet(uint256 index) external view returns (address);\\n  function numberValidatorsInCurrentSet() external view returns (uint256);\\n\\n  // only owner\\n  function setElectableValidators(uint256, uint256) external returns (bool);\\n  function setMaxNumGroupsVotedFor(uint256) external returns (bool);\\n  function setElectabilityThreshold(uint256) external returns (bool);\\n\\n  // only VM\\n  function distributeEpochRewards(address, uint256, address, address) external;\\n}\\n\",\"keccak256\":\"0x2b7195aaef2f49cfd9a5b1106fd6841701e0dc92752b97d4909947b3127460c7\"},\"project:/contracts/governance/interfaces/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IGovernance {\\n  function removeVotesWhenRevokingDelegatedVotes(address account, uint256 maxAmountAllowed)\\n    external;\\n  function votePartially(\\n    uint256 proposalId,\\n    uint256 index,\\n    uint256 yesVotes,\\n    uint256 noVotes,\\n    uint256 abstainVotes\\n  ) external returns (bool);\\n\\n  function isVoting(address) external view returns (bool);\\n  function getAmountOfGoldUsedForVoting(address account) external view returns (uint256);\\n\\n  function getProposal(uint256 proposalId)\\n    external\\n    view\\n    returns (address, uint256, uint256, uint256, string memory, uint256, bool);\\n\\n  function getReferendumStageDuration() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x19499ae304c70805e523ebf674c2983e8dc428f49a9da5b89e8450c2cd12997b\"},\"project:/contracts/governance/interfaces/ILockedGold.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ILockedGold {\\n  function lock() external payable;\\n  function incrementNonvotingAccountBalance(address, uint256) external;\\n  function decrementNonvotingAccountBalance(address, uint256) external;\\n  function getAccountTotalLockedGold(address) external view returns (uint256);\\n  function getTotalLockedGold() external view returns (uint256);\\n  function getPendingWithdrawals(address)\\n    external\\n    view\\n    returns (uint256[] memory, uint256[] memory);\\n  function getPendingWithdrawal(address account, uint256 index)\\n    external\\n    view\\n    returns (uint256, uint256);\\n  function getTotalPendingWithdrawals(address) external view returns (uint256);\\n  function unlock(uint256) external;\\n  function relock(uint256, uint256) external;\\n  function withdraw(uint256) external;\\n  function slash(\\n    address account,\\n    uint256 penalty,\\n    address reporter,\\n    uint256 reward,\\n    address[] calldata lessers,\\n    address[] calldata greaters,\\n    uint256[] calldata indices\\n  ) external;\\n  function isSlasher(address) external view returns (bool);\\n\\n  function getAccountTotalDelegatedFraction(address account) external view returns (uint256);\\n\\n  function getAccountTotalGovernanceVotingPower(address account) external view returns (uint256);\\n  function unlockingPeriod() external view returns (uint256);\\n  function getAccountNonvotingLockedGold(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6530457f85fc492a9714baca95f52a915dc91472cbd1f987ab4347d2e2d1bc\"},\"project:/contracts/governance/interfaces/IValidators.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IValidators {\\n  function registerValidator(bytes calldata, bytes calldata, bytes calldata)\\n    external\\n    returns (bool);\\n  function deregisterValidator(uint256) external returns (bool);\\n  function affiliate(address) external returns (bool);\\n  function deaffiliate() external returns (bool);\\n  function updateBlsPublicKey(bytes calldata, bytes calldata) external returns (bool);\\n  function registerValidatorGroup(uint256) external returns (bool);\\n  function deregisterValidatorGroup(uint256) external returns (bool);\\n  function addMember(address) external returns (bool);\\n  function addFirstMember(address, address, address) external returns (bool);\\n  function removeMember(address) external returns (bool);\\n  function reorderMember(address, address, address) external returns (bool);\\n  function updateCommission() external;\\n  function setNextCommissionUpdate(uint256) external;\\n  function resetSlashingMultiplier() external;\\n\\n  // only owner\\n  function setCommissionUpdateDelay(uint256) external;\\n  function setMaxGroupSize(uint256) external returns (bool);\\n  function setMembershipHistoryLength(uint256) external returns (bool);\\n  function setValidatorScoreParameters(uint256, uint256) external returns (bool);\\n  function setGroupLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setValidatorLockedGoldRequirements(uint256, uint256) external returns (bool);\\n  function setSlashingMultiplierResetPeriod(uint256) external;\\n\\n  // view functions\\n  function getMaxGroupSize() external view returns (uint256);\\n  function getCommissionUpdateDelay() external view returns (uint256);\\n  function getValidatorScoreParameters() external view returns (uint256, uint256);\\n  function getMembershipHistory(address)\\n    external\\n    view\\n    returns (uint256[] memory, address[] memory, uint256, uint256);\\n  function calculateEpochScore(uint256) external view returns (uint256);\\n  function calculateGroupEpochScore(uint256[] calldata) external view returns (uint256);\\n  function getAccountLockedGoldRequirement(address) external view returns (uint256);\\n  function meetsAccountLockedGoldRequirements(address) external view returns (bool);\\n  function getValidatorBlsPublicKeyFromSigner(address) external view returns (bytes memory);\\n  function getValidator(address account)\\n    external\\n    view\\n    returns (bytes memory, bytes memory, address, uint256, address);\\n  function getValidatorGroup(address)\\n    external\\n    view\\n    returns (address[] memory, uint256, uint256, uint256, uint256[] memory, uint256, uint256);\\n  function getGroupNumMembers(address) external view returns (uint256);\\n  function getTopGroupValidators(address, uint256) external view returns (address[] memory);\\n  function getGroupsNumMembers(address[] calldata accounts)\\n    external\\n    view\\n    returns (uint256[] memory);\\n  function getNumRegisteredValidators() external view returns (uint256);\\n  function groupMembershipInEpoch(address, uint256, uint256) external view returns (address);\\n\\n  // only registered contract\\n  function updateEcdsaPublicKey(address, address, bytes calldata) external returns (bool);\\n  function updatePublicKeys(address, address, bytes calldata, bytes calldata, bytes calldata)\\n    external\\n    returns (bool);\\n  function getValidatorLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getGroupLockedGoldRequirements() external view returns (uint256, uint256);\\n  function getRegisteredValidators() external view returns (address[] memory);\\n  function getRegisteredValidatorSigners() external view returns (address[] memory);\\n  function getRegisteredValidatorGroups() external view returns (address[] memory);\\n  function isValidatorGroup(address) external view returns (bool);\\n  function isValidator(address) external view returns (bool);\\n  function getValidatorGroupSlashingMultiplier(address) external view returns (uint256);\\n  function getMembershipInLastEpoch(address) external view returns (address);\\n  function getMembershipInLastEpochFromSigner(address) external view returns (address);\\n\\n  // only VM\\n  function updateValidatorScoreFromSigner(address, uint256) external;\\n  function distributeEpochPaymentsFromSigner(address, uint256) external returns (uint256);\\n\\n  // only slasher\\n  function forceDeaffiliateIfValidator(address) external;\\n  function halveSlashingMultiplier(address) external;\\n\\n}\\n\",\"keccak256\":\"0xedb1f9717f0ea77f30cb7fa40bfd3704dcfdc17252082c4bf5caaea205c83d9a\"},\"project:/contracts/identity/Attestations.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/utils/SafeCast.sol\\\";\\n\\nimport \\\"./interfaces/IAttestations.sol\\\";\\nimport \\\"../common/interfaces/IAccounts.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"../common/UsingRegistry.sol\\\";\\nimport \\\"../common/Signatures.sol\\\";\\nimport \\\"../common/UsingPrecompiles.sol\\\";\\nimport \\\"../common/libraries/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title Contract mapping identifiers to accounts\\n */\\ncontract Attestations is\\n  IAttestations,\\n  ICeloVersionedContract,\\n  Ownable,\\n  Initializable,\\n  UsingRegistry,\\n  ReentrancyGuard,\\n  UsingPrecompiles\\n{\\n  using SafeMath for uint256;\\n  using SafeCast for uint256;\\n\\n  enum AttestationStatus { None, Incomplete, Complete }\\n\\n  struct Attestation {\\n    AttestationStatus status;\\n    // For outstanding attestations, this is the block number of the request.\\n    // For completed attestations, this is the block number of the attestation completion.\\n    uint32 blockNumber;\\n    // The token with which attestation request fees were paid.\\n    address attestationRequestFeeToken;\\n  }\\n\\n  // Stores attestations state for a single (identifier, account address) pair.\\n  struct AttestedAddress {\\n    // Total number of requested attestations.\\n    uint32 requested;\\n    // Total number of completed attestations.\\n    uint32 completed;\\n    // List of selected issuers responsible for attestations. The length of this list\\n    // might be smaller than `requested` (which represents the total number of requested\\n    // attestations) if users are not calling `selectIssuers` on unselected requests.\\n    address[] selectedIssuers;\\n    // State of each attestation keyed by issuer.\\n    mapping(address => Attestation) issuedAttestations;\\n  }\\n\\n  struct UnselectedRequest {\\n    // The block at which the attestations were requested.\\n    uint32 blockNumber;\\n    // The number of attestations that were requested.\\n    uint32 attestationsRequested;\\n    // The token with which attestation request fees were paid in this request.\\n    address attestationRequestFeeToken;\\n  }\\n\\n  struct IdentifierState {\\n    // All account addresses associated with this identifier.\\n    address[] accounts;\\n    // Keeps the state of attestations for account addresses for this identifier.\\n    mapping(address => AttestedAddress) attestations;\\n    // Temporarily stores attestation requests for which issuers should be selected by the account.\\n    mapping(address => UnselectedRequest) unselectedRequests;\\n  }\\n\\n  mapping(bytes32 => IdentifierState) identifiers;\\n\\n  // The duration in blocks in which an attestation can be completed from the block in which the\\n  // attestation was requested.\\n  uint256 public attestationExpiryBlocks;\\n\\n  // The duration to wait until selectIssuers can be called for an attestation request.\\n  uint256 public selectIssuersWaitBlocks;\\n\\n  // Limit the maximum number of attestations that can be requested\\n  uint256 public maxAttestations;\\n\\n  // The fees that are associated with attestations for a particular token.\\n  mapping(address => uint256) public attestationRequestFees;\\n\\n  // Maps a token and attestation issuer to the amount that they're owed.\\n  mapping(address => mapping(address => uint256)) public pendingWithdrawals;\\n\\n  // Attestation transfer approvals, keyed by user and keccak(identifier, from, to)\\n  mapping(address => mapping(bytes32 => bool)) public transferApprovals;\\n\\n  event AttestationsRequested(\\n    bytes32 indexed identifier,\\n    address indexed account,\\n    uint256 attestationsRequested,\\n    address attestationRequestFeeToken\\n  );\\n\\n  event AttestationIssuerSelected(\\n    bytes32 indexed identifier,\\n    address indexed account,\\n    address indexed issuer,\\n    address attestationRequestFeeToken\\n  );\\n\\n  event AttestationCompleted(\\n    bytes32 indexed identifier,\\n    address indexed account,\\n    address indexed issuer\\n  );\\n\\n  event Withdrawal(address indexed account, address indexed token, uint256 amount);\\n  event AttestationExpiryBlocksSet(uint256 value);\\n  event AttestationRequestFeeSet(address indexed token, uint256 value);\\n  event SelectIssuersWaitBlocksSet(uint256 value);\\n  event MaxAttestationsSet(uint256 value);\\n  event AttestationsTransferred(\\n    bytes32 indexed identifier,\\n    address indexed fromAccount,\\n    address indexed toAccount\\n  );\\n  event TransferApproval(\\n    address indexed approver,\\n    bytes32 indexed indentifier,\\n    address from,\\n    address to,\\n    bool approved\\n  );\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param registryAddress The address of the registry core smart contract.\\n   * @param _attestationExpiryBlocks The new limit on blocks allowed to come between requesting\\n   * an attestation and completing it.\\n   * @param _selectIssuersWaitBlocks The wait period in blocks to call selectIssuers on attestation\\n   * requests.\\n   * @param attestationRequestFeeTokens The address of tokens that fees should be payable in.\\n   * @param attestationRequestFeeValues The corresponding fee values.\\n   */\\n  function initialize(\\n    address registryAddress,\\n    uint256 _attestationExpiryBlocks,\\n    uint256 _selectIssuersWaitBlocks,\\n    uint256 _maxAttestations,\\n    address[] calldata attestationRequestFeeTokens,\\n    uint256[] calldata attestationRequestFeeValues\\n  ) external initializer {\\n    _transferOwnership(msg.sender);\\n    setRegistry(registryAddress);\\n    setAttestationExpiryBlocks(_attestationExpiryBlocks);\\n    setSelectIssuersWaitBlocks(_selectIssuersWaitBlocks);\\n    setMaxAttestations(_maxAttestations);\\n\\n    require(\\n      attestationRequestFeeTokens.length > 0 &&\\n        attestationRequestFeeTokens.length == attestationRequestFeeValues.length,\\n      \\\"attestationRequestFeeTokens specification was invalid\\\"\\n    );\\n    for (uint256 i = 0; i < attestationRequestFeeTokens.length; i = i.add(1)) {\\n      setAttestationRequestFee(attestationRequestFeeTokens[i], attestationRequestFeeValues[i]);\\n    }\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 2, 0, 0);\\n  }\\n\\n  /**\\n   * @notice Revokes an account for an identifier.\\n   * @param identifier The identifier for which to revoke.\\n   * @param index The index of the account in the accounts array.\\n   */\\n  function revoke(bytes32 identifier, uint256 index) external {\\n    uint256 numAccounts = identifiers[identifier].accounts.length;\\n    require(index < numAccounts, \\\"Index is invalid\\\");\\n    require(\\n      msg.sender == identifiers[identifier].accounts[index],\\n      \\\"Index does not match msg.sender\\\"\\n    );\\n\\n    uint256 newNumAccounts = numAccounts.sub(1);\\n    if (index != newNumAccounts) {\\n      identifiers[identifier].accounts[index] = identifiers[identifier].accounts[newNumAccounts];\\n    }\\n    identifiers[identifier].accounts[newNumAccounts] = address(0x0);\\n    identifiers[identifier].accounts.length = identifiers[identifier].accounts.length.sub(1);\\n  }\\n\\n  /**\\n   * @notice Allows issuers to withdraw accumulated attestation rewards.\\n   * @param token The address of the token that will be withdrawn.\\n   * @dev Throws if msg.sender does not have any rewards to withdraw.\\n   */\\n  function withdraw(address token) external {\\n    address issuer = getAccounts().attestationSignerToAccount(msg.sender);\\n    uint256 value = pendingWithdrawals[token][issuer];\\n    require(value > 0, \\\"value was negative/zero\\\");\\n    pendingWithdrawals[token][issuer] = 0;\\n    require(IERC20(token).transfer(issuer, value), \\\"token transfer failed\\\");\\n    emit Withdrawal(issuer, token, value);\\n  }\\n\\n  /**\\n   * @notice Returns the unselected attestation request for an identifier/account pair, if any.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @return block Block number at which was requested.\\n   * @return number Number of unselected requests.\\n   * @return address Address of the token with which this attestation request was paid for.\\n   */\\n  function getUnselectedRequest(bytes32 identifier, address account)\\n    external\\n    view\\n    returns (uint32, uint32, address)\\n  {\\n    return (\\n      identifiers[identifier].unselectedRequests[account].blockNumber,\\n      identifiers[identifier].unselectedRequests[account].attestationsRequested,\\n      identifiers[identifier].unselectedRequests[account].attestationRequestFeeToken\\n    );\\n  }\\n\\n  /**\\n   * @notice Returns selected attestation issuers for a identifier/account pair.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @return Addresses of the selected attestation issuers.\\n   */\\n  function getAttestationIssuers(bytes32 identifier, address account)\\n    external\\n    view\\n    returns (address[] memory)\\n  {\\n    return identifiers[identifier].attestations[account].selectedIssuers;\\n  }\\n\\n  /**\\n   * @notice Returns attestation stats for a identifier/account pair.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @return completed Number of completed attestations.\\n   * @return requested Number of total requested attestations.\\n   */\\n  function getAttestationStats(bytes32 identifier, address account)\\n    external\\n    view\\n    returns (uint32, uint32)\\n  {\\n    return (\\n      identifiers[identifier].attestations[account].completed,\\n      identifiers[identifier].attestations[account].requested\\n    );\\n  }\\n\\n  /**\\n   * @notice Batch lookup function to determine attestation stats for a list of identifiers.\\n   * @param identifiersToLookup Array of n identifiers.\\n   * @return [0] Array of number of matching accounts per identifier.\\n   * @return [1] Array of sum([0]) matching walletAddresses.\\n   * @return [2] Array of sum([0]) numbers indicating the completions for each account.\\n   * @return [3] Array of sum([0]) numbers indicating the total number of requested\\n                 attestations for each account.\\n   */\\n  function batchGetAttestationStats(bytes32[] calldata identifiersToLookup)\\n    external\\n    view\\n    returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory)\\n  {\\n    require(identifiersToLookup.length > 0, \\\"You have to pass at least one identifier\\\");\\n\\n    uint256[] memory matches;\\n    address[] memory addresses;\\n\\n    (matches, addresses) = batchlookupAccountsForIdentifier(identifiersToLookup);\\n\\n    uint64[] memory completed = new uint64[](addresses.length);\\n    uint64[] memory total = new uint64[](addresses.length);\\n\\n    uint256 currentIndex = 0;\\n    for (uint256 i = 0; i < identifiersToLookup.length; i = i.add(1)) {\\n      address[] memory addrs = identifiers[identifiersToLookup[i]].accounts;\\n      for (uint256 matchIndex = 0; matchIndex < matches[i]; matchIndex = matchIndex.add(1)) {\\n        addresses[currentIndex] = getAccounts().getWalletAddress(addrs[matchIndex]);\\n        completed[currentIndex] = identifiers[identifiersToLookup[i]]\\n          .attestations[addrs[matchIndex]]\\n          .completed;\\n        total[currentIndex] = identifiers[identifiersToLookup[i]].attestations[addrs[matchIndex]]\\n          .requested;\\n        currentIndex = currentIndex.add(1);\\n      }\\n    }\\n\\n    return (matches, addresses, completed, total);\\n  }\\n\\n  /**\\n   * @notice Returns the state of a specific attestation.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @param issuer Address of the issuer.\\n   * @return status Status of the attestation.\\n   * @return block Block number of request/completion the attestation.\\n   * @return address Address of the token with which this attestation request was paid for.\\n   */\\n  function getAttestationState(bytes32 identifier, address account, address issuer)\\n    external\\n    view\\n    returns (uint8, uint32, address)\\n  {\\n    Attestation storage attestation = identifiers[identifier].attestations[account]\\n      .issuedAttestations[issuer];\\n    return (\\n      uint8(attestation.status),\\n      attestation.blockNumber,\\n      attestation.attestationRequestFeeToken\\n    );\\n\\n  }\\n\\n  /**\\n    * @notice Returns the state of all attestations that are completable\\n    * @param identifier Hash of the identifier.\\n    * @param account Address of the account.\\n    * @return Block number of request/completion the attestation.\\n    * @return Address of the issuer.\\n    * @return The length of each metadataURL string for each issuer.\\n    * @return All strings concatenated.\\n    */\\n  function getCompletableAttestations(bytes32 identifier, address account)\\n    external\\n    view\\n    returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory)\\n  {\\n    AttestedAddress storage state = identifiers[identifier].attestations[account];\\n    address[] storage issuers = state.selectedIssuers;\\n\\n    uint256 num = 0;\\n    for (uint256 i = 0; i < issuers.length; i = i.add(1)) {\\n      if (isAttestationCompletable(state.issuedAttestations[issuers[i]])) {\\n        num = num.add(1);\\n      }\\n    }\\n\\n    uint32[] memory blockNumbers = new uint32[](num);\\n    address[] memory completableIssuers = new address[](num);\\n\\n    uint256 pointer = 0;\\n    for (uint256 i = 0; i < issuers.length; i = i.add(1)) {\\n      if (isAttestationCompletable(state.issuedAttestations[issuers[i]])) {\\n        blockNumbers[pointer] = state.issuedAttestations[issuers[i]].blockNumber;\\n        completableIssuers[pointer] = issuers[i];\\n        pointer = pointer.add(1);\\n      }\\n    }\\n\\n    uint256[] memory stringLengths;\\n    bytes memory stringData;\\n    (stringLengths, stringData) = getAccounts().batchGetMetadataURL(completableIssuers);\\n    return (blockNumbers, completableIssuers, stringLengths, stringData);\\n  }\\n\\n  /**\\n   * @notice Returns the fee set for a particular token.\\n   * @param token Address of the attestationRequestFeeToken.\\n   * @return The fee.\\n   */\\n  function getAttestationRequestFee(address token) external view returns (uint256) {\\n    return attestationRequestFees[token];\\n  }\\n\\n  /**\\n   * @notice Updates the fee  for a particular token.\\n   * @param token The address of the attestationRequestFeeToken.\\n   * @param fee The fee in 'token' that is required for each attestation.\\n   */\\n  function setAttestationRequestFee(address token, uint256 fee) public onlyOwner {\\n    require(fee > 0, \\\"You have to specify a fee greater than 0\\\");\\n    attestationRequestFees[token] = fee;\\n    emit AttestationRequestFeeSet(token, fee);\\n  }\\n\\n  /**\\n   * @notice Updates 'attestationExpiryBlocks'.\\n   * @param _attestationExpiryBlocks The new limit on blocks allowed to come between requesting\\n   * an attestation and completing it.\\n   */\\n  function setAttestationExpiryBlocks(uint256 _attestationExpiryBlocks) public onlyOwner {\\n    require(_attestationExpiryBlocks > 0, \\\"attestationExpiryBlocks has to be greater than 0\\\");\\n    attestationExpiryBlocks = _attestationExpiryBlocks;\\n    emit AttestationExpiryBlocksSet(_attestationExpiryBlocks);\\n  }\\n\\n  /**\\n   * @notice Updates 'selectIssuersWaitBlocks'.\\n   * @param _selectIssuersWaitBlocks The wait period in blocks to call selectIssuers on attestation\\n   *                                 requests.\\n   */\\n  function setSelectIssuersWaitBlocks(uint256 _selectIssuersWaitBlocks) public onlyOwner {\\n    require(_selectIssuersWaitBlocks > 0, \\\"selectIssuersWaitBlocks has to be greater than 0\\\");\\n    selectIssuersWaitBlocks = _selectIssuersWaitBlocks;\\n    emit SelectIssuersWaitBlocksSet(_selectIssuersWaitBlocks);\\n  }\\n\\n  /**\\n   * @notice Updates 'maxAttestations'.\\n   * @param _maxAttestations Maximum number of attestations that can be requested.\\n   */\\n  function setMaxAttestations(uint256 _maxAttestations) public onlyOwner {\\n    require(_maxAttestations > 0, \\\"maxAttestations has to be greater than 0\\\");\\n    maxAttestations = _maxAttestations;\\n    emit MaxAttestationsSet(_maxAttestations);\\n  }\\n\\n  /**\\n   * @notice Query 'maxAttestations'\\n   * @return Maximum number of attestations that can be requested.\\n   */\\n  function getMaxAttestations() external view returns (uint256) {\\n    return maxAttestations;\\n  }\\n\\n  /**\\n   * @notice Validates the given attestation code.\\n   * @param identifier The hash of the identifier to be attested.\\n   * @param account Address of the account. \\n   * @param v The recovery id of the incoming ECDSA signature.\\n   * @param r Output value r of the ECDSA signature.\\n   * @param s Output value s of the ECDSA signature.\\n   * @return The issuer of the corresponding attestation.\\n   * @dev Throws if there is no matching outstanding attestation request.\\n   * @dev Throws if the attestation window has passed.\\n   */\\n  function validateAttestationCode(\\n    bytes32 identifier,\\n    address account,\\n    uint8 v,\\n    bytes32 r,\\n    bytes32 s\\n  ) public view returns (address) {\\n    bytes32 codehash = keccak256(abi.encodePacked(identifier, account));\\n    address signer = Signatures.getSignerOfMessageHash(codehash, v, r, s);\\n    address issuer = getAccounts().attestationSignerToAccount(signer);\\n\\n    Attestation storage attestation = identifiers[identifier].attestations[account]\\n      .issuedAttestations[issuer];\\n\\n    require(\\n      attestation.status == AttestationStatus.Incomplete,\\n      \\\"Attestation code does not match any outstanding attestation\\\"\\n    );\\n    require(!isAttestationExpired(attestation.blockNumber), \\\"Attestation timed out\\\");\\n\\n    return issuer;\\n  }\\n\\n  function lookupAccountsForIdentifier(bytes32 identifier)\\n    external\\n    view\\n    returns (address[] memory)\\n  {\\n    return identifiers[identifier].accounts;\\n  }\\n\\n  /**\\n   * @notice Require that a given identifier/address pair has\\n   * requested a specific number of attestations.\\n   * @param identifier Hash of the identifier.\\n   * @param account Address of the account.\\n   * @param expected Number of expected attestations\\n   * @dev It can be used when batching meta-transactions to validate\\n   * attestation are requested as expected in untrusted scenarios\\n   */\\n  function requireNAttestationsRequested(bytes32 identifier, address account, uint32 expected)\\n    external\\n    view\\n  {\\n    uint256 requested = identifiers[identifier].attestations[account].requested;\\n    require(requested == expected, \\\"requested attestations does not match expected\\\");\\n  }\\n\\n  /**\\n   * @notice Helper function for batchGetAttestationStats to calculate the\\n             total number of addresses that have >0 complete attestations for the identifiers.\\n   * @param identifiersToLookup Array of n identifiers.\\n   * @return Array of numbers that indicate the number of matching addresses per identifier.\\n   * @return Array of addresses preallocated for total number of matches.\\n   */\\n  function batchlookupAccountsForIdentifier(bytes32[] memory identifiersToLookup)\\n    internal\\n    view\\n    returns (uint256[] memory, address[] memory)\\n  {\\n    require(identifiersToLookup.length > 0, \\\"You have to pass at least one identifier\\\");\\n    uint256 totalAddresses = 0;\\n    uint256[] memory matches = new uint256[](identifiersToLookup.length);\\n\\n    for (uint256 i = 0; i < identifiersToLookup.length; i = i.add(1)) {\\n      uint256 count = identifiers[identifiersToLookup[i]].accounts.length;\\n\\n      totalAddresses = totalAddresses.add(count);\\n      matches[i] = count;\\n    }\\n\\n    return (matches, new address[](totalAddresses));\\n  }\\n\\n  function isAttestationExpired(uint32 attestationRequestBlock) internal view returns (bool) {\\n    return block.number >= uint256(attestationRequestBlock).add(attestationExpiryBlocks);\\n  }\\n\\n  function isAttestationCompletable(Attestation storage attestation) internal view returns (bool) {\\n    return (attestation.status == AttestationStatus.Incomplete &&\\n      !isAttestationExpired(attestation.blockNumber));\\n  }\\n\\n  function isAttestationRequestSelectable(uint256 attestationRequestBlock)\\n    internal\\n    view\\n    returns (bool)\\n  {\\n    return block.number < attestationRequestBlock.add(getRandom().randomnessBlockRetentionWindow());\\n  }\\n}\\n\",\"keccak256\":\"0x65621937380f38d207f9c674c7902949fe948ea6985faa2aaf00ae7277eb9ad9\"},\"project:/contracts/identity/interfaces/IAttestations.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IAttestations {\\n  function revoke(bytes32, uint256) external;\\n  function withdraw(address) external;\\n\\n  // view functions\\n  function getUnselectedRequest(bytes32, address) external view returns (uint32, uint32, address);\\n  function getAttestationIssuers(bytes32, address) external view returns (address[] memory);\\n  function getAttestationStats(bytes32, address) external view returns (uint32, uint32);\\n  function batchGetAttestationStats(bytes32[] calldata)\\n    external\\n    view\\n    returns (uint256[] memory, address[] memory, uint64[] memory, uint64[] memory);\\n  function getAttestationState(bytes32, address, address)\\n    external\\n    view\\n    returns (uint8, uint32, address);\\n  function getCompletableAttestations(bytes32, address)\\n    external\\n    view\\n    returns (uint32[] memory, address[] memory, uint256[] memory, bytes memory);\\n  function getAttestationRequestFee(address) external view returns (uint256);\\n  function getMaxAttestations() external view returns (uint256);\\n  function validateAttestationCode(bytes32, address, uint8, bytes32, bytes32)\\n    external\\n    view\\n    returns (address);\\n  function lookupAccountsForIdentifier(bytes32) external view returns (address[] memory);\\n  function requireNAttestationsRequested(bytes32, address, uint32) external view;\\n\\n  // only owner\\n  function setAttestationRequestFee(address, uint256) external;\\n  function setAttestationExpiryBlocks(uint256) external;\\n  function setSelectIssuersWaitBlocks(uint256) external;\\n  function setMaxAttestations(uint256) external;\\n}\\n\",\"keccak256\":\"0x18698a475dc0c9ea8a4c53ab5e42407f34a7c676d7b713c1507b43669f860e74\"},\"project:/contracts/identity/interfaces/IRandom.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface IRandom {\\n  function revealAndCommit(bytes32, bytes32, address) external;\\n  function randomnessBlockRetentionWindow() external view returns (uint256);\\n  function random() external view returns (bytes32);\\n  function getBlockRandomness(uint256) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xdb545530be6397d23692e4465f4514cf3c87c1d4f553323964694818c375c08d\"},\"project:/contracts/identity/test/AttestationsTest.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"../Attestations.sol\\\";\\n\\n/*\\n * We need a test contract that behaves like the actual Attestations contract,\\n * but mocks the implementations of the validator set getters. Otherwise we\\n * couldn't test `request` with the current ganache local testnet.\\n */\\ncontract AttestationsTest is Attestations(true) {\\n  address[] private __testValidators;\\n\\n  function __setValidators(address[] memory validators) public {\\n    __testValidators = validators;\\n  }\\n\\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\\n    return __testValidators.length;\\n  }\\n\\n  function validatorSignerAddressFromCurrentSet(uint256 index) public view returns (address) {\\n    return __testValidators[index];\\n  }\\n\\n  // some deprecated functions are mocked here to ensure that the tests for\\n  // revoke and withdraw can still run\\n\\n  /**\\n   * @notice Commit to the attestation request of a hashed identifier.\\n   * @param identifier The hash of the identifier to be attested.\\n   * @param attestationsRequested The number of requested attestations for this request.\\n   * @param attestationRequestFeeToken The address of the token with which the attestation fee will\\n   * be paid.\\n   * @dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\\n   * to prevent folks from attacking validators by requesting attestations that they do not\\n   * complete, and to increase the cost of validators attempting to manipulate the attestations\\n   * protocol.\\n   */\\n  function request(\\n    bytes32 identifier,\\n    uint256 attestationsRequested,\\n    address attestationRequestFeeToken\\n  ) external nonReentrant {\\n    require(\\n      attestationRequestFees[attestationRequestFeeToken] > 0,\\n      \\\"Invalid attestationRequestFeeToken\\\"\\n    );\\n    require(\\n      IERC20(attestationRequestFeeToken).transferFrom(\\n        msg.sender,\\n        address(this),\\n        attestationRequestFees[attestationRequestFeeToken].mul(attestationsRequested)\\n      ),\\n      \\\"Transfer of attestation request fees failed\\\"\\n    );\\n\\n    require(attestationsRequested > 0, \\\"You have to request at least 1 attestation\\\");\\n    require(attestationsRequested <= maxAttestations, \\\"Too many attestations requested\\\");\\n\\n    IdentifierState storage state = identifiers[identifier];\\n\\n    require(\\n      state.unselectedRequests[msg.sender].blockNumber == 0 ||\\n        isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber) ||\\n        !isAttestationRequestSelectable(state.unselectedRequests[msg.sender].blockNumber),\\n      \\\"There exists an unexpired, unselected attestation request\\\"\\n    );\\n\\n    state.unselectedRequests[msg.sender].blockNumber = block.number.toUint32();\\n    state.unselectedRequests[msg.sender].attestationsRequested = attestationsRequested.toUint32();\\n    state.unselectedRequests[msg.sender].attestationRequestFeeToken = attestationRequestFeeToken;\\n\\n    state.attestations[msg.sender].requested = uint256(state.attestations[msg.sender].requested)\\n      .add(attestationsRequested)\\n      .toUint32();\\n\\n    emit AttestationsRequested(\\n      identifier,\\n      msg.sender,\\n      attestationsRequested,\\n      attestationRequestFeeToken\\n    );\\n  }\\n\\n  /**\\n   * @notice Selects the issuers for the most recent attestation request.\\n   * @param identifier The hash of the identifier to be attested.\\n   */\\n  function selectIssuers(bytes32 identifier) external {\\n    IdentifierState storage state = identifiers[identifier];\\n\\n    require(\\n      state.unselectedRequests[msg.sender].blockNumber > 0,\\n      \\\"No unselected attestation request to select issuers for\\\"\\n    );\\n\\n    require(\\n      !isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber),\\n      \\\"The attestation request has expired\\\"\\n    );\\n\\n    addIncompleteAttestations(identifier);\\n    delete state.unselectedRequests[msg.sender];\\n  }\\n\\n  /**\\n   * @notice Submit the secret message sent by the issuer to complete the attestation request.\\n   * @param identifier The hash of the identifier for this attestation.\\n   * @param v The recovery id of the incoming ECDSA signature.\\n   * @param r Output value r of the ECDSA signature.\\n   * @param s Output value s of the ECDSA signature.\\n   * @dev Throws if there is no matching outstanding attestation request.\\n   * @dev Throws if the attestation window has passed.\\n   */\\n  function complete(bytes32 identifier, uint8 v, bytes32 r, bytes32 s) external {\\n    address issuer = validateAttestationCode(identifier, msg.sender, v, r, s);\\n\\n    Attestation storage attestation = identifiers[identifier].attestations[msg.sender]\\n      .issuedAttestations[issuer];\\n\\n    address token = attestation.attestationRequestFeeToken;\\n\\n    // solhint-disable-next-line not-rely-on-time\\n    attestation.blockNumber = block.number.toUint32();\\n    attestation.status = AttestationStatus.Complete;\\n    delete attestation.attestationRequestFeeToken;\\n    AttestedAddress storage attestedAddress = identifiers[identifier].attestations[msg.sender];\\n    require(\\n      attestedAddress.completed < attestedAddress.completed + 1,\\n      \\\"SafeMath32 integer overflow\\\"\\n    );\\n    attestedAddress.completed = attestedAddress.completed + 1;\\n\\n    pendingWithdrawals[token][issuer] = pendingWithdrawals[token][issuer].add(\\n      attestationRequestFees[token]\\n    );\\n\\n    IdentifierState storage state = identifiers[identifier];\\n    if (identifiers[identifier].attestations[msg.sender].completed == 1) {\\n      state.accounts.push(msg.sender);\\n    }\\n\\n    emit AttestationCompleted(identifier, msg.sender, issuer);\\n  }\\n\\n  /**\\n   * @notice Adds additional attestations given the current randomness.\\n   * @param identifier The hash of the identifier to be attested.\\n   */\\n  function addIncompleteAttestations(bytes32 identifier) internal {\\n    AttestedAddress storage state = identifiers[identifier].attestations[msg.sender];\\n    UnselectedRequest storage unselectedRequest = identifiers[identifier].unselectedRequests[msg\\n      .sender];\\n\\n    bytes32 seed = getRandom().getBlockRandomness(\\n      uint256(unselectedRequest.blockNumber).add(selectIssuersWaitBlocks)\\n    );\\n    IAccounts accounts = getAccounts();\\n    uint256 issuersLength = numberValidatorsInCurrentSet();\\n    uint256[] memory issuers = new uint256[](issuersLength);\\n    for (uint256 i = 0; i < issuersLength; i = i.add(1)) issuers[i] = i;\\n\\n    require(unselectedRequest.attestationsRequested <= issuersLength, \\\"not enough issuers\\\");\\n\\n    uint256 currentIndex = 0;\\n\\n    // The length of the list (variable issuersLength) is decremented in each round,\\n    // so the loop always terminates\\n    while (currentIndex < unselectedRequest.attestationsRequested) {\\n      require(issuersLength > 0, \\\"not enough issuers\\\");\\n      seed = keccak256(abi.encodePacked(seed));\\n      uint256 idx = uint256(seed) % issuersLength;\\n      address signer = validatorSignerAddressFromCurrentSet(issuers[idx]);\\n      address issuer = accounts.signerToAccount(signer);\\n\\n      Attestation storage attestation = state.issuedAttestations[issuer];\\n\\n      if (\\n        attestation.status == AttestationStatus.None &&\\n        accounts.hasAuthorizedAttestationSigner(issuer)\\n      ) {\\n        currentIndex = currentIndex.add(1);\\n        attestation.status = AttestationStatus.Incomplete;\\n        attestation.blockNumber = unselectedRequest.blockNumber;\\n        attestation.attestationRequestFeeToken = unselectedRequest.attestationRequestFeeToken;\\n        state.selectedIssuers.push(issuer);\\n\\n        emit AttestationIssuerSelected(\\n          identifier,\\n          msg.sender,\\n          issuer,\\n          unselectedRequest.attestationRequestFeeToken\\n        );\\n      }\\n\\n      // Remove the validator that was selected from the list,\\n      // by replacing it by the last element in the list\\n      issuersLength = issuersLength.sub(1);\\n      issuers[idx] = issuers[issuersLength];\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x5c112e044c643ed5d2df94bb17d78ce8e6698efed847d35080d45651c2d269b7\"},\"project:/contracts/stability/interfaces/ISortedOracles.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ISortedOracles {\\n  function addOracle(address, address) external;\\n  function removeOracle(address, address, uint256) external;\\n  function report(address, uint256, address, address) external;\\n  function removeExpiredReports(address, uint256) external;\\n  function isOldestReportExpired(address token) external view returns (bool, address);\\n  function numRates(address) external view returns (uint256);\\n  function medianRate(address) external view returns (uint256, uint256);\\n  function numTimestamps(address) external view returns (uint256);\\n  function medianTimestamp(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc9d69b608b060effe4a0b246e7fad096b524b848aa51d8f4eccad36c1aa0479d\"},\"project:/lib/mento-core/contracts/interfaces/IExchange.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IExchange {\\n    function buy(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function sell(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function exchange(\\n        uint256,\\n        uint256,\\n        bool\\n    ) external returns (uint256);\\n\\n    function setUpdateFrequency(uint256) external;\\n\\n    function getBuyTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getSellTokenAmount(uint256, bool) external view returns (uint256);\\n\\n    function getBuyAndSellBuckets(bool) external view returns (uint256, uint256);\\n}\\n\",\"keccak256\":\"0x320488022d1066ac81797b9e7a3dc303d1c8e9a48597972d4686e00f9554ade9\"},\"project:/lib/mento-core/contracts/interfaces/IReserve.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\ninterface IReserve {\\n    function setTobinTaxStalenessThreshold(uint256) external;\\n\\n    function addToken(address) external returns (bool);\\n\\n    function removeToken(address, uint256) external returns (bool);\\n\\n    function transferGold(address payable, uint256) external returns (bool);\\n\\n    function transferExchangeGold(address payable, uint256) external returns (bool);\\n\\n    function getReserveGoldBalance() external view returns (uint256);\\n\\n    function getUnfrozenReserveGoldBalance() external view returns (uint256);\\n\\n    function getOrComputeTobinTax() external returns (uint256, uint256);\\n\\n    function getTokens() external view returns (address[] memory);\\n\\n    function getReserveRatio() external view returns (uint256);\\n\\n    function addExchangeSpender(address) external;\\n\\n    function removeExchangeSpender(address, uint256) external;\\n\\n    function addSpender(address) external;\\n\\n    function removeSpender(address) external;\\n}\\n\",\"keccak256\":\"0x9162b458dc21fe7e6cfc5d4722b3db3001b1c54ecdcefa703ff9d902084150b7\"},\"project:/lib/mento-core/contracts/interfaces/IStableToken.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\n/**\\n * @title This interface describes the functions specific to Celo Stable Tokens, and in the\\n * absence of interface inheritance is intended as a companion to IERC20.sol and ICeloToken.sol.\\n */\\ninterface IStableToken {\\n    function mint(address, uint256) external returns (bool);\\n\\n    function burn(uint256) external returns (bool);\\n\\n    function setInflationParameters(uint256, uint256) external;\\n\\n    function valueToUnits(uint256) external view returns (uint256);\\n\\n    function unitsToValue(uint256) external view returns (uint256);\\n\\n    function getInflationParameters()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    // NOTE: duplicated with IERC20.sol, remove once interface inheritance is supported.\\n    function balanceOf(address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcb6440c9b161b26a5b062e6c74d6fd1ed9736f292161c757406a9c39e942d20a\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "286:7530:149:-;;;328:4;4843::132;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;185:17:24;180:57;;226:4;212:11;;:18;;;;;;;;;;;;;;;;;;180:57;131:110;558:1:53;542:13;:17;;;;4799:52:132;286:7530:149;;788:96:0;833:15;867:10;860:17;;788:96;:::o;286:7530:149:-;;;;;;;",
  "deployedSourceMap": "286:7530:149:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;286:7530:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17877:162:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17877:162:132;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17877:162:132;;;;;;;;;;;;;;;;;377:101:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;377:101:149;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;377:101:149;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;377:101:149;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;377:101:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;377:101:149;;;;;;;;;;;;;;;:::i;:::-;;597:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;597:132:149;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;103:23:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6346:266:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6346:266:35;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6346:266:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6346:266:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6346:266:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6346:266:35;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6346:266:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6346:266:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6346:266:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6346:266:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2608:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2608:147:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8496:343;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8496:343:35;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8496:343:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8496:343:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8496:343:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8496:343:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13032:1206:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13032:1206:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13032:1206:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13032:1206:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13032:1206:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13032:1206:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7837:391;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7837:391:132;;;;;;;;;;;;;;;;;;;:::i;:::-;;6643:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9768:269;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9768:269:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17121:752;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;17121:752:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4481:378:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4481:378:35;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9269:202:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9269:202:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9269:202:132;;;;;;;;;;;;;;;;;14394:128;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14394:128:132;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7188:288:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7188:288:35;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7188:288:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7188:288:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7188:288:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7188:288:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:4;;;:::i;:::-;;10031:112:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16492:95:132;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2636:25:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3125:30:132;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3534:69;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3534:69:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;482:111:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3014:38:132;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6741:329:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6741:329:35;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6741:329:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6741:329:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6741:329:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6741:329:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10553:1270:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10553:1270:132;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10553:1270:132;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10553:1270:132;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;10553:1270:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10553:1270:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10553:1270:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10553:1270:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10553:1270:132;;;;;;;;;;;;;;;;;;;;;;;2856:109:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5579:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5579:321:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15168:306:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15168:306:132;;;;;;;;;;;;;;;;;:::i;:::-;;18446:289;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18446:289:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3185:230:36;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3185:230:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;2883:38:132;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12240:397;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12240:397:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6952:659;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6952:659:132;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3236:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3236:57:132;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16130:242;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16130:242:132;;;;;;;;;;;;;;;;;:::i;:::-;;1504:1666:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1504:1666:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2178:266:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15685:306:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15685:306:132;;;;;;;;;;;;;;;;;:::i;:::-;;3326:500:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3326:500:149;;;;;;;;;;;;;;;;;:::i;:::-;;8630:391:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8630:391:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9752:147:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9752:147:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3372:73:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3372:73:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1297:763:35;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1297:763:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;14731:238:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14731:238:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7767:322:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7767:322:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4307:1205:149;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4307:1205:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5454:912:132;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5454:912:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5454:912:132;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5454:912:132;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5454:912:132;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5454:912:132;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5454:912:132;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5454:912:132;;;;;;;;;;;;:::i;:::-;;17877:162;17969:16;18002:11;:23;18014:10;18002:23;;;;;;;;;;;:32;;17995:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17877:162;;;:::o;377:101:149:-;463:10;444:16;:29;;;;;;;;;;;;:::i;:::-;;377:101;:::o;597:132::-;679:7;701:16;718:5;701:23;;;;;;;;;;;;;;;;;;;;;;;;;694:30;;597:132;;;:::o;103:23:24:-;;;;;;;;;;;;;:::o;6346:266:35:-;6469:4;6483:12;355:8;6515:30;;6563:6;6571;6579;6546:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6546:40:35;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6546:40:35;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6546:40:35;;;6515:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6515:72:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6501:86:35;;;;;6600:7;6593:14;;;6346:266;;;;;:::o;2608:147::-;2681:7;2703:47;2722:11;2735:14;:12;:14::i;:::-;2703:18;:47::i;:::-;2696:54;;2608:147;;;:::o;8496:343::-;8579:7;8594:16;8616:12;764:9;8651:35;;8704:6;8687:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8687:24:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8687:24:35;;;8651:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8651:61:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8634:78:35;;;;;;;;8726:7;8718:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8807:27;8827:3;8832:1;8807:19;:27::i;:::-;8800:34;;;;8496:343;;;:::o;13032:1206:132:-;13140:15;13157:16;13175;13193:12;13215:29;13247:11;:23;13259:10;13247:23;;;;;;;;;;;:36;;:45;13284:7;13247:45;;;;;;;;;;;;;;;13215:77;;13298:25;13326:5;:21;;13298:49;;13354:11;13368:1;13354:15;;13380:9;13392:1;13380:13;;13375:171;13399:7;:14;;;;13395:1;:18;13375:171;;;13441:62;13466:5;:24;;:36;13491:7;13499:1;13491:10;;;;;;;;;;;;;;;;;;;;;;;;;13466:36;;;;;;;;;;;;;;;13441:24;:62::i;:::-;13437:103;;;13521:10;13529:1;13521:3;:7;;:10;;;;:::i;:::-;13515:16;;13437:103;13419:8;13425:1;13419;:5;;:8;;;;:::i;:::-;13415:12;;13375:171;;;;13552:28;13596:3;13583:17;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13583:17:132;;;;13552:48;;13606:35;13658:3;13644:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;13644:18:132;;;;13606:56;;13669:15;13687:1;13669:19;;13699:9;13711:1;13699:13;;13694:311;13718:7;:14;;;;13714:1;:18;13694:311;;;13760:62;13785:5;:24;;:36;13810:7;13818:1;13810:10;;;;;;;;;;;;;;;;;;;;;;;;;13785:36;;;;;;;;;;;;;;;13760:24;:62::i;:::-;13756:243;;;13858:5;:24;;:36;13883:7;13891:1;13883:10;;;;;;;;;;;;;;;;;;;;;;;;;13858:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;13834:12;13847:7;13834:21;;;;;;;;;;;;;:72;;;;;;;;;;;13946:7;13954:1;13946:10;;;;;;;;;;;;;;;;;;;;;;;;;13916:18;13935:7;13916:27;;;;;;;;;;;;;:40;;;;;;;;;;;13976:14;13988:1;13976:7;:11;;:14;;;;:::i;:::-;13966:24;;13756:243;13738:8;13744:1;13738;:5;;:8;;;;:::i;:::-;13734:12;;13694:311;;;;14011:30;14047:23;14106:13;:11;:13::i;:::-;:33;;;14140:18;14106:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14106:53:132;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14106:53:132;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14106:53:132;;;;;;39:16:-1;36:1;17:17;2:54;14106:53:132;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14106:53:132;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;14106:53:132;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14106:53:132;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;14106:53:132;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14106:53:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14076:83;;;;;;;;14173:12;14187:18;14207:13;14222:10;14165:68;;;;;;;;;;;;;;;;13032:1206;;;;;;;:::o;7837:391::-;7885:14;7902:13;:11;:13::i;:::-;:40;;;7943:10;7902:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7902:52:132;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7902:52:132;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7902:52:132;;;;;;;;;;;;;;;;7885:69;;7960:13;7976:18;:25;7995:5;7976:25;;;;;;;;;;;;;;;:33;8002:6;7976:33;;;;;;;;;;;;;;;;7960:49;;8031:1;8023:5;:9;8015:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8102:1;8066:18;:25;8085:5;8066:25;;;;;;;;;;;;;;;:33;8092:6;8066:33;;;;;;;;;;;;;;;:37;;;;8124:5;8117:22;;;8140:6;8148:5;8117:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8117:37:132;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8117:37:132;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8117:37:132;;;;;;;;;;;;;;;;8109:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8210:5;8191:32;;8202:6;8191:32;;;8217:5;8191:32;;;;;;;;;;;;;;;;;;7837:391;;;:::o;6643:117::-;6694:7;6703;6712;6721;6744:1;6747;6750;6753;6736:19;;;;;;;;;;;;;;;;;;;;6643:117;;;;:::o;9768:269::-;9869:6;9877;9908:11;:23;9920:10;9908:23;;;;;;;;;;;:36;;:45;9945:7;9908:45;;;;;;;;;;;;;;;:55;;;;;;;;;;;;9971:11;:23;9983:10;9971:23;;;;;;;;;;;:36;;:45;10008:7;9971:45;;;;;;;;;;;;;;;:55;;;;;;;;;;;;9893:139;;;;9768:269;;;;;:::o;17121:752::-;17267:7;17282:16;17328:10;17340:7;17311:37;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;17311:37:132;;;17301:48;;;;;;17282:67;;17355:14;17372:10;:33;17406:8;17416:1;17419;17422;17372:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17372:52:132;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17372:52:132;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17372:52:132;;;;;;;;;;;;;;;;17355:69;;17430:14;17447:13;:11;:13::i;:::-;:40;;;17488:6;17447:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17447:48:132;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17447:48:132;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17447:48:132;;;;;;;;;;;;;;;;17430:65;;17502:31;17536:11;:23;17548:10;17536:23;;;;;;;;;;;:36;;:45;17573:7;17536:45;;;;;;;;;;;;;;;:71;;:79;17608:6;17536:79;;;;;;;;;;;;;;;17502:113;;17659:28;17637:50;;;;;;;;:11;:18;;;;;;;;;;;;:50;;;;;;;;;17622:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17777:45;17798:11;:23;;;;;;;;;;;;17777:20;:45::i;:::-;17776:46;17768:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17862:6;17855:13;;;;;;17121:752;;;;;;;:::o;4481:378:35:-;4589:7;4606:16;4628:12;409:8;4663:24;;4705:5;4712:11;4688:36;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4688:36:35;;;4663:62;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4663:62:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4646:79:35;;;;;;;;4739:7;4731:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4826:27;4846:3;4851:1;4826:19;:27::i;:::-;4811:43;;;;4481:378;;;;:::o;9269:202:132:-;9372:16;9405:11;:23;9417:10;9405:23;;;;;;;;;;;:36;;:45;9442:7;9405:45;;;;;;;;;;;;;;;:61;;9398:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9269:202;;;;:::o;14394:128::-;14466:7;14488:22;:29;14511:5;14488:29;;;;;;;;;;;;;;;;14481:36;;14394:128;;;:::o;7188:288:35:-;7250:7;7265:16;7287:12;635:8;7322:22;;7362:6;7345:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7345:24:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7345:24:35;;;7322:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7322:48:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7305:65:35;;;;;;;;7384:7;7376:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7444:27;7464:3;7469:1;7444:19;:27::i;:::-;7437:34;;;;7188:288;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;10031:112:35:-;10089:7;10111:27;10125:12;10111:13;:27::i;:::-;10104:34;;10031:112;:::o;16492:95:132:-;16545:7;16567:15;;16560:22;;16492:95;:::o;2636:25:36:-;;;;;;;;;;;;;:::o;3125:30:132:-;;;;:::o;3534:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;482:111:149:-;543:7;565:16;:23;;;;558:30;;482:111;:::o;3014:38:132:-;;;;:::o;6741:329:35:-;6817:7;6832:16;6854:12;583:8;6889:35;;6942:6;6925:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6925:24:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6925:24:35;;;6889:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6889:61:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6872:78:35;;;;;;;;6964:7;6956:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7038:27;7058:3;7063:1;7038:19;:27::i;:::-;7031:34;;;;6741:329;;;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;10553:1270:132:-;10662:16;10680;10698:15;10715;10777:1;10748:19;;:26;;:30;10740:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10830:24;10860:26;10916:53;10949:19;;10916:53;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;10916:53:132;;;;;;:32;:53::i;:::-;10893:76;;;;;;;;10976:25;11017:9;:16;11004:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;11004:30:132;;;;10976:58;;11040:21;11077:9;:16;11064:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;11064:30:132;;;;11040:54;;11101:20;11124:1;11101:24;;11136:9;11148:1;11136:13;;11131:636;11155:19;;:26;;11151:1;:30;11131:636;;;11205:22;11230:11;:35;11242:19;;11262:1;11242:22;;;;;;;;;;;;;11230:35;;;;;;;;;;;:44;;11205:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11287:18;11308:1;11287:22;;11282:479;11324:7;11332:1;11324:10;;;;;;;;;;;;;;11311;:23;11282:479;;;11404:13;:11;:13::i;:::-;:30;;;11435:5;11441:10;11435:17;;;;;;;;;;;;;;11404:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11404:49:132;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11404:49:132;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11404:49:132;;;;;;;;;;;;;;;;11378:9;11388:12;11378:23;;;;;;;;;;;;;:75;;;;;;;;;;;11489:11;:35;11501:19;;11521:1;11501:22;;;;;;;;;;;;;11489:35;;;;;;;;;;;:59;;:78;11549:5;11555:10;11549:17;;;;;;;;;;;;;;11489:78;;;;;;;;;;;;;;;:99;;;;;;;;;;;;11463:125;;:9;11473:12;11463:23;;;;;;;;;;;;;:125;;;;;;;;;;;11620:11;:35;11632:19;;11652:1;11632:22;;;;;;;;;;;;;11620:35;;;;;;;;;;;:48;;:67;11669:5;11675:10;11669:17;;;;;;;;;;;;;;11620:67;;;;;;;;;;;;;;;:88;;;;;;;;;;;;11598:110;;:5;11604:12;11598:19;;;;;;;;;;;;;:110;;;;;;;;;;;11733:19;11750:1;11733:12;:16;;:19;;;;:::i;:::-;11718:34;;11349:17;11364:1;11349:10;:14;;:17;;;;:::i;:::-;11336:30;;11282:479;;;;11131:636;11187:8;11193:1;11187;:5;;:8;;;;:::i;:::-;11183:12;;11131:636;;;;11781:7;11790:9;11801;11812:5;11773:45;;;;;;;;;;;;;10553:1270;;;;;;;:::o;2856:109:35:-;2903:7;2925:35;2947:12;2925:21;:35::i;:::-;2918:42;;2856:109;:::o;5579:321::-;5652:7;5667:16;5689:12;467:8;5724:28;;5770:11;5753:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5753:29:35;;;5724:59;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5724:59:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5707:76:35;;;;;;;;5797:7;5789:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5868:27;5888:3;5893:1;5868:19;:27::i;:::-;5861:34;;;;5579:321;;;:::o;15168:306:132:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15296:1:132;15269:24;:28;15261:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15382:24;15356:23;:50;;;;15417:52;15444:24;15417:52;;;;;;;;;;;;;;;;;;15168:306;:::o;18446:289::-;18569:17;18589:11;:23;18601:10;18589:23;;;;;;;;;;;:36;;:45;18626:7;18589:45;;;;;;;;;;;;;;;:55;;;;;;;;;;;;18569:75;;;;18671:8;18658:21;;:9;:21;18650:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18446:289;;;;:::o;3185:230:36:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3289:1:36;3262:29;;:15;:29;;;;3254:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3355:15;3334:8;;:37;;;;;;;;;;;;;;;;;;3394:15;3382:28;;;;;;;;;;;;3185:230;:::o;2883:38:132:-;;;;:::o;12240:397::-;12357:5;12364:6;12372:7;12389:31;12423:11;:23;12435:10;12423:23;;;;;;;;;;;:36;;:45;12460:7;12423:45;;;;;;;;;;;;;;;:71;;:79;12495:6;12423:79;;;;;;;;;;;;;;;12389:113;;12529:11;:18;;;;;;;;;;;;12523:25;;;;;;;;12556:11;:23;;;;;;;;;;;;12587:11;:38;;;;;;;;;;;;12508:123;;;;;;;12240:397;;;;;;;:::o;6952:659::-;7018:19;7040:11;:23;7052:10;7040:23;;;;;;;;;;;:32;;:39;;;;7018:61;;7101:11;7093:5;:19;7085:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7168:11;:23;7180:10;7168:23;;;;;;;;;;;:32;;7201:5;7168:39;;;;;;;;;;;;;;;;;;;;;;;;;7154:53;;:10;:53;;;7139:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7261:22;7286:18;7302:1;7286:11;:15;;:18;;;;:::i;:::-;7261:43;;7323:14;7314:5;:23;7310:134;;7389:11;:23;7401:10;7389:23;;;;;;;;;;;:32;;7422:14;7389:48;;;;;;;;;;;;;;;;;;;;;;;;;7347:11;:23;7359:10;7347:23;;;;;;;;;;;:32;;7380:5;7347:39;;;;;;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;7310:134;7508:3;7449:11;:23;7461:10;7449:23;;;;;;;;;;;:32;;7482:14;7449:48;;;;;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;7560:46;7604:1;7560:11;:23;7572:10;7560:23;;;;;;;;;;;:32;;:39;;;;:43;;:46;;;;:::i;:::-;7518:11;:23;7530:10;7518:23;;;;;;;;;;;:32;;:88;;;;;:::i;:::-;;6952:659;;;;:::o;3236:57::-;;;;;;;;;;;;;;;;;:::o;16130:242::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16234:1:132;16215:16;:20;16207:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16304:16;16286:15;:34;;;;16331:36;16350:16;16331:36;;;;;;;;;;;;;;;;;;16130:242;:::o;1504:1666:149:-;970:1:53;953:13;;:18;;;;;;;;;;;977:20;1000:13;;977:36;;1720:1:149;1667:22;:50;1690:26;1667:50;;;;;;;;;;;;;;;;:54;1652:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1799:26;1792:47;;;1849:10;1877:4;1892:77;1947:21;1892:22;:50;1915:26;1892:50;;;;;;;;;;;;;;;;:54;;:77;;;;:::i;:::-;1792:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1792:185:149;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1792:185:149;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1792:185:149;;;;;;;;;;;;;;;;1777:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2075:1;2051:21;:25;2043:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2162:15;;2137:21;:40;;2129:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2220:29;2252:11;:23;2264:10;2252:23;;;;;;;;;;;2220:55;;2349:1;2297:5;:24;;:36;2322:10;2297:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:53;;;:135;;;;2362:70;2383:5;:24;;:36;2408:10;2383:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;2362:20;:70::i;:::-;2297:135;:228;;;;2445:80;2476:5;:24;;:36;2501:10;2476:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;2445:80;;:30;:80::i;:::-;2444:81;2297:228;2282:316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2656:23;:12;:21;:23::i;:::-;2605:5;:24;;:36;2630:10;2605:36;;;;;;;;;;;;;;;:48;;;:74;;;;;;;;;;;;;;;;;;2746:32;:21;:30;:32::i;:::-;2685:5;:24;;:36;2710:10;2685:36;;;;;;;;;;;;;;;:58;;;:93;;;;;;;;;;;;;;;;;;2850:26;2784:5;:24;;:36;2809:10;2784:36;;;;;;;;;;;;;;;:63;;;:92;;;;;;;;;;;;;;;;;;2926:101;:83;2987:21;2934:5;:18;;:30;2953:10;2934:30;;;;;;;;;;;;;;;:40;;;;;;;;;;;;2926:49;;:60;;:83;;;;:::i;:::-;:99;:101::i;:::-;2883:5;:18;;:30;2902:10;2883:30;;;;;;;;;;;;;;;:40;;;:144;;;;;;;;;;;;;;;;;;3086:10;3039:126;;3068:10;3039:126;3104:21;3133:26;3039:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:1:53;1050:13;;1034:12;:29;1026:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:1666:149;;;;:::o;2178:266:35:-;2223:7;2238:16;2260:12;518:8;2295:21;;2317:18;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2317:18:35;;;2295:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2295:41:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2278:58:35;;;;;;;;2350:7;2342:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2412:27;2432:3;2437:1;2412:19;:27::i;:::-;2405:34;;;;2178:266;:::o;15685:306:132:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15813:1:132;15786:24;:28;15778:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15899:24;15873:23;:50;;;;15934:52;15961:24;15934:52;;;;;;;;;;;;;;;;;;15685:306;:::o;3326:500:149:-;3384:29;3416:11;:23;3428:10;3416:23;;;;;;;;;;;3384:55;;3512:1;3461:5;:24;;:36;3486:10;3461:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:52;;;3446:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3607:70;3628:5;:24;;:36;3653:10;3628:36;;;;;;;;;;;;;;;:48;;;;;;;;;;;;3607:20;:70::i;:::-;3606:71;3591:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3735:37;3761:10;3735:25;:37::i;:::-;3785:5;:24;;:36;3810:10;3785:36;;;;;;;;;;;;;;;;3778:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:500;;:::o;8630:391:132:-;8732:6;8740;8748:7;8780:11;:23;8792:10;8780:23;;;;;;;;;;;:42;;:51;8823:7;8780:51;;;;;;;;;;;;;;;:63;;;;;;;;;;;;8851:11;:23;8863:10;8851:23;;;;;;;;;;;:42;;:51;8894:7;8851:51;;;;;;;;;;;;;;;:73;;;;;;;;;;;;8932:11;:23;8944:10;8932:23;;;;;;;;;;;:42;;:51;8975:7;8932:51;;;;;;;;;;;;;;;:78;;;;;;;;;;;;8765:251;;;;;;8630:391;;;;;:::o;9752:147:35:-;9817:7;9839:55;9892:1;9839:48;9885:1;9839:41;9878:1;9839:34;9861:11;9839:21;:34::i;:::-;:38;;:41;;;;:::i;:::-;:45;;:48;;;;:::i;:::-;:52;;:55;;;;:::i;:::-;9832:62;;9752:147;;;:::o;3372:73:132:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1297:763:35:-;1491:7;1500;1539:1;1523:12;:17;;:38;;;;;1560:1;1544:12;:17;;1523:38;1515:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1593:23;1622:25;1653:12;1671:16;295:8;1710:23;;1758:10;1770:12;1784:10;1796:12;1810:8;1820:9;1741:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1741:89:35;;;1710:126;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1710:126:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1693:143:35;;;;;;;;1850:7;1842:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:27;1945:3;1950:1;1925:19;:27::i;:::-;1907:45;;1978:28;1998:3;2003:2;1978:19;:28::i;:::-;1958:48;;2020:15;2037:17;2012:43;;;;;;;;1297:763;;;;;;;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;14731:238:132:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14830:1:132;14824:3;:7;14816:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14914:3;14882:22;:29;14905:5;14882:29;;;;;;;;;;;;;;;:35;;;;14953:5;14928:36;;;14960:3;14928:36;;;;;;;;;;;;;;;;;;14731:238;;:::o;7767:322:35:-;7838:7;7853:16;7875:12;698:9;7910:33;;7961:11;7944:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7944:29:35;;;7910:64;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7910:64:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7893:81:35;;;;;;;;7988:7;7980:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8057:27;8077:3;8082:1;8057:19;:27::i;:::-;8050:34;;;;7767:322;;;:::o;4307:1205:149:-;4391:14;4408:56;4432:10;4444;4456:1;4459;4462;4408:23;:56::i;:::-;4391:73;;4471:31;4505:11;:23;4517:10;4505:23;;;;;;;;;;;:36;;:48;4542:10;4505:48;;;;;;;;;;;;;;;:74;;:82;4580:6;4505:82;;;;;;;;;;;;;;;4471:116;;4594:13;4610:11;:38;;;;;;;;;;;;4594:54;;4731:23;:12;:21;:23::i;:::-;4705:11;:23;;;:49;;;;;;;;;;;;;;;;;;4781:26;4760:11;:18;;;:47;;;;;;;;;;;;;;;;;;;;;;;;4820:11;:38;;;4813:45;;;;;;;;;;;4864:39;4906:11;:23;4918:10;4906:23;;;;;;;;;;;:36;;:48;4943:10;4906:48;;;;;;;;;;;;;;;4864:90;;5031:1;5003:15;:25;;;;;;;;;;;;:29;4975:57;;:15;:25;;;;;;;;;;;;:57;;;4960:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5137:1;5109:15;:25;;;;;;;;;;;;:29;5081:15;:25;;;:57;;;;;;;;;;;;;;;;;;5181:80;5226:22;:29;5249:5;5226:29;;;;;;;;;;;;;;;;5181:18;:25;5200:5;5181:25;;;;;;;;;;;;;;;:33;5207:6;5181:33;;;;;;;;;;;;;;;;:37;;:80;;;;:::i;:::-;5145:18;:25;5164:5;5145:25;;;;;;;;;;;;;;;:33;5171:6;5145:33;;;;;;;;;;;;;;;:116;;;;5268:29;5300:11;:23;5312:10;5300:23;;;;;;;;;;;5268:55;;5395:1;5333:11;:23;5345:10;5333:23;;;;;;;;;;;:36;;:48;5370:10;5333:48;;;;;;;;;;;;;;;:58;;;;;;;;;;;;:63;;;5329:115;;;5406:5;:14;;5426:10;5406:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5406:31:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5329:115;5500:6;5455:52;;5488:10;5455:52;;5476:10;5455:52;;;;;;;;;;4307:1205;;;;;;;;;:::o;5454:912:132:-;283:11:24;;;;;;;;;;;282:12;274:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:4;333:11;;:18;;;;;;;;;;;;;;;;;;5744:30:132;5763:10;5744:18;:30::i;:::-;5780:28;5792:15;5780:11;:28::i;:::-;5814:52;5841:24;5814:26;:52::i;:::-;5872;5899:24;5872:26;:52::i;:::-;5930:36;5949:16;5930:18;:36::i;:::-;6025:1;5988:27;;:34;;:38;:122;;;;;6076:27;;:34;;6038:27;;:34;;:72;5988:122;5973:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6190:9;6202:1;6190:13;;6185:177;6209:27;;:34;;6205:1;:38;6185:177;;;6267:88;6292:27;;6320:1;6292:30;;;;;;;;;;;;;;;6324:27;;6352:1;6324:30;;;;;;;;;;;;;6267:24;:88::i;:::-;6249:8;6255:1;6249;:5;;:8;;;;:::i;:::-;6245:12;;6185:177;;;;5454:912;;;;;;;;:::o;3177:379:35:-;3280:7;3388:19;3424:9;3410:11;:23;;;;;;3388:45;;3470:1;3457:9;3443:11;:23;;;;;;:28;3439:113;;;3488:11;3481:18;;;;;3439:113;3527:18;3543:1;3527:11;:15;;:18;;;;:::i;:::-;3520:25;;;3177:379;;;;;:::o;9309:255::-;9393:7;9429:13;9439:2;9429:5;:9;;:13;;;;:::i;:::-;9416:2;:9;:26;;9408:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9473:9;9535:2;9528:5;9524:14;9520:2;9516:23;9510:30;9505:35;;9558:1;9551:8;;;9309:255;;;;:::o;19976:222:132:-;20066:4;20108:28;20086:50;;;;;;;;:11;:18;;;;;;;;;;;;:50;;;;;;;;;:106;;;;;20147:45;20168:11;:23;;;;;;;;;;;;20147:20;:45::i;:::-;20146:46;20086:106;20078:115;;19976:222;;;:::o;834:176:3:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3419:135:36:-;3465:9;3499:8;;;;;;;;;;;:27;;;1093:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1093:28:36;;;1083:39;;;;;;3499:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3499:49:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3499:49:36;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3499:49:36;;;;;;;;;;;;;;;;3482:67;;3419:135;:::o;19786:186:132:-;19871:4;19906:61;19943:23;;19914;19906:32;;:36;;:61;;;;:::i;:::-;19890:12;:77;;19883:84;;19786:186;;;:::o;8999:150:35:-;9083:7;9113:30;9133:2;9137:5;9113:19;:30::i;:::-;9105:39;;9098:46;;8999:150;;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;19144:638:132:-;19259:16;19277;19340:1;19311:19;:26;:30;19303:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19392:22;19417:1;19392:26;;19424:24;19465:19;:26;19451:41;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19451:41:132;;;;19424:68;;19504:9;19516:1;19504:13;;19499:225;19523:19;:26;19519:1;:30;19499:225;;;19573:13;19589:11;:35;19601:19;19621:1;19601:22;;;;;;;;;;;;;;19589:35;;;;;;;;;;;:44;;:51;;;;19573:67;;19666:25;19685:5;19666:14;:18;;:25;;;;:::i;:::-;19649:42;;19712:5;19699:7;19707:1;19699:10;;;;;;;;;;;;;:18;;;;;19499:225;19555:8;19561:1;19555;:5;;:8;;;;:::i;:::-;19551:12;;19499:225;;;;19738:7;19761:14;19747:29;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19747:29:132;;;;19730:47;;;;;;;;;19144:638;;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;2159:459::-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;20202:222:132:-;20310:4;20346:73;20374:11;:9;:11::i;:::-;:42;;;:44;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20374:44:132;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20374:44:132;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20374:44:132;;;;;;;;;;;;;;;;20346:23;:27;;:73;;;;:::i;:::-;20331:12;:88;20324:95;;20202:222;;;:::o;1961:176:10:-;2017:6;2051:5;2043;:13;2035:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2124:5;2110:20;;1961:176;;;:::o;5666:2148:149:-;5736:29;5768:11;:23;5780:10;5768:23;;;;;;;;;;;:36;;:48;5805:10;5768:48;;;;;;;;;;;;;;;5736:80;;5822:43;5868:11;:23;5880:10;5868:23;;;;;;;;;;;:42;;:61;5911:17;5868:61;;;;;;;;;;;;;;;5822:107;;5936:12;5951:11;:9;:11::i;:::-;:30;;;5989:67;6032:23;;5997:17;:29;;;;;;;;;;;;5989:38;;:42;;:67;;;;:::i;:::-;5951:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5951:111:149;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5951:111:149;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5951:111:149;;;;;;;;;;;;;;;;5936:126;;6068:18;6089:13;:11;:13::i;:::-;6068:34;;6108:21;6132:30;:28;:30::i;:::-;6108:54;;6168:24;6209:13;6195:28;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;6195:28:149;;;;6168:55;;6234:9;6246:1;6234:13;;6229:67;6253:13;6249:1;:17;6229:67;;;6295:1;6282:7;6290:1;6282:10;;;;;;;;;;;;;:14;;;;;6272:8;6278:1;6272;:5;;:8;;;;:::i;:::-;6268:12;;6229:67;;;;6354:13;6311:17;:39;;;;;;;;;;;;:56;;;;6303:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6397:20;6420:1;6397:24;;6550:1260;6572:17;:39;;;;;;;;;;;;6557:54;;:12;:54;6550:1260;;;6645:1;6629:13;:17;6621:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6711:4;6694:22;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6694:22:149;;;6684:33;;;;;;6677:40;;6725:11;6755:13;6747:4;6739:13;;:29;;;;;;6725:43;;6776:14;6793:50;6830:7;6838:3;6830:12;;;;;;;;;;;;;;6793:36;:50::i;:::-;6776:67;;6851:14;6868:8;:24;;;6893:6;6868:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6868:32:149;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6868:32:149;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6868:32:149;;;;;;;;;;;;;;;;6851:49;;6909:31;6943:5;:24;;:32;6968:6;6943:32;;;;;;;;;;;;;;;6909:66;;7019:22;6997:44;;;;;;;;:11;:18;;;;;;;;;;;;:44;;;;;;;;;:103;;;;;7053:8;:39;;;7093:6;7053:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7053:47:149;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7053:47:149;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7053:47:149;;;;;;;;;;;;;;;;6997:103;6984:610;;;7134:19;7151:1;7134:12;:16;;:19;;;;:::i;:::-;7119:34;;7184:28;7163:11;:18;;;:49;;;;;;;;;;;;;;;;;;;;;;;;7248:17;:29;;;;;;;;;;;;7222:11;:23;;;:55;;;;;;;;;;;;;;;;;;7328:17;:44;;;;;;;;;;;;7287:11;:38;;;:85;;;;;;;;;;;;;;;;;;7382:5;:21;;7409:6;7382:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7382:34:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7513:6;7432:153;;7491:10;7432:153;;7469:10;7432:153;7531:17;:44;;;;;;;;;;;;7432:153;;;;;;;;;;;;;;;;;;;;;;6984:610;7738:20;7756:1;7738:13;:17;;:20;;;;:::i;:::-;7722:36;;7781:7;7789:13;7781:22;;;;;;;;;;;;;;7766:7;7774:3;7766:12;;;;;;;;;;;;;:37;;;;;6550:1260;;;;;;;5666:2148;;;;;;;;:::o;3073:130:3:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1732:187:3:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;4754:127:36:-;4798:7;4828:8;;;;;;;;;;;:27;;;2296:26;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2296:26:36;;;2286:37;;;;;;4828:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4828:47:36;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4828:47:36;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4828:47:36;;;;;;;;;;;;;;;;4813:63;;4754:127;:::o;3718:338:3:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;286:7530:149:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../Attestations.sol\";\n\n/*\n * We need a test contract that behaves like the actual Attestations contract,\n * but mocks the implementations of the validator set getters. Otherwise we\n * couldn't test `request` with the current ganache local testnet.\n */\ncontract AttestationsTest is Attestations(true) {\n  address[] private __testValidators;\n\n  function __setValidators(address[] memory validators) public {\n    __testValidators = validators;\n  }\n\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\n    return __testValidators.length;\n  }\n\n  function validatorSignerAddressFromCurrentSet(uint256 index) public view returns (address) {\n    return __testValidators[index];\n  }\n\n  // some deprecated functions are mocked here to ensure that the tests for\n  // revoke and withdraw can still run\n\n  /**\n   * @notice Commit to the attestation request of a hashed identifier.\n   * @param identifier The hash of the identifier to be attested.\n   * @param attestationsRequested The number of requested attestations for this request.\n   * @param attestationRequestFeeToken The address of the token with which the attestation fee will\n   * be paid.\n   * @dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\n   * to prevent folks from attacking validators by requesting attestations that they do not\n   * complete, and to increase the cost of validators attempting to manipulate the attestations\n   * protocol.\n   */\n  function request(\n    bytes32 identifier,\n    uint256 attestationsRequested,\n    address attestationRequestFeeToken\n  ) external nonReentrant {\n    require(\n      attestationRequestFees[attestationRequestFeeToken] > 0,\n      \"Invalid attestationRequestFeeToken\"\n    );\n    require(\n      IERC20(attestationRequestFeeToken).transferFrom(\n        msg.sender,\n        address(this),\n        attestationRequestFees[attestationRequestFeeToken].mul(attestationsRequested)\n      ),\n      \"Transfer of attestation request fees failed\"\n    );\n\n    require(attestationsRequested > 0, \"You have to request at least 1 attestation\");\n    require(attestationsRequested <= maxAttestations, \"Too many attestations requested\");\n\n    IdentifierState storage state = identifiers[identifier];\n\n    require(\n      state.unselectedRequests[msg.sender].blockNumber == 0 ||\n        isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber) ||\n        !isAttestationRequestSelectable(state.unselectedRequests[msg.sender].blockNumber),\n      \"There exists an unexpired, unselected attestation request\"\n    );\n\n    state.unselectedRequests[msg.sender].blockNumber = block.number.toUint32();\n    state.unselectedRequests[msg.sender].attestationsRequested = attestationsRequested.toUint32();\n    state.unselectedRequests[msg.sender].attestationRequestFeeToken = attestationRequestFeeToken;\n\n    state.attestations[msg.sender].requested = uint256(state.attestations[msg.sender].requested)\n      .add(attestationsRequested)\n      .toUint32();\n\n    emit AttestationsRequested(\n      identifier,\n      msg.sender,\n      attestationsRequested,\n      attestationRequestFeeToken\n    );\n  }\n\n  /**\n   * @notice Selects the issuers for the most recent attestation request.\n   * @param identifier The hash of the identifier to be attested.\n   */\n  function selectIssuers(bytes32 identifier) external {\n    IdentifierState storage state = identifiers[identifier];\n\n    require(\n      state.unselectedRequests[msg.sender].blockNumber > 0,\n      \"No unselected attestation request to select issuers for\"\n    );\n\n    require(\n      !isAttestationExpired(state.unselectedRequests[msg.sender].blockNumber),\n      \"The attestation request has expired\"\n    );\n\n    addIncompleteAttestations(identifier);\n    delete state.unselectedRequests[msg.sender];\n  }\n\n  /**\n   * @notice Submit the secret message sent by the issuer to complete the attestation request.\n   * @param identifier The hash of the identifier for this attestation.\n   * @param v The recovery id of the incoming ECDSA signature.\n   * @param r Output value r of the ECDSA signature.\n   * @param s Output value s of the ECDSA signature.\n   * @dev Throws if there is no matching outstanding attestation request.\n   * @dev Throws if the attestation window has passed.\n   */\n  function complete(bytes32 identifier, uint8 v, bytes32 r, bytes32 s) external {\n    address issuer = validateAttestationCode(identifier, msg.sender, v, r, s);\n\n    Attestation storage attestation = identifiers[identifier].attestations[msg.sender]\n      .issuedAttestations[issuer];\n\n    address token = attestation.attestationRequestFeeToken;\n\n    // solhint-disable-next-line not-rely-on-time\n    attestation.blockNumber = block.number.toUint32();\n    attestation.status = AttestationStatus.Complete;\n    delete attestation.attestationRequestFeeToken;\n    AttestedAddress storage attestedAddress = identifiers[identifier].attestations[msg.sender];\n    require(\n      attestedAddress.completed < attestedAddress.completed + 1,\n      \"SafeMath32 integer overflow\"\n    );\n    attestedAddress.completed = attestedAddress.completed + 1;\n\n    pendingWithdrawals[token][issuer] = pendingWithdrawals[token][issuer].add(\n      attestationRequestFees[token]\n    );\n\n    IdentifierState storage state = identifiers[identifier];\n    if (identifiers[identifier].attestations[msg.sender].completed == 1) {\n      state.accounts.push(msg.sender);\n    }\n\n    emit AttestationCompleted(identifier, msg.sender, issuer);\n  }\n\n  /**\n   * @notice Adds additional attestations given the current randomness.\n   * @param identifier The hash of the identifier to be attested.\n   */\n  function addIncompleteAttestations(bytes32 identifier) internal {\n    AttestedAddress storage state = identifiers[identifier].attestations[msg.sender];\n    UnselectedRequest storage unselectedRequest = identifiers[identifier].unselectedRequests[msg\n      .sender];\n\n    bytes32 seed = getRandom().getBlockRandomness(\n      uint256(unselectedRequest.blockNumber).add(selectIssuersWaitBlocks)\n    );\n    IAccounts accounts = getAccounts();\n    uint256 issuersLength = numberValidatorsInCurrentSet();\n    uint256[] memory issuers = new uint256[](issuersLength);\n    for (uint256 i = 0; i < issuersLength; i = i.add(1)) issuers[i] = i;\n\n    require(unselectedRequest.attestationsRequested <= issuersLength, \"not enough issuers\");\n\n    uint256 currentIndex = 0;\n\n    // The length of the list (variable issuersLength) is decremented in each round,\n    // so the loop always terminates\n    while (currentIndex < unselectedRequest.attestationsRequested) {\n      require(issuersLength > 0, \"not enough issuers\");\n      seed = keccak256(abi.encodePacked(seed));\n      uint256 idx = uint256(seed) % issuersLength;\n      address signer = validatorSignerAddressFromCurrentSet(issuers[idx]);\n      address issuer = accounts.signerToAccount(signer);\n\n      Attestation storage attestation = state.issuedAttestations[issuer];\n\n      if (\n        attestation.status == AttestationStatus.None &&\n        accounts.hasAuthorizedAttestationSigner(issuer)\n      ) {\n        currentIndex = currentIndex.add(1);\n        attestation.status = AttestationStatus.Incomplete;\n        attestation.blockNumber = unselectedRequest.blockNumber;\n        attestation.attestationRequestFeeToken = unselectedRequest.attestationRequestFeeToken;\n        state.selectedIssuers.push(issuer);\n\n        emit AttestationIssuerSelected(\n          identifier,\n          msg.sender,\n          issuer,\n          unselectedRequest.attestationRequestFeeToken\n        );\n      }\n\n      // Remove the validator that was selected from the list,\n      // by replacing it by the last element in the list\n      issuersLength = issuersLength.sub(1);\n      issuers[idx] = issuers[issuersLength];\n    }\n  }\n}\n",
  "sourcePath": "/Users/beaver/Development/celo/celo-monorepo/packages/protocol/contracts/identity/test/AttestationsTest.sol",
  "ast": {
    "absolutePath": "project:/contracts/identity/test/AttestationsTest.sol",
    "exportedSymbols": {
      "AttestationsTest": [
        51560
      ]
    },
    "id": 51561,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 50956,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:149"
      },
      {
        "absolutePath": "project:/contracts/identity/Attestations.sol",
        "file": "../Attestations.sol",
        "id": 50957,
        "nodeType": "ImportDirective",
        "scope": 51561,
        "sourceUnit": 47341,
        "src": "26:29:149",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 50959,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "328:4:149",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 50958,
              "name": "Attestations",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 47340,
              "src": "315:12:149",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Attestations_$47340",
                "typeString": "contract Attestations"
              }
            },
            "id": 50960,
            "nodeType": "InheritanceSpecifier",
            "src": "315:18:149"
          }
        ],
        "contractDependencies": [
          26,
          481,
          7598,
          11461,
          11867,
          12683,
          17579,
          47340,
          50649
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 51560,
        "linearizedBaseContracts": [
          51560,
          47340,
          11461,
          17579,
          11867,
          7598,
          481,
          26,
          12683,
          50649
        ],
        "name": "AttestationsTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 50963,
            "name": "__testValidators",
            "nodeType": "VariableDeclaration",
            "scope": 51560,
            "src": "338:34:149",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 50961,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "338:7:149",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 50962,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "338:9:149",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 50973,
              "nodeType": "Block",
              "src": "438:40:149",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50969,
                      "name": "__testValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50963,
                      "src": "444:16:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 50970,
                      "name": "validators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50966,
                      "src": "463:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "444:29:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 50972,
                  "nodeType": "ExpressionStatement",
                  "src": "444:29:149"
                }
              ]
            },
            "documentation": null,
            "id": 50974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__setValidators",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50966,
                  "name": "validators",
                  "nodeType": "VariableDeclaration",
                  "scope": 50974,
                  "src": "402:27:149",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50964,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "402:7:149",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 50965,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "402:9:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "401:29:149"
            },
            "returnParameters": {
              "id": 50968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:149"
            },
            "scope": 51560,
            "src": "377:101:149",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50982,
              "nodeType": "Block",
              "src": "552:41:149",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 50979,
                      "name": "__testValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50963,
                      "src": "565:16:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 50980,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "565:23:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 50978,
                  "id": 50981,
                  "nodeType": "Return",
                  "src": "558:30:149"
                }
              ]
            },
            "documentation": null,
            "id": 50983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "519:2:149"
            },
            "returnParameters": {
              "id": 50978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50977,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50983,
                  "src": "543:7:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "542:9:149"
            },
            "scope": 51560,
            "src": "482:111:149",
            "stateMutability": "view",
            "superFunction": 11174,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50994,
              "nodeType": "Block",
              "src": "688:41:149",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 50990,
                      "name": "__testValidators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50963,
                      "src": "701:16:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 50992,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 50991,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50985,
                      "src": "718:5:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "701:23:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 50989,
                  "id": 50993,
                  "nodeType": "Return",
                  "src": "694:30:149"
                }
              ]
            },
            "documentation": null,
            "id": 50995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validatorSignerAddressFromCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50985,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 50995,
                  "src": "643:13:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "642:15:149"
            },
            "returnParameters": {
              "id": 50989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50988,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50995,
                  "src": "679:7:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:149",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "678:9:149"
            },
            "scope": 51560,
            "src": "597:132:149",
            "stateMutability": "view",
            "superFunction": 11096,
            "visibility": "public"
          },
          {
            "body": {
              "id": 51151,
              "nodeType": "Block",
              "src": "1646:1524:149",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 51007,
                            "name": "attestationRequestFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46155,
                            "src": "1667:22:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 51009,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51008,
                            "name": "attestationRequestFeeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51001,
                            "src": "1690:26:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1667:50:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 51010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1720:1:149",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1667:54:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206174746573746174696f6e52657175657374466565546f6b656e",
                        "id": 51012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1729:36:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fbab06e34ed13c693595be2183c86d3418ffc9113774673c63c7f72797b67ec",
                          "typeString": "literal_string \"Invalid attestationRequestFeeToken\""
                        },
                        "value": "Invalid attestationRequestFeeToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fbab06e34ed13c693595be2183c86d3418ffc9113774673c63c7f72797b67ec",
                          "typeString": "literal_string \"Invalid attestationRequestFeeToken\""
                        }
                      ],
                      "id": 51006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "1652:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:119:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51014,
                  "nodeType": "ExpressionStatement",
                  "src": "1652:119:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 51020,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59216,
                              "src": "1849:3:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 51021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1849:10:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51023,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59550,
                                "src": "1877:4:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AttestationsTest_$51560",
                                  "typeString": "contract AttestationsTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AttestationsTest_$51560",
                                  "typeString": "contract AttestationsTest"
                                }
                              ],
                              "id": 51022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1869:7:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 51024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1869:13:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51029,
                                "name": "attestationsRequested",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50999,
                                "src": "1947:21:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 51025,
                                  "name": "attestationRequestFees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46155,
                                  "src": "1892:22:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 51027,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 51026,
                                  "name": "attestationRequestFeeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51001,
                                  "src": "1915:26:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1892:50:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 280,
                              "src": "1892:54:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 51030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1892:77:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51017,
                                "name": "attestationRequestFeeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51001,
                                "src": "1799:26:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 51016,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "1792:6:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$955_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 51018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1792:34:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$955",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 51019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 938,
                          "src": "1792:47:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 51031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1792:185:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206f66206174746573746174696f6e20726571756573742066656573206661696c6564",
                        "id": 51032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1985:45:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5394185b740e608ff56aadc9b35a71ad0bd15ed5fd197afb4e85372abf8f00",
                          "typeString": "literal_string \"Transfer of attestation request fees failed\""
                        },
                        "value": "Transfer of attestation request fees failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5394185b740e608ff56aadc9b35a71ad0bd15ed5fd197afb4e85372abf8f00",
                          "typeString": "literal_string \"Transfer of attestation request fees failed\""
                        }
                      ],
                      "id": 51015,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "1777:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:259:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51034,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:259:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 51036,
                          "name": "attestationsRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50999,
                          "src": "2051:21:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 51037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2075:1:149",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2051:25:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206861766520746f2072657175657374206174206c656173742031206174746573746174696f6e",
                        "id": 51039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2078:44:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6339f4898dba82a980125bd68be7797a9a8a24b1641e6a0bad0facf975bdb393",
                          "typeString": "literal_string \"You have to request at least 1 attestation\""
                        },
                        "value": "You have to request at least 1 attestation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6339f4898dba82a980125bd68be7797a9a8a24b1641e6a0bad0facf975bdb393",
                          "typeString": "literal_string \"You have to request at least 1 attestation\""
                        }
                      ],
                      "id": 51035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "2043:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:80:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51041,
                  "nodeType": "ExpressionStatement",
                  "src": "2043:80:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 51043,
                          "name": "attestationsRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50999,
                          "src": "2137:21:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51044,
                          "name": "maxAttestations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46151,
                          "src": "2162:15:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2137:40:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e79206174746573746174696f6e7320726571756573746564",
                        "id": 51046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2179:33:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_559f027ce8dce93c172edfe918d5248da9b0bbe7254143b010c3b7511882dd37",
                          "typeString": "literal_string \"Too many attestations requested\""
                        },
                        "value": "Too many attestations requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_559f027ce8dce93c172edfe918d5248da9b0bbe7254143b010c3b7511882dd37",
                          "typeString": "literal_string \"Too many attestations requested\""
                        }
                      ],
                      "id": 51042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "2129:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2129:84:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51048,
                  "nodeType": "ExpressionStatement",
                  "src": "2129:84:149"
                },
                {
                  "assignments": [
                    51050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51050,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51151,
                      "src": "2220:29:149",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                        "typeString": "struct Attestations.IdentifierState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51049,
                        "name": "IdentifierState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46141,
                        "src": "2220:15:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                          "typeString": "struct Attestations.IdentifierState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51054,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 51051,
                      "name": "identifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46145,
                      "src": "2252:11:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                        "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                      }
                    },
                    "id": 51053,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51052,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50997,
                      "src": "2264:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2252:23:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                      "typeString": "struct Attestations.IdentifierState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2220:55:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 51082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 51072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 51063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51056,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51050,
                                    "src": "2297:5:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                                      "typeString": "struct Attestations.IdentifierState storage pointer"
                                    }
                                  },
                                  "id": 51057,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unselectedRequests",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46140,
                                  "src": "2297:24:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                                    "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                  }
                                },
                                "id": 51060,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51058,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59216,
                                    "src": "2322:3:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 51059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2322:10:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2297:36:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                                  "typeString": "struct Attestations.UnselectedRequest storage ref"
                                }
                              },
                              "id": 51061,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "blockNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46124,
                              "src": "2297:48:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 51062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2349:1:149",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2297:53:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51065,
                                      "name": "state",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51050,
                                      "src": "2383:5:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                                        "typeString": "struct Attestations.IdentifierState storage pointer"
                                      }
                                    },
                                    "id": 51066,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "unselectedRequests",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46140,
                                    "src": "2383:24:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                                      "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    }
                                  },
                                  "id": 51069,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51067,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59216,
                                      "src": "2408:3:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 51068,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2408:10:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2383:36:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                                    "typeString": "struct Attestations.UnselectedRequest storage ref"
                                  }
                                },
                                "id": 51070,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46124,
                                "src": "2383:48:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 51064,
                              "name": "isAttestationExpired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47299,
                              "src": "2362:20:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                                "typeString": "function (uint32) view returns (bool)"
                              }
                            },
                            "id": 51071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2362:70:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2297:135:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2444:81:149",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51074,
                                      "name": "state",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51050,
                                      "src": "2476:5:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                                        "typeString": "struct Attestations.IdentifierState storage pointer"
                                      }
                                    },
                                    "id": 51075,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "unselectedRequests",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46140,
                                    "src": "2476:24:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                                      "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    }
                                  },
                                  "id": 51078,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51076,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59216,
                                      "src": "2501:3:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 51077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2501:10:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2476:36:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                                    "typeString": "struct Attestations.UnselectedRequest storage ref"
                                  }
                                },
                                "id": 51079,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46124,
                                "src": "2476:48:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 51073,
                              "name": "isAttestationRequestSelectable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47339,
                              "src": "2445:30:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256) view returns (bool)"
                              }
                            },
                            "id": 51080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2445:80:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2297:228:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686572652065786973747320616e20756e657870697265642c20756e73656c6563746564206174746573746174696f6e2072657175657374",
                        "id": 51083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2533:59:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_258b2694618df46c97b26596a48755d13ebcf705afc06b4350a78047cd959c93",
                          "typeString": "literal_string \"There exists an unexpired, unselected attestation request\""
                        },
                        "value": "There exists an unexpired, unselected attestation request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_258b2694618df46c97b26596a48755d13ebcf705afc06b4350a78047cd959c93",
                          "typeString": "literal_string \"There exists an unexpired, unselected attestation request\""
                        }
                      ],
                      "id": 51055,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "2282:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:316:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51085,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:316:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51086,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51050,
                            "src": "2605:5:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51090,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unselectedRequests",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46140,
                          "src": "2605:24:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                            "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                          }
                        },
                        "id": 51091,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51088,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59216,
                            "src": "2630:3:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2630:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2605:36:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                          "typeString": "struct Attestations.UnselectedRequest storage ref"
                        }
                      },
                      "id": 51092,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46124,
                      "src": "2605:48:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51093,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59206,
                            "src": "2656:5:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2656:12:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "2656:21:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2656:23:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2605:74:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51098,
                  "nodeType": "ExpressionStatement",
                  "src": "2605:74:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51099,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51050,
                            "src": "2685:5:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51103,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unselectedRequests",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46140,
                          "src": "2685:24:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                            "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                          }
                        },
                        "id": 51104,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51101,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59216,
                            "src": "2710:3:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2710:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2685:36:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                          "typeString": "struct Attestations.UnselectedRequest storage ref"
                        }
                      },
                      "id": 51105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "attestationsRequested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46126,
                      "src": "2685:58:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 51106,
                          "name": "attestationsRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50999,
                          "src": "2746:21:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "2746:30:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2746:32:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2685:93:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51110,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:93:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51111,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51050,
                            "src": "2784:5:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51115,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "unselectedRequests",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46140,
                          "src": "2784:24:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                            "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                          }
                        },
                        "id": 51116,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51113,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59216,
                            "src": "2809:3:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2809:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2784:36:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                          "typeString": "struct Attestations.UnselectedRequest storage ref"
                        }
                      },
                      "id": 51117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "attestationRequestFeeToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46128,
                      "src": "2784:63:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51118,
                      "name": "attestationRequestFeeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51001,
                      "src": "2850:26:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2784:92:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51120,
                  "nodeType": "ExpressionStatement",
                  "src": "2784:92:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51121,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51050,
                            "src": "2883:5:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                              "typeString": "struct Attestations.IdentifierState storage pointer"
                            }
                          },
                          "id": 51125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46136,
                          "src": "2883:18:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46122_storage_$",
                            "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                          }
                        },
                        "id": 51126,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51123,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59216,
                            "src": "2902:3:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2902:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2883:30:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage",
                          "typeString": "struct Attestations.AttestedAddress storage ref"
                        }
                      },
                      "id": 51127,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46112,
                      "src": "2883:40:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 51137,
                              "name": "attestationsRequested",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50999,
                              "src": "2987:21:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 51129,
                                        "name": "state",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 51050,
                                        "src": "2934:5:149",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                                          "typeString": "struct Attestations.IdentifierState storage pointer"
                                        }
                                      },
                                      "id": 51130,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "attestations",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 46136,
                                      "src": "2934:18:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46122_storage_$",
                                        "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                      }
                                    },
                                    "id": 51133,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 51131,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 59216,
                                        "src": "2953:3:149",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 51132,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "2953:10:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2934:30:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage",
                                      "typeString": "struct Attestations.AttestedAddress storage ref"
                                    }
                                  },
                                  "id": 51134,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "requested",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46112,
                                  "src": "2934:40:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "id": 51128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2926:7:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 51135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2926:49:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 51136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "2926:60:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 51138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2926:83:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "2926:99:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2926:101:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2883:144:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51142,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:144:149"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51144,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50997,
                        "src": "3068:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59216,
                          "src": "3086:3:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3086:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51147,
                        "name": "attestationsRequested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50999,
                        "src": "3104:21:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51148,
                        "name": "attestationRequestFeeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51001,
                        "src": "3133:26:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51143,
                      "name": "AttestationsRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46177,
                      "src": "3039:21:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,address)"
                      }
                    },
                    "id": 51149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:126:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51150,
                  "nodeType": "EmitStatement",
                  "src": "3034:131:149"
                }
              ]
            },
            "documentation": "@notice Commit to the attestation request of a hashed identifier.\n@param identifier The hash of the identifier to be attested.\n@param attestationsRequested The number of requested attestations for this request.\n@param attestationRequestFeeToken The address of the token with which the attestation fee will\nbe paid.\n@dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\nto prevent folks from attacking validators by requesting attestations that they do not\ncomplete, and to increase the cost of validators attempting to manipulate the attestations\nprotocol.",
            "id": 51152,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 51004,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51003,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 17578,
                  "src": "1633:12:149",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1633:12:149"
              }
            ],
            "name": "request",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50997,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51152,
                  "src": "1526:18:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50996,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50999,
                  "name": "attestationsRequested",
                  "nodeType": "VariableDeclaration",
                  "scope": 51152,
                  "src": "1550:29:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51001,
                  "name": "attestationRequestFeeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 51152,
                  "src": "1585:34:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:149",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1520:103:149"
            },
            "returnParameters": {
              "id": 51005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1646:0:149"
            },
            "scope": 51560,
            "src": "1504:1666:149",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 51199,
              "nodeType": "Block",
              "src": "3378:448:149",
              "statements": [
                {
                  "assignments": [
                    51158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51158,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51199,
                      "src": "3384:29:149",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                        "typeString": "struct Attestations.IdentifierState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51157,
                        "name": "IdentifierState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46141,
                        "src": "3384:15:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                          "typeString": "struct Attestations.IdentifierState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51162,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 51159,
                      "name": "identifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46145,
                      "src": "3416:11:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                        "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                      }
                    },
                    "id": 51161,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51160,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51154,
                      "src": "3428:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3416:23:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                      "typeString": "struct Attestations.IdentifierState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:55:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 51171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51164,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51158,
                                "src": "3461:5:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                                  "typeString": "struct Attestations.IdentifierState storage pointer"
                                }
                              },
                              "id": 51165,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "unselectedRequests",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46140,
                              "src": "3461:24:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                                "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                              }
                            },
                            "id": 51168,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51166,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59216,
                                "src": "3486:3:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 51167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3486:10:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3461:36:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                              "typeString": "struct Attestations.UnselectedRequest storage ref"
                            }
                          },
                          "id": 51169,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "blockNumber",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46124,
                          "src": "3461:48:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 51170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3512:1:149",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3461:52:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20756e73656c6563746564206174746573746174696f6e207265717565737420746f2073656c656374206973737565727320666f72",
                        "id": 51172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3521:57:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2336bcc88f66654106a02094418f163fe78eff0542e86c1e6abfe990b3a169",
                          "typeString": "literal_string \"No unselected attestation request to select issuers for\""
                        },
                        "value": "No unselected attestation request to select issuers for"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf2336bcc88f66654106a02094418f163fe78eff0542e86c1e6abfe990b3a169",
                          "typeString": "literal_string \"No unselected attestation request to select issuers for\""
                        }
                      ],
                      "id": 51163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "3446:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3446:138:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51174,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:138:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3606:71:149",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51177,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51158,
                                    "src": "3628:5:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                                      "typeString": "struct Attestations.IdentifierState storage pointer"
                                    }
                                  },
                                  "id": 51178,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "unselectedRequests",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46140,
                                  "src": "3628:24:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                                    "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                  }
                                },
                                "id": 51181,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51179,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59216,
                                    "src": "3653:3:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 51180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3653:10:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3628:36:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                                  "typeString": "struct Attestations.UnselectedRequest storage ref"
                                }
                              },
                              "id": 51182,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "blockNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46124,
                              "src": "3628:48:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 51176,
                            "name": "isAttestationExpired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47299,
                            "src": "3607:20:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint32_$returns$_t_bool_$",
                              "typeString": "function (uint32) view returns (bool)"
                            }
                          },
                          "id": 51183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3607:70:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206174746573746174696f6e2072657175657374206861732065787069726564",
                        "id": 51185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3685:37:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0f527738e002968b2ccbb3a0e21bea4cc9d35abeeb3a84053f4cccd53b5eb9f",
                          "typeString": "literal_string \"The attestation request has expired\""
                        },
                        "value": "The attestation request has expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0f527738e002968b2ccbb3a0e21bea4cc9d35abeeb3a84053f4cccd53b5eb9f",
                          "typeString": "literal_string \"The attestation request has expired\""
                        }
                      ],
                      "id": 51175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "3591:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3591:137:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51187,
                  "nodeType": "ExpressionStatement",
                  "src": "3591:137:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51189,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51154,
                        "src": "3761:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51188,
                      "name": "addIncompleteAttestations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51559,
                      "src": "3735:25:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 51190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3735:37:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51191,
                  "nodeType": "ExpressionStatement",
                  "src": "3735:37:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3778:43:149",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51192,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51158,
                          "src": "3785:5:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                            "typeString": "struct Attestations.IdentifierState storage pointer"
                          }
                        },
                        "id": 51193,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "unselectedRequests",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46140,
                        "src": "3785:24:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                          "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                        }
                      },
                      "id": 51196,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51194,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59216,
                          "src": "3810:3:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3810:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3785:36:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                        "typeString": "struct Attestations.UnselectedRequest storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51198,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:43:149"
                }
              ]
            },
            "documentation": "@notice Selects the issuers for the most recent attestation request.\n@param identifier The hash of the identifier to be attested.",
            "id": 51200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectIssuers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51154,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51200,
                  "src": "3349:18:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3349:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3348:20:149"
            },
            "returnParameters": {
              "id": 51156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3378:0:149"
            },
            "scope": 51560,
            "src": "3326:500:149",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 51341,
              "nodeType": "Block",
              "src": "4385:1127:149",
              "statements": [
                {
                  "assignments": [
                    51212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51212,
                      "name": "issuer",
                      "nodeType": "VariableDeclaration",
                      "scope": 51341,
                      "src": "4391:14:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51211,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4391:7:149",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51221,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51214,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51202,
                        "src": "4432:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51215,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59216,
                          "src": "4444:3:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4444:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51217,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51204,
                        "src": "4456:1:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51218,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51206,
                        "src": "4459:1:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51219,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51208,
                        "src": "4462:1:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 51213,
                      "name": "validateAttestationCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47156,
                      "src": "4408:23:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,address,uint8,bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 51220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4408:56:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4391:73:149"
                },
                {
                  "assignments": [
                    51223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51223,
                      "name": "attestation",
                      "nodeType": "VariableDeclaration",
                      "scope": 51341,
                      "src": "4471:31:149",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                        "typeString": "struct Attestations.Attestation"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51222,
                        "name": "Attestation",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46110,
                        "src": "4471:11:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                          "typeString": "struct Attestations.Attestation"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51234,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51224,
                              "name": "identifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46145,
                              "src": "4505:11:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                                "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                              }
                            },
                            "id": 51226,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51225,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51202,
                              "src": "4517:10:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4505:23:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                              "typeString": "struct Attestations.IdentifierState storage ref"
                            }
                          },
                          "id": 51227,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46136,
                          "src": "4505:36:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46122_storage_$",
                            "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                          }
                        },
                        "id": 51230,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51228,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59216,
                            "src": "4542:3:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4542:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4505:48:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage",
                          "typeString": "struct Attestations.AttestedAddress storage ref"
                        }
                      },
                      "id": 51231,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "issuedAttestations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46121,
                      "src": "4505:74:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Attestation_$46110_storage_$",
                        "typeString": "mapping(address => struct Attestations.Attestation storage ref)"
                      }
                    },
                    "id": 51233,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51232,
                      "name": "issuer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51212,
                      "src": "4580:6:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4505:82:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Attestation_$46110_storage",
                      "typeString": "struct Attestations.Attestation storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4471:116:149"
                },
                {
                  "assignments": [
                    51236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51236,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 51341,
                      "src": "4594:13:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51235,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4594:7:149",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51239,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 51237,
                      "name": "attestation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51223,
                      "src": "4610:11:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                        "typeString": "struct Attestations.Attestation storage pointer"
                      }
                    },
                    "id": 51238,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "attestationRequestFeeToken",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 46109,
                    "src": "4610:38:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4594:54:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51240,
                        "name": "attestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51223,
                        "src": "4705:11:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                          "typeString": "struct Attestations.Attestation storage pointer"
                        }
                      },
                      "id": 51242,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46107,
                      "src": "4705:23:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51243,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59206,
                            "src": "4731:5:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4731:12:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "toUint32",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1530,
                        "src": "4731:21:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint32)"
                        }
                      },
                      "id": 51246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4731:23:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4705:49:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51248,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:49:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51249,
                        "name": "attestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51223,
                        "src": "4760:11:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                          "typeString": "struct Attestations.Attestation storage pointer"
                        }
                      },
                      "id": 51251,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46105,
                      "src": "4760:18:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                        "typeString": "enum Attestations.AttestationStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51252,
                        "name": "AttestationStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46103,
                        "src": "4781:17:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_AttestationStatus_$46103_$",
                          "typeString": "type(enum Attestations.AttestationStatus)"
                        }
                      },
                      "id": 51253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Complete",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4781:26:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                        "typeString": "enum Attestations.AttestationStatus"
                      }
                    },
                    "src": "4760:47:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                      "typeString": "enum Attestations.AttestationStatus"
                    }
                  },
                  "id": 51255,
                  "nodeType": "ExpressionStatement",
                  "src": "4760:47:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4813:45:149",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51256,
                        "name": "attestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51223,
                        "src": "4820:11:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                          "typeString": "struct Attestations.Attestation storage pointer"
                        }
                      },
                      "id": 51257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "attestationRequestFeeToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46109,
                      "src": "4820:38:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51259,
                  "nodeType": "ExpressionStatement",
                  "src": "4813:45:149"
                },
                {
                  "assignments": [
                    51261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51261,
                      "name": "attestedAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 51341,
                      "src": "4864:39:149",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                        "typeString": "struct Attestations.AttestedAddress"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51260,
                        "name": "AttestedAddress",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46122,
                        "src": "4864:15:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                          "typeString": "struct Attestations.AttestedAddress"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51269,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51262,
                          "name": "identifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46145,
                          "src": "4906:11:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                            "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                          }
                        },
                        "id": 51264,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51263,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51202,
                          "src": "4918:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4906:23:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                          "typeString": "struct Attestations.IdentifierState storage ref"
                        }
                      },
                      "id": 51265,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attestations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46136,
                      "src": "4906:36:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46122_storage_$",
                        "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                      }
                    },
                    "id": 51268,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51266,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59216,
                        "src": "4943:3:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4943:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4906:48:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage",
                      "typeString": "struct Attestations.AttestedAddress storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4864:90:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 51277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51271,
                            "name": "attestedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51261,
                            "src": "4975:15:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                              "typeString": "struct Attestations.AttestedAddress storage pointer"
                            }
                          },
                          "id": 51272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "completed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46114,
                          "src": "4975:25:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 51276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 51273,
                              "name": "attestedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51261,
                              "src": "5003:15:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                                "typeString": "struct Attestations.AttestedAddress storage pointer"
                              }
                            },
                            "id": 51274,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "completed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46114,
                            "src": "5003:25:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 51275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5031:1:149",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5003:29:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "4975:57:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536166654d617468333220696e7465676572206f766572666c6f77",
                        "id": 51278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5040:29:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b25ca52c150c885152a41d16b8c6680148452eaf44111476e6e69ba5a1f167fd",
                          "typeString": "literal_string \"SafeMath32 integer overflow\""
                        },
                        "value": "SafeMath32 integer overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b25ca52c150c885152a41d16b8c6680148452eaf44111476e6e69ba5a1f167fd",
                          "typeString": "literal_string \"SafeMath32 integer overflow\""
                        }
                      ],
                      "id": 51270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "4960:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:115:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51280,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:115:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51281,
                        "name": "attestedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51261,
                        "src": "5081:15:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                          "typeString": "struct Attestations.AttestedAddress storage pointer"
                        }
                      },
                      "id": 51283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46114,
                      "src": "5081:25:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 51287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51284,
                          "name": "attestedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51261,
                          "src": "5109:15:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                            "typeString": "struct Attestations.AttestedAddress storage pointer"
                          }
                        },
                        "id": 51285,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "completed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46114,
                        "src": "5109:25:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 51286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5137:1:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5109:29:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5081:57:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 51289,
                  "nodeType": "ExpressionStatement",
                  "src": "5081:57:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 51305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51290,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46161,
                          "src": "5145:18:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 51293,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51291,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51236,
                          "src": "5164:5:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5145:25:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51294,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 51292,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51212,
                        "src": "5171:6:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5145:33:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 51301,
                            "name": "attestationRequestFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46155,
                            "src": "5226:22:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 51303,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51302,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51236,
                            "src": "5249:5:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5226:29:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51295,
                              "name": "pendingWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46161,
                              "src": "5181:18:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 51297,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51296,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51236,
                              "src": "5200:5:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5181:25:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 51299,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51298,
                            "name": "issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51212,
                            "src": "5207:6:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5181:33:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 203,
                        "src": "5181:37:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 51304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5181:80:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5145:116:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51306,
                  "nodeType": "ExpressionStatement",
                  "src": "5145:116:149"
                },
                {
                  "assignments": [
                    51308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51308,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51341,
                      "src": "5268:29:149",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                        "typeString": "struct Attestations.IdentifierState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51307,
                        "name": "IdentifierState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46141,
                        "src": "5268:15:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                          "typeString": "struct Attestations.IdentifierState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51312,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 51309,
                      "name": "identifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46145,
                      "src": "5300:11:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                        "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                      }
                    },
                    "id": 51311,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 51310,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51202,
                      "src": "5312:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5300:23:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                      "typeString": "struct Attestations.IdentifierState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5268:55:149"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 51322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51313,
                              "name": "identifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46145,
                              "src": "5333:11:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                                "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                              }
                            },
                            "id": 51315,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51314,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51202,
                              "src": "5345:10:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5333:23:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                              "typeString": "struct Attestations.IdentifierState storage ref"
                            }
                          },
                          "id": 51316,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestations",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46136,
                          "src": "5333:36:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46122_storage_$",
                            "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                          }
                        },
                        "id": 51319,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51317,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59216,
                            "src": "5370:3:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5370:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5333:48:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage",
                          "typeString": "struct Attestations.AttestedAddress storage ref"
                        }
                      },
                      "id": 51320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "completed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46114,
                      "src": "5333:58:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 51321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5395:1:149",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5333:63:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 51333,
                  "nodeType": "IfStatement",
                  "src": "5329:115:149",
                  "trueBody": {
                    "id": 51332,
                    "nodeType": "Block",
                    "src": "5398:46:149",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51328,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59216,
                                "src": "5426:3:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 51329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5426:10:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51323,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51308,
                                "src": "5406:5:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IdentifierState_$46141_storage_ptr",
                                  "typeString": "struct Attestations.IdentifierState storage pointer"
                                }
                              },
                              "id": 51326,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accounts",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46132,
                              "src": "5406:14:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 51327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5406:19:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) returns (uint256)"
                            }
                          },
                          "id": 51330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5406:31:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51331,
                        "nodeType": "ExpressionStatement",
                        "src": "5406:31:149"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51335,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51202,
                        "src": "5476:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 51336,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59216,
                          "src": "5488:3:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5488:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51338,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51212,
                        "src": "5500:6:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51334,
                      "name": "AttestationCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46195,
                      "src": "5455:20:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 51339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5455:52:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51340,
                  "nodeType": "EmitStatement",
                  "src": "5450:57:149"
                }
              ]
            },
            "documentation": "@notice Submit the secret message sent by the issuer to complete the attestation request.\n@param identifier The hash of the identifier for this attestation.\n@param v The recovery id of the incoming ECDSA signature.\n@param r Output value r of the ECDSA signature.\n@param s Output value s of the ECDSA signature.\n@dev Throws if there is no matching outstanding attestation request.\n@dev Throws if the attestation window has passed.",
            "id": 51342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "complete",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51202,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51342,
                  "src": "4325:18:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51201,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51204,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 51342,
                  "src": "4345:7:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 51203,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4345:5:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51206,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 51342,
                  "src": "4354:9:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51205,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4354:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51208,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 51342,
                  "src": "4365:9:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51207,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4365:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4324:51:149"
            },
            "returnParameters": {
              "id": 51210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4385:0:149"
            },
            "scope": 51560,
            "src": "4307:1205:149",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 51558,
              "nodeType": "Block",
              "src": "5730:2084:149",
              "statements": [
                {
                  "assignments": [
                    51348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51348,
                      "name": "state",
                      "nodeType": "VariableDeclaration",
                      "scope": 51558,
                      "src": "5736:29:149",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                        "typeString": "struct Attestations.AttestedAddress"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51347,
                        "name": "AttestedAddress",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46122,
                        "src": "5736:15:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                          "typeString": "struct Attestations.AttestedAddress"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51356,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51349,
                          "name": "identifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46145,
                          "src": "5768:11:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                            "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                          }
                        },
                        "id": 51351,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51350,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51344,
                          "src": "5780:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5768:23:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                          "typeString": "struct Attestations.IdentifierState storage ref"
                        }
                      },
                      "id": 51352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attestations",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46136,
                      "src": "5768:36:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AttestedAddress_$46122_storage_$",
                        "typeString": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                      }
                    },
                    "id": 51355,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51353,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59216,
                        "src": "5805:3:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5805:10:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5768:48:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage",
                      "typeString": "struct Attestations.AttestedAddress storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5736:80:149"
                },
                {
                  "assignments": [
                    51358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51358,
                      "name": "unselectedRequest",
                      "nodeType": "VariableDeclaration",
                      "scope": 51558,
                      "src": "5822:43:149",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                        "typeString": "struct Attestations.UnselectedRequest"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51357,
                        "name": "UnselectedRequest",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 46129,
                        "src": "5822:17:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                          "typeString": "struct Attestations.UnselectedRequest"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51366,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51359,
                          "name": "identifiers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46145,
                          "src": "5868:11:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_IdentifierState_$46141_storage_$",
                            "typeString": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)"
                          }
                        },
                        "id": 51361,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51360,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51344,
                          "src": "5880:10:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5868:23:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_IdentifierState_$46141_storage",
                          "typeString": "struct Attestations.IdentifierState storage ref"
                        }
                      },
                      "id": 51362,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unselectedRequests",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46140,
                      "src": "5868:42:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UnselectedRequest_$46129_storage_$",
                        "typeString": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                      }
                    },
                    "id": 51365,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51363,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59216,
                        "src": "5911:3:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5911:17:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5868:61:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage",
                      "typeString": "struct Attestations.UnselectedRequest storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5822:107:149"
                },
                {
                  "assignments": [
                    51368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51368,
                      "name": "seed",
                      "nodeType": "VariableDeclaration",
                      "scope": 51558,
                      "src": "5936:12:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 51367,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5936:7:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51380,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 51377,
                            "name": "selectIssuersWaitBlocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46149,
                            "src": "6032:23:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 51373,
                                  "name": "unselectedRequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51358,
                                  "src": "5997:17:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                                    "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                  }
                                },
                                "id": 51374,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockNumber",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46124,
                                "src": "5997:29:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 51372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5989:7:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 51375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5989:38:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 203,
                          "src": "5989:42:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 51378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5989:67:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 51369,
                          "name": "getRandom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11814,
                          "src": "5951:9:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IRandom_$50924_$",
                            "typeString": "function () view returns (contract IRandom)"
                          }
                        },
                        "id": 51370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5951:11:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRandom_$50924",
                          "typeString": "contract IRandom"
                        }
                      },
                      "id": 51371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBlockRandomness",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50923,
                      "src": "5951:30:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256) view external returns (bytes32)"
                      }
                    },
                    "id": 51379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5951:111:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5936:126:149"
                },
                {
                  "assignments": [
                    51382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51382,
                      "name": "accounts",
                      "nodeType": "VariableDeclaration",
                      "scope": 51558,
                      "src": "6068:18:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccounts_$12633",
                        "typeString": "contract IAccounts"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 51381,
                        "name": "IAccounts",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 12633,
                        "src": "6068:9:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccounts_$12633",
                          "typeString": "contract IAccounts"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51385,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51383,
                      "name": "getAccounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11697,
                      "src": "6089:11:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IAccounts_$12633_$",
                        "typeString": "function () view returns (contract IAccounts)"
                      }
                    },
                    "id": 51384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6089:13:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccounts_$12633",
                      "typeString": "contract IAccounts"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6068:34:149"
                },
                {
                  "assignments": [
                    51387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51387,
                      "name": "issuersLength",
                      "nodeType": "VariableDeclaration",
                      "scope": 51558,
                      "src": "6108:21:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6108:7:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51390,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 51388,
                      "name": "numberValidatorsInCurrentSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        50983
                      ],
                      "referencedDeclaration": 50983,
                      "src": "6132:28:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 51389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6132:30:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6108:54:149"
                },
                {
                  "assignments": [
                    51394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51394,
                      "name": "issuers",
                      "nodeType": "VariableDeclaration",
                      "scope": 51558,
                      "src": "6168:24:149",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 51392,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6168:7:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51393,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6168:9:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51400,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 51398,
                        "name": "issuersLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51387,
                        "src": "6209:13:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6195:13:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 51395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51396,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6199:9:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 51399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6195:28:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6168:55:149"
                },
                {
                  "body": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 51419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 51415,
                          "name": "issuers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51394,
                          "src": "6282:7:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 51417,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 51416,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51402,
                          "src": "6290:1:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "6282:10:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 51418,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51402,
                        "src": "6295:1:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6282:14:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51420,
                    "nodeType": "ExpressionStatement",
                    "src": "6282:14:149"
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 51405,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51402,
                      "src": "6249:1:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 51406,
                      "name": "issuersLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51387,
                      "src": "6253:13:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6249:17:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51421,
                  "initializationExpression": {
                    "assignments": [
                      51402
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 51402,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 51421,
                        "src": "6234:9:149",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51401,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6234:7:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 51404,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 51403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6246:1:149",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6234:13:149"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 51413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 51408,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51402,
                        "src": "6268:1:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 51411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6278:1:149",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 51409,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51402,
                            "src": "6272:1:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 51410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 203,
                          "src": "6272:5:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 51412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6272:8:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6268:12:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51414,
                    "nodeType": "ExpressionStatement",
                    "src": "6268:12:149"
                  },
                  "nodeType": "ForStatement",
                  "src": "6229:67:149"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 51423,
                            "name": "unselectedRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51358,
                            "src": "6311:17:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                              "typeString": "struct Attestations.UnselectedRequest storage pointer"
                            }
                          },
                          "id": 51424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "attestationsRequested",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46126,
                          "src": "6311:39:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51425,
                          "name": "issuersLength",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51387,
                          "src": "6354:13:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6311:56:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682069737375657273",
                        "id": 51427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6369:20:149",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                          "typeString": "literal_string \"not enough issuers\""
                        },
                        "value": "not enough issuers"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                          "typeString": "literal_string \"not enough issuers\""
                        }
                      ],
                      "id": 51422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "6303:7:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 51428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6303:87:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51429,
                  "nodeType": "ExpressionStatement",
                  "src": "6303:87:149"
                },
                {
                  "assignments": [
                    51431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51431,
                      "name": "currentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 51558,
                      "src": "6397:20:149",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6397:7:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 51433,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 51432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6420:1:149",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6397:24:149"
                },
                {
                  "body": {
                    "id": 51556,
                    "nodeType": "Block",
                    "src": "6613:1197:149",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 51441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 51439,
                                "name": "issuersLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51387,
                                "src": "6629:13:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 51440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6645:1:149",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6629:17:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f7420656e6f7567682069737375657273",
                              "id": 51442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6648:20:149",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                "typeString": "literal_string \"not enough issuers\""
                              },
                              "value": "not enough issuers"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                "typeString": "literal_string \"not enough issuers\""
                              }
                            ],
                            "id": 51438,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              59219,
                              59220
                            ],
                            "referencedDeclaration": 59220,
                            "src": "6621:7:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 51443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6621:48:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51444,
                        "nodeType": "ExpressionStatement",
                        "src": "6621:48:149"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 51445,
                            "name": "seed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51368,
                            "src": "6677:4:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 51449,
                                    "name": "seed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51368,
                                    "src": "6711:4:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51447,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 59203,
                                    "src": "6694:3:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 51448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6694:16:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 51450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6694:22:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 51446,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59210,
                              "src": "6684:9:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 51451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6684:33:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6677:40:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 51453,
                        "nodeType": "ExpressionStatement",
                        "src": "6677:40:149"
                      },
                      {
                        "assignments": [
                          51455
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51455,
                            "name": "idx",
                            "nodeType": "VariableDeclaration",
                            "scope": 51556,
                            "src": "6725:11:149",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 51454,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6725:7:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51461,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51457,
                                "name": "seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51368,
                                "src": "6747:4:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 51456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6739:7:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 51458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6739:13:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 51459,
                            "name": "issuersLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51387,
                            "src": "6755:13:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6739:29:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6725:43:149"
                      },
                      {
                        "assignments": [
                          51463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51463,
                            "name": "signer",
                            "nodeType": "VariableDeclaration",
                            "scope": 51556,
                            "src": "6776:14:149",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 51462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6776:7:149",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51469,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 51465,
                                "name": "issuers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51394,
                                "src": "6830:7:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 51467,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 51466,
                                "name": "idx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51455,
                                "src": "6838:3:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6830:12:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 51464,
                            "name": "validatorSignerAddressFromCurrentSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              50995
                            ],
                            "referencedDeclaration": 50995,
                            "src": "6793:36:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 51468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6793:50:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6776:67:149"
                      },
                      {
                        "assignments": [
                          51471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51471,
                            "name": "issuer",
                            "nodeType": "VariableDeclaration",
                            "scope": 51556,
                            "src": "6851:14:149",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 51470,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6851:7:149",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51476,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 51474,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51463,
                              "src": "6893:6:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 51472,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51382,
                              "src": "6868:8:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAccounts_$12633",
                                "typeString": "contract IAccounts"
                              }
                            },
                            "id": 51473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "signerToAccount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12415,
                            "src": "6868:24:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view external returns (address)"
                            }
                          },
                          "id": 51475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6868:32:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6851:49:149"
                      },
                      {
                        "assignments": [
                          51478
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51478,
                            "name": "attestation",
                            "nodeType": "VariableDeclaration",
                            "scope": 51556,
                            "src": "6909:31:149",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                              "typeString": "struct Attestations.Attestation"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 51477,
                              "name": "Attestation",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 46110,
                              "src": "6909:11:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                                "typeString": "struct Attestations.Attestation"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 51483,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 51479,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51348,
                              "src": "6943:5:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                                "typeString": "struct Attestations.AttestedAddress storage pointer"
                              }
                            },
                            "id": 51480,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issuedAttestations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46121,
                            "src": "6943:24:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Attestation_$46110_storage_$",
                              "typeString": "mapping(address => struct Attestations.Attestation storage ref)"
                            }
                          },
                          "id": 51482,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 51481,
                            "name": "issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51471,
                            "src": "6968:6:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6943:32:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Attestation_$46110_storage",
                            "typeString": "struct Attestations.Attestation storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6909:66:149"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 51493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                              "typeString": "enum Attestations.AttestationStatus"
                            },
                            "id": 51488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51484,
                                "name": "attestation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51478,
                                "src": "6997:11:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                                  "typeString": "struct Attestations.Attestation storage pointer"
                                }
                              },
                              "id": 51485,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46105,
                              "src": "6997:18:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                                "typeString": "enum Attestations.AttestationStatus"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 51486,
                                "name": "AttestationStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46103,
                                "src": "7019:17:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_AttestationStatus_$46103_$",
                                  "typeString": "type(enum Attestations.AttestationStatus)"
                                }
                              },
                              "id": 51487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "None",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7019:22:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                                "typeString": "enum Attestations.AttestationStatus"
                              }
                            },
                            "src": "6997:44:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 51491,
                                "name": "issuer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51471,
                                "src": "7093:6:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 51489,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51382,
                                "src": "7053:8:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAccounts_$12633",
                                  "typeString": "contract IAccounts"
                                }
                              },
                              "id": 51490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "hasAuthorizedAttestationSigner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12457,
                              "src": "7053:39:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 51492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7053:47:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6997:103:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 51540,
                        "nodeType": "IfStatement",
                        "src": "6984:610:149",
                        "trueBody": {
                          "id": 51539,
                          "nodeType": "Block",
                          "src": "7109:485:149",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 51494,
                                  "name": "currentIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51431,
                                  "src": "7119:12:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 51497,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7151:1:149",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51495,
                                      "name": "currentIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51431,
                                      "src": "7134:12:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 51496,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 203,
                                    "src": "7134:16:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 51498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7134:19:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7119:34:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51500,
                              "nodeType": "ExpressionStatement",
                              "src": "7119:34:149"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51501,
                                    "name": "attestation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51478,
                                    "src": "7163:11:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                                      "typeString": "struct Attestations.Attestation storage pointer"
                                    }
                                  },
                                  "id": 51503,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46105,
                                  "src": "7163:18:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                                    "typeString": "enum Attestations.AttestationStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51504,
                                    "name": "AttestationStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46103,
                                    "src": "7184:17:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_AttestationStatus_$46103_$",
                                      "typeString": "type(enum Attestations.AttestationStatus)"
                                    }
                                  },
                                  "id": 51505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Incomplete",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7184:28:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                                    "typeString": "enum Attestations.AttestationStatus"
                                  }
                                },
                                "src": "7163:49:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                                  "typeString": "enum Attestations.AttestationStatus"
                                }
                              },
                              "id": 51507,
                              "nodeType": "ExpressionStatement",
                              "src": "7163:49:149"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51508,
                                    "name": "attestation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51478,
                                    "src": "7222:11:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                                      "typeString": "struct Attestations.Attestation storage pointer"
                                    }
                                  },
                                  "id": 51510,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "blockNumber",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46107,
                                  "src": "7222:23:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51511,
                                    "name": "unselectedRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51358,
                                    "src": "7248:17:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                                      "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                    }
                                  },
                                  "id": 51512,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "blockNumber",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46124,
                                  "src": "7248:29:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "7222:55:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 51514,
                              "nodeType": "ExpressionStatement",
                              "src": "7222:55:149"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 51520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51515,
                                    "name": "attestation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51478,
                                    "src": "7287:11:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Attestation_$46110_storage_ptr",
                                      "typeString": "struct Attestations.Attestation storage pointer"
                                    }
                                  },
                                  "id": 51517,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "attestationRequestFeeToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46109,
                                  "src": "7287:38:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 51518,
                                    "name": "unselectedRequest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51358,
                                    "src": "7328:17:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                                      "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                    }
                                  },
                                  "id": 51519,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "attestationRequestFeeToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46128,
                                  "src": "7328:44:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7287:85:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 51521,
                              "nodeType": "ExpressionStatement",
                              "src": "7287:85:149"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 51527,
                                    "name": "issuer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51471,
                                    "src": "7409:6:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51522,
                                      "name": "state",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51348,
                                      "src": "7382:5:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_AttestedAddress_$46122_storage_ptr",
                                        "typeString": "struct Attestations.AttestedAddress storage pointer"
                                      }
                                    },
                                    "id": 51525,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "selectedIssuers",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46117,
                                    "src": "7382:21:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 51526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7382:26:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) returns (uint256)"
                                  }
                                },
                                "id": 51528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7382:34:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51529,
                              "nodeType": "ExpressionStatement",
                              "src": "7382:34:149"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 51531,
                                    "name": "identifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51344,
                                    "src": "7469:10:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51532,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59216,
                                      "src": "7491:3:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 51533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "7491:10:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 51534,
                                    "name": "issuer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51471,
                                    "src": "7513:6:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 51535,
                                      "name": "unselectedRequest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51358,
                                      "src": "7531:17:149",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                                        "typeString": "struct Attestations.UnselectedRequest storage pointer"
                                      }
                                    },
                                    "id": 51536,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "attestationRequestFeeToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46128,
                                    "src": "7531:44:149",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 51530,
                                  "name": "AttestationIssuerSelected",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46187,
                                  "src": "7432:25:149",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address,address)"
                                  }
                                },
                                "id": 51537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7432:153:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 51538,
                              "nodeType": "EmitStatement",
                              "src": "7427:158:149"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 51541,
                            "name": "issuersLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51387,
                            "src": "7722:13:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 51544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7756:1:149",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 51542,
                                "name": "issuersLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51387,
                                "src": "7738:13:149",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 51543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 219,
                              "src": "7738:17:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 51545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7738:20:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7722:36:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51547,
                        "nodeType": "ExpressionStatement",
                        "src": "7722:36:149"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 51554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51548,
                              "name": "issuers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51394,
                              "src": "7766:7:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 51550,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51549,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51455,
                              "src": "7774:3:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7766:12:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 51551,
                              "name": "issuers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51394,
                              "src": "7781:7:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 51553,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 51552,
                              "name": "issuersLength",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51387,
                              "src": "7789:13:149",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7781:22:149",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7766:37:149",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 51555,
                        "nodeType": "ExpressionStatement",
                        "src": "7766:37:149"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 51434,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51431,
                      "src": "6557:12:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 51435,
                        "name": "unselectedRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51358,
                        "src": "6572:17:149",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UnselectedRequest_$46129_storage_ptr",
                          "typeString": "struct Attestations.UnselectedRequest storage pointer"
                        }
                      },
                      "id": 51436,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attestationsRequested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46126,
                      "src": "6572:39:149",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6557:54:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51557,
                  "nodeType": "WhileStatement",
                  "src": "6550:1260:149"
                }
              ]
            },
            "documentation": "@notice Adds additional attestations given the current randomness.\n@param identifier The hash of the identifier to be attested.",
            "id": 51559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addIncompleteAttestations",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51344,
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 51559,
                  "src": "5701:18:149",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51343,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5701:7:149",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5700:20:149"
            },
            "returnParameters": {
              "id": 51346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5730:0:149"
            },
            "scope": 51560,
            "src": "5666:2148:149",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 51561,
        "src": "286:7530:149"
      }
    ],
    "src": "0:7817:149"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/identity/test/AttestationsTest.sol",
      "exportedSymbols": {
        "AttestationsTest": [
          51560
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 50956,
        "name": "PragmaDirective",
        "src": "0:24:149"
      },
      {
        "attributes": {
          "SourceUnit": 47341,
          "absolutePath": "project:/contracts/identity/Attestations.sol",
          "file": "../Attestations.sol",
          "scope": 51561,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 50957,
        "name": "ImportDirective",
        "src": "26:29:149"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            7598,
            11461,
            11867,
            12683,
            17579,
            47340,
            50649
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            51560,
            47340,
            11461,
            17579,
            11867,
            7598,
            481,
            26,
            12683,
            50649
          ],
          "name": "AttestationsTest",
          "scope": 51561
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Attestations",
                  "referencedDeclaration": 47340,
                  "type": "contract Attestations"
                },
                "id": 50958,
                "name": "UserDefinedTypeName",
                "src": "315:12:149"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "74727565",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "bool",
                  "type": "bool",
                  "value": "true"
                },
                "id": 50959,
                "name": "Literal",
                "src": "328:4:149"
              }
            ],
            "id": 50960,
            "name": "InheritanceSpecifier",
            "src": "315:18:149"
          },
          {
            "attributes": {
              "constant": false,
              "name": "__testValidators",
              "scope": 51560,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 50961,
                    "name": "ElementaryTypeName",
                    "src": "338:7:149"
                  }
                ],
                "id": 50962,
                "name": "ArrayTypeName",
                "src": "338:9:149"
              }
            ],
            "id": 50963,
            "name": "VariableDeclaration",
            "src": "338:34:149"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "__setValidators",
              "scope": 51560,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "validators",
                      "scope": 50974,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 50964,
                            "name": "ElementaryTypeName",
                            "src": "402:7:149"
                          }
                        ],
                        "id": 50965,
                        "name": "ArrayTypeName",
                        "src": "402:9:149"
                      }
                    ],
                    "id": 50966,
                    "name": "VariableDeclaration",
                    "src": "402:27:149"
                  }
                ],
                "id": 50967,
                "name": "ParameterList",
                "src": "401:29:149"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 50968,
                "name": "ParameterList",
                "src": "438:0:149"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50963,
                              "type": "address[] storage ref",
                              "value": "__testValidators"
                            },
                            "id": 50969,
                            "name": "Identifier",
                            "src": "444:16:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50966,
                              "type": "address[] memory",
                              "value": "validators"
                            },
                            "id": 50970,
                            "name": "Identifier",
                            "src": "463:10:149"
                          }
                        ],
                        "id": 50971,
                        "name": "Assignment",
                        "src": "444:29:149"
                      }
                    ],
                    "id": 50972,
                    "name": "ExpressionStatement",
                    "src": "444:29:149"
                  }
                ],
                "id": 50973,
                "name": "Block",
                "src": "438:40:149"
              }
            ],
            "id": 50974,
            "name": "FunctionDefinition",
            "src": "377:101:149"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "numberValidatorsInCurrentSet",
              "scope": 51560,
              "stateMutability": "view",
              "superFunction": 11174,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 50975,
                "name": "ParameterList",
                "src": "519:2:149"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50983,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 50976,
                        "name": "ElementaryTypeName",
                        "src": "543:7:149"
                      }
                    ],
                    "id": 50977,
                    "name": "VariableDeclaration",
                    "src": "543:7:149"
                  }
                ],
                "id": 50978,
                "name": "ParameterList",
                "src": "542:9:149"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 50978
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50963,
                              "type": "address[] storage ref",
                              "value": "__testValidators"
                            },
                            "id": 50979,
                            "name": "Identifier",
                            "src": "565:16:149"
                          }
                        ],
                        "id": 50980,
                        "name": "MemberAccess",
                        "src": "565:23:149"
                      }
                    ],
                    "id": 50981,
                    "name": "Return",
                    "src": "558:30:149"
                  }
                ],
                "id": 50982,
                "name": "Block",
                "src": "552:41:149"
              }
            ],
            "id": 50983,
            "name": "FunctionDefinition",
            "src": "482:111:149"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "validatorSignerAddressFromCurrentSet",
              "scope": 51560,
              "stateMutability": "view",
              "superFunction": 11096,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 50995,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 50984,
                        "name": "ElementaryTypeName",
                        "src": "643:7:149"
                      }
                    ],
                    "id": 50985,
                    "name": "VariableDeclaration",
                    "src": "643:13:149"
                  }
                ],
                "id": 50986,
                "name": "ParameterList",
                "src": "642:15:149"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 50995,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 50987,
                        "name": "ElementaryTypeName",
                        "src": "679:7:149"
                      }
                    ],
                    "id": 50988,
                    "name": "VariableDeclaration",
                    "src": "679:7:149"
                  }
                ],
                "id": 50989,
                "name": "ParameterList",
                "src": "678:9:149"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 50989
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50963,
                              "type": "address[] storage ref",
                              "value": "__testValidators"
                            },
                            "id": 50990,
                            "name": "Identifier",
                            "src": "701:16:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50985,
                              "type": "uint256",
                              "value": "index"
                            },
                            "id": 50991,
                            "name": "Identifier",
                            "src": "718:5:149"
                          }
                        ],
                        "id": 50992,
                        "name": "IndexAccess",
                        "src": "701:23:149"
                      }
                    ],
                    "id": 50993,
                    "name": "Return",
                    "src": "694:30:149"
                  }
                ],
                "id": 50994,
                "name": "Block",
                "src": "688:41:149"
              }
            ],
            "id": 50995,
            "name": "FunctionDefinition",
            "src": "597:132:149"
          },
          {
            "attributes": {
              "documentation": "@notice Commit to the attestation request of a hashed identifier.\n@param identifier The hash of the identifier to be attested.\n@param attestationsRequested The number of requested attestations for this request.\n@param attestationRequestFeeToken The address of the token with which the attestation fee will\nbe paid.\n@dev Note that if an attestation expires before it is completed, the fee is forfeited. This is\nto prevent folks from attacking validators by requesting attestations that they do not\ncomplete, and to increase the cost of validators attempting to manipulate the attestations\nprotocol.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "request",
              "scope": 51560,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51152,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 50996,
                        "name": "ElementaryTypeName",
                        "src": "1526:7:149"
                      }
                    ],
                    "id": 50997,
                    "name": "VariableDeclaration",
                    "src": "1526:18:149"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "attestationsRequested",
                      "scope": 51152,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 50998,
                        "name": "ElementaryTypeName",
                        "src": "1550:7:149"
                      }
                    ],
                    "id": 50999,
                    "name": "VariableDeclaration",
                    "src": "1550:29:149"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "attestationRequestFeeToken",
                      "scope": 51152,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 51000,
                        "name": "ElementaryTypeName",
                        "src": "1585:7:149"
                      }
                    ],
                    "id": 51001,
                    "name": "VariableDeclaration",
                    "src": "1585:34:149"
                  }
                ],
                "id": 51002,
                "name": "ParameterList",
                "src": "1520:103:149"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51005,
                "name": "ParameterList",
                "src": "1646:0:149"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 17578,
                      "type": "modifier ()",
                      "value": "nonReentrant"
                    },
                    "id": 51003,
                    "name": "Identifier",
                    "src": "1633:12:149"
                  }
                ],
                "id": 51004,
                "name": "ModifierInvocation",
                "src": "1633:12:149"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0fbab06e34ed13c693595be2183c86d3418ffc9113774673c63c7f72797b67ec",
                                  "typeString": "literal_string \"Invalid attestationRequestFeeToken\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51006,
                            "name": "Identifier",
                            "src": "1652:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46155,
                                      "type": "mapping(address => uint256)",
                                      "value": "attestationRequestFees"
                                    },
                                    "id": 51007,
                                    "name": "Identifier",
                                    "src": "1667:22:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51001,
                                      "type": "address",
                                      "value": "attestationRequestFeeToken"
                                    },
                                    "id": 51008,
                                    "name": "Identifier",
                                    "src": "1690:26:149"
                                  }
                                ],
                                "id": 51009,
                                "name": "IndexAccess",
                                "src": "1667:50:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 51010,
                                "name": "Literal",
                                "src": "1720:1:149"
                              }
                            ],
                            "id": 51011,
                            "name": "BinaryOperation",
                            "src": "1667:54:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "496e76616c6964206174746573746174696f6e52657175657374466565546f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Invalid attestationRequestFeeToken\"",
                              "value": "Invalid attestationRequestFeeToken"
                            },
                            "id": 51012,
                            "name": "Literal",
                            "src": "1729:36:149"
                          }
                        ],
                        "id": 51013,
                        "name": "FunctionCall",
                        "src": "1652:119:149"
                      }
                    ],
                    "id": 51014,
                    "name": "ExpressionStatement",
                    "src": "1652:119:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8f5394185b740e608ff56aadc9b35a71ad0bd15ed5fd197afb4e85372abf8f00",
                                  "typeString": "literal_string \"Transfer of attestation request fees failed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51015,
                            "name": "Identifier",
                            "src": "1777:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "transferFrom",
                                  "referencedDeclaration": 938,
                                  "type": "function (address,address,uint256) external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "contract IERC20",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 955,
                                          "type": "type(contract IERC20)",
                                          "value": "IERC20"
                                        },
                                        "id": 51016,
                                        "name": "Identifier",
                                        "src": "1792:6:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51001,
                                          "type": "address",
                                          "value": "attestationRequestFeeToken"
                                        },
                                        "id": 51017,
                                        "name": "Identifier",
                                        "src": "1799:26:149"
                                      }
                                    ],
                                    "id": 51018,
                                    "name": "FunctionCall",
                                    "src": "1792:34:149"
                                  }
                                ],
                                "id": 51019,
                                "name": "MemberAccess",
                                "src": "1792:47:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59216,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 51020,
                                    "name": "Identifier",
                                    "src": "1849:3:149"
                                  }
                                ],
                                "id": 51021,
                                "name": "MemberAccess",
                                "src": "1849:10:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_AttestationsTest_$51560",
                                          "typeString": "contract AttestationsTest"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 51022,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1869:7:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59550,
                                      "type": "contract AttestationsTest",
                                      "value": "this"
                                    },
                                    "id": 51023,
                                    "name": "Identifier",
                                    "src": "1877:4:149"
                                  }
                                ],
                                "id": 51024,
                                "name": "FunctionCall",
                                "src": "1869:13:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "mul",
                                      "referencedDeclaration": 280,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46155,
                                              "type": "mapping(address => uint256)",
                                              "value": "attestationRequestFees"
                                            },
                                            "id": 51025,
                                            "name": "Identifier",
                                            "src": "1892:22:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51001,
                                              "type": "address",
                                              "value": "attestationRequestFeeToken"
                                            },
                                            "id": 51026,
                                            "name": "Identifier",
                                            "src": "1915:26:149"
                                          }
                                        ],
                                        "id": 51027,
                                        "name": "IndexAccess",
                                        "src": "1892:50:149"
                                      }
                                    ],
                                    "id": 51028,
                                    "name": "MemberAccess",
                                    "src": "1892:54:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50999,
                                      "type": "uint256",
                                      "value": "attestationsRequested"
                                    },
                                    "id": 51029,
                                    "name": "Identifier",
                                    "src": "1947:21:149"
                                  }
                                ],
                                "id": 51030,
                                "name": "FunctionCall",
                                "src": "1892:77:149"
                              }
                            ],
                            "id": 51031,
                            "name": "FunctionCall",
                            "src": "1792:185:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5472616e73666572206f66206174746573746174696f6e20726571756573742066656573206661696c6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Transfer of attestation request fees failed\"",
                              "value": "Transfer of attestation request fees failed"
                            },
                            "id": 51032,
                            "name": "Literal",
                            "src": "1985:45:149"
                          }
                        ],
                        "id": 51033,
                        "name": "FunctionCall",
                        "src": "1777:259:149"
                      }
                    ],
                    "id": 51034,
                    "name": "ExpressionStatement",
                    "src": "1777:259:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6339f4898dba82a980125bd68be7797a9a8a24b1641e6a0bad0facf975bdb393",
                                  "typeString": "literal_string \"You have to request at least 1 attestation\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51035,
                            "name": "Identifier",
                            "src": "2043:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50999,
                                  "type": "uint256",
                                  "value": "attestationsRequested"
                                },
                                "id": 51036,
                                "name": "Identifier",
                                "src": "2051:21:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 51037,
                                "name": "Literal",
                                "src": "2075:1:149"
                              }
                            ],
                            "id": 51038,
                            "name": "BinaryOperation",
                            "src": "2051:25:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "596f75206861766520746f2072657175657374206174206c656173742031206174746573746174696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"You have to request at least 1 attestation\"",
                              "value": "You have to request at least 1 attestation"
                            },
                            "id": 51039,
                            "name": "Literal",
                            "src": "2078:44:149"
                          }
                        ],
                        "id": 51040,
                        "name": "FunctionCall",
                        "src": "2043:80:149"
                      }
                    ],
                    "id": 51041,
                    "name": "ExpressionStatement",
                    "src": "2043:80:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_559f027ce8dce93c172edfe918d5248da9b0bbe7254143b010c3b7511882dd37",
                                  "typeString": "literal_string \"Too many attestations requested\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51042,
                            "name": "Identifier",
                            "src": "2129:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50999,
                                  "type": "uint256",
                                  "value": "attestationsRequested"
                                },
                                "id": 51043,
                                "name": "Identifier",
                                "src": "2137:21:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46151,
                                  "type": "uint256",
                                  "value": "maxAttestations"
                                },
                                "id": 51044,
                                "name": "Identifier",
                                "src": "2162:15:149"
                              }
                            ],
                            "id": 51045,
                            "name": "BinaryOperation",
                            "src": "2137:40:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546f6f206d616e79206174746573746174696f6e7320726571756573746564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Too many attestations requested\"",
                              "value": "Too many attestations requested"
                            },
                            "id": 51046,
                            "name": "Literal",
                            "src": "2179:33:149"
                          }
                        ],
                        "id": 51047,
                        "name": "FunctionCall",
                        "src": "2129:84:149"
                      }
                    ],
                    "id": 51048,
                    "name": "ExpressionStatement",
                    "src": "2129:84:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51050
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51151,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.IdentifierState",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IdentifierState",
                              "referencedDeclaration": 46141,
                              "type": "struct Attestations.IdentifierState"
                            },
                            "id": 51049,
                            "name": "UserDefinedTypeName",
                            "src": "2220:15:149"
                          }
                        ],
                        "id": 51050,
                        "name": "VariableDeclaration",
                        "src": "2220:29:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.IdentifierState storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46145,
                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                              "value": "identifiers"
                            },
                            "id": 51051,
                            "name": "Identifier",
                            "src": "2252:11:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50997,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51052,
                            "name": "Identifier",
                            "src": "2264:10:149"
                          }
                        ],
                        "id": 51053,
                        "name": "IndexAccess",
                        "src": "2252:23:149"
                      }
                    ],
                    "id": 51054,
                    "name": "VariableDeclarationStatement",
                    "src": "2220:55:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_258b2694618df46c97b26596a48755d13ebcf705afc06b4350a78047cd959c93",
                                  "typeString": "literal_string \"There exists an unexpired, unselected attestation request\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51055,
                            "name": "Identifier",
                            "src": "2282:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "||",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "||",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46124,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Attestations.UnselectedRequest storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "unselectedRequests",
                                                  "referencedDeclaration": 46140,
                                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51050,
                                                      "type": "struct Attestations.IdentifierState storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51056,
                                                    "name": "Identifier",
                                                    "src": "2297:5:149"
                                                  }
                                                ],
                                                "id": 51057,
                                                "name": "MemberAccess",
                                                "src": "2297:24:149"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 59216,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 51058,
                                                    "name": "Identifier",
                                                    "src": "2322:3:149"
                                                  }
                                                ],
                                                "id": 51059,
                                                "name": "MemberAccess",
                                                "src": "2322:10:149"
                                              }
                                            ],
                                            "id": 51060,
                                            "name": "IndexAccess",
                                            "src": "2297:36:149"
                                          }
                                        ],
                                        "id": 51061,
                                        "name": "MemberAccess",
                                        "src": "2297:48:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 51062,
                                        "name": "Literal",
                                        "src": "2349:1:149"
                                      }
                                    ],
                                    "id": 51063,
                                    "name": "BinaryOperation",
                                    "src": "2297:53:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 47299,
                                          "type": "function (uint32) view returns (bool)",
                                          "value": "isAttestationExpired"
                                        },
                                        "id": 51064,
                                        "name": "Identifier",
                                        "src": "2362:20:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46124,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Attestations.UnselectedRequest storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "unselectedRequests",
                                                  "referencedDeclaration": 46140,
                                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51050,
                                                      "type": "struct Attestations.IdentifierState storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51065,
                                                    "name": "Identifier",
                                                    "src": "2383:5:149"
                                                  }
                                                ],
                                                "id": 51066,
                                                "name": "MemberAccess",
                                                "src": "2383:24:149"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 59216,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 51067,
                                                    "name": "Identifier",
                                                    "src": "2408:3:149"
                                                  }
                                                ],
                                                "id": 51068,
                                                "name": "MemberAccess",
                                                "src": "2408:10:149"
                                              }
                                            ],
                                            "id": 51069,
                                            "name": "IndexAccess",
                                            "src": "2383:36:149"
                                          }
                                        ],
                                        "id": 51070,
                                        "name": "MemberAccess",
                                        "src": "2383:48:149"
                                      }
                                    ],
                                    "id": 51071,
                                    "name": "FunctionCall",
                                    "src": "2362:70:149"
                                  }
                                ],
                                "id": 51072,
                                "name": "BinaryOperation",
                                "src": "2297:135:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 47339,
                                          "type": "function (uint256) view returns (bool)",
                                          "value": "isAttestationRequestSelectable"
                                        },
                                        "id": 51073,
                                        "name": "Identifier",
                                        "src": "2445:30:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46124,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Attestations.UnselectedRequest storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "unselectedRequests",
                                                  "referencedDeclaration": 46140,
                                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51050,
                                                      "type": "struct Attestations.IdentifierState storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51074,
                                                    "name": "Identifier",
                                                    "src": "2476:5:149"
                                                  }
                                                ],
                                                "id": 51075,
                                                "name": "MemberAccess",
                                                "src": "2476:24:149"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "referencedDeclaration": null,
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 59216,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 51076,
                                                    "name": "Identifier",
                                                    "src": "2501:3:149"
                                                  }
                                                ],
                                                "id": 51077,
                                                "name": "MemberAccess",
                                                "src": "2501:10:149"
                                              }
                                            ],
                                            "id": 51078,
                                            "name": "IndexAccess",
                                            "src": "2476:36:149"
                                          }
                                        ],
                                        "id": 51079,
                                        "name": "MemberAccess",
                                        "src": "2476:48:149"
                                      }
                                    ],
                                    "id": 51080,
                                    "name": "FunctionCall",
                                    "src": "2445:80:149"
                                  }
                                ],
                                "id": 51081,
                                "name": "UnaryOperation",
                                "src": "2444:81:149"
                              }
                            ],
                            "id": 51082,
                            "name": "BinaryOperation",
                            "src": "2297:228:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686572652065786973747320616e20756e657870697265642c20756e73656c6563746564206174746573746174696f6e2072657175657374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"There exists an unexpired, unselected attestation request\"",
                              "value": "There exists an unexpired, unselected attestation request"
                            },
                            "id": 51083,
                            "name": "Literal",
                            "src": "2533:59:149"
                          }
                        ],
                        "id": 51084,
                        "name": "FunctionCall",
                        "src": "2282:316:149"
                      }
                    ],
                    "id": 51085,
                    "name": "ExpressionStatement",
                    "src": "2282:316:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "blockNumber",
                              "referencedDeclaration": 46124,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.UnselectedRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "unselectedRequests",
                                      "referencedDeclaration": 46140,
                                      "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51050,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51086,
                                        "name": "Identifier",
                                        "src": "2605:5:149"
                                      }
                                    ],
                                    "id": 51090,
                                    "name": "MemberAccess",
                                    "src": "2605:24:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59216,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51088,
                                        "name": "Identifier",
                                        "src": "2630:3:149"
                                      }
                                    ],
                                    "id": 51089,
                                    "name": "MemberAccess",
                                    "src": "2630:10:149"
                                  }
                                ],
                                "id": 51091,
                                "name": "IndexAccess",
                                "src": "2605:36:149"
                              }
                            ],
                            "id": 51092,
                            "name": "MemberAccess",
                            "src": "2605:48:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59206,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 51093,
                                        "name": "Identifier",
                                        "src": "2656:5:149"
                                      }
                                    ],
                                    "id": 51094,
                                    "name": "MemberAccess",
                                    "src": "2656:12:149"
                                  }
                                ],
                                "id": 51095,
                                "name": "MemberAccess",
                                "src": "2656:21:149"
                              }
                            ],
                            "id": 51096,
                            "name": "FunctionCall",
                            "src": "2656:23:149"
                          }
                        ],
                        "id": 51097,
                        "name": "Assignment",
                        "src": "2605:74:149"
                      }
                    ],
                    "id": 51098,
                    "name": "ExpressionStatement",
                    "src": "2605:74:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "attestationsRequested",
                              "referencedDeclaration": 46126,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.UnselectedRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "unselectedRequests",
                                      "referencedDeclaration": 46140,
                                      "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51050,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51099,
                                        "name": "Identifier",
                                        "src": "2685:5:149"
                                      }
                                    ],
                                    "id": 51103,
                                    "name": "MemberAccess",
                                    "src": "2685:24:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59216,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51101,
                                        "name": "Identifier",
                                        "src": "2710:3:149"
                                      }
                                    ],
                                    "id": 51102,
                                    "name": "MemberAccess",
                                    "src": "2710:10:149"
                                  }
                                ],
                                "id": 51104,
                                "name": "IndexAccess",
                                "src": "2685:36:149"
                              }
                            ],
                            "id": 51105,
                            "name": "MemberAccess",
                            "src": "2685:58:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50999,
                                      "type": "uint256",
                                      "value": "attestationsRequested"
                                    },
                                    "id": 51106,
                                    "name": "Identifier",
                                    "src": "2746:21:149"
                                  }
                                ],
                                "id": 51107,
                                "name": "MemberAccess",
                                "src": "2746:30:149"
                              }
                            ],
                            "id": 51108,
                            "name": "FunctionCall",
                            "src": "2746:32:149"
                          }
                        ],
                        "id": 51109,
                        "name": "Assignment",
                        "src": "2685:93:149"
                      }
                    ],
                    "id": 51110,
                    "name": "ExpressionStatement",
                    "src": "2685:93:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "attestationRequestFeeToken",
                              "referencedDeclaration": 46128,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.UnselectedRequest storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "unselectedRequests",
                                      "referencedDeclaration": 46140,
                                      "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51050,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51111,
                                        "name": "Identifier",
                                        "src": "2784:5:149"
                                      }
                                    ],
                                    "id": 51115,
                                    "name": "MemberAccess",
                                    "src": "2784:24:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59216,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51113,
                                        "name": "Identifier",
                                        "src": "2809:3:149"
                                      }
                                    ],
                                    "id": 51114,
                                    "name": "MemberAccess",
                                    "src": "2809:10:149"
                                  }
                                ],
                                "id": 51116,
                                "name": "IndexAccess",
                                "src": "2784:36:149"
                              }
                            ],
                            "id": 51117,
                            "name": "MemberAccess",
                            "src": "2784:63:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51001,
                              "type": "address",
                              "value": "attestationRequestFeeToken"
                            },
                            "id": 51118,
                            "name": "Identifier",
                            "src": "2850:26:149"
                          }
                        ],
                        "id": 51119,
                        "name": "Assignment",
                        "src": "2784:92:149"
                      }
                    ],
                    "id": 51120,
                    "name": "ExpressionStatement",
                    "src": "2784:92:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "requested",
                              "referencedDeclaration": 46112,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.AttestedAddress storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "attestations",
                                      "referencedDeclaration": 46136,
                                      "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51050,
                                          "type": "struct Attestations.IdentifierState storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51121,
                                        "name": "Identifier",
                                        "src": "2883:5:149"
                                      }
                                    ],
                                    "id": 51125,
                                    "name": "MemberAccess",
                                    "src": "2883:18:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59216,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51123,
                                        "name": "Identifier",
                                        "src": "2902:3:149"
                                      }
                                    ],
                                    "id": 51124,
                                    "name": "MemberAccess",
                                    "src": "2902:10:149"
                                  }
                                ],
                                "id": 51126,
                                "name": "IndexAccess",
                                "src": "2883:30:149"
                              }
                            ],
                            "id": 51127,
                            "name": "MemberAccess",
                            "src": "2883:40:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "add",
                                          "referencedDeclaration": 203,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_uint32",
                                                      "typeString": "uint32"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(uint256)",
                                                  "value": "uint256"
                                                },
                                                "id": 51128,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "2926:7:149"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "requested",
                                                  "referencedDeclaration": 46112,
                                                  "type": "uint32"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Attestations.AttestedAddress storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "attestations",
                                                          "referencedDeclaration": 46136,
                                                          "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 51050,
                                                              "type": "struct Attestations.IdentifierState storage pointer",
                                                              "value": "state"
                                                            },
                                                            "id": 51129,
                                                            "name": "Identifier",
                                                            "src": "2934:5:149"
                                                          }
                                                        ],
                                                        "id": 51130,
                                                        "name": "MemberAccess",
                                                        "src": "2934:18:149"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "argumentTypes": null,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "member_name": "sender",
                                                          "referencedDeclaration": null,
                                                          "type": "address payable"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "argumentTypes": null,
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 59216,
                                                              "type": "msg",
                                                              "value": "msg"
                                                            },
                                                            "id": 51131,
                                                            "name": "Identifier",
                                                            "src": "2953:3:149"
                                                          }
                                                        ],
                                                        "id": 51132,
                                                        "name": "MemberAccess",
                                                        "src": "2953:10:149"
                                                      }
                                                    ],
                                                    "id": 51133,
                                                    "name": "IndexAccess",
                                                    "src": "2934:30:149"
                                                  }
                                                ],
                                                "id": 51134,
                                                "name": "MemberAccess",
                                                "src": "2934:40:149"
                                              }
                                            ],
                                            "id": 51135,
                                            "name": "FunctionCall",
                                            "src": "2926:49:149"
                                          }
                                        ],
                                        "id": 51136,
                                        "name": "MemberAccess",
                                        "src": "2926:60:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 50999,
                                          "type": "uint256",
                                          "value": "attestationsRequested"
                                        },
                                        "id": 51137,
                                        "name": "Identifier",
                                        "src": "2987:21:149"
                                      }
                                    ],
                                    "id": 51138,
                                    "name": "FunctionCall",
                                    "src": "2926:83:149"
                                  }
                                ],
                                "id": 51139,
                                "name": "MemberAccess",
                                "src": "2926:99:149"
                              }
                            ],
                            "id": 51140,
                            "name": "FunctionCall",
                            "src": "2926:101:149"
                          }
                        ],
                        "id": 51141,
                        "name": "Assignment",
                        "src": "2883:144:149"
                      }
                    ],
                    "id": 51142,
                    "name": "ExpressionStatement",
                    "src": "2883:144:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46177,
                              "type": "function (bytes32,address,uint256,address)",
                              "value": "AttestationsRequested"
                            },
                            "id": 51143,
                            "name": "Identifier",
                            "src": "3039:21:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50997,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51144,
                            "name": "Identifier",
                            "src": "3068:10:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51145,
                                "name": "Identifier",
                                "src": "3086:3:149"
                              }
                            ],
                            "id": 51146,
                            "name": "MemberAccess",
                            "src": "3086:10:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50999,
                              "type": "uint256",
                              "value": "attestationsRequested"
                            },
                            "id": 51147,
                            "name": "Identifier",
                            "src": "3104:21:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51001,
                              "type": "address",
                              "value": "attestationRequestFeeToken"
                            },
                            "id": 51148,
                            "name": "Identifier",
                            "src": "3133:26:149"
                          }
                        ],
                        "id": 51149,
                        "name": "FunctionCall",
                        "src": "3039:126:149"
                      }
                    ],
                    "id": 51150,
                    "name": "EmitStatement",
                    "src": "3034:131:149"
                  }
                ],
                "id": 51151,
                "name": "Block",
                "src": "1646:1524:149"
              }
            ],
            "id": 51152,
            "name": "FunctionDefinition",
            "src": "1504:1666:149"
          },
          {
            "attributes": {
              "documentation": "@notice Selects the issuers for the most recent attestation request.\n@param identifier The hash of the identifier to be attested.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "selectIssuers",
              "scope": 51560,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51200,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51153,
                        "name": "ElementaryTypeName",
                        "src": "3349:7:149"
                      }
                    ],
                    "id": 51154,
                    "name": "VariableDeclaration",
                    "src": "3349:18:149"
                  }
                ],
                "id": 51155,
                "name": "ParameterList",
                "src": "3348:20:149"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51156,
                "name": "ParameterList",
                "src": "3378:0:149"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        51158
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51199,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.IdentifierState",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IdentifierState",
                              "referencedDeclaration": 46141,
                              "type": "struct Attestations.IdentifierState"
                            },
                            "id": 51157,
                            "name": "UserDefinedTypeName",
                            "src": "3384:15:149"
                          }
                        ],
                        "id": 51158,
                        "name": "VariableDeclaration",
                        "src": "3384:29:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.IdentifierState storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46145,
                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                              "value": "identifiers"
                            },
                            "id": 51159,
                            "name": "Identifier",
                            "src": "3416:11:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51154,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51160,
                            "name": "Identifier",
                            "src": "3428:10:149"
                          }
                        ],
                        "id": 51161,
                        "name": "IndexAccess",
                        "src": "3416:23:149"
                      }
                    ],
                    "id": 51162,
                    "name": "VariableDeclarationStatement",
                    "src": "3384:55:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bf2336bcc88f66654106a02094418f163fe78eff0542e86c1e6abfe990b3a169",
                                  "typeString": "literal_string \"No unselected attestation request to select issuers for\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51163,
                            "name": "Identifier",
                            "src": "3446:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "blockNumber",
                                  "referencedDeclaration": 46124,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct Attestations.UnselectedRequest storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "unselectedRequests",
                                          "referencedDeclaration": 46140,
                                          "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51158,
                                              "type": "struct Attestations.IdentifierState storage pointer",
                                              "value": "state"
                                            },
                                            "id": 51164,
                                            "name": "Identifier",
                                            "src": "3461:5:149"
                                          }
                                        ],
                                        "id": 51165,
                                        "name": "MemberAccess",
                                        "src": "3461:24:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 59216,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 51166,
                                            "name": "Identifier",
                                            "src": "3486:3:149"
                                          }
                                        ],
                                        "id": 51167,
                                        "name": "MemberAccess",
                                        "src": "3486:10:149"
                                      }
                                    ],
                                    "id": 51168,
                                    "name": "IndexAccess",
                                    "src": "3461:36:149"
                                  }
                                ],
                                "id": 51169,
                                "name": "MemberAccess",
                                "src": "3461:48:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 51170,
                                "name": "Literal",
                                "src": "3512:1:149"
                              }
                            ],
                            "id": 51171,
                            "name": "BinaryOperation",
                            "src": "3461:52:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4e6f20756e73656c6563746564206174746573746174696f6e207265717565737420746f2073656c656374206973737565727320666f72",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"No unselected attestation request to select issuers for\"",
                              "value": "No unselected attestation request to select issuers for"
                            },
                            "id": 51172,
                            "name": "Literal",
                            "src": "3521:57:149"
                          }
                        ],
                        "id": 51173,
                        "name": "FunctionCall",
                        "src": "3446:138:149"
                      }
                    ],
                    "id": 51174,
                    "name": "ExpressionStatement",
                    "src": "3446:138:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b0f527738e002968b2ccbb3a0e21bea4cc9d35abeeb3a84053f4cccd53b5eb9f",
                                  "typeString": "literal_string \"The attestation request has expired\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51175,
                            "name": "Identifier",
                            "src": "3591:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bool",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 47299,
                                      "type": "function (uint32) view returns (bool)",
                                      "value": "isAttestationExpired"
                                    },
                                    "id": 51176,
                                    "name": "Identifier",
                                    "src": "3607:20:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "blockNumber",
                                      "referencedDeclaration": 46124,
                                      "type": "uint32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Attestations.UnselectedRequest storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "unselectedRequests",
                                              "referencedDeclaration": 46140,
                                              "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51158,
                                                  "type": "struct Attestations.IdentifierState storage pointer",
                                                  "value": "state"
                                                },
                                                "id": 51177,
                                                "name": "Identifier",
                                                "src": "3628:5:149"
                                              }
                                            ],
                                            "id": 51178,
                                            "name": "MemberAccess",
                                            "src": "3628:24:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 59216,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 51179,
                                                "name": "Identifier",
                                                "src": "3653:3:149"
                                              }
                                            ],
                                            "id": 51180,
                                            "name": "MemberAccess",
                                            "src": "3653:10:149"
                                          }
                                        ],
                                        "id": 51181,
                                        "name": "IndexAccess",
                                        "src": "3628:36:149"
                                      }
                                    ],
                                    "id": 51182,
                                    "name": "MemberAccess",
                                    "src": "3628:48:149"
                                  }
                                ],
                                "id": 51183,
                                "name": "FunctionCall",
                                "src": "3607:70:149"
                              }
                            ],
                            "id": 51184,
                            "name": "UnaryOperation",
                            "src": "3606:71:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546865206174746573746174696f6e2072657175657374206861732065787069726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The attestation request has expired\"",
                              "value": "The attestation request has expired"
                            },
                            "id": 51185,
                            "name": "Literal",
                            "src": "3685:37:149"
                          }
                        ],
                        "id": 51186,
                        "name": "FunctionCall",
                        "src": "3591:137:149"
                      }
                    ],
                    "id": 51187,
                    "name": "ExpressionStatement",
                    "src": "3591:137:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51559,
                              "type": "function (bytes32)",
                              "value": "addIncompleteAttestations"
                            },
                            "id": 51188,
                            "name": "Identifier",
                            "src": "3735:25:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51154,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51189,
                            "name": "Identifier",
                            "src": "3761:10:149"
                          }
                        ],
                        "id": 51190,
                        "name": "FunctionCall",
                        "src": "3735:37:149"
                      }
                    ],
                    "id": 51191,
                    "name": "ExpressionStatement",
                    "src": "3735:37:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct Attestations.UnselectedRequest storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "unselectedRequests",
                                  "referencedDeclaration": 46140,
                                  "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51158,
                                      "type": "struct Attestations.IdentifierState storage pointer",
                                      "value": "state"
                                    },
                                    "id": 51192,
                                    "name": "Identifier",
                                    "src": "3785:5:149"
                                  }
                                ],
                                "id": 51193,
                                "name": "MemberAccess",
                                "src": "3785:24:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 59216,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 51194,
                                    "name": "Identifier",
                                    "src": "3810:3:149"
                                  }
                                ],
                                "id": 51195,
                                "name": "MemberAccess",
                                "src": "3810:10:149"
                              }
                            ],
                            "id": 51196,
                            "name": "IndexAccess",
                            "src": "3785:36:149"
                          }
                        ],
                        "id": 51197,
                        "name": "UnaryOperation",
                        "src": "3778:43:149"
                      }
                    ],
                    "id": 51198,
                    "name": "ExpressionStatement",
                    "src": "3778:43:149"
                  }
                ],
                "id": 51199,
                "name": "Block",
                "src": "3378:448:149"
              }
            ],
            "id": 51200,
            "name": "FunctionDefinition",
            "src": "3326:500:149"
          },
          {
            "attributes": {
              "documentation": "@notice Submit the secret message sent by the issuer to complete the attestation request.\n@param identifier The hash of the identifier for this attestation.\n@param v The recovery id of the incoming ECDSA signature.\n@param r Output value r of the ECDSA signature.\n@param s Output value s of the ECDSA signature.\n@dev Throws if there is no matching outstanding attestation request.\n@dev Throws if the attestation window has passed.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "complete",
              "scope": 51560,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51342,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51201,
                        "name": "ElementaryTypeName",
                        "src": "4325:7:149"
                      }
                    ],
                    "id": 51202,
                    "name": "VariableDeclaration",
                    "src": "4325:18:149"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "v",
                      "scope": 51342,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 51203,
                        "name": "ElementaryTypeName",
                        "src": "4345:5:149"
                      }
                    ],
                    "id": 51204,
                    "name": "VariableDeclaration",
                    "src": "4345:7:149"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "r",
                      "scope": 51342,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51205,
                        "name": "ElementaryTypeName",
                        "src": "4354:7:149"
                      }
                    ],
                    "id": 51206,
                    "name": "VariableDeclaration",
                    "src": "4354:9:149"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "s",
                      "scope": 51342,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51207,
                        "name": "ElementaryTypeName",
                        "src": "4365:7:149"
                      }
                    ],
                    "id": 51208,
                    "name": "VariableDeclaration",
                    "src": "4365:9:149"
                  }
                ],
                "id": 51209,
                "name": "ParameterList",
                "src": "4324:51:149"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51210,
                "name": "ParameterList",
                "src": "4385:0:149"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        51212
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "issuer",
                          "scope": 51341,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 51211,
                            "name": "ElementaryTypeName",
                            "src": "4391:7:149"
                          }
                        ],
                        "id": 51212,
                        "name": "VariableDeclaration",
                        "src": "4391:14:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 47156,
                              "type": "function (bytes32,address,uint8,bytes32,bytes32) view returns (address)",
                              "value": "validateAttestationCode"
                            },
                            "id": 51213,
                            "name": "Identifier",
                            "src": "4408:23:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51202,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51214,
                            "name": "Identifier",
                            "src": "4432:10:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51215,
                                "name": "Identifier",
                                "src": "4444:3:149"
                              }
                            ],
                            "id": 51216,
                            "name": "MemberAccess",
                            "src": "4444:10:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51204,
                              "type": "uint8",
                              "value": "v"
                            },
                            "id": 51217,
                            "name": "Identifier",
                            "src": "4456:1:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51206,
                              "type": "bytes32",
                              "value": "r"
                            },
                            "id": 51218,
                            "name": "Identifier",
                            "src": "4459:1:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51208,
                              "type": "bytes32",
                              "value": "s"
                            },
                            "id": 51219,
                            "name": "Identifier",
                            "src": "4462:1:149"
                          }
                        ],
                        "id": 51220,
                        "name": "FunctionCall",
                        "src": "4408:56:149"
                      }
                    ],
                    "id": 51221,
                    "name": "VariableDeclarationStatement",
                    "src": "4391:73:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51223
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "attestation",
                          "scope": 51341,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.Attestation",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Attestation",
                              "referencedDeclaration": 46110,
                              "type": "struct Attestations.Attestation"
                            },
                            "id": 51222,
                            "name": "UserDefinedTypeName",
                            "src": "4471:11:149"
                          }
                        ],
                        "id": 51223,
                        "name": "VariableDeclaration",
                        "src": "4471:31:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.Attestation storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "issuedAttestations",
                              "referencedDeclaration": 46121,
                              "type": "mapping(address => struct Attestations.Attestation storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.AttestedAddress storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "attestations",
                                      "referencedDeclaration": 46136,
                                      "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Attestations.IdentifierState storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46145,
                                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                              "value": "identifiers"
                                            },
                                            "id": 51224,
                                            "name": "Identifier",
                                            "src": "4505:11:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51202,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 51225,
                                            "name": "Identifier",
                                            "src": "4517:10:149"
                                          }
                                        ],
                                        "id": 51226,
                                        "name": "IndexAccess",
                                        "src": "4505:23:149"
                                      }
                                    ],
                                    "id": 51227,
                                    "name": "MemberAccess",
                                    "src": "4505:36:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59216,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51228,
                                        "name": "Identifier",
                                        "src": "4542:3:149"
                                      }
                                    ],
                                    "id": 51229,
                                    "name": "MemberAccess",
                                    "src": "4542:10:149"
                                  }
                                ],
                                "id": 51230,
                                "name": "IndexAccess",
                                "src": "4505:48:149"
                              }
                            ],
                            "id": 51231,
                            "name": "MemberAccess",
                            "src": "4505:74:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51212,
                              "type": "address",
                              "value": "issuer"
                            },
                            "id": 51232,
                            "name": "Identifier",
                            "src": "4580:6:149"
                          }
                        ],
                        "id": 51233,
                        "name": "IndexAccess",
                        "src": "4505:82:149"
                      }
                    ],
                    "id": 51234,
                    "name": "VariableDeclarationStatement",
                    "src": "4471:116:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51236
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "token",
                          "scope": 51341,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 51235,
                            "name": "ElementaryTypeName",
                            "src": "4594:7:149"
                          }
                        ],
                        "id": 51236,
                        "name": "VariableDeclaration",
                        "src": "4594:13:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "attestationRequestFeeToken",
                          "referencedDeclaration": 46109,
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51223,
                              "type": "struct Attestations.Attestation storage pointer",
                              "value": "attestation"
                            },
                            "id": 51237,
                            "name": "Identifier",
                            "src": "4610:11:149"
                          }
                        ],
                        "id": 51238,
                        "name": "MemberAccess",
                        "src": "4610:38:149"
                      }
                    ],
                    "id": 51239,
                    "name": "VariableDeclarationStatement",
                    "src": "4594:54:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "blockNumber",
                              "referencedDeclaration": 46107,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51223,
                                  "type": "struct Attestations.Attestation storage pointer",
                                  "value": "attestation"
                                },
                                "id": 51240,
                                "name": "Identifier",
                                "src": "4705:11:149"
                              }
                            ],
                            "id": 51242,
                            "name": "MemberAccess",
                            "src": "4705:23:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "toUint32",
                                  "referencedDeclaration": 1530,
                                  "type": "function (uint256) pure returns (uint32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "referencedDeclaration": null,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59206,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 51243,
                                        "name": "Identifier",
                                        "src": "4731:5:149"
                                      }
                                    ],
                                    "id": 51244,
                                    "name": "MemberAccess",
                                    "src": "4731:12:149"
                                  }
                                ],
                                "id": 51245,
                                "name": "MemberAccess",
                                "src": "4731:21:149"
                              }
                            ],
                            "id": 51246,
                            "name": "FunctionCall",
                            "src": "4731:23:149"
                          }
                        ],
                        "id": 51247,
                        "name": "Assignment",
                        "src": "4705:49:149"
                      }
                    ],
                    "id": 51248,
                    "name": "ExpressionStatement",
                    "src": "4705:49:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum Attestations.AttestationStatus"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "status",
                              "referencedDeclaration": 46105,
                              "type": "enum Attestations.AttestationStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51223,
                                  "type": "struct Attestations.Attestation storage pointer",
                                  "value": "attestation"
                                },
                                "id": 51249,
                                "name": "Identifier",
                                "src": "4760:11:149"
                              }
                            ],
                            "id": 51251,
                            "name": "MemberAccess",
                            "src": "4760:18:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Complete",
                              "referencedDeclaration": null,
                              "type": "enum Attestations.AttestationStatus"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46103,
                                  "type": "type(enum Attestations.AttestationStatus)",
                                  "value": "AttestationStatus"
                                },
                                "id": 51252,
                                "name": "Identifier",
                                "src": "4781:17:149"
                              }
                            ],
                            "id": 51253,
                            "name": "MemberAccess",
                            "src": "4781:26:149"
                          }
                        ],
                        "id": 51254,
                        "name": "Assignment",
                        "src": "4760:47:149"
                      }
                    ],
                    "id": 51255,
                    "name": "ExpressionStatement",
                    "src": "4760:47:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "attestationRequestFeeToken",
                              "referencedDeclaration": 46109,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51223,
                                  "type": "struct Attestations.Attestation storage pointer",
                                  "value": "attestation"
                                },
                                "id": 51256,
                                "name": "Identifier",
                                "src": "4820:11:149"
                              }
                            ],
                            "id": 51257,
                            "name": "MemberAccess",
                            "src": "4820:38:149"
                          }
                        ],
                        "id": 51258,
                        "name": "UnaryOperation",
                        "src": "4813:45:149"
                      }
                    ],
                    "id": 51259,
                    "name": "ExpressionStatement",
                    "src": "4813:45:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51261
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "attestedAddress",
                          "scope": 51341,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.AttestedAddress",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "AttestedAddress",
                              "referencedDeclaration": 46122,
                              "type": "struct Attestations.AttestedAddress"
                            },
                            "id": 51260,
                            "name": "UserDefinedTypeName",
                            "src": "4864:15:149"
                          }
                        ],
                        "id": 51261,
                        "name": "VariableDeclaration",
                        "src": "4864:39:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.AttestedAddress storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "attestations",
                              "referencedDeclaration": 46136,
                              "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.IdentifierState storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46145,
                                      "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                      "value": "identifiers"
                                    },
                                    "id": 51262,
                                    "name": "Identifier",
                                    "src": "4906:11:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51202,
                                      "type": "bytes32",
                                      "value": "identifier"
                                    },
                                    "id": 51263,
                                    "name": "Identifier",
                                    "src": "4918:10:149"
                                  }
                                ],
                                "id": 51264,
                                "name": "IndexAccess",
                                "src": "4906:23:149"
                              }
                            ],
                            "id": 51265,
                            "name": "MemberAccess",
                            "src": "4906:36:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51266,
                                "name": "Identifier",
                                "src": "4943:3:149"
                              }
                            ],
                            "id": 51267,
                            "name": "MemberAccess",
                            "src": "4943:10:149"
                          }
                        ],
                        "id": 51268,
                        "name": "IndexAccess",
                        "src": "4906:48:149"
                      }
                    ],
                    "id": 51269,
                    "name": "VariableDeclarationStatement",
                    "src": "4864:90:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b25ca52c150c885152a41d16b8c6680148452eaf44111476e6e69ba5a1f167fd",
                                  "typeString": "literal_string \"SafeMath32 integer overflow\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51270,
                            "name": "Identifier",
                            "src": "4960:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "completed",
                                  "referencedDeclaration": 46114,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51261,
                                      "type": "struct Attestations.AttestedAddress storage pointer",
                                      "value": "attestedAddress"
                                    },
                                    "id": 51271,
                                    "name": "Identifier",
                                    "src": "4975:15:149"
                                  }
                                ],
                                "id": 51272,
                                "name": "MemberAccess",
                                "src": "4975:25:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "+",
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "completed",
                                      "referencedDeclaration": 46114,
                                      "type": "uint32"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51261,
                                          "type": "struct Attestations.AttestedAddress storage pointer",
                                          "value": "attestedAddress"
                                        },
                                        "id": 51273,
                                        "name": "Identifier",
                                        "src": "5003:15:149"
                                      }
                                    ],
                                    "id": 51274,
                                    "name": "MemberAccess",
                                    "src": "5003:25:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 51275,
                                    "name": "Literal",
                                    "src": "5031:1:149"
                                  }
                                ],
                                "id": 51276,
                                "name": "BinaryOperation",
                                "src": "5003:29:149"
                              }
                            ],
                            "id": 51277,
                            "name": "BinaryOperation",
                            "src": "4975:57:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536166654d617468333220696e7465676572206f766572666c6f77",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"SafeMath32 integer overflow\"",
                              "value": "SafeMath32 integer overflow"
                            },
                            "id": 51278,
                            "name": "Literal",
                            "src": "5040:29:149"
                          }
                        ],
                        "id": 51279,
                        "name": "FunctionCall",
                        "src": "4960:115:149"
                      }
                    ],
                    "id": 51280,
                    "name": "ExpressionStatement",
                    "src": "4960:115:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "completed",
                              "referencedDeclaration": 46114,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51261,
                                  "type": "struct Attestations.AttestedAddress storage pointer",
                                  "value": "attestedAddress"
                                },
                                "id": 51281,
                                "name": "Identifier",
                                "src": "5081:15:149"
                              }
                            ],
                            "id": 51283,
                            "name": "MemberAccess",
                            "src": "5081:25:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "completed",
                                  "referencedDeclaration": 46114,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51261,
                                      "type": "struct Attestations.AttestedAddress storage pointer",
                                      "value": "attestedAddress"
                                    },
                                    "id": 51284,
                                    "name": "Identifier",
                                    "src": "5109:15:149"
                                  }
                                ],
                                "id": 51285,
                                "name": "MemberAccess",
                                "src": "5109:25:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 51286,
                                "name": "Literal",
                                "src": "5137:1:149"
                              }
                            ],
                            "id": 51287,
                            "name": "BinaryOperation",
                            "src": "5109:29:149"
                          }
                        ],
                        "id": 51288,
                        "name": "Assignment",
                        "src": "5081:57:149"
                      }
                    ],
                    "id": 51289,
                    "name": "ExpressionStatement",
                    "src": "5081:57:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(address => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46161,
                                      "type": "mapping(address => mapping(address => uint256))",
                                      "value": "pendingWithdrawals"
                                    },
                                    "id": 51290,
                                    "name": "Identifier",
                                    "src": "5145:18:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51236,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 51291,
                                    "name": "Identifier",
                                    "src": "5164:5:149"
                                  }
                                ],
                                "id": 51293,
                                "name": "IndexAccess",
                                "src": "5145:25:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51212,
                                  "type": "address",
                                  "value": "issuer"
                                },
                                "id": 51292,
                                "name": "Identifier",
                                "src": "5171:6:149"
                              }
                            ],
                            "id": 51294,
                            "name": "IndexAccess",
                            "src": "5145:33:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 203,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(address => uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46161,
                                              "type": "mapping(address => mapping(address => uint256))",
                                              "value": "pendingWithdrawals"
                                            },
                                            "id": 51295,
                                            "name": "Identifier",
                                            "src": "5181:18:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51236,
                                              "type": "address",
                                              "value": "token"
                                            },
                                            "id": 51296,
                                            "name": "Identifier",
                                            "src": "5200:5:149"
                                          }
                                        ],
                                        "id": 51297,
                                        "name": "IndexAccess",
                                        "src": "5181:25:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51212,
                                          "type": "address",
                                          "value": "issuer"
                                        },
                                        "id": 51298,
                                        "name": "Identifier",
                                        "src": "5207:6:149"
                                      }
                                    ],
                                    "id": 51299,
                                    "name": "IndexAccess",
                                    "src": "5181:33:149"
                                  }
                                ],
                                "id": 51300,
                                "name": "MemberAccess",
                                "src": "5181:37:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46155,
                                      "type": "mapping(address => uint256)",
                                      "value": "attestationRequestFees"
                                    },
                                    "id": 51301,
                                    "name": "Identifier",
                                    "src": "5226:22:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51236,
                                      "type": "address",
                                      "value": "token"
                                    },
                                    "id": 51302,
                                    "name": "Identifier",
                                    "src": "5249:5:149"
                                  }
                                ],
                                "id": 51303,
                                "name": "IndexAccess",
                                "src": "5226:29:149"
                              }
                            ],
                            "id": 51304,
                            "name": "FunctionCall",
                            "src": "5181:80:149"
                          }
                        ],
                        "id": 51305,
                        "name": "Assignment",
                        "src": "5145:116:149"
                      }
                    ],
                    "id": 51306,
                    "name": "ExpressionStatement",
                    "src": "5145:116:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51308
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51341,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.IdentifierState",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IdentifierState",
                              "referencedDeclaration": 46141,
                              "type": "struct Attestations.IdentifierState"
                            },
                            "id": 51307,
                            "name": "UserDefinedTypeName",
                            "src": "5268:15:149"
                          }
                        ],
                        "id": 51308,
                        "name": "VariableDeclaration",
                        "src": "5268:29:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.IdentifierState storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46145,
                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                              "value": "identifiers"
                            },
                            "id": 51309,
                            "name": "Identifier",
                            "src": "5300:11:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51202,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51310,
                            "name": "Identifier",
                            "src": "5312:10:149"
                          }
                        ],
                        "id": 51311,
                        "name": "IndexAccess",
                        "src": "5300:23:149"
                      }
                    ],
                    "id": 51312,
                    "name": "VariableDeclarationStatement",
                    "src": "5268:55:149"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "completed",
                              "referencedDeclaration": 46114,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.AttestedAddress storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "attestations",
                                      "referencedDeclaration": 46136,
                                      "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Attestations.IdentifierState storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46145,
                                              "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                              "value": "identifiers"
                                            },
                                            "id": 51313,
                                            "name": "Identifier",
                                            "src": "5333:11:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51202,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 51314,
                                            "name": "Identifier",
                                            "src": "5345:10:149"
                                          }
                                        ],
                                        "id": 51315,
                                        "name": "IndexAccess",
                                        "src": "5333:23:149"
                                      }
                                    ],
                                    "id": 51316,
                                    "name": "MemberAccess",
                                    "src": "5333:36:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59216,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51317,
                                        "name": "Identifier",
                                        "src": "5370:3:149"
                                      }
                                    ],
                                    "id": 51318,
                                    "name": "MemberAccess",
                                    "src": "5370:10:149"
                                  }
                                ],
                                "id": 51319,
                                "name": "IndexAccess",
                                "src": "5333:48:149"
                              }
                            ],
                            "id": 51320,
                            "name": "MemberAccess",
                            "src": "5333:58:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 51321,
                            "name": "Literal",
                            "src": "5395:1:149"
                          }
                        ],
                        "id": 51322,
                        "name": "BinaryOperation",
                        "src": "5333:63:149"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (address) returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "accounts",
                                          "referencedDeclaration": 46132,
                                          "type": "address[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51308,
                                              "type": "struct Attestations.IdentifierState storage pointer",
                                              "value": "state"
                                            },
                                            "id": 51323,
                                            "name": "Identifier",
                                            "src": "5406:5:149"
                                          }
                                        ],
                                        "id": 51326,
                                        "name": "MemberAccess",
                                        "src": "5406:14:149"
                                      }
                                    ],
                                    "id": 51327,
                                    "name": "MemberAccess",
                                    "src": "5406:19:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59216,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 51328,
                                        "name": "Identifier",
                                        "src": "5426:3:149"
                                      }
                                    ],
                                    "id": 51329,
                                    "name": "MemberAccess",
                                    "src": "5426:10:149"
                                  }
                                ],
                                "id": 51330,
                                "name": "FunctionCall",
                                "src": "5406:31:149"
                              }
                            ],
                            "id": 51331,
                            "name": "ExpressionStatement",
                            "src": "5406:31:149"
                          }
                        ],
                        "id": 51332,
                        "name": "Block",
                        "src": "5398:46:149"
                      }
                    ],
                    "id": 51333,
                    "name": "IfStatement",
                    "src": "5329:115:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46195,
                              "type": "function (bytes32,address,address)",
                              "value": "AttestationCompleted"
                            },
                            "id": 51334,
                            "name": "Identifier",
                            "src": "5455:20:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51202,
                              "type": "bytes32",
                              "value": "identifier"
                            },
                            "id": 51335,
                            "name": "Identifier",
                            "src": "5476:10:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51336,
                                "name": "Identifier",
                                "src": "5488:3:149"
                              }
                            ],
                            "id": 51337,
                            "name": "MemberAccess",
                            "src": "5488:10:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51212,
                              "type": "address",
                              "value": "issuer"
                            },
                            "id": 51338,
                            "name": "Identifier",
                            "src": "5500:6:149"
                          }
                        ],
                        "id": 51339,
                        "name": "FunctionCall",
                        "src": "5455:52:149"
                      }
                    ],
                    "id": 51340,
                    "name": "EmitStatement",
                    "src": "5450:57:149"
                  }
                ],
                "id": 51341,
                "name": "Block",
                "src": "4385:1127:149"
              }
            ],
            "id": 51342,
            "name": "FunctionDefinition",
            "src": "4307:1205:149"
          },
          {
            "attributes": {
              "documentation": "@notice Adds additional attestations given the current randomness.\n@param identifier The hash of the identifier to be attested.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addIncompleteAttestations",
              "scope": 51560,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "identifier",
                      "scope": 51559,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 51343,
                        "name": "ElementaryTypeName",
                        "src": "5701:7:149"
                      }
                    ],
                    "id": 51344,
                    "name": "VariableDeclaration",
                    "src": "5701:18:149"
                  }
                ],
                "id": 51345,
                "name": "ParameterList",
                "src": "5700:20:149"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 51346,
                "name": "ParameterList",
                "src": "5730:0:149"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        51348
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "state",
                          "scope": 51558,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.AttestedAddress",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "AttestedAddress",
                              "referencedDeclaration": 46122,
                              "type": "struct Attestations.AttestedAddress"
                            },
                            "id": 51347,
                            "name": "UserDefinedTypeName",
                            "src": "5736:15:149"
                          }
                        ],
                        "id": 51348,
                        "name": "VariableDeclaration",
                        "src": "5736:29:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.AttestedAddress storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "attestations",
                              "referencedDeclaration": 46136,
                              "type": "mapping(address => struct Attestations.AttestedAddress storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.IdentifierState storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46145,
                                      "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                      "value": "identifiers"
                                    },
                                    "id": 51349,
                                    "name": "Identifier",
                                    "src": "5768:11:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51344,
                                      "type": "bytes32",
                                      "value": "identifier"
                                    },
                                    "id": 51350,
                                    "name": "Identifier",
                                    "src": "5780:10:149"
                                  }
                                ],
                                "id": 51351,
                                "name": "IndexAccess",
                                "src": "5768:23:149"
                              }
                            ],
                            "id": 51352,
                            "name": "MemberAccess",
                            "src": "5768:36:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51353,
                                "name": "Identifier",
                                "src": "5805:3:149"
                              }
                            ],
                            "id": 51354,
                            "name": "MemberAccess",
                            "src": "5805:10:149"
                          }
                        ],
                        "id": 51355,
                        "name": "IndexAccess",
                        "src": "5768:48:149"
                      }
                    ],
                    "id": 51356,
                    "name": "VariableDeclarationStatement",
                    "src": "5736:80:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51358
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "unselectedRequest",
                          "scope": 51558,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Attestations.UnselectedRequest",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "UnselectedRequest",
                              "referencedDeclaration": 46129,
                              "type": "struct Attestations.UnselectedRequest"
                            },
                            "id": 51357,
                            "name": "UserDefinedTypeName",
                            "src": "5822:17:149"
                          }
                        ],
                        "id": 51358,
                        "name": "VariableDeclaration",
                        "src": "5822:43:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Attestations.UnselectedRequest storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "unselectedRequests",
                              "referencedDeclaration": 46140,
                              "type": "mapping(address => struct Attestations.UnselectedRequest storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.IdentifierState storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 46145,
                                      "type": "mapping(bytes32 => struct Attestations.IdentifierState storage ref)",
                                      "value": "identifiers"
                                    },
                                    "id": 51359,
                                    "name": "Identifier",
                                    "src": "5868:11:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51344,
                                      "type": "bytes32",
                                      "value": "identifier"
                                    },
                                    "id": 51360,
                                    "name": "Identifier",
                                    "src": "5880:10:149"
                                  }
                                ],
                                "id": 51361,
                                "name": "IndexAccess",
                                "src": "5868:23:149"
                              }
                            ],
                            "id": 51362,
                            "name": "MemberAccess",
                            "src": "5868:42:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 51363,
                                "name": "Identifier",
                                "src": "5911:3:149"
                              }
                            ],
                            "id": 51364,
                            "name": "MemberAccess",
                            "src": "5911:17:149"
                          }
                        ],
                        "id": 51365,
                        "name": "IndexAccess",
                        "src": "5868:61:149"
                      }
                    ],
                    "id": 51366,
                    "name": "VariableDeclarationStatement",
                    "src": "5822:107:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51368
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "seed",
                          "scope": 51558,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 51367,
                            "name": "ElementaryTypeName",
                            "src": "5936:7:149"
                          }
                        ],
                        "id": 51368,
                        "name": "VariableDeclaration",
                        "src": "5936:12:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "getBlockRandomness",
                              "referencedDeclaration": 50923,
                              "type": "function (uint256) view external returns (bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract IRandom",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11814,
                                      "type": "function () view returns (contract IRandom)",
                                      "value": "getRandom"
                                    },
                                    "id": 51369,
                                    "name": "Identifier",
                                    "src": "5951:9:149"
                                  }
                                ],
                                "id": 51370,
                                "name": "FunctionCall",
                                "src": "5951:11:149"
                              }
                            ],
                            "id": 51371,
                            "name": "MemberAccess",
                            "src": "5951:30:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 203,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 51372,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "5989:7:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "blockNumber",
                                          "referencedDeclaration": 46124,
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51358,
                                              "type": "struct Attestations.UnselectedRequest storage pointer",
                                              "value": "unselectedRequest"
                                            },
                                            "id": 51373,
                                            "name": "Identifier",
                                            "src": "5997:17:149"
                                          }
                                        ],
                                        "id": 51374,
                                        "name": "MemberAccess",
                                        "src": "5997:29:149"
                                      }
                                    ],
                                    "id": 51375,
                                    "name": "FunctionCall",
                                    "src": "5989:38:149"
                                  }
                                ],
                                "id": 51376,
                                "name": "MemberAccess",
                                "src": "5989:42:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46149,
                                  "type": "uint256",
                                  "value": "selectIssuersWaitBlocks"
                                },
                                "id": 51377,
                                "name": "Identifier",
                                "src": "6032:23:149"
                              }
                            ],
                            "id": 51378,
                            "name": "FunctionCall",
                            "src": "5989:67:149"
                          }
                        ],
                        "id": 51379,
                        "name": "FunctionCall",
                        "src": "5951:111:149"
                      }
                    ],
                    "id": 51380,
                    "name": "VariableDeclarationStatement",
                    "src": "5936:126:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51382
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "accounts",
                          "scope": 51558,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract IAccounts",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "IAccounts",
                              "referencedDeclaration": 12633,
                              "type": "contract IAccounts"
                            },
                            "id": 51381,
                            "name": "UserDefinedTypeName",
                            "src": "6068:9:149"
                          }
                        ],
                        "id": 51382,
                        "name": "VariableDeclaration",
                        "src": "6068:18:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "contract IAccounts",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11697,
                              "type": "function () view returns (contract IAccounts)",
                              "value": "getAccounts"
                            },
                            "id": 51383,
                            "name": "Identifier",
                            "src": "6089:11:149"
                          }
                        ],
                        "id": 51384,
                        "name": "FunctionCall",
                        "src": "6089:13:149"
                      }
                    ],
                    "id": 51385,
                    "name": "VariableDeclarationStatement",
                    "src": "6068:34:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51387
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "issuersLength",
                          "scope": 51558,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 51386,
                            "name": "ElementaryTypeName",
                            "src": "6108:7:149"
                          }
                        ],
                        "id": 51387,
                        "name": "VariableDeclaration",
                        "src": "6108:21:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                50983
                              ],
                              "referencedDeclaration": 50983,
                              "type": "function () view returns (uint256)",
                              "value": "numberValidatorsInCurrentSet"
                            },
                            "id": 51388,
                            "name": "Identifier",
                            "src": "6132:28:149"
                          }
                        ],
                        "id": 51389,
                        "name": "FunctionCall",
                        "src": "6132:30:149"
                      }
                    ],
                    "id": 51390,
                    "name": "VariableDeclarationStatement",
                    "src": "6108:54:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51394
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "issuers",
                          "scope": 51558,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 51392,
                                "name": "ElementaryTypeName",
                                "src": "6168:7:149"
                              }
                            ],
                            "id": 51393,
                            "name": "ArrayTypeName",
                            "src": "6168:9:149"
                          }
                        ],
                        "id": 51394,
                        "name": "VariableDeclaration",
                        "src": "6168:24:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 51395,
                                    "name": "ElementaryTypeName",
                                    "src": "6199:7:149"
                                  }
                                ],
                                "id": 51396,
                                "name": "ArrayTypeName",
                                "src": "6199:9:149"
                              }
                            ],
                            "id": 51397,
                            "name": "NewExpression",
                            "src": "6195:13:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51387,
                              "type": "uint256",
                              "value": "issuersLength"
                            },
                            "id": 51398,
                            "name": "Identifier",
                            "src": "6209:13:149"
                          }
                        ],
                        "id": 51399,
                        "name": "FunctionCall",
                        "src": "6195:28:149"
                      }
                    ],
                    "id": 51400,
                    "name": "VariableDeclarationStatement",
                    "src": "6168:55:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            51402
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 51421,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 51401,
                                "name": "ElementaryTypeName",
                                "src": "6234:7:149"
                              }
                            ],
                            "id": 51402,
                            "name": "VariableDeclaration",
                            "src": "6234:9:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 51403,
                            "name": "Literal",
                            "src": "6246:1:149"
                          }
                        ],
                        "id": 51404,
                        "name": "VariableDeclarationStatement",
                        "src": "6234:13:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51402,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 51405,
                            "name": "Identifier",
                            "src": "6249:1:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51387,
                              "type": "uint256",
                              "value": "issuersLength"
                            },
                            "id": 51406,
                            "name": "Identifier",
                            "src": "6253:13:149"
                          }
                        ],
                        "id": 51407,
                        "name": "BinaryOperation",
                        "src": "6249:17:149"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51402,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 51408,
                                "name": "Identifier",
                                "src": "6268:1:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 203,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51402,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 51409,
                                        "name": "Identifier",
                                        "src": "6272:1:149"
                                      }
                                    ],
                                    "id": 51410,
                                    "name": "MemberAccess",
                                    "src": "6272:5:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 51411,
                                    "name": "Literal",
                                    "src": "6278:1:149"
                                  }
                                ],
                                "id": 51412,
                                "name": "FunctionCall",
                                "src": "6272:8:149"
                              }
                            ],
                            "id": 51413,
                            "name": "Assignment",
                            "src": "6268:12:149"
                          }
                        ],
                        "id": 51414,
                        "name": "ExpressionStatement",
                        "src": "6268:12:149"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51394,
                                      "type": "uint256[] memory",
                                      "value": "issuers"
                                    },
                                    "id": 51415,
                                    "name": "Identifier",
                                    "src": "6282:7:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51402,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 51416,
                                    "name": "Identifier",
                                    "src": "6290:1:149"
                                  }
                                ],
                                "id": 51417,
                                "name": "IndexAccess",
                                "src": "6282:10:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51402,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 51418,
                                "name": "Identifier",
                                "src": "6295:1:149"
                              }
                            ],
                            "id": 51419,
                            "name": "Assignment",
                            "src": "6282:14:149"
                          }
                        ],
                        "id": 51420,
                        "name": "ExpressionStatement",
                        "src": "6282:14:149"
                      }
                    ],
                    "id": 51421,
                    "name": "ForStatement",
                    "src": "6229:67:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                  "typeString": "literal_string \"not enough issuers\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 51422,
                            "name": "Identifier",
                            "src": "6303:7:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "attestationsRequested",
                                  "referencedDeclaration": 46126,
                                  "type": "uint32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51358,
                                      "type": "struct Attestations.UnselectedRequest storage pointer",
                                      "value": "unselectedRequest"
                                    },
                                    "id": 51423,
                                    "name": "Identifier",
                                    "src": "6311:17:149"
                                  }
                                ],
                                "id": 51424,
                                "name": "MemberAccess",
                                "src": "6311:39:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51387,
                                  "type": "uint256",
                                  "value": "issuersLength"
                                },
                                "id": 51425,
                                "name": "Identifier",
                                "src": "6354:13:149"
                              }
                            ],
                            "id": 51426,
                            "name": "BinaryOperation",
                            "src": "6311:56:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "6e6f7420656e6f7567682069737375657273",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"not enough issuers\"",
                              "value": "not enough issuers"
                            },
                            "id": 51427,
                            "name": "Literal",
                            "src": "6369:20:149"
                          }
                        ],
                        "id": 51428,
                        "name": "FunctionCall",
                        "src": "6303:87:149"
                      }
                    ],
                    "id": 51429,
                    "name": "ExpressionStatement",
                    "src": "6303:87:149"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        51431
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "currentIndex",
                          "scope": 51558,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 51430,
                            "name": "ElementaryTypeName",
                            "src": "6397:7:149"
                          }
                        ],
                        "id": 51431,
                        "name": "VariableDeclaration",
                        "src": "6397:20:149"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 51432,
                        "name": "Literal",
                        "src": "6420:1:149"
                      }
                    ],
                    "id": 51433,
                    "name": "VariableDeclarationStatement",
                    "src": "6397:24:149"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 51431,
                              "type": "uint256",
                              "value": "currentIndex"
                            },
                            "id": 51434,
                            "name": "Identifier",
                            "src": "6557:12:149"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "attestationsRequested",
                              "referencedDeclaration": 46126,
                              "type": "uint32"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 51358,
                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                  "value": "unselectedRequest"
                                },
                                "id": 51435,
                                "name": "Identifier",
                                "src": "6572:17:149"
                              }
                            ],
                            "id": 51436,
                            "name": "MemberAccess",
                            "src": "6572:39:149"
                          }
                        ],
                        "id": 51437,
                        "name": "BinaryOperation",
                        "src": "6557:54:149"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_aef49c23f223d374ff4530c9cd31daa0987188e3df3d00ddaac75da7de48252a",
                                          "typeString": "literal_string \"not enough issuers\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        59219,
                                        59220
                                      ],
                                      "referencedDeclaration": 59220,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 51438,
                                    "name": "Identifier",
                                    "src": "6621:7:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51387,
                                          "type": "uint256",
                                          "value": "issuersLength"
                                        },
                                        "id": 51439,
                                        "name": "Identifier",
                                        "src": "6629:13:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 51440,
                                        "name": "Literal",
                                        "src": "6645:1:149"
                                      }
                                    ],
                                    "id": 51441,
                                    "name": "BinaryOperation",
                                    "src": "6629:17:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "6e6f7420656e6f7567682069737375657273",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "string",
                                      "type": "literal_string \"not enough issuers\"",
                                      "value": "not enough issuers"
                                    },
                                    "id": 51442,
                                    "name": "Literal",
                                    "src": "6648:20:149"
                                  }
                                ],
                                "id": 51443,
                                "name": "FunctionCall",
                                "src": "6621:48:149"
                              }
                            ],
                            "id": 51444,
                            "name": "ExpressionStatement",
                            "src": "6621:48:149"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "bytes32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51368,
                                      "type": "bytes32",
                                      "value": "seed"
                                    },
                                    "id": 51445,
                                    "name": "Identifier",
                                    "src": "6677:4:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 59210,
                                          "type": "function (bytes memory) pure returns (bytes32)",
                                          "value": "keccak256"
                                        },
                                        "id": 51446,
                                        "name": "Identifier",
                                        "src": "6684:9:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "encodePacked",
                                              "referencedDeclaration": null,
                                              "type": "function () pure returns (bytes memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 59203,
                                                  "type": "abi",
                                                  "value": "abi"
                                                },
                                                "id": 51447,
                                                "name": "Identifier",
                                                "src": "6694:3:149"
                                              }
                                            ],
                                            "id": 51448,
                                            "name": "MemberAccess",
                                            "src": "6694:16:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51368,
                                              "type": "bytes32",
                                              "value": "seed"
                                            },
                                            "id": 51449,
                                            "name": "Identifier",
                                            "src": "6711:4:149"
                                          }
                                        ],
                                        "id": 51450,
                                        "name": "FunctionCall",
                                        "src": "6694:22:149"
                                      }
                                    ],
                                    "id": 51451,
                                    "name": "FunctionCall",
                                    "src": "6684:33:149"
                                  }
                                ],
                                "id": 51452,
                                "name": "Assignment",
                                "src": "6677:40:149"
                              }
                            ],
                            "id": 51453,
                            "name": "ExpressionStatement",
                            "src": "6677:40:149"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51455
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "idx",
                                  "scope": 51556,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": "uint256"
                                    },
                                    "id": 51454,
                                    "name": "ElementaryTypeName",
                                    "src": "6725:7:149"
                                  }
                                ],
                                "id": 51455,
                                "name": "VariableDeclaration",
                                "src": "6725:11:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "%",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(uint256)",
                                          "value": "uint256"
                                        },
                                        "id": 51456,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "6739:7:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51368,
                                          "type": "bytes32",
                                          "value": "seed"
                                        },
                                        "id": 51457,
                                        "name": "Identifier",
                                        "src": "6747:4:149"
                                      }
                                    ],
                                    "id": 51458,
                                    "name": "FunctionCall",
                                    "src": "6739:13:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51387,
                                      "type": "uint256",
                                      "value": "issuersLength"
                                    },
                                    "id": 51459,
                                    "name": "Identifier",
                                    "src": "6755:13:149"
                                  }
                                ],
                                "id": 51460,
                                "name": "BinaryOperation",
                                "src": "6739:29:149"
                              }
                            ],
                            "id": 51461,
                            "name": "VariableDeclarationStatement",
                            "src": "6725:43:149"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51463
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "signer",
                                  "scope": 51556,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 51462,
                                    "name": "ElementaryTypeName",
                                    "src": "6776:7:149"
                                  }
                                ],
                                "id": 51463,
                                "name": "VariableDeclaration",
                                "src": "6776:14:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        50995
                                      ],
                                      "referencedDeclaration": 50995,
                                      "type": "function (uint256) view returns (address)",
                                      "value": "validatorSignerAddressFromCurrentSet"
                                    },
                                    "id": 51464,
                                    "name": "Identifier",
                                    "src": "6793:36:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51394,
                                          "type": "uint256[] memory",
                                          "value": "issuers"
                                        },
                                        "id": 51465,
                                        "name": "Identifier",
                                        "src": "6830:7:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51455,
                                          "type": "uint256",
                                          "value": "idx"
                                        },
                                        "id": 51466,
                                        "name": "Identifier",
                                        "src": "6838:3:149"
                                      }
                                    ],
                                    "id": 51467,
                                    "name": "IndexAccess",
                                    "src": "6830:12:149"
                                  }
                                ],
                                "id": 51468,
                                "name": "FunctionCall",
                                "src": "6793:50:149"
                              }
                            ],
                            "id": 51469,
                            "name": "VariableDeclarationStatement",
                            "src": "6776:67:149"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51471
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "issuer",
                                  "scope": 51556,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "address",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 51470,
                                    "name": "ElementaryTypeName",
                                    "src": "6851:7:149"
                                  }
                                ],
                                "id": 51471,
                                "name": "VariableDeclaration",
                                "src": "6851:14:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "signerToAccount",
                                      "referencedDeclaration": 12415,
                                      "type": "function (address) view external returns (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51382,
                                          "type": "contract IAccounts",
                                          "value": "accounts"
                                        },
                                        "id": 51472,
                                        "name": "Identifier",
                                        "src": "6868:8:149"
                                      }
                                    ],
                                    "id": 51473,
                                    "name": "MemberAccess",
                                    "src": "6868:24:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51463,
                                      "type": "address",
                                      "value": "signer"
                                    },
                                    "id": 51474,
                                    "name": "Identifier",
                                    "src": "6893:6:149"
                                  }
                                ],
                                "id": 51475,
                                "name": "FunctionCall",
                                "src": "6868:32:149"
                              }
                            ],
                            "id": 51476,
                            "name": "VariableDeclarationStatement",
                            "src": "6851:49:149"
                          },
                          {
                            "attributes": {
                              "assignments": [
                                51478
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "name": "attestation",
                                  "scope": 51556,
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "type": "struct Attestations.Attestation",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "contractScope": null,
                                      "name": "Attestation",
                                      "referencedDeclaration": 46110,
                                      "type": "struct Attestations.Attestation"
                                    },
                                    "id": 51477,
                                    "name": "UserDefinedTypeName",
                                    "src": "6909:11:149"
                                  }
                                ],
                                "id": 51478,
                                "name": "VariableDeclaration",
                                "src": "6909:31:149"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct Attestations.Attestation storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "issuedAttestations",
                                      "referencedDeclaration": 46121,
                                      "type": "mapping(address => struct Attestations.Attestation storage ref)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51348,
                                          "type": "struct Attestations.AttestedAddress storage pointer",
                                          "value": "state"
                                        },
                                        "id": 51479,
                                        "name": "Identifier",
                                        "src": "6943:5:149"
                                      }
                                    ],
                                    "id": 51480,
                                    "name": "MemberAccess",
                                    "src": "6943:24:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51471,
                                      "type": "address",
                                      "value": "issuer"
                                    },
                                    "id": 51481,
                                    "name": "Identifier",
                                    "src": "6968:6:149"
                                  }
                                ],
                                "id": 51482,
                                "name": "IndexAccess",
                                "src": "6943:32:149"
                              }
                            ],
                            "id": 51483,
                            "name": "VariableDeclarationStatement",
                            "src": "6909:66:149"
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "&&",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_enum$_AttestationStatus_$46103",
                                        "typeString": "enum Attestations.AttestationStatus"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "==",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "status",
                                          "referencedDeclaration": 46105,
                                          "type": "enum Attestations.AttestationStatus"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51478,
                                              "type": "struct Attestations.Attestation storage pointer",
                                              "value": "attestation"
                                            },
                                            "id": 51484,
                                            "name": "Identifier",
                                            "src": "6997:11:149"
                                          }
                                        ],
                                        "id": 51485,
                                        "name": "MemberAccess",
                                        "src": "6997:18:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "None",
                                          "referencedDeclaration": null,
                                          "type": "enum Attestations.AttestationStatus"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46103,
                                              "type": "type(enum Attestations.AttestationStatus)",
                                              "value": "AttestationStatus"
                                            },
                                            "id": 51486,
                                            "name": "Identifier",
                                            "src": "7019:17:149"
                                          }
                                        ],
                                        "id": 51487,
                                        "name": "MemberAccess",
                                        "src": "7019:22:149"
                                      }
                                    ],
                                    "id": 51488,
                                    "name": "BinaryOperation",
                                    "src": "6997:44:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "hasAuthorizedAttestationSigner",
                                          "referencedDeclaration": 12457,
                                          "type": "function (address) view external returns (bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51382,
                                              "type": "contract IAccounts",
                                              "value": "accounts"
                                            },
                                            "id": 51489,
                                            "name": "Identifier",
                                            "src": "7053:8:149"
                                          }
                                        ],
                                        "id": 51490,
                                        "name": "MemberAccess",
                                        "src": "7053:39:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51471,
                                          "type": "address",
                                          "value": "issuer"
                                        },
                                        "id": 51491,
                                        "name": "Identifier",
                                        "src": "7093:6:149"
                                      }
                                    ],
                                    "id": 51492,
                                    "name": "FunctionCall",
                                    "src": "7053:47:149"
                                  }
                                ],
                                "id": 51493,
                                "name": "BinaryOperation",
                                "src": "6997:103:149"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51431,
                                              "type": "uint256",
                                              "value": "currentIndex"
                                            },
                                            "id": 51494,
                                            "name": "Identifier",
                                            "src": "7119:12:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "uint256",
                                              "type_conversion": false
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_1_by_1",
                                                      "typeString": "int_const 1"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "add",
                                                  "referencedDeclaration": 203,
                                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51431,
                                                      "type": "uint256",
                                                      "value": "currentIndex"
                                                    },
                                                    "id": 51495,
                                                    "name": "Identifier",
                                                    "src": "7134:12:149"
                                                  }
                                                ],
                                                "id": 51496,
                                                "name": "MemberAccess",
                                                "src": "7134:16:149"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
                                                "id": 51497,
                                                "name": "Literal",
                                                "src": "7151:1:149"
                                              }
                                            ],
                                            "id": 51498,
                                            "name": "FunctionCall",
                                            "src": "7134:19:149"
                                          }
                                        ],
                                        "id": 51499,
                                        "name": "Assignment",
                                        "src": "7119:34:149"
                                      }
                                    ],
                                    "id": 51500,
                                    "name": "ExpressionStatement",
                                    "src": "7119:34:149"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "enum Attestations.AttestationStatus"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "status",
                                              "referencedDeclaration": 46105,
                                              "type": "enum Attestations.AttestationStatus"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51478,
                                                  "type": "struct Attestations.Attestation storage pointer",
                                                  "value": "attestation"
                                                },
                                                "id": 51501,
                                                "name": "Identifier",
                                                "src": "7163:11:149"
                                              }
                                            ],
                                            "id": 51503,
                                            "name": "MemberAccess",
                                            "src": "7163:18:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "Incomplete",
                                              "referencedDeclaration": null,
                                              "type": "enum Attestations.AttestationStatus"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 46103,
                                                  "type": "type(enum Attestations.AttestationStatus)",
                                                  "value": "AttestationStatus"
                                                },
                                                "id": 51504,
                                                "name": "Identifier",
                                                "src": "7184:17:149"
                                              }
                                            ],
                                            "id": 51505,
                                            "name": "MemberAccess",
                                            "src": "7184:28:149"
                                          }
                                        ],
                                        "id": 51506,
                                        "name": "Assignment",
                                        "src": "7163:49:149"
                                      }
                                    ],
                                    "id": 51507,
                                    "name": "ExpressionStatement",
                                    "src": "7163:49:149"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint32"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "blockNumber",
                                              "referencedDeclaration": 46107,
                                              "type": "uint32"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51478,
                                                  "type": "struct Attestations.Attestation storage pointer",
                                                  "value": "attestation"
                                                },
                                                "id": 51508,
                                                "name": "Identifier",
                                                "src": "7222:11:149"
                                              }
                                            ],
                                            "id": 51510,
                                            "name": "MemberAccess",
                                            "src": "7222:23:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "blockNumber",
                                              "referencedDeclaration": 46124,
                                              "type": "uint32"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51358,
                                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                                  "value": "unselectedRequest"
                                                },
                                                "id": 51511,
                                                "name": "Identifier",
                                                "src": "7248:17:149"
                                              }
                                            ],
                                            "id": 51512,
                                            "name": "MemberAccess",
                                            "src": "7248:29:149"
                                          }
                                        ],
                                        "id": 51513,
                                        "name": "Assignment",
                                        "src": "7222:55:149"
                                      }
                                    ],
                                    "id": 51514,
                                    "name": "ExpressionStatement",
                                    "src": "7222:55:149"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "address"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "attestationRequestFeeToken",
                                              "referencedDeclaration": 46109,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51478,
                                                  "type": "struct Attestations.Attestation storage pointer",
                                                  "value": "attestation"
                                                },
                                                "id": 51515,
                                                "name": "Identifier",
                                                "src": "7287:11:149"
                                              }
                                            ],
                                            "id": 51517,
                                            "name": "MemberAccess",
                                            "src": "7287:38:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "attestationRequestFeeToken",
                                              "referencedDeclaration": 46128,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51358,
                                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                                  "value": "unselectedRequest"
                                                },
                                                "id": 51518,
                                                "name": "Identifier",
                                                "src": "7328:17:149"
                                              }
                                            ],
                                            "id": 51519,
                                            "name": "MemberAccess",
                                            "src": "7328:44:149"
                                          }
                                        ],
                                        "id": 51520,
                                        "name": "Assignment",
                                        "src": "7287:85:149"
                                      }
                                    ],
                                    "id": 51521,
                                    "name": "ExpressionStatement",
                                    "src": "7287:85:149"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "push",
                                              "referencedDeclaration": null,
                                              "type": "function (address) returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "selectedIssuers",
                                                  "referencedDeclaration": 46117,
                                                  "type": "address[] storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 51348,
                                                      "type": "struct Attestations.AttestedAddress storage pointer",
                                                      "value": "state"
                                                    },
                                                    "id": 51522,
                                                    "name": "Identifier",
                                                    "src": "7382:5:149"
                                                  }
                                                ],
                                                "id": 51525,
                                                "name": "MemberAccess",
                                                "src": "7382:21:149"
                                              }
                                            ],
                                            "id": 51526,
                                            "name": "MemberAccess",
                                            "src": "7382:26:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51471,
                                              "type": "address",
                                              "value": "issuer"
                                            },
                                            "id": 51527,
                                            "name": "Identifier",
                                            "src": "7409:6:149"
                                          }
                                        ],
                                        "id": 51528,
                                        "name": "FunctionCall",
                                        "src": "7382:34:149"
                                      }
                                    ],
                                    "id": 51529,
                                    "name": "ExpressionStatement",
                                    "src": "7382:34:149"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "tuple()",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_address_payable",
                                                  "typeString": "address payable"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46187,
                                              "type": "function (bytes32,address,address,address)",
                                              "value": "AttestationIssuerSelected"
                                            },
                                            "id": 51530,
                                            "name": "Identifier",
                                            "src": "7432:25:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51344,
                                              "type": "bytes32",
                                              "value": "identifier"
                                            },
                                            "id": 51531,
                                            "name": "Identifier",
                                            "src": "7469:10:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 59216,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 51532,
                                                "name": "Identifier",
                                                "src": "7491:3:149"
                                              }
                                            ],
                                            "id": 51533,
                                            "name": "MemberAccess",
                                            "src": "7491:10:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51471,
                                              "type": "address",
                                              "value": "issuer"
                                            },
                                            "id": 51534,
                                            "name": "Identifier",
                                            "src": "7513:6:149"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "attestationRequestFeeToken",
                                              "referencedDeclaration": 46128,
                                              "type": "address"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 51358,
                                                  "type": "struct Attestations.UnselectedRequest storage pointer",
                                                  "value": "unselectedRequest"
                                                },
                                                "id": 51535,
                                                "name": "Identifier",
                                                "src": "7531:17:149"
                                              }
                                            ],
                                            "id": 51536,
                                            "name": "MemberAccess",
                                            "src": "7531:44:149"
                                          }
                                        ],
                                        "id": 51537,
                                        "name": "FunctionCall",
                                        "src": "7432:153:149"
                                      }
                                    ],
                                    "id": 51538,
                                    "name": "EmitStatement",
                                    "src": "7427:158:149"
                                  }
                                ],
                                "id": 51539,
                                "name": "Block",
                                "src": "7109:485:149"
                              }
                            ],
                            "id": 51540,
                            "name": "IfStatement",
                            "src": "6984:610:149"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 51387,
                                      "type": "uint256",
                                      "value": "issuersLength"
                                    },
                                    "id": 51541,
                                    "name": "Identifier",
                                    "src": "7722:13:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sub",
                                          "referencedDeclaration": 219,
                                          "type": "function (uint256,uint256) pure returns (uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 51387,
                                              "type": "uint256",
                                              "value": "issuersLength"
                                            },
                                            "id": 51542,
                                            "name": "Identifier",
                                            "src": "7738:13:149"
                                          }
                                        ],
                                        "id": 51543,
                                        "name": "MemberAccess",
                                        "src": "7738:17:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 51544,
                                        "name": "Literal",
                                        "src": "7756:1:149"
                                      }
                                    ],
                                    "id": 51545,
                                    "name": "FunctionCall",
                                    "src": "7738:20:149"
                                  }
                                ],
                                "id": 51546,
                                "name": "Assignment",
                                "src": "7722:36:149"
                              }
                            ],
                            "id": 51547,
                            "name": "ExpressionStatement",
                            "src": "7722:36:149"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51394,
                                          "type": "uint256[] memory",
                                          "value": "issuers"
                                        },
                                        "id": 51548,
                                        "name": "Identifier",
                                        "src": "7766:7:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51455,
                                          "type": "uint256",
                                          "value": "idx"
                                        },
                                        "id": 51549,
                                        "name": "Identifier",
                                        "src": "7774:3:149"
                                      }
                                    ],
                                    "id": 51550,
                                    "name": "IndexAccess",
                                    "src": "7766:12:149"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51394,
                                          "type": "uint256[] memory",
                                          "value": "issuers"
                                        },
                                        "id": 51551,
                                        "name": "Identifier",
                                        "src": "7781:7:149"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 51387,
                                          "type": "uint256",
                                          "value": "issuersLength"
                                        },
                                        "id": 51552,
                                        "name": "Identifier",
                                        "src": "7789:13:149"
                                      }
                                    ],
                                    "id": 51553,
                                    "name": "IndexAccess",
                                    "src": "7781:22:149"
                                  }
                                ],
                                "id": 51554,
                                "name": "Assignment",
                                "src": "7766:37:149"
                              }
                            ],
                            "id": 51555,
                            "name": "ExpressionStatement",
                            "src": "7766:37:149"
                          }
                        ],
                        "id": 51556,
                        "name": "Block",
                        "src": "6613:1197:149"
                      }
                    ],
                    "id": 51557,
                    "name": "WhileStatement",
                    "src": "6550:1260:149"
                  }
                ],
                "id": 51558,
                "name": "Block",
                "src": "5730:2084:149"
              }
            ],
            "id": 51559,
            "name": "FunctionDefinition",
            "src": "5666:2148:149"
          }
        ],
        "id": 51560,
        "name": "ContractDefinition",
        "src": "286:7530:149"
      }
    ],
    "id": 51561,
    "name": "SourceUnit",
    "src": "0:7817:149"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {
    "1101": {
      "events": {},
      "links": {
        "Signatures": "0xcdB594a32B1CC3479d8746279712c39D18a07FC0"
      }
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-11-21T17:25:03.895Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "batchGetAttestationStats(bytes32[])": {
        "params": {
          "identifiersToLookup": "Array of n identifiers."
        },
        "return": "[0] Array of number of matching accounts per identifier.[1] Array of sum([0]) matching walletAddresses.[2] Array of sum([0]) numbers indicating the completions for each account.[3] Array of sum([0]) numbers indicating the total number of requested attestations for each account."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "complete(bytes32,uint8,bytes32,bytes32)": {
        "details": "Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.",
        "params": {
          "identifier": "The hash of the identifier for this attestation.",
          "r": "Output value r of the ECDSA signature.",
          "s": "Output value s of the ECDSA signature.",
          "v": "The recovery id of the incoming ECDSA signature."
        }
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "Numerator of the computed quantity (not reduced).Denominator of the computed quantity (not reduced)."
      },
      "getAttestationIssuers(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "Addresses of the selected attestation issuers."
      },
      "getAttestationRequestFee(address)": {
        "params": {
          "token": "Address of the attestationRequestFeeToken."
        },
        "return": "The fee."
      },
      "getAttestationState(bytes32,address,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier.",
          "issuer": "Address of the issuer."
        },
        "return": "status Status of the attestation.block Block number of request/completion the attestation.address Address of the token with which this attestation request was paid for."
      },
      "getAttestationStats(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "completed Number of completed attestations.requested Number of total requested attestations."
      },
      "getBlockNumberFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Block number."
      },
      "getCompletableAttestations(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "Block number of request/completion the attestation.Address of the issuer.The length of each metadataURL string for each issuer.All strings concatenated."
      },
      "getEpochNumber()": {
        "return": "Current epoch number."
      },
      "getEpochNumberOfBlock(uint256)": {
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "return": "Epoch number."
      },
      "getEpochSize()": {
        "return": "The current epoch size in blocks."
      },
      "getMaxAttestations()": {
        "return": "Maximum number of attestations that can be requested."
      },
      "getParentSealBitmap(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "return": "Bitmap parent seal with set bits at indices corresponding to signing validators."
      },
      "getUnselectedRequest(bytes32,address)": {
        "params": {
          "account": "Address of the account.",
          "identifier": "Hash of the identifier."
        },
        "return": "block Block number at which was requested.number Number of unselected requests.address Address of the token with which this attestation request was paid for."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "hashHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Header hash."
      },
      "initialize(address,uint256,uint256,uint256,address[],uint256[])": {
        "params": {
          "_attestationExpiryBlocks": "The new limit on blocks allowed to come between requesting an attestation and completing it.",
          "_selectIssuersWaitBlocks": "The wait period in blocks to call selectIssuers on attestation requests.",
          "attestationRequestFeeTokens": "The address of tokens that fees should be payable in.",
          "attestationRequestFeeValues": "The corresponding fee values.",
          "registryAddress": "The address of the registry core smart contract."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))"
      },
      "minQuorumSizeInCurrentSet()": {
        "return": "Byzantine quorum of validators."
      },
      "numberValidatorsInSet(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "return": "Size of the validator set."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "request(bytes32,uint256,address)": {
        "details": "Note that if an attestation expires before it is completed, the fee is forfeited. This is to prevent folks from attacking validators by requesting attestations that they do not complete, and to increase the cost of validators attempting to manipulate the attestations protocol.",
        "params": {
          "attestationRequestFeeToken": "The address of the token with which the attestation fee will be paid.",
          "attestationsRequested": "The number of requested attestations for this request.",
          "identifier": "The hash of the identifier to be attested."
        }
      },
      "requireNAttestationsRequested(bytes32,address,uint32)": {
        "details": "It can be used when batching meta-transactions to validate attestation are requested as expected in untrusted scenarios",
        "params": {
          "account": "Address of the account.",
          "expected": "Number of expected attestations",
          "identifier": "Hash of the identifier."
        }
      },
      "revoke(bytes32,uint256)": {
        "params": {
          "identifier": "The identifier for which to revoke.",
          "index": "The index of the account in the accounts array."
        }
      },
      "selectIssuers(bytes32)": {
        "params": {
          "identifier": "The hash of the identifier to be attested."
        }
      },
      "setAttestationExpiryBlocks(uint256)": {
        "params": {
          "_attestationExpiryBlocks": "The new limit on blocks allowed to come between requesting an attestation and completing it."
        }
      },
      "setAttestationRequestFee(address,uint256)": {
        "params": {
          "fee": "The fee in 'token' that is required for each attestation.",
          "token": "The address of the attestationRequestFeeToken."
        }
      },
      "setMaxAttestations(uint256)": {
        "params": {
          "_maxAttestations": "Maximum number of attestations that can be requested."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setSelectIssuersWaitBlocks(uint256)": {
        "params": {
          "_selectIssuersWaitBlocks": "The wait period in blocks to call selectIssuers on attestation                                requests."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)": {
        "details": "Throws if there is no matching outstanding attestation request.Throws if the attestation window has passed.",
        "params": {
          "account": "Address of the account. ",
          "identifier": "The hash of the identifier to be attested.",
          "r": "Output value r of the ECDSA signature.",
          "s": "Output value s of the ECDSA signature.",
          "v": "The recovery id of the incoming ECDSA signature."
        },
        "return": "The issuer of the corresponding attestation."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      },
      "withdraw(address)": {
        "details": "Throws if msg.sender does not have any rewards to withdraw.",
        "params": {
          "token": "The address of the token that will be withdrawn."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "batchGetAttestationStats(bytes32[])": {
        "notice": "Batch lookup function to determine attestation stats for a list of identifiers."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "complete(bytes32,uint8,bytes32,bytes32)": {
        "notice": "Submit the secret message sent by the issuer to complete the attestation request."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getAttestationIssuers(bytes32,address)": {
        "notice": "Returns selected attestation issuers for a identifier/account pair."
      },
      "getAttestationRequestFee(address)": {
        "notice": "Returns the fee set for a particular token."
      },
      "getAttestationState(bytes32,address,address)": {
        "notice": "Returns the state of a specific attestation."
      },
      "getAttestationStats(bytes32,address)": {
        "notice": "Returns attestation stats for a identifier/account pair."
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getCompletableAttestations(bytes32,address)": {
        "notice": "Returns the state of all attestations that are completable"
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getMaxAttestations()": {
        "notice": "Query 'maxAttestations'"
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getUnselectedRequest(bytes32,address)": {
        "notice": "Returns the unselected attestation request for an identifier/account pair, if any."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "initialize(address,uint256,uint256,uint256,address[],uint256[])": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "request(bytes32,uint256,address)": {
        "notice": "Commit to the attestation request of a hashed identifier."
      },
      "requireNAttestationsRequested(bytes32,address,uint32)": {
        "notice": "Require that a given identifier/address pair has requested a specific number of attestations."
      },
      "revoke(bytes32,uint256)": {
        "notice": "Revokes an account for an identifier."
      },
      "selectIssuers(bytes32)": {
        "notice": "Selects the issuers for the most recent attestation request."
      },
      "setAttestationExpiryBlocks(uint256)": {
        "notice": "Updates 'attestationExpiryBlocks'."
      },
      "setAttestationRequestFee(address,uint256)": {
        "notice": "Updates the fee  for a particular token."
      },
      "setMaxAttestations(uint256)": {
        "notice": "Updates 'maxAttestations'."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setSelectIssuersWaitBlocks(uint256)": {
        "notice": "Updates 'selectIssuersWaitBlocks'."
      },
      "validateAttestationCode(bytes32,address,uint8,bytes32,bytes32)": {
        "notice": "Validates the given attestation code."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator address from the validator set at the given block number."
      },
      "withdraw(address)": {
        "notice": "Allows issuers to withdraw accumulated attestation rewards."
      }
    }
  }
}