{
  "contractName": "BlockchainParameters",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "BlockGasLimitSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gas",
          "type": "uint256"
        }
      ],
      "name": "IntrinsicGasForAlternativeFeeCurrencySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "activationEpoch",
          "type": "uint256"
        }
      ],
      "name": "UptimeLookbackWindowSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockGasLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "intrinsicGasForAlternativeFeeCurrency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "uptimeLookbackWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextValueActivationEpoch",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_gasForNonGoldCurrencies",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lookbackWindow",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "setBlockGasLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gas",
          "type": "uint256"
        }
      ],
      "name": "setIntrinsicGasForAlternativeFeeCurrency",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "setUptimeLookbackWindow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUptimeLookbackWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lookbackWindow",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"BlockGasLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"IntrinsicGasForAlternativeFeeCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activationEpoch\",\"type\":\"uint256\"}],\"name\":\"UptimeLookbackWindowSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUptimeLookbackWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lookbackWindow\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasForNonGoldCurrencies\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lookbackWindow\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"intrinsicGasForAlternativeFeeCurrency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"setBlockGasLimit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"setIntrinsicGasForAlternativeFeeCurrency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"setUptimeLookbackWindow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uptimeLookbackWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextValueActivationEpoch\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"Numerator of the computed quantity (not reduced).Denominator of the computed quantity (not reduced).\"},\"getBlockNumberFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Block number.\"},\"getEpochNumber()\":{\"return\":\"Current epoch number.\"},\"getEpochNumberOfBlock(uint256)\":{\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"return\":\"Epoch number.\"},\"getEpochSize()\":{\"return\":\"The current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"return\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"},\"getVersionNumber()\":{\"return\":\"Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract.\"},\"hashHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Header hash.\"},\"initialize(uint256,uint256,uint256)\":{\"params\":{\"_gasForNonGoldCurrencies\":\"Intrinsic gas for non-gold gas currencies.\",\"gasLimit\":\"Block gas limit.\",\"lookbackWindow\":\"Lookback window for measuring validator uptime.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\"},\"minQuorumSizeInCurrentSet()\":{\"return\":\"Byzantine quorum of validators.\"},\"numberValidatorsInCurrentSet()\":{\"return\":\"Size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"return\":\"Size of the validator set.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setBlockGasLimit(uint256)\":{\"params\":{\"gasLimit\":\"New block gas limit.\"}},\"setIntrinsicGasForAlternativeFeeCurrency(uint256)\":{\"params\":{\"gas\":\"Intrinsic gas for non-gold gas currencies.\"}},\"setUptimeLookbackWindow(uint256)\":{\"params\":{\"window\":\"New window.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"}},\"title\":\"Contract for storing blockchain parameters that can be set by governance.\"},\"userdoc\":{\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"constructor\":\"Sets initialized == true on implementation contracts\",\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getUptimeLookbackWindow()\":{\"notice\":\"Gets the uptime lookback window.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"initialize(uint256,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInCurrentSet()\":{\"notice\":\"Gets the size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"setBlockGasLimit(uint256)\":{\"notice\":\"Sets the block gas limit.\"},\"setIntrinsicGasForAlternativeFeeCurrency(uint256)\":{\"notice\":\"Sets the intrinsic gas for non-gold gas currencies.\"},\"setUptimeLookbackWindow(uint256)\":{\"notice\":\"Sets the uptime lookback window.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator address from the current validator set.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator address from the validator set at the given block number.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/BlockchainParameters.sol\":\"BlockchainParameters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\ncontract Context {\\n    // Empty internal constructor, to prevent people from mistakenly deploying\\n    // an instance of this contract, which should be used via inheritance.\\n    constructor () internal { }\\n    // solhint-disable-previous-line no-empty-blocks\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\"},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\"},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"content\":\"pragma solidity ^0.5.0;\\n\\nimport \\\"../GSN/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\"},\"project:/contracts/common/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ncontract Initializable {\\n  bool public initialized;\\n\\n  constructor(bool testingDeployment) public {\\n    if (!testingDeployment) {\\n      initialized = true;\\n    }\\n  }\\n\\n  modifier initializer() {\\n    require(!initialized, \\\"contract already initialized\\\");\\n    initialized = true;\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x27277d9f2c894659833be45eeca368a6d5ff060d944f0ad335e31003bf6477ed\"},\"project:/contracts/common/UsingPrecompiles.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"../common/interfaces/ICeloVersionedContract.sol\\\";\\n\\ncontract UsingPrecompiles {\\n  using SafeMath for uint256;\\n\\n  address constant TRANSFER = address(0xff - 2);\\n  address constant FRACTION_MUL = address(0xff - 3);\\n  address constant PROOF_OF_POSSESSION = address(0xff - 4);\\n  address constant GET_VALIDATOR = address(0xff - 5);\\n  address constant NUMBER_VALIDATORS = address(0xff - 6);\\n  address constant EPOCH_SIZE = address(0xff - 7);\\n  address constant BLOCK_NUMBER_FROM_HEADER = address(0xff - 8);\\n  address constant HASH_HEADER = address(0xff - 9);\\n  address constant GET_PARENT_SEAL_BITMAP = address(0xff - 10);\\n  address constant GET_VERIFIED_SEAL_BITMAP = address(0xff - 11);\\n\\n  /**\\n   * @notice calculate a * b^x for fractions a, b to `decimals` precision\\n   * @param aNumerator Numerator of first fraction\\n   * @param aDenominator Denominator of first fraction\\n   * @param bNumerator Numerator of exponentiated fraction\\n   * @param bDenominator Denominator of exponentiated fraction\\n   * @param exponent exponent to raise b to\\n   * @param _decimals precision\\n   * @return Numerator of the computed quantity (not reduced).\\n   * @return Denominator of the computed quantity (not reduced).\\n   */\\n  function fractionMulExp(\\n    uint256 aNumerator,\\n    uint256 aDenominator,\\n    uint256 bNumerator,\\n    uint256 bDenominator,\\n    uint256 exponent,\\n    uint256 _decimals\\n  ) public view returns (uint256, uint256) {\\n    require(aDenominator != 0 && bDenominator != 0, \\\"a denominator is zero\\\");\\n    uint256 returnNumerator;\\n    uint256 returnDenominator;\\n    bool success;\\n    bytes memory out;\\n    (success, out) = FRACTION_MUL.staticcall(\\n      abi.encodePacked(aNumerator, aDenominator, bNumerator, bDenominator, exponent, _decimals)\\n    );\\n    require(success, \\\"error calling fractionMulExp precompile\\\");\\n    returnNumerator = getUint256FromBytes(out, 0);\\n    returnDenominator = getUint256FromBytes(out, 32);\\n    return (returnNumerator, returnDenominator);\\n  }\\n\\n  /**\\n   * @notice Returns the current epoch size in blocks.\\n   * @return The current epoch size in blocks.\\n   */\\n  function getEpochSize() public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = EPOCH_SIZE.staticcall(abi.encodePacked());\\n    require(success, \\\"error calling getEpochSize precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @return Epoch number.\\n   */\\n  function getEpochNumberOfBlock(uint256 blockNumber) public view returns (uint256) {\\n    return epochNumberOfBlock(blockNumber, getEpochSize());\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @return Current epoch number.\\n   */\\n  function getEpochNumber() public view returns (uint256) {\\n    return getEpochNumberOfBlock(block.number);\\n  }\\n\\n  /**\\n   * @notice Returns the epoch number at a block.\\n   * @param blockNumber Block number where epoch number is calculated.\\n   * @param epochSize The epoch size in blocks.\\n   * @return Epoch number.\\n   */\\n  function epochNumberOfBlock(uint256 blockNumber, uint256 epochSize)\\n    internal\\n    pure\\n    returns (uint256)\\n  {\\n    // Follows GetEpochNumber from celo-blockchain/blob/master/consensus/istanbul/utils.go\\n    uint256 epochNumber = blockNumber / epochSize;\\n    if (blockNumber % epochSize == 0) {\\n      return epochNumber;\\n    } else {\\n      return epochNumber.add(1);\\n    }\\n  }\\n\\n  /**\\n   * @notice Gets a validator address from the current validator set.\\n   * @param index Index of requested validator in the validator set.\\n   * @return Address of validator at the requested index.\\n   */\\n  // TODO: (soloseng) add to precompiles\\n  function validatorSignerAddressFromCurrentSet(uint256 index) public view returns (address) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, uint256(block.number)));\\n    require(success, \\\"error calling validatorSignerAddressFromCurrentSet precompile\\\");\\n    return address(getUint256FromBytes(out, 0));\\n  }\\n\\n  /**\\n   * @notice Gets a validator address from the validator set at the given block number.\\n   * @param index Index of requested validator in the validator set.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Address of validator at the requested index.\\n   */\\n  function validatorSignerAddressFromSet(uint256 index, uint256 blockNumber)\\n    public\\n    view\\n    returns (address)\\n  {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VALIDATOR.staticcall(abi.encodePacked(index, blockNumber));\\n    require(success, \\\"error calling validatorSignerAddressFromSet precompile\\\");\\n    return address(getUint256FromBytes(out, 0));\\n  }\\n\\n  /**\\n   * @notice Gets the size of the current elected validator set.\\n   * @return Size of the current elected validator set.\\n   */\\n  // TODO:(soloseng) add to precompiles.\\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(uint256(block.number)));\\n    require(success, \\\"error calling numberValidatorsInCurrentSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the size of the validator set that must sign the given block number.\\n   * @param blockNumber Block number to retrieve the validator set from.\\n   * @return Size of the validator set.\\n   */\\n  function numberValidatorsInSet(uint256 blockNumber) public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = NUMBER_VALIDATORS.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling numberValidatorsInSet precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Checks a BLS proof of possession.\\n   * @param sender The address signed by the BLS key to generate the proof of possession.\\n   * @param blsKey The BLS public key that the validator is using for consensus, should pass proof\\n   *   of possession. 48 bytes.\\n   * @param blsPop The BLS public key proof-of-possession, which consists of a signature on the\\n   *   account address. 96 bytes.\\n   * @return True upon success.\\n   */\\n  function checkProofOfPossession(address sender, bytes memory blsKey, bytes memory blsPop)\\n    public\\n    view\\n    returns (bool)\\n  {\\n    bool success;\\n    (success, ) = PROOF_OF_POSSESSION.staticcall(abi.encodePacked(sender, blsKey, blsPop));\\n    return success;\\n  }\\n\\n  /**\\n   * @notice Parses block number out of header.\\n   * @param header RLP encoded header\\n   * @return Block number.\\n   */\\n  function getBlockNumberFromHeader(bytes memory header) public view returns (uint256) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = BLOCK_NUMBER_FROM_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getBlockNumberFromHeader precompile\\\");\\n    return getUint256FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Computes hash of header.\\n   * @param header RLP encoded header\\n   * @return Header hash.\\n   */\\n  function hashHeader(bytes memory header) public view returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = HASH_HEADER.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling hashHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Gets the parent seal bitmap from the header at the given block number.\\n   * @param blockNumber Block number to retrieve. Must be within 4 epochs of the current number.\\n   * @return Bitmap parent seal with set bits at indices corresponding to signing validators.\\n   */\\n  function getParentSealBitmap(uint256 blockNumber) public view returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_PARENT_SEAL_BITMAP.staticcall(abi.encodePacked(blockNumber));\\n    require(success, \\\"error calling getParentSealBitmap precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Verifies the BLS signature on the header and returns the seal bitmap.\\n   * The validator set used for verification is retrieved based on the parent hash field of the\\n   * header.  If the parent hash is not in the blockchain, verification fails.\\n   * @param header RLP encoded header\\n   * @return Bitmap parent seal with set bits at indices correspoinding to signing validators.\\n   */\\n  function getVerifiedSealBitmapFromHeader(bytes memory header) public view returns (bytes32) {\\n    bytes memory out;\\n    bool success;\\n    (success, out) = GET_VERIFIED_SEAL_BITMAP.staticcall(abi.encodePacked(header));\\n    require(success, \\\"error calling getVerifiedSealBitmapFromHeader precompile\\\");\\n    return getBytes32FromBytes(out, 0);\\n  }\\n\\n  /**\\n   * @notice Converts bytes to uint256.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return uint256 data\\n   */\\n  function getUint256FromBytes(bytes memory bs, uint256 start) internal pure returns (uint256) {\\n    return uint256(getBytes32FromBytes(bs, start));\\n  }\\n\\n  /**\\n   * @notice Converts bytes to bytes32.\\n   * @param bs byte[] data\\n   * @param start offset into byte data to convert\\n   * @return bytes32 data\\n   */\\n  function getBytes32FromBytes(bytes memory bs, uint256 start) internal pure returns (bytes32) {\\n    require(bs.length >= start.add(32), \\\"slicing out of range\\\");\\n    bytes32 x;\\n    assembly {\\n      x := mload(add(bs, add(start, 32)))\\n    }\\n    return x;\\n  }\\n\\n  /**\\n   * @notice Returns the minimum number of required signers for a given block number.\\n   * @dev Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\\n   */\\n  function minQuorumSize(uint256 blockNumber) public view returns (uint256) {\\n    return numberValidatorsInSet(blockNumber).mul(2).add(2).div(3);\\n  }\\n\\n  /**\\n   * @notice Computes byzantine quorum from current validator set size\\n   * @return Byzantine quorum of validators.\\n   */\\n  function minQuorumSizeInCurrentSet() public view returns (uint256) {\\n    return minQuorumSize(block.number);\\n  }\\n}\\n\",\"keccak256\":\"0xd46e05170295a0aed352f8fab6798fb37c72e487734b2c0762c8212ed88aa4c2\"},\"project:/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0-only\\npragma solidity >=0.5.13 <0.9.0;\\n\\ninterface ICeloVersionedContract {\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n    * @return Storage version of the contract.\\n    * @return Major version of the contract.\\n    * @return Minor version of the contract.\\n    * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256);\\n}\\n\",\"keccak256\":\"0x27f0b14472db998eb8e4b529bbfd6a5879cbd842f8db8aa6c06ed7d2e0b17ac1\"},\"project:/contracts/governance/BlockchainParameters.sol\":{\"content\":\"pragma solidity ^0.5.13;\\n\\nimport \\\"openzeppelin-solidity/contracts/math/SafeMath.sol\\\";\\nimport \\\"openzeppelin-solidity/contracts/ownership/Ownable.sol\\\";\\nimport \\\"../common/Initializable.sol\\\";\\nimport \\\"../common/UsingPrecompiles.sol\\\";\\n\\n/**\\n * @title Contract for storing blockchain parameters that can be set by governance.\\n */\\ncontract BlockchainParameters is Ownable, Initializable, UsingPrecompiles {\\n  using SafeMath for uint256;\\n\\n  // obsolete\\n  struct ClientVersion {\\n    uint256 major;\\n    uint256 minor;\\n    uint256 patch;\\n  }\\n\\n  struct LookbackWindow {\\n    // Value for lookbackWindow before `nextValueActivationBlock`\\n    uint256 oldValue;\\n    // Value for lookbackWindow after `nextValueActivationBlock`\\n    uint256 nextValue;\\n    // Epoch where next value is activated\\n    uint256 nextValueActivationEpoch;\\n  }\\n\\n  ClientVersion private minimumClientVersion; // obsolete\\n  uint256 public blockGasLimit;\\n  uint256 public intrinsicGasForAlternativeFeeCurrency;\\n  LookbackWindow public uptimeLookbackWindow;\\n\\n  event IntrinsicGasForAlternativeFeeCurrencySet(uint256 gas);\\n  event BlockGasLimitSet(uint256 limit);\\n  event UptimeLookbackWindowSet(uint256 window, uint256 activationEpoch);\\n\\n  /**\\n   * @notice Sets initialized == true on implementation contracts\\n   * @param test Set to true to skip implementation initialization\\n   */\\n  constructor(bool test) public Initializable(test) {}\\n\\n  /**\\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\\n   * @param _gasForNonGoldCurrencies Intrinsic gas for non-gold gas currencies.\\n   * @param gasLimit Block gas limit.\\n   * @param lookbackWindow Lookback window for measuring validator uptime.\\n   */\\n  function initialize(uint256 _gasForNonGoldCurrencies, uint256 gasLimit, uint256 lookbackWindow)\\n    external\\n    initializer\\n  {\\n    _transferOwnership(msg.sender);\\n    setBlockGasLimit(gasLimit);\\n    setIntrinsicGasForAlternativeFeeCurrency(_gasForNonGoldCurrencies);\\n    setUptimeLookbackWindow(lookbackWindow);\\n  }\\n\\n  /**\\n   * @notice Returns the storage, major, minor, and patch version of the contract.\\n   * @return Storage version of the contract.\\n   * @return Major version of the contract.\\n   * @return Minor version of the contract.\\n   * @return Patch version of the contract.\\n   */\\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\\n    return (1, 3, 0, 0);\\n  }\\n\\n  /**\\n   * @notice Sets the block gas limit.\\n   * @param gasLimit New block gas limit.\\n   */\\n  function setBlockGasLimit(uint256 gasLimit) public onlyOwner {\\n    blockGasLimit = gasLimit;\\n    emit BlockGasLimitSet(gasLimit);\\n  }\\n\\n  /**\\n   * @notice Sets the intrinsic gas for non-gold gas currencies.\\n   * @param gas Intrinsic gas for non-gold gas currencies.\\n   */\\n  function setIntrinsicGasForAlternativeFeeCurrency(uint256 gas) public onlyOwner {\\n    intrinsicGasForAlternativeFeeCurrency = gas;\\n    emit IntrinsicGasForAlternativeFeeCurrencySet(gas);\\n  }\\n\\n  /**\\n   * @notice Sets the uptime lookback window.\\n   * @param window New window.\\n   */\\n  function setUptimeLookbackWindow(uint256 window) public onlyOwner {\\n    require(window >= 3 && window <= 720, \\\"UptimeLookbackWindow must be within safe range\\\");\\n    require(\\n      window <= getEpochSize().sub(2),\\n      \\\"UptimeLookbackWindow must be smaller or equal to epochSize - 2\\\"\\n    );\\n\\n    uptimeLookbackWindow.oldValue = _getUptimeLookbackWindow();\\n\\n    // changes only take place on the next epoch\\n    uptimeLookbackWindow.nextValueActivationEpoch = getEpochNumber().add(1);\\n    uptimeLookbackWindow.nextValue = window;\\n\\n    emit UptimeLookbackWindowSet(window, uptimeLookbackWindow.nextValueActivationEpoch);\\n  }\\n\\n  /**\\n   * @notice Gets the uptime lookback window.\\n   */\\n  function getUptimeLookbackWindow() public view returns (uint256 lookbackWindow) {\\n    lookbackWindow = _getUptimeLookbackWindow();\\n    require(lookbackWindow != 0, \\\"UptimeLookbackWindow is not initialized\\\");\\n  }\\n\\n  /**\\n   * @notice Gets the uptime lookback window.\\n   */\\n  function _getUptimeLookbackWindow() internal view returns (uint256 lookbackWindow) {\\n    if (getEpochNumber() >= uptimeLookbackWindow.nextValueActivationEpoch) {\\n      return uptimeLookbackWindow.nextValue;\\n    } else {\\n      return uptimeLookbackWindow.oldValue;\\n    }\\n  }\\n\\n}\\n\",\"keccak256\":\"0x853f1e344667b55843139c46fde1415ff90339f50ae5cdb95c74d35f29b8e2e5\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002cbe38038062002cbe833981810160405260208110156200003757600080fd5b81019080805190602001909291905050508060006200005b6200012360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350806200011b576001600060146101000a81548160ff0219169083151502179055505b50506200012b565b600033905090565b612b83806200013b6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806380d8591111610104578063a69257f3116100a2578063e94fd10911610071578063e94fd109146109de578063ec68307214610a0c578063f2fde38b14610a87578063fae8db0a14610acb576101cf565b8063a69257f314610922578063cb0ec62814610950578063df4da4611461097e578063e50e652d1461099c576101cf565b80638da5cb5b116100de5780638da5cb5b146108565780638f32d59b146108a05780639a7b3be7146108c25780639b2b592f146108e0576101cf565b806380d859111461072757806387ee8a0f146107695780638a88362614610787576101cf565b80635d180adb11610171578063715018a61161014b578063715018a6146106c35780637385e5da146106cd5780637877a797146106eb578063808474f114610709576101cf565b80635d180adb1461055057806361568828146105c857806367960e91146105f4576101cf565b80633b1eb4bf116101ad5780633b1eb4bf146103ee5780634b2c2f441461043057806352bed4d7146104ff57806354255be01461051d576101cf565b8063123633ea146101d4578063158ef93e1461024257806323f0ab6514610264575b600080fd5b610200600480360360208110156101ea57600080fd5b8101908080359060200190929190505050610b0d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61024a610c5e565b604051808215151515815260200191505060405180910390f35b6103d46004803603606081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b757600080fd5b8201836020820111156102c957600080fd5b803590602001918460018302840111640100000000831117156102eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561034e57600080fd5b82018360208201111561036057600080fd5b8035906020019184600183028401116401000000008311171561038257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c71565b604051808215151515815260200191505060405180910390f35b61041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050610e2a565b6040518082815260200191505060405180910390f35b6104e96004803603602081101561044657600080fd5b810190808035906020019064010000000081111561046357600080fd5b82018360208201111561047557600080fd5b8035906020019184600183028401116401000000008311171561049757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e44565b6040518082815260200191505060405180910390f35b610507610fd8565b6040518082815260200191505060405180910390f35b610525611041565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6105866004803603604081101561056657600080fd5b810190808035906020019092919080359060200190929190505050611068565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d06111ba565b60405180848152602001838152602001828152602001935050505060405180910390f35b6106ad6004803603602081101561060a57600080fd5b810190808035906020019064010000000081111561062757600080fd5b82018360208201111561063957600080fd5b8035906020019184600183028401116401000000008311171561065b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111d2565b6040518082815260200191505060405180910390f35b6106cb611366565b005b6106d561149f565b6040518082815260200191505060405180910390f35b6106f36114af565b6040518082815260200191505060405180910390f35b6107116114b5565b6040518082815260200191505060405180910390f35b6107676004803603606081101561073d57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506114bb565b005b610771611582565b6040518082815260200191505060405180910390f35b6108406004803603602081101561079d57600080fd5b81019080803590602001906401000000008111156107ba57600080fd5b8201836020820111156107cc57600080fd5b803590602001918460018302840111640100000000831117156107ee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116c9565b6040518082815260200191505060405180910390f35b61085e61185d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108a8611886565b604051808215151515815260200191505060405180910390f35b6108ca6118e4565b6040518082815260200191505060405180910390f35b61090c600480360360208110156108f657600080fd5b81019080803590602001909291905050506118f4565b6040518082815260200191505060405180910390f35b61094e6004803603602081101561093857600080fd5b8101908080359060200190929190505050611a3d565b005b61097c6004803603602081101561096657600080fd5b8101908080359060200190929190505050611af8565b005b610986611bb3565b6040518082815260200191505060405180910390f35b6109c8600480360360208110156109b257600080fd5b8101908080359060200190929190505050611cef565b6040518082815260200191505060405180910390f35b610a0a600480360360208110156109f457600080fd5b8101908080359060200190929190505050611d3a565b005b610a6a600480360360c0811015610a2257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611f15565b604051808381526020018281526020019250505060405180910390f35b610ac960048036036020811015610a9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612129565b005b610af760048036036020811015610ae157600080fd5b81019080803590602001909291905050506121af565b6040518082815260200191505060405180910390f35b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310610b865780518252602082019150602081019050602083039250610b63565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610be6576040519150601f19603f3d011682016040523d82523d6000602084013e610beb565b606091505b50809350819250505080610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612927603d913960400191505060405180910390fd5b610c558260006122f8565b92505050919050565b600060149054906101000a900460ff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610cfa5780518252602082019150602081019050602083039250610cd7565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610d4b5780518252602082019150602081019050602083039250610d28565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610db45780518252602082019150602081019050602083039250610d91565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610e14576040519150601f19603f3d011682016040523d82523d6000602084013e610e19565b606091505b505080915050809150509392505050565b6000610e3d82610e38611bb3565b61230f565b9050919050565b60006060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b60208310610e995780518252602082019150602081019050602083039250610e76565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610f005780518252602082019150602081019050602083039250610edd565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610f60576040519150601f19603f3d011682016040523d82523d6000602084013e610f65565b606091505b50809350819250505080610fc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806128ef6038913960400191505060405180910390fd5b610fcf826000612357565b92505050919050565b6000610fe26123f8565b9050600081141561103e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612a7a6027913960400191505060405180910390fd5b90565b60008060008060016003600080839350829250819150809050935093509350935090919293565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106110e157805182526020820191506020810190506020830392506110be565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611141576040519150601f19603f3d011682016040523d82523d6000602084013e611146565b606091505b508093508192505050806111a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806129996036913960400191505060405180910390fd5b6111b08260006122f8565b9250505092915050565b60068060000154908060010154908060020154905083565b60006060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106112275780518252602082019150602081019050602083039250611204565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831061128e578051825260208201915060208101905060208303925061126b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146112ee576040519150601f19603f3d011682016040523d82523d6000602084013e6112f3565b606091505b50809350819250505080611352576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612b2c6023913960400191505060405180910390fd5b61135d826000612357565b92505050919050565b61136e611886565b6113e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006114aa43611cef565b905090565b60045481565b60055481565b600060149054906101000a900460ff161561153e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061156233612426565b61156b82611a3d565b61157483611af8565b61157d81611d3a565b505050565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106115f357805182526020820191506020810190506020830392506115d0565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611653576040519150601f19603f3d011682016040523d82523d6000602084013e611658565b606091505b508093508192505050806116b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806129646035913960400191505060405180910390fd5b6116c28260006122f8565b9250505090565b60006060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b6020831061171e57805182526020820191506020810190506020830392506116fb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106117855780518252602082019150602081019050602083039250611762565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146117e5576040519150601f19603f3d011682016040523d82523d6000602084013e6117ea565b606091505b50809350819250505080611849576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612acd6031913960400191505060405180910390fd5b6118548260006122f8565b92505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118c861256a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60006118ef43610e2a565b905090565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106119655780518252602082019150602081019050602083039250611942565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146119c5576040519150601f19603f3d011682016040523d82523d6000602084013e6119ca565b606091505b50809350819250505080611a29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061289b602e913960400191505060405180910390fd5b611a348260006122f8565b92505050919050565b611a45611886565b611ab7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806004819055507f55311ae9c14427b0863f38ed97a2a5944c50d824bbf692836246512e6822c3cf816040518082815260200191505060405180910390a150565b611b00611886565b611b72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806005819055507fba9c6f28c7d9990745a5b5282dbee04706c28cae24a44736c3ba99b57c021f3e816040518082815260200191505060405180910390a150565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b60208310611c195780518252602082019150602081019050602083039250611bf6565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611c79576040519150601f19603f3d011682016040523d82523d6000602084013e611c7e565b606091505b50809350819250505080611cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612a556025913960400191505060405180910390fd5b611ce88260006122f8565b9250505090565b6000611d336003611d256002611d176002611d09886118f4565b61257290919063ffffffff16565b6125f890919063ffffffff16565b61268090919063ffffffff16565b9050919050565b611d42611886565b611db4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60038110158015611dc757506102d08111155b611e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612afe602e913960400191505060405180910390fd5b611e376002611e29611bb3565b6126ca90919063ffffffff16565b811115611e8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e8152602001806129cf603e913960400191505060405180910390fd5b611e976123f8565b600660000181905550611ebb6001611ead6118e4565b6125f890919063ffffffff16565b600660020181905550806006600101819055507f484a24d7faca8c4330aaf9ba5f131e6bd474ed6877a555511f39d16a1d71d15a81600660020154604051808381526020018281526020019250505060405180910390a150565b60008060008714158015611f2a575060008514155b611f9c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b602083106120365780518252602082019150602081019050602083039250612013565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612096576040519150601f19603f3d011682016040523d82523d6000602084013e61209b565b606091505b508092508193505050816120fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612a2e6027913960400191505060405180910390fd5b6121058160006122f8565b93506121128160206122f8565b925083839550955050505050965096945050505050565b612131611886565b6121a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6121ac81612426565b50565b60006060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061222057805182526020820191506020810190506020830392506121fd565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612280576040519150601f19603f3d011682016040523d82523d6000602084013e612285565b606091505b508093508192505050806122e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612aa1602c913960400191505060405180910390fd5b6122ef826000612357565b92505050919050565b60006123048383612357565b60001c905092915050565b60008082848161231b57fe5b049050600083858161232957fe5b0614156123395780915050612351565b61234d6001826125f890919063ffffffff16565b9150505b92915050565b600061236d6020836125f890919063ffffffff16565b835110156123e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b60006006600201546124086118e4565b1061241a576006600101549050612423565b60066000015490505b90565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806128c96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008083141561258557600090506125f2565b600082840290508284828161259657fe5b04146125ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612a0d6021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006126c283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612714565b905092915050565b600061270c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127da565b905092915050565b600080831182906127c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561278557808201518184015260208101905061276a565b50505050905090810190601f1680156127b25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816127cc57fe5b049050809150509392505050565b6000838311158290612887576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561284c578082015181840152602081019050612831565b50505050905090810190601f1680156128795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c654f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65557074696d654c6f6f6b6261636b57696e646f77206d75737420626520736d616c6c6572206f7220657175616c20746f2065706f636853697a65202d2032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c65557074696d654c6f6f6b6261636b57696e646f77206973206e6f7420696e697469616c697a65646572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c65557074696d654c6f6f6b6261636b57696e646f77206d7573742062652077697468696e20736166652072616e67656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c65a265627a7a72315820cab411de6d85bb9995582e844e4f1ac1dc05007bb28c0463815c6b65b3b804ee64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c806380d8591111610104578063a69257f3116100a2578063e94fd10911610071578063e94fd109146109de578063ec68307214610a0c578063f2fde38b14610a87578063fae8db0a14610acb576101cf565b8063a69257f314610922578063cb0ec62814610950578063df4da4611461097e578063e50e652d1461099c576101cf565b80638da5cb5b116100de5780638da5cb5b146108565780638f32d59b146108a05780639a7b3be7146108c25780639b2b592f146108e0576101cf565b806380d859111461072757806387ee8a0f146107695780638a88362614610787576101cf565b80635d180adb11610171578063715018a61161014b578063715018a6146106c35780637385e5da146106cd5780637877a797146106eb578063808474f114610709576101cf565b80635d180adb1461055057806361568828146105c857806367960e91146105f4576101cf565b80633b1eb4bf116101ad5780633b1eb4bf146103ee5780634b2c2f441461043057806352bed4d7146104ff57806354255be01461051d576101cf565b8063123633ea146101d4578063158ef93e1461024257806323f0ab6514610264575b600080fd5b610200600480360360208110156101ea57600080fd5b8101908080359060200190929190505050610b0d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61024a610c5e565b604051808215151515815260200191505060405180910390f35b6103d46004803603606081101561027a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156102b757600080fd5b8201836020820111156102c957600080fd5b803590602001918460018302840111640100000000831117156102eb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561034e57600080fd5b82018360208201111561036057600080fd5b8035906020019184600183028401116401000000008311171561038257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c71565b604051808215151515815260200191505060405180910390f35b61041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050610e2a565b6040518082815260200191505060405180910390f35b6104e96004803603602081101561044657600080fd5b810190808035906020019064010000000081111561046357600080fd5b82018360208201111561047557600080fd5b8035906020019184600183028401116401000000008311171561049757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e44565b6040518082815260200191505060405180910390f35b610507610fd8565b6040518082815260200191505060405180910390f35b610525611041565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6105866004803603604081101561056657600080fd5b810190808035906020019092919080359060200190929190505050611068565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105d06111ba565b60405180848152602001838152602001828152602001935050505060405180910390f35b6106ad6004803603602081101561060a57600080fd5b810190808035906020019064010000000081111561062757600080fd5b82018360208201111561063957600080fd5b8035906020019184600183028401116401000000008311171561065b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506111d2565b6040518082815260200191505060405180910390f35b6106cb611366565b005b6106d561149f565b6040518082815260200191505060405180910390f35b6106f36114af565b6040518082815260200191505060405180910390f35b6107116114b5565b6040518082815260200191505060405180910390f35b6107676004803603606081101561073d57600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506114bb565b005b610771611582565b6040518082815260200191505060405180910390f35b6108406004803603602081101561079d57600080fd5b81019080803590602001906401000000008111156107ba57600080fd5b8201836020820111156107cc57600080fd5b803590602001918460018302840111640100000000831117156107ee57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116c9565b6040518082815260200191505060405180910390f35b61085e61185d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108a8611886565b604051808215151515815260200191505060405180910390f35b6108ca6118e4565b6040518082815260200191505060405180910390f35b61090c600480360360208110156108f657600080fd5b81019080803590602001909291905050506118f4565b6040518082815260200191505060405180910390f35b61094e6004803603602081101561093857600080fd5b8101908080359060200190929190505050611a3d565b005b61097c6004803603602081101561096657600080fd5b8101908080359060200190929190505050611af8565b005b610986611bb3565b6040518082815260200191505060405180910390f35b6109c8600480360360208110156109b257600080fd5b8101908080359060200190929190505050611cef565b6040518082815260200191505060405180910390f35b610a0a600480360360208110156109f457600080fd5b8101908080359060200190929190505050611d3a565b005b610a6a600480360360c0811015610a2257600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611f15565b604051808381526020018281526020019250505060405180910390f35b610ac960048036036020811015610a9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612129565b005b610af760048036036020811015610ae157600080fd5b81019080803590602001909291905050506121af565b6040518082815260200191505060405180910390f35b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310610b865780518252602082019150602081019050602083039250610b63565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610be6576040519150601f19603f3d011682016040523d82523d6000602084013e610beb565b606091505b50809350819250505080610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612927603d913960400191505060405180910390fd5b610c558260006122f8565b92505050919050565b600060149054906101000a900460ff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610cfa5780518252602082019150602081019050602083039250610cd7565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610d4b5780518252602082019150602081019050602083039250610d28565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610db45780518252602082019150602081019050602083039250610d91565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610e14576040519150601f19603f3d011682016040523d82523d6000602084013e610e19565b606091505b505080915050809150509392505050565b6000610e3d82610e38611bb3565b61230f565b9050919050565b60006060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b60208310610e995780518252602082019150602081019050602083039250610e76565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310610f005780518252602082019150602081019050602083039250610edd565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610f60576040519150601f19603f3d011682016040523d82523d6000602084013e610f65565b606091505b50809350819250505080610fc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806128ef6038913960400191505060405180910390fd5b610fcf826000612357565b92505050919050565b6000610fe26123f8565b9050600081141561103e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612a7a6027913960400191505060405180910390fd5b90565b60008060008060016003600080839350829250819150809050935093509350935090919293565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106110e157805182526020820191506020810190506020830392506110be565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611141576040519150601f19603f3d011682016040523d82523d6000602084013e611146565b606091505b508093508192505050806111a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806129996036913960400191505060405180910390fd5b6111b08260006122f8565b9250505092915050565b60068060000154908060010154908060020154905083565b60006060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106112275780518252602082019150602081019050602083039250611204565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831061128e578051825260208201915060208101905060208303925061126b565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146112ee576040519150601f19603f3d011682016040523d82523d6000602084013e6112f3565b606091505b50809350819250505080611352576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180612b2c6023913960400191505060405180910390fd5b61135d826000612357565b92505050919050565b61136e611886565b6113e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006114aa43611cef565b905090565b60045481565b60055481565b600060149054906101000a900460ff161561153e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff02191690831515021790555061156233612426565b61156b82611a3d565b61157483611af8565b61157d81611d3a565b505050565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106115f357805182526020820191506020810190506020830392506115d0565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611653576040519150601f19603f3d011682016040523d82523d6000602084013e611658565b606091505b508093508192505050806116b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806129646035913960400191505060405180910390fd5b6116c28260006122f8565b9250505090565b60006060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b6020831061171e57805182526020820191506020810190506020830392506116fb565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106117855780518252602082019150602081019050602083039250611762565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146117e5576040519150601f19603f3d011682016040523d82523d6000602084013e6117ea565b606091505b50809350819250505080611849576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612acd6031913960400191505060405180910390fd5b6118548260006122f8565b92505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118c861256a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60006118ef43610e2a565b905090565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106119655780518252602082019150602081019050602083039250611942565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146119c5576040519150601f19603f3d011682016040523d82523d6000602084013e6119ca565b606091505b50809350819250505080611a29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061289b602e913960400191505060405180910390fd5b611a348260006122f8565b92505050919050565b611a45611886565b611ab7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806004819055507f55311ae9c14427b0863f38ed97a2a5944c50d824bbf692836246512e6822c3cf816040518082815260200191505060405180910390a150565b611b00611886565b611b72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806005819055507fba9c6f28c7d9990745a5b5282dbee04706c28cae24a44736c3ba99b57c021f3e816040518082815260200191505060405180910390a150565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b60208310611c195780518252602082019150602081019050602083039250611bf6565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611c79576040519150601f19603f3d011682016040523d82523d6000602084013e611c7e565b606091505b50809350819250505080611cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180612a556025913960400191505060405180910390fd5b611ce88260006122f8565b9250505090565b6000611d336003611d256002611d176002611d09886118f4565b61257290919063ffffffff16565b6125f890919063ffffffff16565b61268090919063ffffffff16565b9050919050565b611d42611886565b611db4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60038110158015611dc757506102d08111155b611e1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612afe602e913960400191505060405180910390fd5b611e376002611e29611bb3565b6126ca90919063ffffffff16565b811115611e8f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e8152602001806129cf603e913960400191505060405180910390fd5b611e976123f8565b600660000181905550611ebb6001611ead6118e4565b6125f890919063ffffffff16565b600660020181905550806006600101819055507f484a24d7faca8c4330aaf9ba5f131e6bd474ed6877a555511f39d16a1d71d15a81600660020154604051808381526020018281526020019250505060405180910390a150565b60008060008714158015611f2a575060008514155b611f9c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b602083106120365780518252602082019150602081019050602083039250612013565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612096576040519150601f19603f3d011682016040523d82523d6000602084013e61209b565b606091505b508092508193505050816120fa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612a2e6027913960400191505060405180910390fd5b6121058160006122f8565b93506121128160206122f8565b925083839550955050505050965096945050505050565b612131611886565b6121a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6121ac81612426565b50565b60006060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061222057805182526020820191506020810190506020830392506121fd565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612280576040519150601f19603f3d011682016040523d82523d6000602084013e612285565b606091505b508093508192505050806122e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612aa1602c913960400191505060405180910390fd5b6122ef826000612357565b92505050919050565b60006123048383612357565b60001c905092915050565b60008082848161231b57fe5b049050600083858161232957fe5b0614156123395780915050612351565b61234d6001826125f890919063ffffffff16565b9150505b92915050565b600061236d6020836125f890919063ffffffff16565b835110156123e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b60006006600201546124086118e4565b1061241a576006600101549050612423565b60066000015490505b90565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806128c96026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008083141561258557600090506125f2565b600082840290508284828161259657fe5b04146125ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612a0d6021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006126c283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612714565b905092915050565b600061270c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506127da565b905092915050565b600080831182906127c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561278557808201518184015260208101905061276a565b50505050905090810190601f1680156127b25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816127cc57fe5b049050809150509392505050565b6000838311158290612887576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561284c578082015181840152602081019050612831565b50505050905090810190601f1680156128795780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe6572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c654f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65557074696d654c6f6f6b6261636b57696e646f77206d75737420626520736d616c6c6572206f7220657175616c20746f2065706f636853697a65202d2032536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c65557074696d654c6f6f6b6261636b57696e646f77206973206e6f7420696e697469616c697a65646572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c65557074696d654c6f6f6b6261636b57696e646f77206d7573742062652077697468696e20736166652072616e67656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c65a265627a7a72315820cab411de6d85bb9995582e844e4f1ac1dc05007bb28c0463815c6b65b3b804ee64736f6c634300050d0032",
  "sourceMap": "322:3968:87:-;;;1337:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;1337:52:87;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1337:52:87;;;;;;;;;;;;;;;;1381:4;698:17:4;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;185:17:24;180:57;;226:4;212:11;;:18;;;;;;;;;;;;;;;;;;180:57;131:110;1337:52:87;322:3968;;788:96:0;833:15;867:10;860:17;;788:96;:::o;322:3968:87:-;;;;;;;",
  "deployedSourceMap": "322:3968:87:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;322:3968:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3810:367:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3810:367:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;103:23:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6346:266:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6346:266:35;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6346:266:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6346:266:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6346:266:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6346:266:35;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6346:266:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6346:266:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6346:266:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6346:266:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2608:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2608:147:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8496:343;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8496:343:35;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8496:343:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8496:343:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8496:343:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8496:343:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3741:211:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2288:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4481:378:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4481:378:35;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;966:42:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7188:288:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7188:288:35;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7188:288:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7188:288:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7188:288:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7188:288:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:4;;;:::i;:::-;;10031:112:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;878:28:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;910:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1694:317;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1694:317:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5037:326:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6741:329;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6741:329:35;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6741:329:35;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6741:329:35;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6741:329:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6741:329:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;899:77:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2856:109:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5579:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5579:321:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2502:133:87;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2502:133:87;;;;;;;;;;;;;;;;;:::i;:::-;;2775:190;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2775:190:87;;;;;;;;;;;;;;;;;:::i;:::-;;2178:266:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9752:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9752:147:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3058:621:87;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3058:621:87;;;;;;;;;;;;;;;;;:::i;:::-;;1297:763:35;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1297:763:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1970:107:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;7767:322:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7767:322:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3810:367;3892:7;3907:16;3929:12;409:8;3964:24;;4006:5;4021:12;3989:46;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3989:46:35;;;3964:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3964:72:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3947:89:35;;;;;;;;4050:7;4042:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4144:27;4164:3;4169:1;4144:19;:27::i;:::-;4129:43;;;;3810:367;;;:::o;103:23:24:-;;;;;;;;;;;;;:::o;6346:266:35:-;6469:4;6483:12;355:8;6515:30;;6563:6;6571;6579;6546:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6546:40:35;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6546:40:35;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6546:40:35;;;6515:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6515:72:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6501:86:35;;;;;6600:7;6593:14;;;6346:266;;;;;:::o;2608:147::-;2681:7;2703:47;2722:11;2735:14;:12;:14::i;:::-;2703:18;:47::i;:::-;2696:54;;2608:147;;;:::o;8496:343::-;8579:7;8594:16;8616:12;764:9;8651:35;;8704:6;8687:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8687:24:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8687:24:35;;;8651:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8651:61:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8634:78:35;;;;;;;;8726:7;8718:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8807:27;8827:3;8832:1;8807:19;:27::i;:::-;8800:34;;;;8496:343;;;:::o;3741:211:87:-;3797:22;3844:26;:24;:26::i;:::-;3827:43;;3902:1;3884:14;:19;;3876:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3741:211;:::o;2288:117::-;2339:7;2348;2357;2366;2389:1;2392;2395;2398;2381:19;;;;;;;;;;;;;;;;;;;;2288:117;;;;:::o;4481:378:35:-;4589:7;4606:16;4628:12;409:8;4663:24;;4705:5;4712:11;4688:36;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4688:36:35;;;4663:62;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4663:62:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4646:79:35;;;;;;;;4739:7;4731:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4826:27;4846:3;4851:1;4826:19;:27::i;:::-;4811:43;;;;4481:378;;;;:::o;966:42:87:-;;;;;;;;;;;;;;;;;;;:::o;7188:288:35:-;7250:7;7265:16;7287:12;635:8;7322:22;;7362:6;7345:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7345:24:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7345:24:35;;;7322:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7322:48:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7305:65:35;;;;;;;;7384:7;7376:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7444:27;7464:3;7469:1;7444:19;:27::i;:::-;7437:34;;;;7188:288;;;:::o;1684:137:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;10031:112:35:-;10089:7;10111:27;10125:12;10111:13;:27::i;:::-;10104:34;;10031:112;:::o;878:28:87:-;;;;:::o;910:52::-;;;;:::o;1694:317::-;283:11:24;;;;;;;;;;;282:12;274:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:4;333:11;;:18;;;;;;;;;;;;;;;;;;1827:30:87;1846:10;1827:18;:30::i;:::-;1863:26;1880:8;1863:16;:26::i;:::-;1895:66;1936:24;1895:40;:66::i;:::-;1967:39;1991:14;1967:23;:39::i;:::-;1694:317;;;:::o;5037:326:35:-;5098:7;5113:16;5135:12;467:8;5170:28;;5224:12;5199:39;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5199:39:35;;;5170:69;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5170:69:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5153:86:35;;;;;;;;5253:7;5245:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5331:27;5351:3;5356:1;5331:19;:27::i;:::-;5324:34;;;;5037:326;:::o;6741:329::-;6817:7;6832:16;6854:12;583:8;6889:35;;6942:6;6925:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6925:24:35;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6925:24:35;;;6889:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6889:61:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6872:78:35;;;;;;;;6964:7;6956:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7038:27;7058:3;7063:1;7038:19;:27::i;:::-;7031:34;;;;6741:329;;;:::o;899:77:4:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;2856:109:35:-;2903:7;2925:35;2947:12;2925:21;:35::i;:::-;2918:42;;2856:109;:::o;5579:321::-;5652:7;5667:16;5689:12;467:8;5724:28;;5770:11;5753:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5753:29:35;;;5724:59;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5724:59:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5707:76:35;;;;;;;;5797:7;5789:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5868:27;5888:3;5893:1;5868:19;:27::i;:::-;5861:34;;;;5579:321;;;:::o;2502:133:87:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2585:8:87;2569:13;:24;;;;2604:26;2621:8;2604:26;;;;;;;;;;;;;;;;;;2502:133;:::o;2775:190::-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2901:3:87;2861:37;:43;;;;2915:45;2956:3;2915:45;;;;;;;;;;;;;;;;;;2775:190;:::o;2178:266:35:-;2223:7;2238:16;2260:12;518:8;2295:21;;2317:18;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2317:18:35;;;2295:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2295:41:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2278:58:35;;;;;;;;2350:7;2342:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2412:27;2432:3;2437:1;2412:19;:27::i;:::-;2405:34;;;;2178:266;:::o;9752:147::-;9817:7;9839:55;9892:1;9839:48;9885:1;9839:41;9878:1;9839:34;9861:11;9839:21;:34::i;:::-;:38;;:41;;;;:::i;:::-;:45;;:48;;;;:::i;:::-;:52;;:55;;;;:::i;:::-;9832:62;;9752:147;;;:::o;3058:621:87:-;1103:9:4;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3148:1:87;3138:6;:11;;:28;;;;;3163:3;3153:6;:13;;3138:28;3130:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3248:21;3267:1;3248:14;:12;:14::i;:::-;:18;;:21;;;;:::i;:::-;3238:6;:31;;3223:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3386:26;:24;:26::i;:::-;3354:20;:29;;:58;;;;3516:23;3537:1;3516:16;:14;:16::i;:::-;:20;;:23;;;;:::i;:::-;3468:20;:45;;:71;;;;3578:6;3545:20;:30;;:39;;;;3596:78;3620:6;3628:20;:45;;;3596:78;;;;;;;;;;;;;;;;;;;;;;;;3058:621;:::o;1297:763:35:-;1491:7;1500;1539:1;1523:12;:17;;:38;;;;;1560:1;1544:12;:17;;1523:38;1515:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1593:23;1622:25;1653:12;1671:16;295:8;1710:23;;1758:10;1770:12;1784:10;1796:12;1810:8;1820:9;1741:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1741:89:35;;;1710:126;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1710:126:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1693:143:35;;;;;;;;1850:7;1842:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:27;1945:3;1950:1;1925:19;:27::i;:::-;1907:45;;1978:28;1998:3;2003:2;1978:19;:28::i;:::-;1958:48;;2020:15;2037:17;2012:43;;;;;;;;1297:763;;;;;;;;;:::o;1970:107:4:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;7767:322:35:-;7838:7;7853:16;7875:12;698:9;7910:33;;7961:11;7944:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7944:29:35;;;7910:64;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7910:64:35;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7893:81:35;;;;;;;;7988:7;7980:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8057:27;8077:3;8082:1;8057:19;:27::i;:::-;8050:34;;;;7767:322;;;:::o;8999:150::-;9083:7;9113:30;9133:2;9137:5;9113:19;:30::i;:::-;9105:39;;9098:46;;8999:150;;;;:::o;3177:379::-;3280:7;3388:19;3424:9;3410:11;:23;;;;;;3388:45;;3470:1;3457:9;3443:11;:23;;;;;;:28;3439:113;;;3488:11;3481:18;;;;;3439:113;3527:18;3543:1;3527:11;:15;;:18;;;;:::i;:::-;3520:25;;;3177:379;;;;;:::o;9309:255::-;9393:7;9429:13;9439:2;9429:5;:9;;:13;;;;:::i;:::-;9416:2;:9;:26;;9408:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9473:9;9535:2;9528:5;9524:14;9520:2;9516:23;9510:30;9505:35;;9558:1;9551:8;;;9309:255;;;;:::o;4014:273:87:-;4073:22;4127:20;:45;;;4107:16;:14;:16::i;:::-;:65;4103:180;;4189:20;:30;;;4182:37;;;;4103:180;4247:20;:29;;;4240:36;;4014:273;;:::o;2178:225:4:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;2159:459:3:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3718:338::-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"../common/Initializable.sol\";\nimport \"../common/UsingPrecompiles.sol\";\n\n/**\n * @title Contract for storing blockchain parameters that can be set by governance.\n */\ncontract BlockchainParameters is Ownable, Initializable, UsingPrecompiles {\n  using SafeMath for uint256;\n\n  // obsolete\n  struct ClientVersion {\n    uint256 major;\n    uint256 minor;\n    uint256 patch;\n  }\n\n  struct LookbackWindow {\n    // Value for lookbackWindow before `nextValueActivationBlock`\n    uint256 oldValue;\n    // Value for lookbackWindow after `nextValueActivationBlock`\n    uint256 nextValue;\n    // Epoch where next value is activated\n    uint256 nextValueActivationEpoch;\n  }\n\n  ClientVersion private minimumClientVersion; // obsolete\n  uint256 public blockGasLimit;\n  uint256 public intrinsicGasForAlternativeFeeCurrency;\n  LookbackWindow public uptimeLookbackWindow;\n\n  event IntrinsicGasForAlternativeFeeCurrencySet(uint256 gas);\n  event BlockGasLimitSet(uint256 limit);\n  event UptimeLookbackWindowSet(uint256 window, uint256 activationEpoch);\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param _gasForNonGoldCurrencies Intrinsic gas for non-gold gas currencies.\n   * @param gasLimit Block gas limit.\n   * @param lookbackWindow Lookback window for measuring validator uptime.\n   */\n  function initialize(uint256 _gasForNonGoldCurrencies, uint256 gasLimit, uint256 lookbackWindow)\n    external\n    initializer\n  {\n    _transferOwnership(msg.sender);\n    setBlockGasLimit(gasLimit);\n    setIntrinsicGasForAlternativeFeeCurrency(_gasForNonGoldCurrencies);\n    setUptimeLookbackWindow(lookbackWindow);\n  }\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return Storage version of the contract.\n   * @return Major version of the contract.\n   * @return Minor version of the contract.\n   * @return Patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 3, 0, 0);\n  }\n\n  /**\n   * @notice Sets the block gas limit.\n   * @param gasLimit New block gas limit.\n   */\n  function setBlockGasLimit(uint256 gasLimit) public onlyOwner {\n    blockGasLimit = gasLimit;\n    emit BlockGasLimitSet(gasLimit);\n  }\n\n  /**\n   * @notice Sets the intrinsic gas for non-gold gas currencies.\n   * @param gas Intrinsic gas for non-gold gas currencies.\n   */\n  function setIntrinsicGasForAlternativeFeeCurrency(uint256 gas) public onlyOwner {\n    intrinsicGasForAlternativeFeeCurrency = gas;\n    emit IntrinsicGasForAlternativeFeeCurrencySet(gas);\n  }\n\n  /**\n   * @notice Sets the uptime lookback window.\n   * @param window New window.\n   */\n  function setUptimeLookbackWindow(uint256 window) public onlyOwner {\n    require(window >= 3 && window <= 720, \"UptimeLookbackWindow must be within safe range\");\n    require(\n      window <= getEpochSize().sub(2),\n      \"UptimeLookbackWindow must be smaller or equal to epochSize - 2\"\n    );\n\n    uptimeLookbackWindow.oldValue = _getUptimeLookbackWindow();\n\n    // changes only take place on the next epoch\n    uptimeLookbackWindow.nextValueActivationEpoch = getEpochNumber().add(1);\n    uptimeLookbackWindow.nextValue = window;\n\n    emit UptimeLookbackWindowSet(window, uptimeLookbackWindow.nextValueActivationEpoch);\n  }\n\n  /**\n   * @notice Gets the uptime lookback window.\n   */\n  function getUptimeLookbackWindow() public view returns (uint256 lookbackWindow) {\n    lookbackWindow = _getUptimeLookbackWindow();\n    require(lookbackWindow != 0, \"UptimeLookbackWindow is not initialized\");\n  }\n\n  /**\n   * @notice Gets the uptime lookback window.\n   */\n  function _getUptimeLookbackWindow() internal view returns (uint256 lookbackWindow) {\n    if (getEpochNumber() >= uptimeLookbackWindow.nextValueActivationEpoch) {\n      return uptimeLookbackWindow.nextValue;\n    } else {\n      return uptimeLookbackWindow.oldValue;\n    }\n  }\n\n}\n",
  "ast": {
    "absolutePath": "project:/contracts/governance/BlockchainParameters.sol",
    "exportedSymbols": {
      "BlockchainParameters": [
        25142
      ]
    },
    "id": 25143,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24907,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:87"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 24908,
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 364,
        "src": "26:59:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 24909,
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 482,
        "src": "86:63:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 24910,
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 7599,
        "src": "150:37:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/common/UsingPrecompiles.sol",
        "file": "../common/UsingPrecompiles.sol",
        "id": 24911,
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 11462,
        "src": "188:40:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24912,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 481,
              "src": "355:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$481",
                "typeString": "contract Ownable"
              }
            },
            "id": 24913,
            "nodeType": "InheritanceSpecifier",
            "src": "355:7:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24914,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7598,
              "src": "364:13:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$7598",
                "typeString": "contract Initializable"
              }
            },
            "id": 24915,
            "nodeType": "InheritanceSpecifier",
            "src": "364:13:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24916,
              "name": "UsingPrecompiles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11461,
              "src": "379:16:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingPrecompiles_$11461",
                "typeString": "contract UsingPrecompiles"
              }
            },
            "id": 24917,
            "nodeType": "InheritanceSpecifier",
            "src": "379:16:87"
          }
        ],
        "contractDependencies": [
          26,
          481,
          7598,
          11461
        ],
        "contractKind": "contract",
        "documentation": "@title Contract for storing blockchain parameters that can be set by governance.",
        "fullyImplemented": true,
        "id": 25142,
        "linearizedBaseContracts": [
          25142,
          11461,
          7598,
          481,
          26
        ],
        "name": "BlockchainParameters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24920,
            "libraryName": {
              "contractScope": null,
              "id": 24918,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 363,
              "src": "406:8:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$363",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "400:27:87",
            "typeName": {
              "id": 24919,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "BlockchainParameters.ClientVersion",
            "id": 24927,
            "members": [
              {
                "constant": false,
                "id": 24922,
                "name": "major",
                "nodeType": "VariableDeclaration",
                "scope": 24927,
                "src": "472:13:87",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24921,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "472:7:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24924,
                "name": "minor",
                "nodeType": "VariableDeclaration",
                "scope": 24927,
                "src": "491:13:87",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24923,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "491:7:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24926,
                "name": "patch",
                "nodeType": "VariableDeclaration",
                "scope": 24927,
                "src": "510:13:87",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24925,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "510:7:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ClientVersion",
            "nodeType": "StructDefinition",
            "scope": 25142,
            "src": "445:83:87",
            "visibility": "public"
          },
          {
            "canonicalName": "BlockchainParameters.LookbackWindow",
            "id": 24934,
            "members": [
              {
                "constant": false,
                "id": 24929,
                "name": "oldValue",
                "nodeType": "VariableDeclaration",
                "scope": 24934,
                "src": "626:16:87",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24928,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "626:7:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24931,
                "name": "nextValue",
                "nodeType": "VariableDeclaration",
                "scope": 24934,
                "src": "713:17:87",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24930,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "713:7:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24933,
                "name": "nextValueActivationEpoch",
                "nodeType": "VariableDeclaration",
                "scope": 24934,
                "src": "779:32:87",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24932,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "779:7:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "LookbackWindow",
            "nodeType": "StructDefinition",
            "scope": 25142,
            "src": "532:284:87",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24936,
            "name": "minimumClientVersion",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "820:42:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ClientVersion_$24927_storage",
              "typeString": "struct BlockchainParameters.ClientVersion"
            },
            "typeName": {
              "contractScope": null,
              "id": 24935,
              "name": "ClientVersion",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24927,
              "src": "820:13:87",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ClientVersion_$24927_storage_ptr",
                "typeString": "struct BlockchainParameters.ClientVersion"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24938,
            "name": "blockGasLimit",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "878:28:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24937,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "878:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24940,
            "name": "intrinsicGasForAlternativeFeeCurrency",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "910:52:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24939,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "910:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24942,
            "name": "uptimeLookbackWindow",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "966:42:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
              "typeString": "struct BlockchainParameters.LookbackWindow"
            },
            "typeName": {
              "contractScope": null,
              "id": 24941,
              "name": "LookbackWindow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24934,
              "src": "966:14:87",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage_ptr",
                "typeString": "struct BlockchainParameters.LookbackWindow"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24946,
            "name": "IntrinsicGasForAlternativeFeeCurrencySet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24944,
                  "indexed": false,
                  "name": "gas",
                  "nodeType": "VariableDeclaration",
                  "scope": 24946,
                  "src": "1060:11:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1059:13:87"
            },
            "src": "1013:60:87"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24950,
            "name": "BlockGasLimitSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24948,
                  "indexed": false,
                  "name": "limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 24950,
                  "src": "1099:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1098:15:87"
            },
            "src": "1076:38:87"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24956,
            "name": "UptimeLookbackWindowSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24952,
                  "indexed": false,
                  "name": "window",
                  "nodeType": "VariableDeclaration",
                  "scope": 24956,
                  "src": "1147:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24954,
                  "indexed": false,
                  "name": "activationEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 24956,
                  "src": "1163:23:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1146:41:87"
            },
            "src": "1117:71:87"
          },
          {
            "body": {
              "id": 24964,
              "nodeType": "Block",
              "src": "1387:2:87",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 24965,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24961,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24958,
                    "src": "1381:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 24962,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24960,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7598,
                  "src": "1367:13:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$7598_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1367:19:87"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24958,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 24965,
                  "src": "1349:9:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24957,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1348:11:87"
            },
            "returnParameters": {
              "id": 24963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1387:0:87"
            },
            "scope": 25142,
            "src": "1337:52:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24993,
              "nodeType": "Block",
              "src": "1821:190:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24977,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59216,
                          "src": "1846:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1846:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24976,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1827:18:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 24979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:30:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24980,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:30:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24982,
                        "name": "gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24969,
                        "src": "1880:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24981,
                      "name": "setBlockGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25028,
                      "src": "1863:16:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:26:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24984,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:26:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24986,
                        "name": "_gasForNonGoldCurrencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24967,
                        "src": "1936:24:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24985,
                      "name": "setIntrinsicGasForAlternativeFeeCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25044,
                      "src": "1895:40:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1895:66:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24988,
                  "nodeType": "ExpressionStatement",
                  "src": "1895:66:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24990,
                        "name": "lookbackWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24971,
                        "src": "1991:14:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24989,
                      "name": "setUptimeLookbackWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25103,
                      "src": "1967:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 24991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:39:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24992,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:39:87"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param _gasForNonGoldCurrencies Intrinsic gas for non-gold gas currencies.\n@param gasLimit Block gas limit.\n@param lookbackWindow Lookback window for measuring validator uptime.",
            "id": 24994,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 24974,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24973,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7597,
                  "src": "1807:11:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1807:11:87"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24967,
                  "name": "_gasForNonGoldCurrencies",
                  "nodeType": "VariableDeclaration",
                  "scope": 24994,
                  "src": "1714:32:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24969,
                  "name": "gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 24994,
                  "src": "1748:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1748:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24971,
                  "name": "lookbackWindow",
                  "nodeType": "VariableDeclaration",
                  "scope": 24994,
                  "src": "1766:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1713:76:87"
            },
            "returnParameters": {
              "id": 24975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:87"
            },
            "scope": 25142,
            "src": "1694:317:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25011,
              "nodeType": "Block",
              "src": "2375:30:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 25005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2389:1:87",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 25006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:1:87",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 25007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2395:1:87",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 25008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2398:1:87",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 25009,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2388:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_3_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 3,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 25004,
                  "id": 25010,
                  "nodeType": "Return",
                  "src": "2381:19:87"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
            "id": 25012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2313:2:87"
            },
            "returnParameters": {
              "id": 25004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24997,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25012,
                  "src": "2339:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24999,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25012,
                  "src": "2348:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25001,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25012,
                  "src": "2357:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25003,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 25012,
                  "src": "2366:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2366:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2338:36:87"
            },
            "scope": 25142,
            "src": "2288:117:87",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 25027,
              "nodeType": "Block",
              "src": "2563:72:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25019,
                      "name": "blockGasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24938,
                      "src": "2569:13:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 25020,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25014,
                      "src": "2585:8:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2569:24:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25022,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:24:87"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 25024,
                        "name": "gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25014,
                        "src": "2621:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25023,
                      "name": "BlockGasLimitSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24950,
                      "src": "2604:16:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 25025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2604:26:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25026,
                  "nodeType": "EmitStatement",
                  "src": "2599:31:87"
                }
              ]
            },
            "documentation": "@notice Sets the block gas limit.\n@param gasLimit New block gas limit.",
            "id": 25028,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 25017,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 25016,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "2553:9:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2553:9:87"
              }
            ],
            "name": "setBlockGasLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25014,
                  "name": "gasLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 25028,
                  "src": "2528:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2527:18:87"
            },
            "returnParameters": {
              "id": 25018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2563:0:87"
            },
            "scope": 25142,
            "src": "2502:133:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25043,
              "nodeType": "Block",
              "src": "2855:110:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25035,
                      "name": "intrinsicGasForAlternativeFeeCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24940,
                      "src": "2861:37:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 25036,
                      "name": "gas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25030,
                      "src": "2901:3:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2861:43:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25038,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:43:87"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 25040,
                        "name": "gas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25030,
                        "src": "2956:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25039,
                      "name": "IntrinsicGasForAlternativeFeeCurrencySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24946,
                      "src": "2915:40:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 25041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2915:45:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25042,
                  "nodeType": "EmitStatement",
                  "src": "2910:50:87"
                }
              ]
            },
            "documentation": "@notice Sets the intrinsic gas for non-gold gas currencies.\n@param gas Intrinsic gas for non-gold gas currencies.",
            "id": 25044,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 25033,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 25032,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "2845:9:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2845:9:87"
              }
            ],
            "name": "setIntrinsicGasForAlternativeFeeCurrency",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25030,
                  "name": "gas",
                  "nodeType": "VariableDeclaration",
                  "scope": 25044,
                  "src": "2825:11:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2825:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2824:13:87"
            },
            "returnParameters": {
              "id": 25034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2855:0:87"
            },
            "scope": 25142,
            "src": "2775:190:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25102,
              "nodeType": "Block",
              "src": "3124:555:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 25058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 25052,
                            "name": "window",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25046,
                            "src": "3138:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 25053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3148:1:87",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "3138:11:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 25055,
                            "name": "window",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25046,
                            "src": "3153:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "373230",
                            "id": 25056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3163:3:87",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_720_by_1",
                              "typeString": "int_const 720"
                            },
                            "value": "720"
                          },
                          "src": "3153:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3138:28:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "557074696d654c6f6f6b6261636b57696e646f77206d7573742062652077697468696e20736166652072616e6765",
                        "id": 25059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3168:48:87",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8e80920f94cd3e788f85209b88ef4412fd645e7142db5fb042dd9012bef227e",
                          "typeString": "literal_string \"UptimeLookbackWindow must be within safe range\""
                        },
                        "value": "UptimeLookbackWindow must be within safe range"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8e80920f94cd3e788f85209b88ef4412fd645e7142db5fb042dd9012bef227e",
                          "typeString": "literal_string \"UptimeLookbackWindow must be within safe range\""
                        }
                      ],
                      "id": 25051,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "3130:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3130:87:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25061,
                  "nodeType": "ExpressionStatement",
                  "src": "3130:87:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 25063,
                          "name": "window",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25046,
                          "src": "3238:6:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 25067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3267:1:87",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 25064,
                                "name": "getEpochSize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10998,
                                "src": "3248:12:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 25065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3248:14:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 25066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 219,
                            "src": "3248:18:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 25068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3248:21:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3238:31:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "557074696d654c6f6f6b6261636b57696e646f77206d75737420626520736d616c6c6572206f7220657175616c20746f2065706f636853697a65202d2032",
                        "id": 25070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3277:64:87",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82188fe79f68b78dc5a768eaca6a16d7dcc02164f809beb5e0bbd8c0912067b4",
                          "typeString": "literal_string \"UptimeLookbackWindow must be smaller or equal to epochSize - 2\""
                        },
                        "value": "UptimeLookbackWindow must be smaller or equal to epochSize - 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_82188fe79f68b78dc5a768eaca6a16d7dcc02164f809beb5e0bbd8c0912067b4",
                          "typeString": "literal_string \"UptimeLookbackWindow must be smaller or equal to epochSize - 2\""
                        }
                      ],
                      "id": 25062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "3223:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3223:124:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25072,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:124:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 25073,
                        "name": "uptimeLookbackWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24942,
                        "src": "3354:20:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
                          "typeString": "struct BlockchainParameters.LookbackWindow storage ref"
                        }
                      },
                      "id": 25075,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "oldValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24929,
                      "src": "3354:29:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25076,
                        "name": "_getUptimeLookbackWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25141,
                        "src": "3386:24:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 25077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3386:26:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3354:58:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25079,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:58:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 25080,
                        "name": "uptimeLookbackWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24942,
                        "src": "3468:20:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
                          "typeString": "struct BlockchainParameters.LookbackWindow storage ref"
                        }
                      },
                      "id": 25082,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nextValueActivationEpoch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24933,
                      "src": "3468:45:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 25086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3537:1:87",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 25083,
                            "name": "getEpochNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11023,
                            "src": "3516:14:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 25084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3516:16:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 25085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 203,
                        "src": "3516:20:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 25087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3516:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3468:71:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25089,
                  "nodeType": "ExpressionStatement",
                  "src": "3468:71:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 25090,
                        "name": "uptimeLookbackWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24942,
                        "src": "3545:20:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
                          "typeString": "struct BlockchainParameters.LookbackWindow storage ref"
                        }
                      },
                      "id": 25092,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nextValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24931,
                      "src": "3545:30:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 25093,
                      "name": "window",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25046,
                      "src": "3578:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3545:39:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25095,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:39:87"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 25097,
                        "name": "window",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25046,
                        "src": "3620:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 25098,
                          "name": "uptimeLookbackWindow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24942,
                          "src": "3628:20:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
                            "typeString": "struct BlockchainParameters.LookbackWindow storage ref"
                          }
                        },
                        "id": 25099,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextValueActivationEpoch",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24933,
                        "src": "3628:45:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25096,
                      "name": "UptimeLookbackWindowSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24956,
                      "src": "3596:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:78:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25101,
                  "nodeType": "EmitStatement",
                  "src": "3591:83:87"
                }
              ]
            },
            "documentation": "@notice Sets the uptime lookback window.\n@param window New window.",
            "id": 25103,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 25049,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 25048,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 414,
                  "src": "3114:9:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3114:9:87"
              }
            ],
            "name": "setUptimeLookbackWindow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25046,
                  "name": "window",
                  "nodeType": "VariableDeclaration",
                  "scope": 25103,
                  "src": "3091:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3091:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3090:16:87"
            },
            "returnParameters": {
              "id": 25050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3124:0:87"
            },
            "scope": 25142,
            "src": "3058:621:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25120,
              "nodeType": "Block",
              "src": "3821:131:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 25108,
                      "name": "lookbackWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25106,
                      "src": "3827:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25109,
                        "name": "_getUptimeLookbackWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25141,
                        "src": "3844:24:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 25110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3844:26:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3827:43:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25112,
                  "nodeType": "ExpressionStatement",
                  "src": "3827:43:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 25114,
                          "name": "lookbackWindow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25106,
                          "src": "3884:14:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 25115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3902:1:87",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3884:19:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "557074696d654c6f6f6b6261636b57696e646f77206973206e6f7420696e697469616c697a6564",
                        "id": 25117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3905:41:87",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bdec0df6eb812e91b352e8dde5e3134ff5633d3f4cd2ef0eebc793671d64de25",
                          "typeString": "literal_string \"UptimeLookbackWindow is not initialized\""
                        },
                        "value": "UptimeLookbackWindow is not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bdec0df6eb812e91b352e8dde5e3134ff5633d3f4cd2ef0eebc793671d64de25",
                          "typeString": "literal_string \"UptimeLookbackWindow is not initialized\""
                        }
                      ],
                      "id": 25113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        59219,
                        59220
                      ],
                      "referencedDeclaration": 59220,
                      "src": "3876:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3876:71:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25119,
                  "nodeType": "ExpressionStatement",
                  "src": "3876:71:87"
                }
              ]
            },
            "documentation": "@notice Gets the uptime lookback window.",
            "id": 25121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUptimeLookbackWindow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3773:2:87"
            },
            "returnParameters": {
              "id": 25107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25106,
                  "name": "lookbackWindow",
                  "nodeType": "VariableDeclaration",
                  "scope": 25121,
                  "src": "3797:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3796:24:87"
            },
            "scope": 25142,
            "src": "3741:211:87",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25140,
              "nodeType": "Block",
              "src": "4097:190:87",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25126,
                        "name": "getEpochNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11023,
                        "src": "4107:14:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 25127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4107:16:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 25128,
                        "name": "uptimeLookbackWindow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24942,
                        "src": "4127:20:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
                          "typeString": "struct BlockchainParameters.LookbackWindow storage ref"
                        }
                      },
                      "id": 25129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nextValueActivationEpoch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24933,
                      "src": "4127:45:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4107:65:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 25138,
                    "nodeType": "Block",
                    "src": "4232:51:87",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 25135,
                            "name": "uptimeLookbackWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24942,
                            "src": "4247:20:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
                              "typeString": "struct BlockchainParameters.LookbackWindow storage ref"
                            }
                          },
                          "id": 25136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "oldValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24929,
                          "src": "4247:29:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 25125,
                        "id": 25137,
                        "nodeType": "Return",
                        "src": "4240:36:87"
                      }
                    ]
                  },
                  "id": 25139,
                  "nodeType": "IfStatement",
                  "src": "4103:180:87",
                  "trueBody": {
                    "id": 25134,
                    "nodeType": "Block",
                    "src": "4174:52:87",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 25131,
                            "name": "uptimeLookbackWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24942,
                            "src": "4189:20:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LookbackWindow_$24934_storage",
                              "typeString": "struct BlockchainParameters.LookbackWindow storage ref"
                            }
                          },
                          "id": 25132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nextValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24931,
                          "src": "4189:30:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 25125,
                        "id": 25133,
                        "nodeType": "Return",
                        "src": "4182:37:87"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Gets the uptime lookback window.",
            "id": 25141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getUptimeLookbackWindow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4047:2:87"
            },
            "returnParameters": {
              "id": 25125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25124,
                  "name": "lookbackWindow",
                  "nodeType": "VariableDeclaration",
                  "scope": 25141,
                  "src": "4073:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4072:24:87"
            },
            "scope": 25142,
            "src": "4014:273:87",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 25143,
        "src": "322:3968:87"
      }
    ],
    "src": "0:4291:87"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/governance/BlockchainParameters.sol",
      "exportedSymbols": {
        "BlockchainParameters": [
          25142
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".13"
          ]
        },
        "id": 24907,
        "name": "PragmaDirective",
        "src": "0:24:87"
      },
      {
        "attributes": {
          "SourceUnit": 364,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 25143,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24908,
        "name": "ImportDirective",
        "src": "26:59:87"
      },
      {
        "attributes": {
          "SourceUnit": 482,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 25143,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24909,
        "name": "ImportDirective",
        "src": "86:63:87"
      },
      {
        "attributes": {
          "SourceUnit": 7599,
          "absolutePath": "project:/contracts/common/Initializable.sol",
          "file": "../common/Initializable.sol",
          "scope": 25143,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24910,
        "name": "ImportDirective",
        "src": "150:37:87"
      },
      {
        "attributes": {
          "SourceUnit": 11462,
          "absolutePath": "project:/contracts/common/UsingPrecompiles.sol",
          "file": "../common/UsingPrecompiles.sol",
          "scope": 25143,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 24911,
        "name": "ImportDirective",
        "src": "188:40:87"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            481,
            7598,
            11461
          ],
          "contractKind": "contract",
          "documentation": "@title Contract for storing blockchain parameters that can be set by governance.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            25142,
            11461,
            7598,
            481,
            26
          ],
          "name": "BlockchainParameters",
          "scope": 25143
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 481,
                  "type": "contract Ownable"
                },
                "id": 24912,
                "name": "UserDefinedTypeName",
                "src": "355:7:87"
              }
            ],
            "id": 24913,
            "name": "InheritanceSpecifier",
            "src": "355:7:87"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Initializable",
                  "referencedDeclaration": 7598,
                  "type": "contract Initializable"
                },
                "id": 24914,
                "name": "UserDefinedTypeName",
                "src": "364:13:87"
              }
            ],
            "id": 24915,
            "name": "InheritanceSpecifier",
            "src": "364:13:87"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "UsingPrecompiles",
                  "referencedDeclaration": 11461,
                  "type": "contract UsingPrecompiles"
                },
                "id": 24916,
                "name": "UserDefinedTypeName",
                "src": "379:16:87"
              }
            ],
            "id": 24917,
            "name": "InheritanceSpecifier",
            "src": "379:16:87"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 363,
                  "type": "library SafeMath"
                },
                "id": 24918,
                "name": "UserDefinedTypeName",
                "src": "406:8:87"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 24919,
                "name": "ElementaryTypeName",
                "src": "419:7:87"
              }
            ],
            "id": 24920,
            "name": "UsingForDirective",
            "src": "400:27:87"
          },
          {
            "attributes": {
              "canonicalName": "BlockchainParameters.ClientVersion",
              "name": "ClientVersion",
              "scope": 25142,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "major",
                  "scope": 24927,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 24921,
                    "name": "ElementaryTypeName",
                    "src": "472:7:87"
                  }
                ],
                "id": 24922,
                "name": "VariableDeclaration",
                "src": "472:13:87"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "minor",
                  "scope": 24927,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 24923,
                    "name": "ElementaryTypeName",
                    "src": "491:7:87"
                  }
                ],
                "id": 24924,
                "name": "VariableDeclaration",
                "src": "491:13:87"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "patch",
                  "scope": 24927,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 24925,
                    "name": "ElementaryTypeName",
                    "src": "510:7:87"
                  }
                ],
                "id": 24926,
                "name": "VariableDeclaration",
                "src": "510:13:87"
              }
            ],
            "id": 24927,
            "name": "StructDefinition",
            "src": "445:83:87"
          },
          {
            "attributes": {
              "canonicalName": "BlockchainParameters.LookbackWindow",
              "name": "LookbackWindow",
              "scope": 25142,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "oldValue",
                  "scope": 24934,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 24928,
                    "name": "ElementaryTypeName",
                    "src": "626:7:87"
                  }
                ],
                "id": 24929,
                "name": "VariableDeclaration",
                "src": "626:16:87"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "nextValue",
                  "scope": 24934,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 24930,
                    "name": "ElementaryTypeName",
                    "src": "713:7:87"
                  }
                ],
                "id": 24931,
                "name": "VariableDeclaration",
                "src": "713:17:87"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "nextValueActivationEpoch",
                  "scope": 24934,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 24932,
                    "name": "ElementaryTypeName",
                    "src": "779:7:87"
                  }
                ],
                "id": 24933,
                "name": "VariableDeclaration",
                "src": "779:32:87"
              }
            ],
            "id": 24934,
            "name": "StructDefinition",
            "src": "532:284:87"
          },
          {
            "attributes": {
              "constant": false,
              "name": "minimumClientVersion",
              "scope": 25142,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct BlockchainParameters.ClientVersion",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ClientVersion",
                  "referencedDeclaration": 24927,
                  "type": "struct BlockchainParameters.ClientVersion"
                },
                "id": 24935,
                "name": "UserDefinedTypeName",
                "src": "820:13:87"
              }
            ],
            "id": 24936,
            "name": "VariableDeclaration",
            "src": "820:42:87"
          },
          {
            "attributes": {
              "constant": false,
              "name": "blockGasLimit",
              "scope": 25142,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 24937,
                "name": "ElementaryTypeName",
                "src": "878:7:87"
              }
            ],
            "id": 24938,
            "name": "VariableDeclaration",
            "src": "878:28:87"
          },
          {
            "attributes": {
              "constant": false,
              "name": "intrinsicGasForAlternativeFeeCurrency",
              "scope": 25142,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 24939,
                "name": "ElementaryTypeName",
                "src": "910:7:87"
              }
            ],
            "id": 24940,
            "name": "VariableDeclaration",
            "src": "910:52:87"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uptimeLookbackWindow",
              "scope": 25142,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct BlockchainParameters.LookbackWindow",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "LookbackWindow",
                  "referencedDeclaration": 24934,
                  "type": "struct BlockchainParameters.LookbackWindow"
                },
                "id": 24941,
                "name": "UserDefinedTypeName",
                "src": "966:14:87"
              }
            ],
            "id": 24942,
            "name": "VariableDeclaration",
            "src": "966:42:87"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "IntrinsicGasForAlternativeFeeCurrencySet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "gas",
                      "scope": 24946,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24943,
                        "name": "ElementaryTypeName",
                        "src": "1060:7:87"
                      }
                    ],
                    "id": 24944,
                    "name": "VariableDeclaration",
                    "src": "1060:11:87"
                  }
                ],
                "id": 24945,
                "name": "ParameterList",
                "src": "1059:13:87"
              }
            ],
            "id": 24946,
            "name": "EventDefinition",
            "src": "1013:60:87"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "BlockGasLimitSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "limit",
                      "scope": 24950,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24947,
                        "name": "ElementaryTypeName",
                        "src": "1099:7:87"
                      }
                    ],
                    "id": 24948,
                    "name": "VariableDeclaration",
                    "src": "1099:13:87"
                  }
                ],
                "id": 24949,
                "name": "ParameterList",
                "src": "1098:15:87"
              }
            ],
            "id": 24950,
            "name": "EventDefinition",
            "src": "1076:38:87"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "UptimeLookbackWindowSet"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "window",
                      "scope": 24956,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24951,
                        "name": "ElementaryTypeName",
                        "src": "1147:7:87"
                      }
                    ],
                    "id": 24952,
                    "name": "VariableDeclaration",
                    "src": "1147:14:87"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "activationEpoch",
                      "scope": 24956,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24953,
                        "name": "ElementaryTypeName",
                        "src": "1163:7:87"
                      }
                    ],
                    "id": 24954,
                    "name": "VariableDeclaration",
                    "src": "1163:23:87"
                  }
                ],
                "id": 24955,
                "name": "ParameterList",
                "src": "1146:41:87"
              }
            ],
            "id": 24956,
            "name": "EventDefinition",
            "src": "1117:71:87"
          },
          {
            "attributes": {
              "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 25142,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "test",
                      "scope": 24965,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 24957,
                        "name": "ElementaryTypeName",
                        "src": "1349:4:87"
                      }
                    ],
                    "id": 24958,
                    "name": "VariableDeclaration",
                    "src": "1349:9:87"
                  }
                ],
                "id": 24959,
                "name": "ParameterList",
                "src": "1348:11:87"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24963,
                "name": "ParameterList",
                "src": "1387:0:87"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7598,
                      "type": "type(contract Initializable)",
                      "value": "Initializable"
                    },
                    "id": 24960,
                    "name": "Identifier",
                    "src": "1367:13:87"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 24958,
                      "type": "bool",
                      "value": "test"
                    },
                    "id": 24961,
                    "name": "Identifier",
                    "src": "1381:4:87"
                  }
                ],
                "id": 24962,
                "name": "ModifierInvocation",
                "src": "1367:19:87"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 24964,
                "name": "Block",
                "src": "1387:2:87"
              }
            ],
            "id": 24965,
            "name": "FunctionDefinition",
            "src": "1337:52:87"
          },
          {
            "attributes": {
              "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param _gasForNonGoldCurrencies Intrinsic gas for non-gold gas currencies.\n@param gasLimit Block gas limit.\n@param lookbackWindow Lookback window for measuring validator uptime.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "initialize",
              "scope": 25142,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_gasForNonGoldCurrencies",
                      "scope": 24994,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24966,
                        "name": "ElementaryTypeName",
                        "src": "1714:7:87"
                      }
                    ],
                    "id": 24967,
                    "name": "VariableDeclaration",
                    "src": "1714:32:87"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "gasLimit",
                      "scope": 24994,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24968,
                        "name": "ElementaryTypeName",
                        "src": "1748:7:87"
                      }
                    ],
                    "id": 24969,
                    "name": "VariableDeclaration",
                    "src": "1748:16:87"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "lookbackWindow",
                      "scope": 24994,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24970,
                        "name": "ElementaryTypeName",
                        "src": "1766:7:87"
                      }
                    ],
                    "id": 24971,
                    "name": "VariableDeclaration",
                    "src": "1766:22:87"
                  }
                ],
                "id": 24972,
                "name": "ParameterList",
                "src": "1713:76:87"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24975,
                "name": "ParameterList",
                "src": "1821:0:87"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7597,
                      "type": "modifier ()",
                      "value": "initializer"
                    },
                    "id": 24973,
                    "name": "Identifier",
                    "src": "1807:11:87"
                  }
                ],
                "id": 24974,
                "name": "ModifierInvocation",
                "src": "1807:11:87"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 480,
                              "type": "function (address)",
                              "value": "_transferOwnership"
                            },
                            "id": 24976,
                            "name": "Identifier",
                            "src": "1827:18:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 59216,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 24977,
                                "name": "Identifier",
                                "src": "1846:3:87"
                              }
                            ],
                            "id": 24978,
                            "name": "MemberAccess",
                            "src": "1846:10:87"
                          }
                        ],
                        "id": 24979,
                        "name": "FunctionCall",
                        "src": "1827:30:87"
                      }
                    ],
                    "id": 24980,
                    "name": "ExpressionStatement",
                    "src": "1827:30:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25028,
                              "type": "function (uint256)",
                              "value": "setBlockGasLimit"
                            },
                            "id": 24981,
                            "name": "Identifier",
                            "src": "1863:16:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24969,
                              "type": "uint256",
                              "value": "gasLimit"
                            },
                            "id": 24982,
                            "name": "Identifier",
                            "src": "1880:8:87"
                          }
                        ],
                        "id": 24983,
                        "name": "FunctionCall",
                        "src": "1863:26:87"
                      }
                    ],
                    "id": 24984,
                    "name": "ExpressionStatement",
                    "src": "1863:26:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25044,
                              "type": "function (uint256)",
                              "value": "setIntrinsicGasForAlternativeFeeCurrency"
                            },
                            "id": 24985,
                            "name": "Identifier",
                            "src": "1895:40:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24967,
                              "type": "uint256",
                              "value": "_gasForNonGoldCurrencies"
                            },
                            "id": 24986,
                            "name": "Identifier",
                            "src": "1936:24:87"
                          }
                        ],
                        "id": 24987,
                        "name": "FunctionCall",
                        "src": "1895:66:87"
                      }
                    ],
                    "id": 24988,
                    "name": "ExpressionStatement",
                    "src": "1895:66:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25103,
                              "type": "function (uint256)",
                              "value": "setUptimeLookbackWindow"
                            },
                            "id": 24989,
                            "name": "Identifier",
                            "src": "1967:23:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24971,
                              "type": "uint256",
                              "value": "lookbackWindow"
                            },
                            "id": 24990,
                            "name": "Identifier",
                            "src": "1991:14:87"
                          }
                        ],
                        "id": 24991,
                        "name": "FunctionCall",
                        "src": "1967:39:87"
                      }
                    ],
                    "id": 24992,
                    "name": "ExpressionStatement",
                    "src": "1967:39:87"
                  }
                ],
                "id": 24993,
                "name": "Block",
                "src": "1821:190:87"
              }
            ],
            "id": 24994,
            "name": "FunctionDefinition",
            "src": "1694:317:87"
          },
          {
            "attributes": {
              "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return Storage version of the contract.\n@return Major version of the contract.\n@return Minor version of the contract.\n@return Patch version of the contract.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getVersionNumber",
              "scope": 25142,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 24995,
                "name": "ParameterList",
                "src": "2313:2:87"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 25012,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24996,
                        "name": "ElementaryTypeName",
                        "src": "2339:7:87"
                      }
                    ],
                    "id": 24997,
                    "name": "VariableDeclaration",
                    "src": "2339:7:87"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 25012,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 24998,
                        "name": "ElementaryTypeName",
                        "src": "2348:7:87"
                      }
                    ],
                    "id": 24999,
                    "name": "VariableDeclaration",
                    "src": "2348:7:87"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 25012,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 25000,
                        "name": "ElementaryTypeName",
                        "src": "2357:7:87"
                      }
                    ],
                    "id": 25001,
                    "name": "VariableDeclaration",
                    "src": "2357:7:87"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 25012,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 25002,
                        "name": "ElementaryTypeName",
                        "src": "2366:7:87"
                      }
                    ],
                    "id": 25003,
                    "name": "VariableDeclaration",
                    "src": "2366:7:87"
                  }
                ],
                "id": 25004,
                "name": "ParameterList",
                "src": "2338:36:87"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 25004
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(int_const 1,int_const 3,int_const 0,int_const 0)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 25005,
                            "name": "Literal",
                            "src": "2389:1:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "33",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 3",
                              "value": "3"
                            },
                            "id": 25006,
                            "name": "Literal",
                            "src": "2392:1:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 25007,
                            "name": "Literal",
                            "src": "2395:1:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 25008,
                            "name": "Literal",
                            "src": "2398:1:87"
                          }
                        ],
                        "id": 25009,
                        "name": "TupleExpression",
                        "src": "2388:12:87"
                      }
                    ],
                    "id": 25010,
                    "name": "Return",
                    "src": "2381:19:87"
                  }
                ],
                "id": 25011,
                "name": "Block",
                "src": "2375:30:87"
              }
            ],
            "id": 25012,
            "name": "FunctionDefinition",
            "src": "2288:117:87"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the block gas limit.\n@param gasLimit New block gas limit.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setBlockGasLimit",
              "scope": 25142,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "gasLimit",
                      "scope": 25028,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 25013,
                        "name": "ElementaryTypeName",
                        "src": "2528:7:87"
                      }
                    ],
                    "id": 25014,
                    "name": "VariableDeclaration",
                    "src": "2528:16:87"
                  }
                ],
                "id": 25015,
                "name": "ParameterList",
                "src": "2527:18:87"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 25018,
                "name": "ParameterList",
                "src": "2563:0:87"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 25016,
                    "name": "Identifier",
                    "src": "2553:9:87"
                  }
                ],
                "id": 25017,
                "name": "ModifierInvocation",
                "src": "2553:9:87"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24938,
                              "type": "uint256",
                              "value": "blockGasLimit"
                            },
                            "id": 25019,
                            "name": "Identifier",
                            "src": "2569:13:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25014,
                              "type": "uint256",
                              "value": "gasLimit"
                            },
                            "id": 25020,
                            "name": "Identifier",
                            "src": "2585:8:87"
                          }
                        ],
                        "id": 25021,
                        "name": "Assignment",
                        "src": "2569:24:87"
                      }
                    ],
                    "id": 25022,
                    "name": "ExpressionStatement",
                    "src": "2569:24:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24950,
                              "type": "function (uint256)",
                              "value": "BlockGasLimitSet"
                            },
                            "id": 25023,
                            "name": "Identifier",
                            "src": "2604:16:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25014,
                              "type": "uint256",
                              "value": "gasLimit"
                            },
                            "id": 25024,
                            "name": "Identifier",
                            "src": "2621:8:87"
                          }
                        ],
                        "id": 25025,
                        "name": "FunctionCall",
                        "src": "2604:26:87"
                      }
                    ],
                    "id": 25026,
                    "name": "EmitStatement",
                    "src": "2599:31:87"
                  }
                ],
                "id": 25027,
                "name": "Block",
                "src": "2563:72:87"
              }
            ],
            "id": 25028,
            "name": "FunctionDefinition",
            "src": "2502:133:87"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the intrinsic gas for non-gold gas currencies.\n@param gas Intrinsic gas for non-gold gas currencies.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setIntrinsicGasForAlternativeFeeCurrency",
              "scope": 25142,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "gas",
                      "scope": 25044,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 25029,
                        "name": "ElementaryTypeName",
                        "src": "2825:7:87"
                      }
                    ],
                    "id": 25030,
                    "name": "VariableDeclaration",
                    "src": "2825:11:87"
                  }
                ],
                "id": 25031,
                "name": "ParameterList",
                "src": "2824:13:87"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 25034,
                "name": "ParameterList",
                "src": "2855:0:87"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 25032,
                    "name": "Identifier",
                    "src": "2845:9:87"
                  }
                ],
                "id": 25033,
                "name": "ModifierInvocation",
                "src": "2845:9:87"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24940,
                              "type": "uint256",
                              "value": "intrinsicGasForAlternativeFeeCurrency"
                            },
                            "id": 25035,
                            "name": "Identifier",
                            "src": "2861:37:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25030,
                              "type": "uint256",
                              "value": "gas"
                            },
                            "id": 25036,
                            "name": "Identifier",
                            "src": "2901:3:87"
                          }
                        ],
                        "id": 25037,
                        "name": "Assignment",
                        "src": "2861:43:87"
                      }
                    ],
                    "id": 25038,
                    "name": "ExpressionStatement",
                    "src": "2861:43:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24946,
                              "type": "function (uint256)",
                              "value": "IntrinsicGasForAlternativeFeeCurrencySet"
                            },
                            "id": 25039,
                            "name": "Identifier",
                            "src": "2915:40:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25030,
                              "type": "uint256",
                              "value": "gas"
                            },
                            "id": 25040,
                            "name": "Identifier",
                            "src": "2956:3:87"
                          }
                        ],
                        "id": 25041,
                        "name": "FunctionCall",
                        "src": "2915:45:87"
                      }
                    ],
                    "id": 25042,
                    "name": "EmitStatement",
                    "src": "2910:50:87"
                  }
                ],
                "id": 25043,
                "name": "Block",
                "src": "2855:110:87"
              }
            ],
            "id": 25044,
            "name": "FunctionDefinition",
            "src": "2775:190:87"
          },
          {
            "attributes": {
              "documentation": "@notice Sets the uptime lookback window.\n@param window New window.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setUptimeLookbackWindow",
              "scope": 25142,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "window",
                      "scope": 25103,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 25045,
                        "name": "ElementaryTypeName",
                        "src": "3091:7:87"
                      }
                    ],
                    "id": 25046,
                    "name": "VariableDeclaration",
                    "src": "3091:14:87"
                  }
                ],
                "id": 25047,
                "name": "ParameterList",
                "src": "3090:16:87"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 25050,
                "name": "ParameterList",
                "src": "3124:0:87"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 414,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 25048,
                    "name": "Identifier",
                    "src": "3114:9:87"
                  }
                ],
                "id": 25049,
                "name": "ModifierInvocation",
                "src": "3114:9:87"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c8e80920f94cd3e788f85209b88ef4412fd645e7142db5fb042dd9012bef227e",
                                  "typeString": "literal_string \"UptimeLookbackWindow must be within safe range\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 25051,
                            "name": "Identifier",
                            "src": "3130:7:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "&&",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 25046,
                                      "type": "uint256",
                                      "value": "window"
                                    },
                                    "id": 25052,
                                    "name": "Identifier",
                                    "src": "3138:6:87"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "33",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 3",
                                      "value": "3"
                                    },
                                    "id": 25053,
                                    "name": "Literal",
                                    "src": "3148:1:87"
                                  }
                                ],
                                "id": 25054,
                                "name": "BinaryOperation",
                                "src": "3138:11:87"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "<=",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 25046,
                                      "type": "uint256",
                                      "value": "window"
                                    },
                                    "id": 25055,
                                    "name": "Identifier",
                                    "src": "3153:6:87"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "373230",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 720",
                                      "value": "720"
                                    },
                                    "id": 25056,
                                    "name": "Literal",
                                    "src": "3163:3:87"
                                  }
                                ],
                                "id": 25057,
                                "name": "BinaryOperation",
                                "src": "3153:13:87"
                              }
                            ],
                            "id": 25058,
                            "name": "BinaryOperation",
                            "src": "3138:28:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "557074696d654c6f6f6b6261636b57696e646f77206d7573742062652077697468696e20736166652072616e6765",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"UptimeLookbackWindow must be within safe range\"",
                              "value": "UptimeLookbackWindow must be within safe range"
                            },
                            "id": 25059,
                            "name": "Literal",
                            "src": "3168:48:87"
                          }
                        ],
                        "id": 25060,
                        "name": "FunctionCall",
                        "src": "3130:87:87"
                      }
                    ],
                    "id": 25061,
                    "name": "ExpressionStatement",
                    "src": "3130:87:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_82188fe79f68b78dc5a768eaca6a16d7dcc02164f809beb5e0bbd8c0912067b4",
                                  "typeString": "literal_string \"UptimeLookbackWindow must be smaller or equal to epochSize - 2\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 25062,
                            "name": "Identifier",
                            "src": "3223:7:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 25046,
                                  "type": "uint256",
                                  "value": "window"
                                },
                                "id": 25063,
                                "name": "Identifier",
                                "src": "3238:6:87"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sub",
                                      "referencedDeclaration": 219,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 10998,
                                              "type": "function () view returns (uint256)",
                                              "value": "getEpochSize"
                                            },
                                            "id": 25064,
                                            "name": "Identifier",
                                            "src": "3248:12:87"
                                          }
                                        ],
                                        "id": 25065,
                                        "name": "FunctionCall",
                                        "src": "3248:14:87"
                                      }
                                    ],
                                    "id": 25066,
                                    "name": "MemberAccess",
                                    "src": "3248:18:87"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "32",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 2",
                                      "value": "2"
                                    },
                                    "id": 25067,
                                    "name": "Literal",
                                    "src": "3267:1:87"
                                  }
                                ],
                                "id": 25068,
                                "name": "FunctionCall",
                                "src": "3248:21:87"
                              }
                            ],
                            "id": 25069,
                            "name": "BinaryOperation",
                            "src": "3238:31:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "557074696d654c6f6f6b6261636b57696e646f77206d75737420626520736d616c6c6572206f7220657175616c20746f2065706f636853697a65202d2032",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"UptimeLookbackWindow must be smaller or equal to epochSize - 2\"",
                              "value": "UptimeLookbackWindow must be smaller or equal to epochSize - 2"
                            },
                            "id": 25070,
                            "name": "Literal",
                            "src": "3277:64:87"
                          }
                        ],
                        "id": 25071,
                        "name": "FunctionCall",
                        "src": "3223:124:87"
                      }
                    ],
                    "id": 25072,
                    "name": "ExpressionStatement",
                    "src": "3223:124:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "oldValue",
                              "referencedDeclaration": 24929,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24942,
                                  "type": "struct BlockchainParameters.LookbackWindow storage ref",
                                  "value": "uptimeLookbackWindow"
                                },
                                "id": 25073,
                                "name": "Identifier",
                                "src": "3354:20:87"
                              }
                            ],
                            "id": 25075,
                            "name": "MemberAccess",
                            "src": "3354:29:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 25141,
                                  "type": "function () view returns (uint256)",
                                  "value": "_getUptimeLookbackWindow"
                                },
                                "id": 25076,
                                "name": "Identifier",
                                "src": "3386:24:87"
                              }
                            ],
                            "id": 25077,
                            "name": "FunctionCall",
                            "src": "3386:26:87"
                          }
                        ],
                        "id": 25078,
                        "name": "Assignment",
                        "src": "3354:58:87"
                      }
                    ],
                    "id": 25079,
                    "name": "ExpressionStatement",
                    "src": "3354:58:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "nextValueActivationEpoch",
                              "referencedDeclaration": 24933,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24942,
                                  "type": "struct BlockchainParameters.LookbackWindow storage ref",
                                  "value": "uptimeLookbackWindow"
                                },
                                "id": 25080,
                                "name": "Identifier",
                                "src": "3468:20:87"
                              }
                            ],
                            "id": 25082,
                            "name": "MemberAccess",
                            "src": "3468:45:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 203,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            null
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 11023,
                                          "type": "function () view returns (uint256)",
                                          "value": "getEpochNumber"
                                        },
                                        "id": 25083,
                                        "name": "Identifier",
                                        "src": "3516:14:87"
                                      }
                                    ],
                                    "id": 25084,
                                    "name": "FunctionCall",
                                    "src": "3516:16:87"
                                  }
                                ],
                                "id": 25085,
                                "name": "MemberAccess",
                                "src": "3516:20:87"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 25086,
                                "name": "Literal",
                                "src": "3537:1:87"
                              }
                            ],
                            "id": 25087,
                            "name": "FunctionCall",
                            "src": "3516:23:87"
                          }
                        ],
                        "id": 25088,
                        "name": "Assignment",
                        "src": "3468:71:87"
                      }
                    ],
                    "id": 25089,
                    "name": "ExpressionStatement",
                    "src": "3468:71:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "nextValue",
                              "referencedDeclaration": 24931,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24942,
                                  "type": "struct BlockchainParameters.LookbackWindow storage ref",
                                  "value": "uptimeLookbackWindow"
                                },
                                "id": 25090,
                                "name": "Identifier",
                                "src": "3545:20:87"
                              }
                            ],
                            "id": 25092,
                            "name": "MemberAccess",
                            "src": "3545:30:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25046,
                              "type": "uint256",
                              "value": "window"
                            },
                            "id": 25093,
                            "name": "Identifier",
                            "src": "3578:6:87"
                          }
                        ],
                        "id": 25094,
                        "name": "Assignment",
                        "src": "3545:39:87"
                      }
                    ],
                    "id": 25095,
                    "name": "ExpressionStatement",
                    "src": "3545:39:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 24956,
                              "type": "function (uint256,uint256)",
                              "value": "UptimeLookbackWindowSet"
                            },
                            "id": 25096,
                            "name": "Identifier",
                            "src": "3596:23:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25046,
                              "type": "uint256",
                              "value": "window"
                            },
                            "id": 25097,
                            "name": "Identifier",
                            "src": "3620:6:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "nextValueActivationEpoch",
                              "referencedDeclaration": 24933,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24942,
                                  "type": "struct BlockchainParameters.LookbackWindow storage ref",
                                  "value": "uptimeLookbackWindow"
                                },
                                "id": 25098,
                                "name": "Identifier",
                                "src": "3628:20:87"
                              }
                            ],
                            "id": 25099,
                            "name": "MemberAccess",
                            "src": "3628:45:87"
                          }
                        ],
                        "id": 25100,
                        "name": "FunctionCall",
                        "src": "3596:78:87"
                      }
                    ],
                    "id": 25101,
                    "name": "EmitStatement",
                    "src": "3591:83:87"
                  }
                ],
                "id": 25102,
                "name": "Block",
                "src": "3124:555:87"
              }
            ],
            "id": 25103,
            "name": "FunctionDefinition",
            "src": "3058:621:87"
          },
          {
            "attributes": {
              "documentation": "@notice Gets the uptime lookback window.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getUptimeLookbackWindow",
              "scope": 25142,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 25104,
                "name": "ParameterList",
                "src": "3773:2:87"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "lookbackWindow",
                      "scope": 25121,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 25105,
                        "name": "ElementaryTypeName",
                        "src": "3797:7:87"
                      }
                    ],
                    "id": 25106,
                    "name": "VariableDeclaration",
                    "src": "3797:22:87"
                  }
                ],
                "id": 25107,
                "name": "ParameterList",
                "src": "3796:24:87"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 25106,
                              "type": "uint256",
                              "value": "lookbackWindow"
                            },
                            "id": 25108,
                            "name": "Identifier",
                            "src": "3827:14:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 25141,
                                  "type": "function () view returns (uint256)",
                                  "value": "_getUptimeLookbackWindow"
                                },
                                "id": 25109,
                                "name": "Identifier",
                                "src": "3844:24:87"
                              }
                            ],
                            "id": 25110,
                            "name": "FunctionCall",
                            "src": "3844:26:87"
                          }
                        ],
                        "id": 25111,
                        "name": "Assignment",
                        "src": "3827:43:87"
                      }
                    ],
                    "id": 25112,
                    "name": "ExpressionStatement",
                    "src": "3827:43:87"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bdec0df6eb812e91b352e8dde5e3134ff5633d3f4cd2ef0eebc793671d64de25",
                                  "typeString": "literal_string \"UptimeLookbackWindow is not initialized\""
                                }
                              ],
                              "overloadedDeclarations": [
                                59219,
                                59220
                              ],
                              "referencedDeclaration": 59220,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 25113,
                            "name": "Identifier",
                            "src": "3876:7:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 25106,
                                  "type": "uint256",
                                  "value": "lookbackWindow"
                                },
                                "id": 25114,
                                "name": "Identifier",
                                "src": "3884:14:87"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 25115,
                                "name": "Literal",
                                "src": "3902:1:87"
                              }
                            ],
                            "id": 25116,
                            "name": "BinaryOperation",
                            "src": "3884:19:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "557074696d654c6f6f6b6261636b57696e646f77206973206e6f7420696e697469616c697a6564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"UptimeLookbackWindow is not initialized\"",
                              "value": "UptimeLookbackWindow is not initialized"
                            },
                            "id": 25117,
                            "name": "Literal",
                            "src": "3905:41:87"
                          }
                        ],
                        "id": 25118,
                        "name": "FunctionCall",
                        "src": "3876:71:87"
                      }
                    ],
                    "id": 25119,
                    "name": "ExpressionStatement",
                    "src": "3876:71:87"
                  }
                ],
                "id": 25120,
                "name": "Block",
                "src": "3821:131:87"
              }
            ],
            "id": 25121,
            "name": "FunctionDefinition",
            "src": "3741:211:87"
          },
          {
            "attributes": {
              "documentation": "@notice Gets the uptime lookback window.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_getUptimeLookbackWindow",
              "scope": 25142,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 25122,
                "name": "ParameterList",
                "src": "4047:2:87"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "lookbackWindow",
                      "scope": 25141,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 25123,
                        "name": "ElementaryTypeName",
                        "src": "4073:7:87"
                      }
                    ],
                    "id": 25124,
                    "name": "VariableDeclaration",
                    "src": "4073:22:87"
                  }
                ],
                "id": 25125,
                "name": "ParameterList",
                "src": "4072:24:87"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11023,
                                  "type": "function () view returns (uint256)",
                                  "value": "getEpochNumber"
                                },
                                "id": 25126,
                                "name": "Identifier",
                                "src": "4107:14:87"
                              }
                            ],
                            "id": 25127,
                            "name": "FunctionCall",
                            "src": "4107:16:87"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "nextValueActivationEpoch",
                              "referencedDeclaration": 24933,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24942,
                                  "type": "struct BlockchainParameters.LookbackWindow storage ref",
                                  "value": "uptimeLookbackWindow"
                                },
                                "id": 25128,
                                "name": "Identifier",
                                "src": "4127:20:87"
                              }
                            ],
                            "id": 25129,
                            "name": "MemberAccess",
                            "src": "4127:45:87"
                          }
                        ],
                        "id": 25130,
                        "name": "BinaryOperation",
                        "src": "4107:65:87"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "functionReturnParameters": 25125
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "nextValue",
                                  "referencedDeclaration": 24931,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 24942,
                                      "type": "struct BlockchainParameters.LookbackWindow storage ref",
                                      "value": "uptimeLookbackWindow"
                                    },
                                    "id": 25131,
                                    "name": "Identifier",
                                    "src": "4189:20:87"
                                  }
                                ],
                                "id": 25132,
                                "name": "MemberAccess",
                                "src": "4189:30:87"
                              }
                            ],
                            "id": 25133,
                            "name": "Return",
                            "src": "4182:37:87"
                          }
                        ],
                        "id": 25134,
                        "name": "Block",
                        "src": "4174:52:87"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "functionReturnParameters": 25125
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "oldValue",
                                  "referencedDeclaration": 24929,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 24942,
                                      "type": "struct BlockchainParameters.LookbackWindow storage ref",
                                      "value": "uptimeLookbackWindow"
                                    },
                                    "id": 25135,
                                    "name": "Identifier",
                                    "src": "4247:20:87"
                                  }
                                ],
                                "id": 25136,
                                "name": "MemberAccess",
                                "src": "4247:29:87"
                              }
                            ],
                            "id": 25137,
                            "name": "Return",
                            "src": "4240:36:87"
                          }
                        ],
                        "id": 25138,
                        "name": "Block",
                        "src": "4232:51:87"
                      }
                    ],
                    "id": 25139,
                    "name": "IfStatement",
                    "src": "4103:180:87"
                  }
                ],
                "id": 25140,
                "name": "Block",
                "src": "4097:190:87"
              }
            ],
            "id": 25141,
            "name": "FunctionDefinition",
            "src": "4014:273:87"
          }
        ],
        "id": 25142,
        "name": "ContractDefinition",
        "src": "322:3968:87"
      }
    ],
    "id": 25143,
    "name": "SourceUnit",
    "src": "0:4291:87"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {
    "1101": {
      "events": {},
      "links": {},
      "address": "0x4CF20BEf2FBe159601939bE49B760457B11C1d52",
      "transactionHash": "0x6f0e44339afb188af5f81831d512f714ccc33370dc13f1db24d430b71ec0d71e"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-11-21T17:26:03.923Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "Numerator of the computed quantity (not reduced).Denominator of the computed quantity (not reduced)."
      },
      "getBlockNumberFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Block number."
      },
      "getEpochNumber()": {
        "return": "Current epoch number."
      },
      "getEpochNumberOfBlock(uint256)": {
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "return": "Epoch number."
      },
      "getEpochSize()": {
        "return": "The current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "return": "Bitmap parent seal with set bits at indices corresponding to signing validators."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
      },
      "getVersionNumber()": {
        "return": "Storage version of the contract.Major version of the contract.Minor version of the contract.Patch version of the contract."
      },
      "hashHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Header hash."
      },
      "initialize(uint256,uint256,uint256)": {
        "params": {
          "_gasForNonGoldCurrencies": "Intrinsic gas for non-gold gas currencies.",
          "gasLimit": "Block gas limit.",
          "lookbackWindow": "Lookback window for measuring validator uptime."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))"
      },
      "minQuorumSizeInCurrentSet()": {
        "return": "Byzantine quorum of validators."
      },
      "numberValidatorsInCurrentSet()": {
        "return": "Size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "return": "Size of the validator set."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setBlockGasLimit(uint256)": {
        "params": {
          "gasLimit": "New block gas limit."
        }
      },
      "setIntrinsicGasForAlternativeFeeCurrency(uint256)": {
        "params": {
          "gas": "Intrinsic gas for non-gold gas currencies."
        }
      },
      "setUptimeLookbackWindow(uint256)": {
        "params": {
          "window": "New window."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      }
    },
    "title": "Contract for storing blockchain parameters that can be set by governance."
  },
  "userdoc": {
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "constructor": "Sets initialized == true on implementation contracts",
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getUptimeLookbackWindow()": {
        "notice": "Gets the uptime lookback window."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "initialize(uint256,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInCurrentSet()": {
        "notice": "Gets the size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "setBlockGasLimit(uint256)": {
        "notice": "Sets the block gas limit."
      },
      "setIntrinsicGasForAlternativeFeeCurrency(uint256)": {
        "notice": "Sets the intrinsic gas for non-gold gas currencies."
      },
      "setUptimeLookbackWindow(uint256)": {
        "notice": "Sets the uptime lookback window."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator address from the current validator set."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator address from the validator set at the given block number."
      }
    }
  }
}